#if defined(CPU_FLAG_MOVBE) && defined(CPU_FLAG_BMI2)
#include <gmlib/number/internal/mont256_x64.h>
#include <gmlib/number/internal/uint256_x64.h>
#include <stdexcept>
#include <cstring>

using namespace number::internal::x64;

static std::uint8_t  P_data[32]      = {0xff,0xff,0xff,0xfe,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff};
static std::uint8_t  P_SUB2_data[32] = {0xff,0xff,0xff,0xfe,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfd};
static std::uint8_t  R_data[32]      = {0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01};
static std::uint8_t  R_POW2_data[32] = {0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x02,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x03};
static std::uint32_t N_              = 1;

void test_mont256_x64_sqr()
{
    uint256_t P, P_SUB2, R, R_POW2;
    uint256_from_bytes(P, P_data);
    uint256_from_bytes(P_SUB2, P_SUB2_data);
    uint256_from_bytes(R, R_data);
    uint256_from_bytes(R_POW2, R_POW2_data);

    Mont256CTX ctx;
    ctx.P = P, ctx.P_SUB2 = P_SUB2;
    ctx.R = R, ctx.R_POW2 = R_POW2;
    ctx.N_ = N_;

    mont256_t    multiplier, product;
    std::uint8_t product_data[32];

    std::uint8_t multiplier0[32] = {0x49,0x5b,0xb4,0x77,0x49,0x19,0x1c,0x70,0xbd,0x2e,0xc3,0x8f,0x1c,0x36,0x3b,0x75,0x9f,0x37,0xf3,0xf4,0xb0,0x8a,0x67,0xf7,0x62,0x54,0xd4,0x89,0x54,0xe5,0x11,0xa5};
    std::uint8_t product0[32]    = {0xf9,0x2a,0x79,0xa3,0xe3,0xbe,0xac,0x76,0x2d,0xf2,0xdf,0xce,0x00,0x49,0x3f,0x7c,0x60,0x0b,0x4c,0xae,0xb9,0x60,0xfe,0x70,0xe7,0xa7,0xa1,0x46,0x94,0x8f,0x7c,0x79};
    mont256_from_bytes(&ctx, multiplier, multiplier0);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product0, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier1[32] = {0x5a,0x66,0x28,0x45,0xe9,0x62,0x22,0xe6,0xc0,0x9a,0x98,0x0f,0x41,0x3a,0xb0,0x45,0xee,0xc0,0x5d,0x5a,0xee,0xde,0xc1,0x7b,0x34,0x3a,0x00,0x29,0x07,0x02,0x40,0x6b};
    std::uint8_t product1[32]    = {0x2f,0x33,0xc6,0x02,0xfe,0xe2,0xd2,0x24,0x8f,0x3a,0x81,0x26,0x89,0x2d,0x5c,0x9a,0x6b,0xa9,0xea,0x59,0x33,0x75,0x29,0x52,0xfb,0xc8,0x87,0xeb,0x67,0x8d,0xea,0x83};
    mont256_from_bytes(&ctx, multiplier, multiplier1);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product1, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier2[32] = {0x29,0x81,0xe3,0xe2,0x54,0xbd,0x0a,0xae,0x85,0x3c,0xc3,0x3a,0x14,0x57,0x0f,0x7f,0x9a,0xe4,0xaf,0x4a,0xb9,0xb5,0x38,0x80,0xe6,0x67,0xea,0x52,0xb6,0xa0,0x5b,0xdc};
    std::uint8_t product2[32]    = {0x9f,0x6b,0x75,0xba,0x3d,0xc0,0xd6,0x5f,0xdd,0xc8,0x07,0x46,0xfb,0x1f,0x6e,0x09,0x31,0xf0,0xbb,0x79,0x53,0x9b,0x47,0x46,0x25,0x32,0x40,0x2e,0xe6,0x3a,0x9c,0x73};
    mont256_from_bytes(&ctx, multiplier, multiplier2);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product2, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier3[32] = {0x45,0x00,0x24,0x16,0x3b,0xea,0x39,0x7f,0xd9,0x52,0x2b,0xb3,0x29,0xcd,0x7e,0x9a,0x41,0xfe,0x25,0xe4,0xc7,0x9a,0x41,0x95,0x39,0x3e,0x65,0x8e,0xfc,0xb5,0xf5,0xcb};
    std::uint8_t product3[32]    = {0x47,0x65,0xe2,0x25,0xff,0xb0,0xf3,0x08,0x48,0x85,0xd8,0xa9,0xf7,0x24,0x8e,0x30,0x92,0x7c,0xaa,0xce,0x06,0x97,0x44,0x39,0x6f,0xf4,0x5a,0x9a,0x75,0xda,0x1b,0x3f};
    mont256_from_bytes(&ctx, multiplier, multiplier3);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product3, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier4[32] = {0x9d,0x05,0x18,0x67,0xf0,0x2d,0xf8,0x35,0x9f,0x01,0xe8,0x03,0x78,0x69,0x9a,0xa4,0xed,0x12,0xbd,0x8c,0x71,0xb2,0xf9,0x68,0x53,0x95,0x98,0xae,0x14,0x3f,0x75,0xec};
    std::uint8_t product4[32]    = {0xe0,0xe1,0x5f,0x21,0x52,0xf8,0xdf,0x65,0x8f,0x0a,0x84,0xfa,0xdc,0x93,0x79,0xbe,0x58,0x40,0x0e,0x83,0x8e,0x32,0x50,0x2f,0x28,0x66,0xd7,0x60,0x8e,0xea,0xf1,0x5f};
    mont256_from_bytes(&ctx, multiplier, multiplier4);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product4, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier5[32] = {0x1b,0xb3,0x1e,0x14,0x88,0xd5,0x61,0x84,0xd6,0x31,0xc0,0x15,0xee,0x4f,0x0d,0x15,0x1e,0x58,0xeb,0x9b,0x1f,0x63,0x85,0x05,0x76,0xc5,0x59,0xc9,0x8f,0xfd,0xbf,0x1d};
    std::uint8_t product5[32]    = {0x3f,0x4d,0x97,0xd3,0x5b,0xda,0x4e,0xd5,0x01,0x07,0x60,0xa2,0x86,0x9d,0x1e,0x9a,0xeb,0x1b,0xc8,0xc0,0xdc,0xbc,0xac,0xd3,0x90,0xf3,0xbb,0xca,0xb1,0x17,0xdb,0xb1};
    mont256_from_bytes(&ctx, multiplier, multiplier5);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product5, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier6[32] = {0xda,0xe6,0x85,0xd8,0xfe,0x42,0x51,0x08,0xe6,0x99,0x8a,0xe6,0x38,0x55,0x37,0x23,0x28,0xd4,0xe1,0xad,0x0c,0xd5,0x8c,0x63,0x05,0x40,0x1d,0xdc,0x76,0x5a,0xeb,0x97};
    std::uint8_t product6[32]    = {0x08,0xe1,0x05,0x3e,0x62,0x2d,0x47,0xcc,0x98,0x6c,0x0f,0xc1,0x0b,0x74,0x15,0x40,0x9e,0x18,0xea,0xa7,0xe5,0x9b,0x45,0xa0,0xcf,0xcc,0x14,0xf5,0x5d,0xb6,0xfa,0x50};
    mont256_from_bytes(&ctx, multiplier, multiplier6);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product6, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier7[32] = {0xde,0xf0,0x43,0x1e,0x35,0x98,0x57,0xd9,0xf4,0x46,0xce,0x0d,0x3c,0xdc,0xe7,0xe2,0xd6,0x5f,0x7e,0x59,0x7e,0x38,0x87,0xdb,0x21,0xc0,0x4f,0xde,0x6c,0x02,0x65,0xd4};
    std::uint8_t product7[32]    = {0xf3,0xdd,0xe3,0x33,0x47,0x97,0x39,0x47,0x1e,0x52,0x0e,0xc0,0xe7,0x28,0x28,0x4e,0x58,0x5c,0xc7,0x61,0xa0,0xb7,0x54,0x47,0x3f,0x47,0x4a,0xcd,0xfc,0x61,0x85,0xd8};
    mont256_from_bytes(&ctx, multiplier, multiplier7);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product7, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier8[32] = {0x29,0x31,0xad,0xdb,0x95,0xdd,0xa5,0x94,0x9d,0xc6,0x78,0xd3,0xe2,0x08,0x63,0x64,0x5e,0xed,0x90,0xe2,0xe2,0x86,0x79,0x35,0xcb,0x64,0xda,0x09,0x2a,0x18,0xe5,0x5e};
    std::uint8_t product8[32]    = {0xfd,0x7c,0xde,0x6b,0xd8,0xa7,0x37,0xc1,0x7b,0xee,0x26,0xdd,0x88,0x68,0x75,0xda,0x87,0x91,0xc8,0x5d,0x9d,0xb9,0x83,0xb9,0x19,0x47,0xe5,0xe5,0x76,0x2b,0x57,0x5b};
    mont256_from_bytes(&ctx, multiplier, multiplier8);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product8, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier9[32] = {0xfb,0xc7,0x30,0x27,0xb5,0x8c,0x8e,0x3d,0xd6,0xaf,0x6f,0x47,0x2b,0xe1,0x6b,0xc8,0xc2,0x6b,0x13,0xf1,0xdf,0x3a,0x49,0x20,0x96,0x1f,0x9e,0xb5,0x32,0xf2,0x06,0x7a};
    std::uint8_t product9[32]    = {0x37,0xd8,0xba,0x98,0x23,0xe6,0x7f,0xac,0x72,0xe3,0xb9,0xbd,0x0d,0x89,0x00,0xd8,0xb1,0xca,0xc1,0xf7,0xeb,0xb9,0x05,0x88,0x5f,0xef,0x41,0xde,0x08,0xa3,0x03,0xb5};
    mont256_from_bytes(&ctx, multiplier, multiplier9);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product9, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier10[32] = {0xe2,0x5e,0xf4,0xb6,0x57,0xbc,0x78,0x0a,0x21,0xc0,0x20,0x80,0xbd,0xc5,0xd5,0xc6,0x7b,0xc5,0x29,0x28,0x8a,0x7a,0x15,0x56,0x9b,0x56,0x80,0xad,0x8f,0x9a,0x1d,0xe0};
    std::uint8_t product10[32]    = {0x29,0x24,0x21,0xc9,0xbc,0x31,0xdb,0x69,0x12,0xdf,0x07,0x4d,0x61,0xd1,0xed,0x60,0x55,0x3b,0x45,0x54,0x50,0xc6,0x68,0x24,0x13,0x0b,0xb3,0x18,0xd7,0x0b,0x1e,0xf8};
    mont256_from_bytes(&ctx, multiplier, multiplier10);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product10, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier11[32] = {0x5b,0x4e,0x01,0x2b,0xe9,0x80,0x83,0x5c,0x8e,0x08,0x4d,0x70,0xf0,0x2b,0xc1,0xae,0xb2,0x07,0x24,0xa4,0x7a,0x1d,0xd4,0x79,0x18,0x5b,0xb0,0x01,0x68,0xbc,0xef,0xc4};
    std::uint8_t product11[32]    = {0x01,0xc0,0x1d,0x8e,0x9b,0x9e,0x1f,0xcd,0xb2,0xf3,0xa5,0x4d,0x02,0xc3,0x1b,0xe6,0x57,0x11,0x5b,0x84,0x1a,0xd1,0x77,0x98,0x95,0x3e,0xc3,0x94,0x63,0xc8,0x60,0x70};
    mont256_from_bytes(&ctx, multiplier, multiplier11);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product11, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier12[32] = {0x0d,0xd4,0xe4,0x8f,0xf1,0x68,0x2d,0x7f,0xd2,0x19,0x93,0x4a,0x21,0xcf,0xaf,0x96,0xe9,0x21,0x5e,0xbc,0x8b,0x40,0xc6,0x5a,0x15,0xdc,0x3a,0xf9,0x06,0xea,0xe6,0x67};
    std::uint8_t product12[32]    = {0x4c,0x40,0xa5,0x86,0xef,0xfb,0xc9,0xcc,0x0e,0x66,0x5b,0xa8,0xd1,0x6e,0x47,0xd6,0xc9,0xd4,0x00,0x8d,0xd5,0x17,0xf8,0x93,0x84,0x42,0x35,0x96,0xb6,0x06,0xd7,0xd9};
    mont256_from_bytes(&ctx, multiplier, multiplier12);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product12, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier13[32] = {0x89,0x34,0xbc,0x7c,0xa5,0x91,0xc0,0xb8,0xc5,0xea,0x1b,0x82,0x79,0x69,0xc8,0x69,0x67,0x58,0xa7,0x14,0x81,0x0c,0xe6,0xb9,0xbf,0xf9,0xf1,0x4b,0x54,0x9d,0x50,0x9d};
    std::uint8_t product13[32]    = {0x5d,0x71,0xbe,0xfc,0x61,0x12,0x72,0xb2,0x0b,0x39,0x61,0x78,0xf4,0x11,0xae,0x68,0xa3,0x29,0x79,0xc9,0x0c,0xa9,0xca,0xcd,0x69,0x53,0xad,0x27,0x1c,0xd6,0x54,0x67};
    mont256_from_bytes(&ctx, multiplier, multiplier13);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product13, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier14[32] = {0x03,0x4b,0x70,0x65,0xc6,0xbb,0x89,0xbb,0x3a,0xa8,0x40,0x85,0x87,0xa2,0x49,0x7c,0xb4,0xfa,0x1c,0x70,0x79,0x19,0x8b,0xb3,0x88,0x83,0x36,0x20,0xcf,0x78,0x68,0x8d};
    std::uint8_t product14[32]    = {0xe8,0xb0,0xfd,0x96,0x0b,0x92,0x41,0x8d,0x89,0x02,0x02,0x05,0xf2,0xec,0x25,0xa1,0x92,0x24,0x69,0x2d,0xdc,0x91,0x16,0xf2,0x0e,0xc1,0xd0,0x6e,0xd2,0x84,0x87,0xb9};
    mont256_from_bytes(&ctx, multiplier, multiplier14);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product14, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier15[32] = {0x07,0x8d,0xe6,0x9d,0xda,0x35,0x18,0x20,0xca,0xb6,0x73,0x24,0x8b,0x87,0x04,0x94,0x8c,0x8f,0xd8,0x4e,0xab,0xb1,0xa3,0xad,0xe6,0x4d,0xdc,0x1a,0xb2,0x30,0x3a,0xc8};
    std::uint8_t product15[32]    = {0xdf,0xdf,0x32,0x58,0x2a,0x9a,0x10,0x0a,0x2f,0x69,0x06,0x22,0xf0,0x78,0x82,0xb6,0x0c,0xa8,0x27,0x26,0x0b,0x7f,0x62,0x2a,0x21,0x33,0xd6,0x9b,0x4c,0xb6,0x50,0xc0};
    mont256_from_bytes(&ctx, multiplier, multiplier15);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product15, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier16[32] = {0x9a,0x03,0x84,0xd9,0xf0,0xc0,0x3a,0x6d,0x6b,0x29,0xe3,0x5e,0x3d,0x5d,0x1c,0xc0,0x96,0xa3,0xaa,0x4f,0x04,0xa1,0x8a,0x73,0x42,0x9d,0x1f,0xef,0xb5,0x4d,0x84,0xb2};
    std::uint8_t product16[32]    = {0x9e,0x8c,0x57,0xe0,0xc4,0x88,0xe9,0xe1,0x53,0xaa,0xbb,0x44,0xb2,0xa2,0xfc,0x96,0x29,0xf4,0xd2,0x68,0xc3,0xe7,0xc3,0xf1,0xbc,0x0b,0xaa,0x57,0xad,0xd7,0x4b,0x6d};
    mont256_from_bytes(&ctx, multiplier, multiplier16);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product16, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier17[32] = {0xc4,0x97,0x84,0x44,0xd6,0x90,0x40,0x8c,0x9b,0x12,0xe9,0x33,0xdf,0x35,0xaa,0x08,0xe5,0xfb,0xc6,0xd2,0xbf,0xbf,0xee,0x61,0xa6,0x77,0x82,0x97,0x0b,0x1c,0xf6,0xa0};
    std::uint8_t product17[32]    = {0xe6,0xee,0x73,0x59,0xed,0x24,0xaa,0x6d,0x92,0x07,0x25,0x25,0xc0,0x3c,0x74,0x87,0x78,0xae,0x82,0x55,0x4e,0x9f,0x45,0xd5,0x59,0xca,0xf8,0xea,0x2c,0xe1,0xc0,0x4f};
    mont256_from_bytes(&ctx, multiplier, multiplier17);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product17, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier18[32] = {0x4a,0x71,0xcf,0x4a,0xf5,0x91,0xee,0xae,0x0f,0xe7,0x80,0xd1,0x16,0xac,0x53,0x51,0xfc,0x7a,0x2a,0x4a,0x2d,0xa4,0xc5,0x74,0xce,0x99,0x0f,0xcb,0x82,0x13,0x1b,0x5c};
    std::uint8_t product18[32]    = {0xa4,0xdb,0x37,0xc2,0xb9,0x6f,0x91,0x83,0x68,0xdc,0x9e,0x42,0x79,0xb0,0xe1,0xe4,0xd0,0xc5,0x5b,0xa8,0xc3,0x27,0xf5,0xf1,0x4a,0x53,0x80,0x2d,0x4d,0x90,0xa1,0x42};
    mont256_from_bytes(&ctx, multiplier, multiplier18);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product18, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier19[32] = {0x4d,0x4c,0x88,0x7c,0x3a,0xf1,0xf3,0xdf,0x47,0xec,0xec,0x4e,0xa9,0x38,0xef,0x79,0x0a,0x4f,0x25,0x61,0xe3,0xc9,0x1d,0xc6,0xe7,0x33,0x38,0x7d,0x4e,0xa7,0xf3,0xed};
    std::uint8_t product19[32]    = {0xdc,0x67,0x12,0x72,0x10,0xf7,0x89,0xff,0x2a,0xad,0xe6,0x37,0x6f,0xff,0x6a,0xb5,0x8a,0xdb,0xb2,0x2e,0x79,0x92,0x65,0x05,0x2f,0x4b,0x52,0x97,0xde,0x9c,0x50,0xc7};
    mont256_from_bytes(&ctx, multiplier, multiplier19);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product19, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier20[32] = {0x24,0xbe,0x39,0xc2,0xc2,0x60,0x8f,0xd3,0x24,0xd9,0x80,0x5c,0x81,0xf2,0xef,0x94,0x2f,0xfd,0x77,0xca,0x18,0x8c,0x1c,0x58,0xf3,0xbc,0xe7,0x9a,0xf1,0x7a,0x27,0xa1};
    std::uint8_t product20[32]    = {0x26,0xaf,0xc8,0xfd,0x45,0xa2,0x0c,0x97,0x27,0xed,0x24,0xe0,0x55,0x4f,0x3c,0x4d,0x1e,0xc2,0xbb,0x2a,0x34,0x7e,0xea,0x18,0xab,0x42,0x72,0x2e,0xf6,0x3b,0x47,0xba};
    mont256_from_bytes(&ctx, multiplier, multiplier20);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product20, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier21[32] = {0x14,0xe6,0x20,0x12,0x8f,0xa1,0x15,0x79,0x6e,0xc3,0x99,0x4f,0xd1,0x65,0x5b,0x2f,0xc3,0x7d,0x95,0xb6,0x83,0xd3,0xb9,0x1b,0x1b,0x05,0x2d,0x55,0xec,0x6f,0xaa,0x5d};
    std::uint8_t product21[32]    = {0x97,0x06,0xb7,0x12,0x44,0xad,0x0c,0xa2,0x39,0xd9,0x8f,0xb8,0x02,0x51,0x6d,0xe9,0xbc,0x16,0x40,0x2f,0x26,0x5d,0x7c,0xf3,0x90,0x22,0x5a,0xc4,0x5f,0x95,0x6c,0x7a};
    mont256_from_bytes(&ctx, multiplier, multiplier21);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product21, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier22[32] = {0x41,0x51,0xd9,0xbd,0x77,0x09,0x3e,0xbd,0xf9,0x44,0xae,0xd4,0xe0,0x8f,0x37,0x61,0xd3,0x29,0x19,0x88,0x9f,0x0a,0xf8,0x6f,0xfe,0xe5,0xb7,0x6c,0x2b,0x0d,0xc6,0x5f};
    std::uint8_t product22[32]    = {0x77,0x44,0x0e,0xb4,0x5e,0x1e,0x05,0x46,0xf2,0x1e,0xe9,0x49,0x71,0x2c,0xc2,0x9c,0x56,0x25,0x0f,0xac,0x8c,0x8f,0x02,0x13,0x27,0x84,0xdb,0xfd,0xca,0x03,0xeb,0xb1};
    mont256_from_bytes(&ctx, multiplier, multiplier22);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product22, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier23[32] = {0x7e,0x4c,0x52,0x90,0x08,0x5d,0x8d,0x2f,0x71,0xbd,0x6c,0x07,0x8c,0x21,0x58,0xc3,0xfb,0xb8,0xeb,0x3a,0x35,0xa0,0xf4,0x21,0x0f,0xe5,0x9c,0xc6,0x73,0xc8,0x89,0xb7};
    std::uint8_t product23[32]    = {0x64,0x79,0xb1,0x91,0x28,0xdd,0x19,0xa7,0xc5,0x9a,0x01,0x55,0x6a,0x0e,0xfd,0xe0,0xf6,0xd5,0xeb,0x50,0xda,0x92,0xd0,0x20,0x5c,0x70,0xcb,0x4f,0x4c,0xd8,0xe2,0x4b};
    mont256_from_bytes(&ctx, multiplier, multiplier23);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product23, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier24[32] = {0x5b,0x31,0x80,0x4d,0x73,0x3b,0x46,0x47,0x76,0x0c,0x68,0x15,0x38,0x04,0x8c,0xf7,0xc5,0xe6,0x30,0x1f,0x63,0x73,0xe2,0xae,0x06,0xff,0xd9,0xd0,0xcb,0x62,0x16,0x5c};
    std::uint8_t product24[32]    = {0xbd,0xbb,0x03,0xd9,0x7b,0x95,0x0a,0x73,0x1c,0x57,0x3c,0xdd,0x71,0x0e,0x37,0x13,0x07,0x44,0x14,0x1f,0x47,0xe0,0x9f,0x6f,0x37,0x40,0x31,0xdf,0xcb,0x00,0xfb,0xc1};
    mont256_from_bytes(&ctx, multiplier, multiplier24);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product24, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier25[32] = {0xfc,0xc9,0xff,0x66,0xaa,0x80,0x84,0xab,0xde,0xdd,0x2e,0x33,0x4d,0x50,0xaf,0x99,0xff,0xe3,0x34,0x1c,0x47,0xa3,0x90,0x3a,0x19,0xb9,0xc9,0x68,0x37,0x86,0xf7,0x9b};
    std::uint8_t product25[32]    = {0x35,0x13,0xc1,0xba,0xd7,0x70,0x6d,0xe0,0xa4,0xf9,0x62,0x2c,0x2c,0x51,0x70,0x47,0x9e,0x54,0x8d,0x35,0xff,0x1c,0xdd,0xf1,0x0b,0x41,0x61,0x8f,0xee,0x21,0x61,0xc8};
    mont256_from_bytes(&ctx, multiplier, multiplier25);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product25, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier26[32] = {0x48,0x40,0x5e,0xf3,0xbf,0x8a,0xb3,0xeb,0xb8,0x55,0xaa,0xa2,0xfa,0xc2,0x62,0xa6,0x5a,0x3b,0xd5,0x4c,0x79,0xba,0xda,0xca,0xf8,0x33,0x21,0xf4,0x85,0x12,0xc5,0x36};
    std::uint8_t product26[32]    = {0x63,0xf9,0x05,0x37,0xff,0xe6,0xbf,0x40,0x3f,0x78,0xd4,0x1f,0x82,0xf5,0x3b,0x6a,0xa0,0xe4,0x2d,0xc2,0x82,0x81,0xc4,0xe7,0x0b,0xed,0x21,0xfb,0xba,0xef,0x22,0xc2};
    mont256_from_bytes(&ctx, multiplier, multiplier26);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product26, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier27[32] = {0x8f,0x1c,0x4d,0x03,0xca,0x2f,0x8c,0xe0,0x5b,0x56,0x1b,0x1a,0x1a,0x8c,0x68,0x69,0x1a,0x98,0xfe,0xae,0x27,0x80,0x3e,0x30,0x76,0x20,0x68,0xf7,0x71,0x78,0x16,0x8f};
    std::uint8_t product27[32]    = {0xcb,0xc0,0xae,0x4e,0x86,0xfd,0x81,0xd3,0x93,0x7d,0x67,0x08,0x58,0x97,0x9b,0x08,0xbf,0xc7,0x1b,0x25,0x21,0x3d,0x82,0x13,0x40,0xa3,0xe6,0xa4,0x93,0x89,0xeb,0xcd};
    mont256_from_bytes(&ctx, multiplier, multiplier27);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product27, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier28[32] = {0x8c,0xc2,0x16,0x44,0x8d,0x10,0x11,0x0f,0x7b,0xf8,0x15,0x9f,0x9d,0xc8,0xd4,0xcc,0x65,0xf9,0xa1,0xd0,0x46,0x5c,0xe0,0x72,0x3f,0x36,0x27,0x22,0x25,0x38,0x13,0x06};
    std::uint8_t product28[32]    = {0x2d,0x46,0x7b,0xd3,0xda,0x12,0x06,0x31,0xfd,0xd4,0x30,0xd7,0xa2,0x68,0x10,0x45,0x3b,0x9e,0xcf,0x67,0x8e,0x0b,0x7d,0xc5,0x29,0x79,0x4c,0x06,0x42,0xd1,0x96,0x47};
    mont256_from_bytes(&ctx, multiplier, multiplier28);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product28, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier29[32] = {0x94,0x8b,0x65,0x66,0xbd,0x1a,0x0c,0x8e,0x2d,0xf8,0x5e,0xc8,0xfd,0xae,0x54,0xb3,0x86,0xbb,0x2e,0x4a,0x45,0x9b,0xc6,0x31,0x4d,0x8a,0x04,0x50,0xd4,0x69,0xf9,0xa3};
    std::uint8_t product29[32]    = {0x3c,0x49,0x2d,0x85,0x1f,0x43,0xa7,0xe5,0x0f,0xa4,0xa2,0x9b,0xab,0x9e,0x2a,0x1e,0xf8,0xfc,0x50,0x2f,0xe6,0x32,0x13,0x8f,0xa1,0x53,0xd0,0x55,0xca,0x3a,0xa6,0x05};
    mont256_from_bytes(&ctx, multiplier, multiplier29);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product29, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier30[32] = {0xd8,0x50,0xf7,0xeb,0x3a,0x1f,0xdb,0x41,0x48,0xae,0xcd,0x26,0xd5,0x93,0x17,0x6f,0xd4,0xc7,0xd6,0x5d,0x1c,0x4e,0x5b,0xcb,0x2e,0xde,0x70,0x7b,0x40,0x35,0xe6,0x47};
    std::uint8_t product30[32]    = {0xf9,0x79,0x3e,0x58,0xb6,0x1f,0xe5,0x72,0xf8,0xfd,0x8c,0xaf,0x1b,0x7a,0xe5,0x31,0xb6,0x33,0xfa,0x8c,0x0d,0x98,0x55,0xdb,0x15,0x78,0xfd,0x0f,0xad,0x9e,0xf2,0x04};
    mont256_from_bytes(&ctx, multiplier, multiplier30);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product30, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier31[32] = {0x8b,0x1d,0xf9,0xbe,0xbf,0xf9,0xc6,0xcf,0x0a,0xa6,0xc2,0x30,0x3f,0x3d,0xa1,0xfb,0x1f,0x36,0x2d,0xf4,0x3b,0x9e,0x22,0x3f,0x2d,0x01,0xf8,0x34,0xbb,0x33,0x77,0x6b};
    std::uint8_t product31[32]    = {0x5d,0xec,0xbf,0x1e,0x10,0x3b,0x96,0xdf,0xfd,0xce,0xce,0xf1,0x17,0xd8,0xea,0xcd,0xee,0xf4,0x13,0x6a,0xc2,0x68,0xa4,0xda,0x89,0x8f,0xd6,0xf1,0xd8,0x7d,0xd1,0xf6};
    mont256_from_bytes(&ctx, multiplier, multiplier31);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product31, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier32[32] = {0x23,0xad,0xb8,0x17,0x3f,0xb1,0x45,0x8e,0x1a,0xd1,0xbc,0x97,0x08,0xca,0x1d,0x29,0x94,0xd8,0x30,0x44,0x94,0x5c,0x11,0xab,0xae,0x67,0xd2,0x42,0x89,0x43,0xc0,0x06};
    std::uint8_t product32[32]    = {0xb7,0xec,0x1c,0x93,0xae,0x24,0x95,0x47,0xa2,0xdf,0xdd,0x98,0xd9,0x6e,0x48,0x6f,0xdd,0x68,0x02,0x28,0xe0,0x37,0xec,0x18,0x7d,0xd6,0xeb,0x0e,0xe5,0x41,0xf1,0x08};
    mont256_from_bytes(&ctx, multiplier, multiplier32);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product32, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier33[32] = {0x0f,0x90,0xfb,0xd2,0xee,0xbe,0xa3,0x8d,0x25,0xbd,0xdc,0xbc,0x7d,0x47,0xa8,0x26,0x2f,0xcd,0x1b,0x52,0x22,0xd7,0x34,0xee,0xea,0xdf,0xdb,0x3e,0x17,0x1e,0x14,0x08};
    std::uint8_t product33[32]    = {0x91,0xd7,0x61,0x49,0x5f,0x55,0x2b,0x94,0x7c,0x96,0xdf,0x6a,0x09,0xca,0xae,0x8b,0x07,0x41,0x56,0x61,0x69,0x89,0xc1,0xab,0x22,0x28,0xe5,0x36,0x4b,0x87,0x7f,0xa4};
    mont256_from_bytes(&ctx, multiplier, multiplier33);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product33, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier34[32] = {0x86,0x3b,0x18,0x36,0x77,0xd9,0x53,0x19,0x82,0x12,0x8b,0x86,0x56,0x96,0xbf,0x2d,0xd9,0x86,0xa1,0x61,0x0c,0x4f,0xa2,0xa9,0x11,0xde,0x6d,0x1d,0xb8,0xeb,0xc2,0x2c};
    std::uint8_t product34[32]    = {0x5e,0xa7,0x87,0xdd,0x98,0xe8,0xe6,0x70,0x0e,0xa0,0xbc,0xc7,0x4a,0xd1,0x36,0xc3,0x92,0xc6,0x28,0x6b,0x52,0x10,0xe1,0x6f,0xa5,0x86,0x25,0xdf,0xed,0x12,0x85,0x65};
    mont256_from_bytes(&ctx, multiplier, multiplier34);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product34, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier35[32] = {0x0d,0xb3,0x81,0xf1,0xa0,0x1b,0x4c,0xa2,0xb6,0xcb,0x40,0x25,0xd9,0x83,0xc1,0x90,0xb7,0x63,0x5c,0x62,0x00,0xa0,0xbd,0xb4,0x20,0x50,0xd4,0x3d,0xda,0x87,0xc5,0xbe};
    std::uint8_t product35[32]    = {0x77,0x2b,0x2a,0x12,0x9c,0x65,0x7c,0xf9,0x63,0xb2,0xd5,0xfd,0x84,0xc4,0xe8,0xd1,0xdf,0xea,0x5c,0x70,0xc1,0xce,0x66,0xb0,0xb9,0x37,0xd9,0x11,0x0d,0x8f,0x34,0xe0};
    mont256_from_bytes(&ctx, multiplier, multiplier35);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product35, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier36[32] = {0x66,0x29,0xd9,0x62,0x17,0xb1,0xd1,0xff,0xe7,0x22,0xfa,0xfa,0x99,0x64,0xbd,0xed,0x6c,0x68,0x02,0x64,0x0f,0xf9,0x4a,0xa7,0xa6,0x63,0x7f,0xbc,0xb0,0x2d,0xe9,0x66};
    std::uint8_t product36[32]    = {0xe9,0x6d,0xeb,0xde,0xf9,0x76,0x1a,0x6c,0x64,0x74,0x3f,0x6c,0x3e,0x50,0xc6,0x1c,0x81,0xdd,0x0d,0x27,0x56,0x98,0xcb,0x24,0x12,0x29,0x24,0xbb,0xcf,0x31,0x96,0xa4};
    mont256_from_bytes(&ctx, multiplier, multiplier36);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product36, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier37[32] = {0xb8,0xa9,0x24,0xc1,0xc2,0x31,0x85,0xaa,0x69,0xce,0xc6,0xa1,0x00,0x42,0x52,0x95,0x79,0x77,0xb8,0x48,0xa2,0x21,0xf9,0xcc,0xb4,0xaa,0xd5,0x5a,0x72,0x56,0x75,0xd2};
    std::uint8_t product37[32]    = {0xdc,0x40,0x78,0x40,0x19,0xe6,0x8f,0x5e,0x92,0x6b,0x45,0xc0,0x29,0xc4,0x9e,0x27,0x30,0x4c,0x75,0x2a,0x92,0x93,0x9f,0x08,0x15,0x2b,0xa8,0x13,0x7f,0xd3,0xfc,0xf4};
    mont256_from_bytes(&ctx, multiplier, multiplier37);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product37, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier38[32] = {0xb8,0x05,0x68,0x04,0x10,0x49,0x1b,0xa7,0x3e,0x65,0xc6,0x99,0x63,0x48,0x5a,0x3f,0xd5,0xa2,0x57,0xc1,0x1c,0x92,0xfd,0xbf,0x4e,0xe4,0x5a,0x2b,0x20,0xef,0x7f,0x5c};
    std::uint8_t product38[32]    = {0xce,0x0e,0x1e,0x94,0xfa,0xb7,0xd6,0x45,0xd5,0x3d,0xad,0x76,0xa2,0xa4,0x3d,0x13,0xac,0xfd,0x9e,0x00,0x3a,0x13,0x3b,0x00,0xd7,0x93,0x24,0xf6,0xdd,0x48,0x74,0x78};
    mont256_from_bytes(&ctx, multiplier, multiplier38);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product38, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier39[32] = {0x88,0x18,0xd3,0x8d,0x4b,0x90,0x7b,0x1e,0xe1,0xb7,0xf3,0x5d,0x41,0x02,0xba,0x56,0x96,0xcd,0x08,0xba,0xe7,0xc7,0xa5,0x2d,0x65,0xe7,0xcd,0x9f,0x49,0x59,0xa6,0x45};
    std::uint8_t product39[32]    = {0x7a,0x4e,0xd4,0xf4,0x0f,0x4f,0xd2,0x59,0x7c,0x72,0x88,0x4c,0x5b,0x89,0x13,0x63,0x2a,0xad,0x65,0xdb,0x7d,0x34,0x4f,0x04,0x45,0xf3,0x6f,0xbd,0xc4,0xe8,0xc2,0x96};
    mont256_from_bytes(&ctx, multiplier, multiplier39);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product39, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier40[32] = {0x3a,0x7c,0x20,0x53,0x34,0x76,0xfe,0x71,0xec,0x93,0x9f,0xf8,0x44,0xb6,0x4f,0x94,0x18,0x0a,0x1b,0x3d,0x13,0x80,0xaa,0xf0,0x1c,0xfe,0xb7,0x51,0xcc,0xbf,0x47,0xac};
    std::uint8_t product40[32]    = {0xf5,0x17,0x87,0x48,0xc4,0x35,0x98,0x17,0x73,0x84,0xd2,0x53,0x7c,0x28,0xe6,0xd0,0x85,0xd5,0x16,0x92,0x1a,0x19,0x24,0xdc,0x0c,0xae,0x2a,0x5b,0x5a,0x72,0xf2,0xc5};
    mont256_from_bytes(&ctx, multiplier, multiplier40);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product40, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier41[32] = {0x06,0x12,0x41,0x6f,0x33,0x89,0xa5,0x83,0xbe,0xef,0x69,0x27,0x1f,0xe4,0xe0,0xa0,0x47,0xf6,0x3f,0xf6,0xdd,0x02,0x6e,0xb8,0x67,0xf4,0x25,0xc8,0x6f,0xdb,0x4b,0x15};
    std::uint8_t product41[32]    = {0x58,0xa5,0x9a,0x0a,0x6b,0xc6,0xdb,0x59,0x48,0x20,0x35,0x24,0x2b,0x47,0xef,0xc4,0xc1,0x21,0x21,0xf8,0xfa,0xe0,0x25,0xf3,0x5b,0x2b,0x00,0x76,0x76,0x00,0xc4,0x10};
    mont256_from_bytes(&ctx, multiplier, multiplier41);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product41, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier42[32] = {0x47,0xf8,0x9e,0xc6,0x12,0xea,0xbb,0x78,0xc9,0xa6,0xc3,0xad,0x21,0x11,0x1d,0x07,0x8b,0x2f,0x25,0x1c,0x7e,0x05,0x96,0x40,0x61,0xde,0x05,0xc0,0xa8,0x33,0x18,0xb4};
    std::uint8_t product42[32]    = {0x10,0x6b,0x7c,0x5d,0xa3,0xfe,0xc6,0x1f,0x4b,0xcf,0x03,0x89,0x5d,0x86,0xc6,0xc4,0x0b,0xe4,0x75,0xbc,0xb8,0xce,0xae,0xad,0x15,0x1e,0x49,0xa6,0x91,0x4c,0x9a,0x3a};
    mont256_from_bytes(&ctx, multiplier, multiplier42);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product42, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier43[32] = {0x47,0xc1,0xec,0xd9,0x45,0x07,0xf8,0x33,0x4e,0x1f,0x73,0xe6,0xb3,0x13,0xbb,0xfa,0x7a,0xa5,0x14,0x54,0xda,0xfd,0xfb,0x35,0x25,0x42,0x88,0xfb,0x80,0xdb,0x5d,0x2a};
    std::uint8_t product43[32]    = {0x0e,0x30,0xcb,0xbe,0x84,0x00,0xcd,0x8d,0x50,0xbc,0x8a,0xc7,0x43,0xa6,0x24,0x2c,0xbe,0xfa,0x9e,0xda,0xa3,0x50,0xc9,0x7d,0xa3,0x7c,0xea,0x72,0x24,0x99,0x5a,0xdd};
    mont256_from_bytes(&ctx, multiplier, multiplier43);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product43, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier44[32] = {0x7f,0x52,0x88,0x25,0xe1,0xc8,0x19,0xec,0x5a,0x95,0x10,0x1a,0x39,0x52,0x29,0xd0,0x34,0xa5,0x40,0x25,0xf7,0x21,0x91,0xaa,0xb7,0x77,0x48,0xdc,0xdc,0x1f,0x6a,0x19};
    std::uint8_t product44[32]    = {0x8f,0xf2,0x52,0xd0,0xee,0x2b,0xde,0x9b,0x85,0x17,0x2a,0x34,0xb5,0x80,0xc4,0x80,0xc1,0x4b,0xab,0x6d,0x63,0x1d,0x9f,0x0c,0x20,0x5d,0x2c,0xff,0x54,0x94,0x41,0x2b};
    mont256_from_bytes(&ctx, multiplier, multiplier44);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product44, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier45[32] = {0x22,0xf0,0xab,0xcc,0x1b,0xd5,0xb0,0xa1,0xd0,0x0a,0x28,0x0a,0xe1,0x93,0x65,0x76,0x77,0xbf,0x2b,0xa1,0x55,0x11,0xd6,0xb4,0x4e,0x72,0xf2,0x40,0x0c,0x51,0x3c,0x42};
    std::uint8_t product45[32]    = {0x95,0x2f,0xbd,0x2f,0xbf,0xcb,0x92,0xcb,0x09,0xa9,0x9c,0xd8,0x12,0xfc,0xcd,0x70,0x73,0x80,0x20,0xcd,0xb2,0x73,0x4f,0x01,0x1c,0x5d,0x53,0x18,0x21,0x39,0xbb,0xba};
    mont256_from_bytes(&ctx, multiplier, multiplier45);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product45, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier46[32] = {0x3a,0xe3,0x5b,0xee,0x16,0xdf,0xbe,0x2a,0x08,0xcf,0x2b,0xec,0xfa,0x96,0xbb,0x11,0x52,0x64,0x10,0xd9,0x8d,0x4b,0xb4,0x48,0xcf,0xd6,0x7b,0x90,0xd7,0x79,0x5a,0x02};
    std::uint8_t product46[32]    = {0xe8,0x8e,0xf1,0x18,0xf9,0xbf,0x60,0x22,0xbf,0xfe,0xe5,0xc0,0xfa,0x34,0xce,0x47,0x7c,0x8f,0x9b,0xb1,0x1d,0x5c,0x18,0x0d,0x41,0x34,0x80,0xb7,0x45,0xb9,0x95,0x87};
    mont256_from_bytes(&ctx, multiplier, multiplier46);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product46, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier47[32] = {0x98,0x4a,0x2d,0x40,0x85,0xef,0x87,0x4d,0xa7,0x79,0x18,0xc3,0xba,0x31,0x0b,0x06,0xc6,0x87,0x0d,0x53,0xfe,0xd7,0x77,0xf3,0x71,0xc7,0xf4,0xa5,0xf5,0xd2,0x1d,0x39};
    std::uint8_t product47[32]    = {0x1e,0x19,0xa8,0x49,0x74,0xa2,0x67,0x00,0x2b,0x76,0x36,0xef,0x03,0xb0,0xe1,0xaa,0x28,0xcc,0x0d,0x77,0xce,0x59,0x44,0x94,0xd5,0xf2,0xb5,0x47,0xe7,0x32,0x2b,0xc2};
    mont256_from_bytes(&ctx, multiplier, multiplier47);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product47, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier48[32] = {0x25,0xec,0xa6,0xfb,0xe4,0x34,0x9f,0x1c,0x21,0xc0,0x8f,0xc6,0x17,0x6c,0xb2,0x14,0x24,0xbb,0x8e,0xeb,0xfd,0xe7,0x70,0x0f,0x40,0x84,0xc1,0xa6,0x03,0x02,0x42,0x22};
    std::uint8_t product48[32]    = {0x38,0xb6,0xc7,0xc8,0x9e,0x85,0x7f,0x9e,0x8b,0xcc,0x8c,0x3d,0x91,0xed,0x0f,0x07,0x77,0xe4,0x60,0xc9,0x29,0x25,0x93,0x10,0x01,0x9e,0x67,0x04,0xcc,0x29,0x5c,0x0f};
    mont256_from_bytes(&ctx, multiplier, multiplier48);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product48, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier49[32] = {0xa1,0x12,0x21,0xf3,0x59,0x1e,0x92,0x8f,0xbb,0xa0,0x69,0x1a,0x0a,0xb5,0x8d,0x9f,0x14,0x39,0xf3,0xbd,0x5f,0xb4,0xf4,0xe3,0x46,0xb8,0xe1,0xb4,0xe3,0x53,0x4a,0x3c};
    std::uint8_t product49[32]    = {0x5e,0xd0,0xfe,0x30,0x16,0xd1,0x10,0x01,0xd2,0x48,0x6b,0x3e,0x16,0x03,0x0a,0xeb,0xe1,0x3c,0x1e,0x88,0xea,0x47,0x9e,0x5f,0x31,0x2d,0x23,0x2e,0xee,0x8b,0x54,0xae};
    mont256_from_bytes(&ctx, multiplier, multiplier49);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product49, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier50[32] = {0x0d,0xc0,0xee,0x75,0x26,0xe0,0x43,0xb4,0x70,0x3b,0x99,0xaa,0x1c,0x74,0x29,0x14,0x56,0xb7,0x4b,0xc7,0x4a,0x82,0xc3,0x42,0x8a,0xa0,0xca,0xc9,0x4d,0x84,0x19,0x88};
    std::uint8_t product50[32]    = {0x25,0x54,0x21,0x9d,0x42,0xb5,0xb5,0x7d,0xaa,0x94,0x00,0xc3,0x2a,0x65,0xcc,0x0e,0x10,0x7d,0xe7,0xa1,0xcf,0x23,0x5d,0xe8,0x7d,0x14,0x86,0xf3,0x86,0x22,0xfa,0xdb};
    mont256_from_bytes(&ctx, multiplier, multiplier50);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product50, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier51[32] = {0x0c,0x85,0xdd,0xd2,0x3b,0x4c,0xf8,0x3e,0x65,0xba,0xe4,0x17,0x02,0xeb,0xcb,0xb7,0xfb,0x28,0xc2,0x37,0x15,0xef,0xa0,0x54,0x99,0xf5,0xe4,0x35,0x00,0x7a,0xff,0x35};
    std::uint8_t product51[32]    = {0x40,0xe4,0x16,0x0c,0x4d,0xc1,0x1e,0xeb,0x25,0x7d,0x45,0xeb,0xe9,0xd3,0xe7,0x1e,0x5e,0xa3,0xde,0x98,0xae,0x16,0x23,0x6a,0x6a,0x65,0x39,0x60,0xd2,0x41,0xa4,0x8b};
    mont256_from_bytes(&ctx, multiplier, multiplier51);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product51, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier52[32] = {0xb7,0x7c,0x1b,0xf5,0x1d,0x4e,0xf8,0x0b,0x03,0x82,0x2e,0x93,0xe1,0x00,0xb6,0xda,0x57,0x69,0x3a,0x1e,0x1d,0x8d,0xbc,0xb8,0xb7,0xc0,0x10,0xe3,0xfa,0xda,0x5d,0xb1};
    std::uint8_t product52[32]    = {0x01,0x08,0x36,0x4c,0xb9,0xda,0xfb,0x85,0xd5,0x09,0x32,0xcf,0xff,0xb5,0x14,0x43,0x31,0x4b,0xe4,0xba,0x87,0xc5,0x68,0x1f,0x01,0x2e,0xce,0x86,0x47,0x23,0x42,0x9e};
    mont256_from_bytes(&ctx, multiplier, multiplier52);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product52, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier53[32] = {0x66,0xb4,0x75,0x58,0x85,0x3b,0x57,0xd3,0xae,0xa7,0x76,0x7f,0x87,0xb1,0x00,0x4f,0x97,0xe6,0x1c,0xc8,0x60,0x3f,0x01,0xb2,0x5c,0x50,0x4c,0xb3,0xfa,0x52,0xc7,0xc1};
    std::uint8_t product53[32]    = {0xf1,0x72,0xc0,0x61,0x0a,0x80,0x2f,0xcb,0x9a,0x3d,0x1b,0x9f,0x06,0x12,0x13,0x94,0x60,0xe2,0xd2,0x6d,0x00,0x43,0x63,0x52,0x48,0xbd,0xc8,0xc3,0x48,0x2b,0xe8,0x87};
    mont256_from_bytes(&ctx, multiplier, multiplier53);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product53, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier54[32] = {0xc3,0xdd,0xe1,0x37,0xfd,0xee,0x28,0x06,0x83,0xca,0xf2,0x15,0x9f,0x63,0x9b,0x77,0xe9,0xb5,0xc6,0xa0,0xc6,0xc4,0xe9,0x45,0xb3,0x79,0xdd,0xbf,0xbe,0xf2,0x44,0xc3};
    std::uint8_t product54[32]    = {0x54,0x20,0x40,0x13,0x49,0x4d,0x9c,0x9f,0x69,0x57,0x7b,0xcf,0xb4,0x9f,0x1c,0x46,0x2f,0x8e,0x70,0xc3,0x27,0x21,0x84,0xe6,0x24,0x93,0x55,0xed,0x37,0xe2,0xd5,0xfb};
    mont256_from_bytes(&ctx, multiplier, multiplier54);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product54, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier55[32] = {0x3b,0x88,0x8d,0x44,0xac,0x39,0x71,0x63,0x10,0x1a,0x7a,0xcf,0x7f,0x9b,0xf2,0x41,0xec,0xfe,0x11,0xe0,0x42,0xf9,0xe6,0xab,0xad,0xe0,0x82,0xe8,0x30,0xdc,0x32,0x13};
    std::uint8_t product55[32]    = {0x2d,0xb3,0x89,0x93,0xbc,0x34,0xb7,0xd7,0x72,0xab,0x40,0x3d,0x84,0x68,0x3f,0x6d,0x47,0x14,0x20,0x48,0xd3,0x13,0xaa,0xbf,0x46,0x9c,0x06,0xd3,0xb4,0x45,0x16,0xe9};
    mont256_from_bytes(&ctx, multiplier, multiplier55);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product55, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier56[32] = {0x56,0x13,0xf4,0x76,0xba,0xbf,0x69,0xdc,0xeb,0x70,0xab,0xd4,0xca,0xa4,0x33,0x90,0x73,0xf3,0xfc,0x10,0x05,0x8a,0xfa,0x04,0xc3,0x63,0x35,0x7c,0x0d,0xa9,0xf0,0x7e};
    std::uint8_t product56[32]    = {0x0f,0xd0,0x5b,0x34,0x0e,0x67,0x38,0xc1,0xae,0x45,0xa9,0x40,0xd8,0x62,0xf4,0xa5,0x27,0xa6,0x4c,0x5d,0x07,0xfe,0xe1,0xd6,0x9a,0xa5,0x98,0x87,0x0d,0x7f,0x02,0xf2};
    mont256_from_bytes(&ctx, multiplier, multiplier56);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product56, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier57[32] = {0x4b,0x50,0xa6,0xbc,0xd4,0x58,0x3c,0x89,0xc5,0xa7,0xa5,0xad,0x02,0xc1,0x36,0x10,0x58,0x2a,0x1b,0xde,0xd5,0xe6,0x6a,0x52,0x8f,0x9a,0x77,0xf4,0x38,0x1a,0x0b,0x03};
    std::uint8_t product57[32]    = {0x4c,0xfa,0x15,0x09,0xcf,0x3e,0x2f,0x02,0xd1,0xa0,0x42,0x0e,0x7e,0xfa,0xd3,0xed,0x7a,0x78,0xf2,0x87,0x85,0xf2,0x34,0x48,0x15,0x44,0x62,0xe9,0x11,0xf3,0x79,0x0b};
    mont256_from_bytes(&ctx, multiplier, multiplier57);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product57, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier58[32] = {0x3f,0xe8,0x16,0x9d,0x6a,0x4f,0x74,0x88,0xdc,0x88,0x61,0x59,0x9f,0x7a,0x9b,0x35,0x78,0x31,0x58,0x49,0x3f,0x65,0x4b,0x14,0x59,0x19,0x68,0xb2,0x20,0x0a,0x4b,0x91};
    std::uint8_t product58[32]    = {0x81,0xe2,0x72,0x55,0xd4,0x4f,0x62,0x59,0x9b,0x06,0x58,0x3e,0x30,0xcb,0x3f,0xd8,0xa0,0xeb,0x34,0x79,0x92,0x83,0x4b,0x48,0xb1,0x4a,0x57,0x69,0x09,0x46,0xc2,0x47};
    mont256_from_bytes(&ctx, multiplier, multiplier58);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product58, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier59[32] = {0x99,0xf3,0x33,0x30,0x62,0x00,0x18,0x76,0x17,0xf8,0xfb,0x47,0x3e,0xea,0xf8,0xe1,0xec,0x02,0x57,0xc5,0xe7,0xa1,0x28,0x23,0x0a,0xb5,0xd8,0xa6,0x3f,0xd4,0x6f,0x44};
    std::uint8_t product59[32]    = {0x7f,0x90,0xad,0x7d,0x87,0xaf,0x2d,0xa0,0x2e,0x22,0x98,0x42,0xe7,0xed,0x79,0xb7,0xf8,0x63,0xa0,0x80,0x36,0x43,0x16,0x2a,0xbb,0x28,0xbc,0xdd,0xc9,0x71,0xe2,0x6d};
    mont256_from_bytes(&ctx, multiplier, multiplier59);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product59, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier60[32] = {0x03,0x33,0x27,0x2b,0x56,0x31,0xc1,0x9a,0x83,0x39,0x72,0x3a,0xa6,0x96,0x64,0x62,0xe6,0xd8,0xa5,0x29,0x61,0xa7,0x22,0x72,0xf0,0xfa,0xb9,0x22,0xba,0xf5,0x02,0xed};
    std::uint8_t product60[32]    = {0xdc,0x94,0x89,0x8d,0x19,0x68,0x53,0x97,0xd4,0x89,0x26,0x60,0x38,0xe1,0x59,0x11,0x6c,0xa3,0xfb,0xd9,0xea,0x46,0x03,0x9b,0x7e,0xf8,0x14,0x6f,0x6b,0x55,0x31,0xb7};
    mont256_from_bytes(&ctx, multiplier, multiplier60);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product60, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier61[32] = {0x0f,0x11,0xc5,0xf1,0xc5,0x37,0xcf,0x17,0xb2,0x0b,0xae,0xc2,0xff,0x6c,0xb8,0x6e,0x1b,0x95,0x97,0x85,0x1e,0x7f,0x8a,0x71,0x1e,0x0e,0x63,0x0c,0x20,0xfd,0x4b,0xbb};
    std::uint8_t product61[32]    = {0x82,0xf4,0x50,0x56,0x59,0xbb,0xd0,0x40,0x97,0xd5,0xec,0x9f,0x23,0x06,0x83,0xd6,0x47,0xfd,0xd2,0x48,0x2c,0x3c,0x9e,0xa8,0x56,0x62,0x92,0x3a,0x3d,0x14,0x68,0xc4};
    mont256_from_bytes(&ctx, multiplier, multiplier61);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product61, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier62[32] = {0x09,0x90,0x19,0xbd,0x83,0xba,0x6e,0xb5,0x35,0x9b,0x36,0xa7,0x74,0xda,0x73,0x7d,0x93,0x4d,0xcb,0x85,0x33,0x96,0xb5,0xd9,0x5b,0x25,0x6c,0x1b,0x06,0x4f,0x69,0x00};
    std::uint8_t product62[32]    = {0x6a,0xe7,0x62,0x5d,0x59,0x91,0xda,0x1d,0x76,0x8a,0xaf,0x70,0x55,0x9a,0xdb,0xef,0x0b,0x1b,0x57,0xb9,0xaa,0x15,0xf8,0x1d,0x3f,0x32,0x48,0xfc,0xe4,0x4c,0x09,0xc8};
    mont256_from_bytes(&ctx, multiplier, multiplier62);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product62, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier63[32] = {0x2e,0x2d,0xf9,0xf4,0xb6,0xf4,0xd2,0x8e,0x3f,0xad,0x8f,0xc9,0x32,0xaf,0x2e,0x8a,0xe0,0x96,0x5d,0xa2,0xb8,0x51,0x8a,0xd7,0xb8,0xf4,0x1c,0x28,0x2f,0xc6,0x3f,0x0e};
    std::uint8_t product63[32]    = {0xbf,0x18,0xd2,0xbe,0x2d,0x3a,0xd3,0x5e,0x3b,0xe8,0xd3,0x7a,0x81,0x8e,0xf6,0x48,0x20,0xdd,0xf0,0xbc,0xbd,0x3e,0x44,0xb5,0x90,0x72,0x67,0x0a,0xf9,0x84,0x94,0x37};
    mont256_from_bytes(&ctx, multiplier, multiplier63);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product63, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier64[32] = {0x3f,0x85,0x57,0xb5,0xf4,0x7a,0x04,0x45,0x7c,0xe6,0x3f,0xde,0xe5,0x30,0x1c,0x78,0x02,0x05,0x86,0x38,0x72,0x2d,0xd1,0x02,0xd6,0x71,0xdb,0x6b,0x83,0x58,0xb8,0xef};
    std::uint8_t product64[32]    = {0x80,0x78,0xb9,0x42,0x95,0xb7,0xd0,0xaa,0xe6,0x9e,0x0c,0x94,0x5c,0xe6,0xc4,0x43,0xb4,0x8b,0x34,0xe9,0x05,0x06,0x02,0x0e,0x3c,0xd8,0xce,0x12,0x9b,0x11,0xec,0xdd};
    mont256_from_bytes(&ctx, multiplier, multiplier64);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product64, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier65[32] = {0x06,0x1a,0x05,0x9b,0x6e,0x13,0xbd,0xc9,0xf5,0xf4,0xb2,0xa1,0x91,0x81,0x5e,0x81,0x11,0xdc,0x3f,0x11,0xae,0xb7,0xde,0x71,0x49,0xcb,0xa6,0x2d,0x1e,0x32,0xc6,0x5f};
    std::uint8_t product65[32]    = {0xaf,0xc4,0xd4,0xc5,0xd1,0x1a,0xac,0xff,0xe7,0x13,0x46,0xf5,0xd7,0x3a,0x7c,0x4a,0x90,0xc6,0x24,0x52,0x25,0x7d,0xc0,0x30,0x54,0x32,0xad,0x03,0x84,0x0a,0x7f,0x94};
    mont256_from_bytes(&ctx, multiplier, multiplier65);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product65, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier66[32] = {0x93,0x73,0x89,0xe9,0x4e,0xa7,0xd4,0x0d,0xb1,0xe5,0x5e,0xfb,0x7e,0x6f,0xda,0x65,0xa9,0x4f,0x21,0xf3,0xc3,0x2d,0x0f,0xad,0x6c,0x2a,0xfe,0xe6,0x16,0xb0,0xfa,0x6c};
    std::uint8_t product66[32]    = {0x84,0x96,0x94,0x43,0xa5,0xa3,0x7c,0xc7,0x6e,0x1a,0x4d,0xb8,0x76,0xfc,0x60,0x0b,0xb2,0xa0,0x28,0x3f,0x17,0x67,0x06,0xbd,0xa3,0x75,0x5b,0xb2,0x41,0x9b,0x0b,0xda};
    mont256_from_bytes(&ctx, multiplier, multiplier66);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product66, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier67[32] = {0x30,0x30,0x23,0xa4,0xcd,0x8c,0x8c,0x61,0x21,0x62,0x8f,0x82,0xfb,0xa0,0xd1,0x2f,0x4b,0x80,0x63,0xc2,0xd1,0xea,0xfe,0x14,0x7e,0x76,0x54,0xb7,0x0d,0x80,0x93,0x27};
    std::uint8_t product67[32]    = {0x35,0x49,0x4f,0x13,0x39,0x6c,0x0e,0xab,0x64,0x37,0x22,0x9c,0xe0,0x7a,0x24,0x77,0x6d,0x25,0x24,0xb3,0xed,0x23,0x9c,0xf2,0x08,0x73,0xc5,0x4a,0x7c,0x12,0xee,0xce};
    mont256_from_bytes(&ctx, multiplier, multiplier67);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product67, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier68[32] = {0xd0,0x7c,0x55,0x82,0xf9,0x7d,0x04,0x48,0x01,0xa7,0x9b,0x52,0x09,0x86,0xf1,0x8f,0xcd,0xad,0x67,0xb4,0xca,0x22,0xcd,0xf7,0xa7,0x26,0xf2,0x63,0x28,0x2a,0x82,0x43};
    std::uint8_t product68[32]    = {0x7a,0x0a,0xe1,0xc1,0xda,0xcb,0x31,0x1a,0x27,0x61,0xb6,0x9b,0xfd,0xf0,0x28,0x40,0xc9,0x7c,0x53,0xd0,0xfc,0xd5,0x2f,0x23,0xcd,0x76,0xa3,0x02,0x51,0xb8,0x20,0x1e};
    mont256_from_bytes(&ctx, multiplier, multiplier68);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product68, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier69[32] = {0x80,0x34,0x6c,0x87,0x1a,0x8d,0x0f,0x87,0x84,0xe1,0xe5,0x29,0x30,0x39,0x88,0x34,0x6f,0x7b,0x7c,0xbf,0x12,0xf2,0x58,0x98,0xce,0x0d,0x09,0x01,0x91,0x37,0xea,0xc4};
    std::uint8_t product69[32]    = {0x8e,0xb9,0x81,0xed,0x25,0x34,0x88,0x27,0xdb,0xa7,0x45,0x35,0xa5,0x06,0x3a,0x54,0xf9,0x71,0x3a,0xa3,0xf1,0x68,0xb8,0x82,0xac,0xe2,0x57,0x66,0xbc,0xde,0x3b,0x38};
    mont256_from_bytes(&ctx, multiplier, multiplier69);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product69, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier70[32] = {0xf6,0x0f,0x43,0xe0,0x3c,0xca,0x68,0xf9,0x3d,0xef,0x36,0xcd,0xf5,0x01,0x4b,0xbd,0x58,0x9a,0xd9,0x2c,0x8f,0x59,0xd9,0xe8,0xfc,0x8f,0x5f,0x86,0xec,0x2d,0xfd,0x17};
    std::uint8_t product70[32]    = {0x29,0xc6,0xa3,0xe4,0x4c,0x84,0xaa,0xdb,0x95,0x7d,0x8c,0xad,0x61,0xb7,0x46,0xde,0xf2,0x7c,0x79,0x7a,0x72,0x32,0xb7,0xda,0x9b,0xcd,0x25,0x1a,0xf9,0x84,0xf2,0xba};
    mont256_from_bytes(&ctx, multiplier, multiplier70);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product70, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier71[32] = {0x35,0xc6,0xab,0xc8,0x4b,0x8a,0xd9,0x23,0x08,0x59,0xf4,0x3c,0xc8,0x2e,0x33,0x12,0xb0,0x75,0xa7,0x02,0x60,0x90,0xfa,0x15,0x81,0xcb,0x33,0xb5,0xde,0xad,0xb2,0xfb};
    std::uint8_t product71[32]    = {0x90,0x46,0xfe,0x53,0x34,0x04,0xfd,0x98,0x97,0xcd,0x1e,0xb4,0x6c,0x1e,0xa2,0x66,0x54,0x8d,0xb5,0xce,0x1d,0xf1,0xa6,0x30,0xf8,0x90,0x82,0x34,0xde,0x01,0x4c,0x18};
    mont256_from_bytes(&ctx, multiplier, multiplier71);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product71, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier72[32] = {0x49,0x04,0xbd,0x20,0x01,0x35,0x5c,0xc5,0xa7,0x26,0x92,0xa2,0xe1,0x25,0x2c,0x67,0xe6,0x5f,0x20,0xfe,0x15,0x90,0x30,0x0d,0xf1,0x21,0x02,0xef,0x03,0x87,0xcf,0xdb};
    std::uint8_t product72[32]    = {0x07,0x69,0x09,0x13,0xbe,0xa0,0xb4,0x6f,0x20,0x1c,0x1d,0x24,0x0f,0xc1,0x2b,0x71,0xe2,0x6c,0xb0,0x81,0x17,0x24,0xe9,0xf2,0x6f,0x02,0xc3,0xd8,0xa7,0xb3,0x79,0x00};
    mont256_from_bytes(&ctx, multiplier, multiplier72);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product72, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier73[32] = {0x62,0x8b,0x08,0xb8,0xa8,0x4e,0x14,0xd5,0x28,0x85,0x57,0x49,0xf5,0x59,0x68,0xdd,0x43,0xc5,0x10,0x04,0x3a,0x7a,0xcf,0xcb,0x21,0xfe,0x01,0xa5,0xa8,0xf5,0xf2,0xc8};
    std::uint8_t product73[32]    = {0x4c,0x03,0xa2,0x0d,0x91,0x2f,0xaa,0x4a,0x07,0x4b,0x36,0xfd,0xe4,0xa4,0xd0,0xa7,0xad,0xd9,0xbd,0x56,0x06,0xa5,0xd6,0x9a,0x7f,0xdd,0xae,0x14,0x6e,0x7a,0x35,0xf1};
    mont256_from_bytes(&ctx, multiplier, multiplier73);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product73, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier74[32] = {0xfa,0xc0,0xaa,0xe4,0xbe,0xfc,0xa9,0x71,0x62,0xc5,0x53,0x35,0x60,0x4f,0xff,0x76,0x9e,0xca,0x9e,0x7a,0x27,0x40,0x13,0x1f,0x0c,0xe8,0x33,0x85,0x1e,0x8d,0x73,0xbb};
    std::uint8_t product74[32]    = {0x4d,0xfe,0x0e,0xcc,0x94,0xe5,0x99,0x46,0x2e,0x34,0x70,0x9c,0xe4,0x14,0x6b,0xd3,0x59,0xd4,0xb9,0xc5,0x8b,0xe5,0xb3,0x7a,0x98,0xd8,0xe4,0x10,0x7b,0x7c,0xa0,0x1a};
    mont256_from_bytes(&ctx, multiplier, multiplier74);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product74, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier75[32] = {0xe5,0x75,0x6c,0xb3,0x55,0x0b,0xc7,0xa1,0xb3,0x00,0xb1,0x17,0xfe,0x83,0x5f,0xa0,0xa1,0x33,0x1b,0x19,0xba,0x19,0x4f,0x58,0x22,0x04,0xbe,0x26,0x33,0x78,0x94,0xda};
    std::uint8_t product75[32]    = {0xb4,0x3f,0x07,0x5c,0x20,0xfa,0x15,0x86,0x5b,0x6d,0xc5,0xeb,0x7c,0x43,0xd0,0xc5,0xcc,0x06,0x69,0x1b,0xdd,0x67,0x2d,0x25,0x55,0x57,0xbe,0x7a,0xd3,0xe7,0x6c,0x42};
    mont256_from_bytes(&ctx, multiplier, multiplier75);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product75, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier76[32] = {0xea,0xb0,0x43,0x65,0x86,0x48,0xdf,0x67,0x3e,0xaa,0x87,0xbf,0x27,0x27,0x2b,0x49,0x2b,0x10,0xeb,0x00,0xd8,0x67,0xfc,0x18,0x75,0x98,0xdc,0xb5,0x19,0x77,0xad,0x7a};
    std::uint8_t product76[32]    = {0x88,0x71,0x6d,0x1c,0xdd,0x27,0x00,0x22,0x99,0xd5,0x26,0x15,0x80,0x27,0xbd,0x2c,0xd6,0xcb,0x8b,0x5e,0xf6,0x7d,0x86,0xac,0xbd,0x3c,0x53,0x56,0x92,0x0b,0x24,0x09};
    mont256_from_bytes(&ctx, multiplier, multiplier76);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product76, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier77[32] = {0x26,0xfa,0x21,0xc2,0x14,0x70,0xe1,0x27,0xcd,0xa0,0x5f,0xcd,0x59,0x4b,0xb0,0xbd,0x38,0x72,0x59,0xbb,0xfd,0x14,0x27,0x96,0xd0,0xc1,0x8e,0x30,0x21,0xdf,0x50,0xd3};
    std::uint8_t product77[32]    = {0x2f,0xd1,0x8a,0xb4,0x0c,0x2f,0x9f,0x21,0xb2,0xae,0xd9,0xf5,0xd9,0x7d,0x40,0x35,0x2d,0x6b,0x13,0xe3,0xb3,0xcd,0xce,0x17,0x0e,0x6b,0xbb,0x7a,0xfb,0xa0,0xbf,0x4a};
    mont256_from_bytes(&ctx, multiplier, multiplier77);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product77, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier78[32] = {0x38,0x05,0x48,0x1d,0x2e,0xa2,0xae,0x92,0xd7,0xde,0xbb,0xc7,0x52,0xb4,0xbb,0xae,0xbe,0x8e,0xf2,0x3f,0x86,0xba,0x3b,0x0c,0xd2,0x73,0x15,0xb7,0x0d,0xb5,0x27,0x91};
    std::uint8_t product78[32]    = {0xfc,0x3d,0x1c,0x06,0xd5,0x39,0x67,0x7d,0x85,0x93,0x01,0x67,0x96,0x17,0x28,0xc6,0x0d,0x28,0x1e,0xf7,0x26,0xe9,0xac,0x8a,0xb6,0x98,0xcf,0x60,0xb5,0x01,0x55,0x0b};
    mont256_from_bytes(&ctx, multiplier, multiplier78);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product78, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier79[32] = {0xcf,0xa6,0xde,0xde,0x2d,0x3b,0x08,0x94,0xd9,0x3e,0x67,0xf6,0x35,0x02,0xb3,0x5c,0x55,0x88,0x4f,0xc5,0x2d,0xc8,0xed,0x82,0x7e,0x93,0xcc,0x87,0xcf,0xf5,0xd9,0x0a};
    std::uint8_t product79[32]    = {0x12,0x57,0x84,0xaa,0xe7,0xe3,0x21,0x03,0xeb,0xd1,0xde,0xfa,0xfc,0xe6,0x2f,0xec,0x3f,0x9b,0x28,0x5b,0x63,0x09,0xf1,0x75,0xd1,0x84,0x47,0x06,0x0d,0xd0,0xdb,0x24};
    mont256_from_bytes(&ctx, multiplier, multiplier79);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product79, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier80[32] = {0x11,0x19,0x56,0x2f,0x2a,0xe3,0xb1,0x3d,0x39,0x66,0xaf,0x4b,0x98,0xec,0x82,0x1b,0x6f,0x33,0xe5,0x7e,0xed,0xb1,0xfd,0xa6,0x7f,0xbf,0x7b,0x34,0x96,0xc6,0xb4,0xa4};
    std::uint8_t product80[32]    = {0x45,0xd2,0x9a,0x92,0x0d,0x33,0xce,0xea,0x57,0xda,0x0d,0x68,0xc1,0x36,0xca,0xbe,0x9d,0x2f,0x1d,0x7a,0x6f,0xcd,0xb8,0x70,0x2c,0x4f,0x7a,0xa3,0xb1,0x2a,0xc3,0xdb};
    mont256_from_bytes(&ctx, multiplier, multiplier80);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product80, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier81[32] = {0x4a,0x56,0x93,0x87,0x95,0x2b,0x53,0x50,0xab,0xf4,0xbc,0x8b,0xdd,0x1a,0x3b,0xd2,0xc6,0x1b,0xbf,0xae,0x07,0xf0,0xbc,0x92,0x94,0xd8,0x0b,0xde,0x47,0x38,0x8f,0x54};
    std::uint8_t product81[32]    = {0x6d,0x0d,0x80,0x93,0x48,0x1d,0x15,0x37,0x11,0xf6,0x12,0xad,0x15,0x66,0xe6,0xc4,0xd7,0xd9,0xc7,0x05,0x38,0x0a,0x92,0x35,0x2c,0xb0,0xcc,0x61,0xe3,0xba,0xc1,0x19};
    mont256_from_bytes(&ctx, multiplier, multiplier81);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product81, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier82[32] = {0x68,0x58,0x85,0x01,0x35,0xeb,0xf2,0xed,0xac,0xaf,0x1c,0x40,0x2b,0x3c,0x99,0xc6,0xc5,0x93,0xb5,0xc4,0xf3,0x32,0xf6,0x14,0x01,0x53,0x45,0x4b,0xce,0x1f,0x98,0xb4};
    std::uint8_t product82[32]    = {0x56,0x09,0xec,0x23,0x64,0xfc,0x11,0xcd,0xd3,0x8f,0x97,0xca,0x16,0xfe,0x66,0x46,0xa9,0x6f,0x85,0x55,0x99,0x99,0x98,0xbd,0xc5,0x87,0xf0,0x2f,0xa2,0xbf,0xa4,0xcf};
    mont256_from_bytes(&ctx, multiplier, multiplier82);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product82, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier83[32] = {0x88,0x16,0x94,0xe2,0xff,0x91,0xa5,0x47,0xc9,0x38,0xfc,0x8a,0xab,0xec,0x3d,0xe7,0x0e,0x02,0x87,0x67,0xf8,0x4d,0x6d,0xdc,0x87,0x4d,0x37,0xc9,0x4a,0x2b,0xab,0x18};
    std::uint8_t product83[32]    = {0x4a,0xac,0x3d,0x85,0xab,0x1c,0xb1,0xa0,0x68,0x2f,0x40,0x78,0xd5,0xe3,0x26,0x57,0x15,0xd9,0xc5,0x8d,0xa6,0x7f,0x15,0x4d,0x8e,0xa4,0xac,0xd4,0x89,0x25,0xa8,0x99};
    mont256_from_bytes(&ctx, multiplier, multiplier83);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product83, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier84[32] = {0x3d,0x0a,0x04,0x11,0x2b,0x38,0xcb,0xd2,0x1e,0x92,0x3a,0xc7,0x14,0x0f,0x89,0x07,0xab,0xc4,0x08,0xfe,0xaa,0x7b,0x6d,0xbd,0xd4,0x3c,0xfd,0x49,0xee,0x1e,0xbf,0x41};
    std::uint8_t product84[32]    = {0x5e,0xb0,0x08,0x1c,0x75,0x8a,0x2e,0x31,0xca,0x57,0xbb,0x26,0x0c,0x4e,0xc4,0x83,0xdd,0x3c,0x87,0x34,0x2e,0x72,0xa2,0xc9,0x08,0xe0,0xce,0x27,0xd6,0x34,0x5a,0x66};
    mont256_from_bytes(&ctx, multiplier, multiplier84);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product84, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier85[32] = {0x77,0xc3,0x28,0xbc,0x2b,0x3a,0x15,0xcb,0xb1,0xc2,0x86,0x8d,0x27,0x9b,0xb4,0x33,0xf6,0x6b,0x59,0xb5,0x38,0x48,0xee,0xce,0xce,0x94,0x0d,0xbc,0x8c,0xf1,0xf8,0x63};
    std::uint8_t product85[32]    = {0x6c,0x9d,0x32,0xe9,0x52,0xc0,0x92,0xff,0x26,0x65,0x7e,0x12,0xfa,0x4e,0x2d,0xc1,0x4e,0xbd,0x77,0x00,0xfe,0x0e,0xc0,0xe1,0x81,0x74,0xc6,0x94,0xf6,0xa7,0xe5,0x90};
    mont256_from_bytes(&ctx, multiplier, multiplier85);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product85, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier86[32] = {0xf5,0x6f,0x60,0x1a,0x52,0xec,0xc4,0xf5,0x82,0x54,0x69,0xa0,0xd9,0x87,0xda,0x8d,0x3a,0x65,0x19,0x79,0x58,0x1a,0x15,0x82,0xbc,0x21,0xb6,0x14,0xc8,0x84,0x33,0xc4};
    std::uint8_t product86[32]    = {0x70,0xd6,0x02,0x5a,0x07,0x26,0x03,0xc8,0x6c,0x5d,0x0d,0x41,0x6d,0xec,0x07,0x1e,0x65,0x02,0x2c,0xd8,0x31,0x31,0xc1,0x59,0x33,0x93,0x3e,0x3f,0xaf,0xed,0x6a,0x3c};
    mont256_from_bytes(&ctx, multiplier, multiplier86);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product86, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier87[32] = {0xca,0x73,0x0e,0x0d,0x65,0x81,0x12,0x07,0x19,0x02,0x13,0xa4,0xea,0x49,0x74,0xef,0x38,0xaf,0x47,0x4b,0x2f,0x0d,0xfb,0xd1,0x47,0x31,0x79,0x20,0x01,0xf6,0x12,0x56};
    std::uint8_t product87[32]    = {0xfe,0x8e,0x5f,0xe0,0x54,0x20,0xb8,0x88,0x97,0x03,0xac,0xe0,0x4b,0x3d,0x27,0xcd,0xa3,0x40,0xf3,0x6f,0x74,0x08,0xc1,0xec,0x2a,0xa8,0x7b,0x1c,0x57,0x04,0xb1,0xc0};
    mont256_from_bytes(&ctx, multiplier, multiplier87);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product87, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier88[32] = {0x34,0x90,0x62,0xd6,0xad,0xc2,0x2c,0xf6,0x54,0xdd,0x95,0xd7,0x5b,0xb3,0x6e,0xc1,0x3a,0x48,0xd2,0x59,0x7a,0xaa,0x11,0x03,0xc2,0x8d,0x5b,0xb1,0x34,0x60,0x69,0xd4};
    std::uint8_t product88[32]    = {0x49,0x54,0x4c,0x07,0xb9,0x9b,0x07,0x33,0x55,0x5f,0x56,0x9a,0xbe,0x61,0x24,0xf0,0xb7,0x60,0xe7,0x13,0xfa,0xde,0x9a,0x48,0xc0,0xc0,0x33,0x6e,0x87,0x8a,0x74,0xda};
    mont256_from_bytes(&ctx, multiplier, multiplier88);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product88, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier89[32] = {0x73,0x13,0x68,0x96,0xda,0x86,0xd0,0x3d,0x7e,0x0f,0x56,0xba,0x1e,0x64,0x68,0xef,0xf7,0x63,0xe9,0x8e,0x98,0xab,0xac,0x9f,0x20,0x70,0x04,0xf5,0x55,0xe9,0xb9,0x45};
    std::uint8_t product89[32]    = {0x15,0xba,0x8f,0xd8,0xdb,0xbb,0x18,0x54,0xf6,0xd0,0x12,0x19,0x00,0x10,0x8c,0x24,0xe3,0x31,0x04,0xa7,0x07,0x35,0x18,0xfb,0xf5,0xec,0x5e,0xb6,0x39,0xfb,0xd0,0x70};
    mont256_from_bytes(&ctx, multiplier, multiplier89);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product89, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier90[32] = {0x42,0x6f,0x65,0xc4,0x65,0xe3,0xf9,0x53,0xb9,0x3b,0xf6,0xa0,0x3b,0xaf,0x03,0x96,0x09,0xbe,0x35,0x07,0x81,0x3b,0xbc,0x48,0x9d,0xd7,0x8b,0xea,0x2f,0x09,0x22,0x8c};
    std::uint8_t product90[32]    = {0x4c,0xd2,0x5d,0x8e,0x57,0xc4,0x05,0x5f,0xbd,0xe4,0x70,0xde,0xb1,0x8a,0x62,0x34,0x34,0xc5,0xa7,0xe7,0x9b,0x6e,0x35,0x63,0xd2,0x48,0x09,0x03,0x96,0xf9,0x68,0x38};
    mont256_from_bytes(&ctx, multiplier, multiplier90);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product90, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier91[32] = {0x00,0xc2,0xae,0x31,0x66,0x32,0x1f,0x53,0x48,0x96,0x37,0x08,0xa6,0x20,0xe7,0xa8,0xd3,0x1e,0xc7,0xe1,0x81,0xf9,0x81,0x0f,0xb3,0xef,0xe8,0x14,0xbf,0x70,0xf6,0x07};
    std::uint8_t product91[32]    = {0x52,0xf2,0xa8,0x85,0xaa,0xfd,0x0e,0x3e,0xaa,0x2f,0x9e,0xfe,0xa1,0xf3,0x15,0x00,0x47,0xb9,0x00,0x17,0x1e,0x84,0xe8,0x62,0x5e,0x9b,0x07,0x2d,0x18,0x51,0xd0,0x4c};
    mont256_from_bytes(&ctx, multiplier, multiplier91);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product91, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier92[32] = {0x72,0x21,0x23,0x9e,0x21,0xca,0xee,0x19,0x9a,0xcf,0x12,0x70,0x5f,0x66,0xf7,0xf9,0x4f,0x2e,0x9a,0xb8,0xbb,0x0e,0x40,0xd2,0xb6,0x7d,0x45,0x16,0x39,0x6c,0x04,0x79};
    std::uint8_t product92[32]    = {0x30,0x22,0xd9,0x58,0x4e,0xeb,0x5f,0xcf,0xe8,0xb9,0x6b,0xc7,0xb2,0xf7,0x13,0x38,0x6b,0xfa,0x72,0x8f,0x5b,0x63,0xd3,0x4c,0x92,0xea,0x7e,0x7c,0xbc,0xdb,0x40,0xca};
    mont256_from_bytes(&ctx, multiplier, multiplier92);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product92, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier93[32] = {0xeb,0x25,0xcc,0x98,0xe4,0x67,0xac,0x40,0xa2,0x11,0x96,0x07,0x4c,0x20,0xc7,0xd3,0xe4,0xf3,0x83,0xdc,0x0e,0x69,0xdf,0x38,0x0c,0x98,0x8e,0x9d,0x8f,0x47,0x64,0xfb};
    std::uint8_t product93[32]    = {0xbe,0x0d,0xa3,0x3c,0x4e,0x03,0x21,0xb8,0x4d,0xe1,0xbb,0x43,0x09,0x24,0x92,0xcf,0xdd,0x44,0x84,0xca,0x59,0xa6,0x98,0x18,0x20,0x67,0xd1,0x36,0x86,0xf2,0xf2,0x56};
    mont256_from_bytes(&ctx, multiplier, multiplier93);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product93, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier94[32] = {0x12,0x1f,0x57,0xc3,0x5d,0x6d,0x2c,0xde,0xa0,0x58,0x21,0x1e,0x36,0xb9,0x71,0x88,0x51,0xe4,0xf2,0xfb,0x88,0x17,0x6d,0x62,0x06,0x35,0x16,0xad,0x05,0x27,0x8c,0x78};
    std::uint8_t product94[32]    = {0x09,0xf7,0xab,0x90,0xd3,0x79,0x83,0xed,0xbe,0x76,0x45,0x15,0x7d,0x29,0xda,0xe5,0x2e,0xa0,0xca,0x63,0xd2,0x2c,0xb0,0x1d,0x25,0x0e,0xc2,0xc5,0x85,0x18,0x07,0xf6};
    mont256_from_bytes(&ctx, multiplier, multiplier94);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product94, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier95[32] = {0xce,0x1f,0x35,0xac,0xb2,0xe4,0x2a,0x22,0x87,0xba,0x99,0x14,0xa4,0xb7,0x8d,0x75,0x26,0x8e,0xd3,0x0f,0xe5,0x9a,0xd7,0xcc,0x49,0x26,0x81,0xe3,0xdb,0x34,0xd1,0x4a};
    std::uint8_t product95[32]    = {0xb0,0x12,0x06,0x15,0xbf,0x1e,0xd1,0x05,0xfb,0x2c,0x10,0x06,0x7c,0xee,0x13,0x21,0xb5,0x4c,0x69,0x05,0xe2,0x6f,0xfa,0xa3,0x2a,0x22,0x70,0x39,0x12,0xd9,0xdf,0xcc};
    mont256_from_bytes(&ctx, multiplier, multiplier95);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product95, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier96[32] = {0xfb,0x64,0x2c,0x15,0xef,0x45,0x21,0x2c,0x65,0x3d,0xaa,0x1c,0x6c,0xea,0x9c,0x4d,0x91,0x8f,0x6e,0x9e,0x0a,0x1f,0xa7,0xcc,0x88,0x79,0xdf,0x52,0xc4,0x3d,0x11,0xa3};
    std::uint8_t product96[32]    = {0xc1,0x78,0xac,0x2d,0x20,0x37,0xad,0xeb,0x64,0xcf,0x14,0x2a,0x86,0xbe,0x68,0x45,0x93,0x21,0x11,0x5a,0xc9,0x7a,0xe4,0x0f,0x22,0x70,0x23,0x95,0xd1,0xaa,0x8f,0x49};
    mont256_from_bytes(&ctx, multiplier, multiplier96);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product96, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier97[32] = {0x64,0x63,0xcd,0x1d,0x40,0x39,0x86,0x71,0x90,0x7f,0x2b,0x03,0x15,0xec,0x0c,0x63,0x0d,0x59,0x17,0xcd,0x36,0xaf,0x83,0x4f,0xc8,0x03,0x02,0xc4,0x02,0x92,0x57,0x07};
    std::uint8_t product97[32]    = {0x76,0x8e,0x85,0x52,0x00,0x44,0x31,0xa6,0x46,0x13,0x1a,0x27,0x87,0x9a,0x49,0xba,0xbd,0x45,0x86,0x1a,0x40,0xc5,0x9b,0x09,0x3c,0x0e,0x42,0x30,0x94,0x7b,0x0c,0xf2};
    mont256_from_bytes(&ctx, multiplier, multiplier97);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product97, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier98[32] = {0x44,0x40,0x2b,0x87,0x5c,0x6c,0xd9,0x27,0x26,0x8c,0x09,0xb1,0x96,0x89,0xd9,0x32,0x68,0xc9,0x16,0x93,0xe5,0x52,0x33,0xcd,0x1f,0x95,0x3f,0x3c,0xc5,0x10,0xe5,0xaf};
    std::uint8_t product98[32]    = {0x3f,0x99,0xac,0x52,0x41,0x94,0x6f,0x2b,0x1f,0x75,0x73,0x0c,0x9b,0x25,0x0d,0x5d,0x4d,0xbe,0x2c,0x2d,0xd3,0x46,0xef,0x62,0x21,0x31,0xea,0x0e,0x1e,0xd3,0x24,0x2c};
    mont256_from_bytes(&ctx, multiplier, multiplier98);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product98, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }

    std::uint8_t multiplier99[32] = {0x5c,0xaf,0xd5,0x7c,0x80,0xd6,0xd1,0x7f,0x3f,0x6c,0x72,0xe2,0xc1,0xf0,0x2a,0x4d,0xd2,0x40,0x5b,0xfb,0xe3,0x89,0xec,0x75,0xd5,0xe8,0xc7,0x86,0x4a,0x52,0xdb,0xe8};
    std::uint8_t product99[32]    = {0x64,0xae,0x65,0x0d,0x13,0x03,0xab,0x4d,0x2e,0x6d,0x05,0xa7,0xf6,0x61,0xf3,0x69,0x8c,0x97,0x8f,0x02,0xb9,0x41,0xcd,0xc5,0x1a,0x47,0x9c,0x88,0xc0,0xa1,0x33,0x8a};
    mont256_from_bytes(&ctx, multiplier, multiplier99);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product99, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sqr");
    }
}
#else
void test_mont256_x64_sqr()
{
}
#endif