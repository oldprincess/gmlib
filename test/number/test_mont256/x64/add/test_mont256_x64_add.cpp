#if defined(CPU_FLAG_MOVBE) && defined(CPU_FLAG_BMI2)
#include <gmlib/number/internal/mont256_x64.h>
#include <gmlib/number/internal/uint256_x64.h>
#include <stdexcept>
#include <cstring>

using namespace number::internal::x64;

static std::uint8_t  P_data[32]      = {0xff,0xff,0xff,0xfe,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x72,0x03,0xdf,0x6b,0x21,0xc6,0x05,0x2b,0x53,0xbb,0xf4,0x09,0x39,0xd5,0x41,0x23};
static std::uint8_t  P_SUB2_data[32] = {0xff,0xff,0xff,0xfe,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x72,0x03,0xdf,0x6b,0x21,0xc6,0x05,0x2b,0x53,0xbb,0xf4,0x09,0x39,0xd5,0x41,0x21};
static std::uint8_t  R_data[32]      = {0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x8d,0xfc,0x20,0x94,0xde,0x39,0xfa,0xd4,0xac,0x44,0x0b,0xf6,0xc6,0x2a,0xbe,0xdd};
static std::uint8_t  R_POW2_data[32] = {0x1e,0xb5,0xe4,0x12,0xa2,0x2b,0x3d,0x3b,0x62,0x0f,0xc8,0x4c,0x3a,0xff,0xe0,0xd4,0x34,0x64,0x50,0x4a,0xde,0x6f,0xa2,0xfa,0x90,0x11,0x92,0xaf,0x7c,0x11,0x4f,0x20};
static std::uint64_t N_              = 0x327f9e8872350975;

void test_mont256_x64_add()
{
    uint256_t P, P_SUB2, R, R_POW2;
    uint256_from_bytes(P, P_data);
    uint256_from_bytes(P_SUB2, P_SUB2_data);
    uint256_from_bytes(R, R_data);
    uint256_from_bytes(R_POW2, R_POW2_data);

    Mont256CTX ctx;
    ctx.P = P, ctx.P_SUB2 = P_SUB2;
    ctx.R = R, ctx.R_POW2 = R_POW2;
    ctx.N_ = N_;

    mont256_t    augend, addend, sum;
    std::uint8_t sum_data[32];

    std::uint8_t augend0[32] = {0x77,0x4a,0x43,0xc2,0xe3,0xfe,0x78,0xa1,0xfd,0x9d,0xb1,0x80,0xb1,0x97,0x52,0x34,0xa7,0x77,0xf2,0x7f,0x29,0xbe,0xf5,0x73,0x3b,0x36,0xb3,0xf5,0xc6,0x24,0x52,0xd8};
    std::uint8_t addend0[32] = {0x34,0xb5,0x3a,0x7d,0x2d,0x8e,0x25,0x0f,0x69,0x2e,0x73,0xb6,0xab,0x6a,0x18,0x33,0x67,0x0c,0xc7,0x79,0x49,0x0e,0x15,0xf4,0x19,0x8b,0x42,0x5d,0x05,0xe5,0xdf,0x24};
    std::uint8_t sum0[32]    = {0xab,0xff,0x7e,0x40,0x11,0x8c,0x9d,0xb1,0x66,0xcc,0x25,0x37,0x5d,0x01,0x6a,0x68,0x0e,0x84,0xb9,0xf8,0x72,0xcd,0x0b,0x67,0x54,0xc1,0xf6,0x52,0xcc,0x0a,0x31,0xfc};
    mont256_from_bytes(&ctx, augend, augend0);
    mont256_from_bytes(&ctx, addend, addend0);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum0, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend1[32] = {0xfb,0x68,0xd5,0xd5,0xe1,0x56,0xf0,0x9b,0xe2,0x2d,0x3d,0xff,0xd3,0x29,0x20,0x08,0x7c,0xe5,0x3e,0xd3,0x83,0xec,0x23,0x71,0x4b,0x15,0xd9,0x0c,0xae,0x03,0x8b,0x95};
    std::uint8_t addend1[32] = {0x8d,0xb8,0xb1,0xbd,0x7b,0x94,0x45,0x0e,0xc5,0x1d,0xed,0x20,0x05,0xfa,0xa5,0xa6,0x8f,0x1b,0x32,0xfd,0xdf,0xda,0x6a,0x64,0xc2,0x4b,0x69,0xb1,0x93,0x98,0x04,0xed};
    std::uint8_t sum1[32]    = {0x89,0x21,0x87,0x94,0x5c,0xeb,0x35,0xaa,0xa7,0x4b,0x2b,0x1f,0xd9,0x23,0xc5,0xaf,0x99,0xfc,0x92,0x66,0x42,0x00,0x88,0xaa,0xb9,0xa5,0x4e,0xb5,0x07,0xc6,0x4f,0x5f};
    mont256_from_bytes(&ctx, augend, augend1);
    mont256_from_bytes(&ctx, addend, addend1);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum1, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend2[32] = {0x94,0xaf,0xbe,0x6d,0x1a,0x9f,0x26,0xfc,0x29,0x5f,0x1c,0xe7,0x6e,0x13,0x17,0x79,0xdc,0xa4,0xf7,0x5a,0xd9,0x53,0x21,0xbb,0x37,0xe2,0x56,0xa4,0x07,0x95,0x78,0x1a};
    std::uint8_t addend2[32] = {0xac,0x67,0x36,0xff,0xef,0x7c,0x53,0xbd,0xd4,0xb0,0x98,0xe4,0xbb,0xd2,0xbd,0xf0,0xd5,0x0e,0x44,0x34,0x7d,0xcb,0x8f,0xde,0xab,0x73,0xf3,0x8e,0x4a,0xfb,0xc5,0x05};
    std::uint8_t sum2[32]    = {0x41,0x16,0xf5,0x6e,0x0a,0x1b,0x7a,0xb9,0xfe,0x0f,0xb5,0xcc,0x29,0xe5,0xd5,0x6b,0x3f,0xaf,0x5c,0x24,0x35,0x58,0xac,0x6e,0x8f,0x9a,0x56,0x29,0x18,0xbb,0xfb,0xfc};
    mont256_from_bytes(&ctx, augend, augend2);
    mont256_from_bytes(&ctx, addend, addend2);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum2, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend3[32] = {0x82,0xa8,0x22,0xd1,0x66,0x8d,0x29,0x6d,0x07,0x91,0xba,0x70,0x5c,0xef,0x07,0x05,0x55,0x05,0xe7,0xaf,0xe8,0xaf,0xf3,0xa6,0x8e,0x15,0xc5,0x8b,0x43,0x67,0x9c,0xe9};
    std::uint8_t addend3[32] = {0x4e,0x3c,0xdd,0x5d,0xb0,0x91,0x36,0xd6,0x0d,0x4b,0x2e,0x09,0x94,0x9c,0xf0,0x0d,0x59,0xe3,0xe7,0x15,0xd4,0xc3,0x05,0x80,0xb4,0x50,0x3e,0x4b,0xde,0x7d,0x6a,0xce};
    std::uint8_t sum3[32]    = {0xd0,0xe5,0x00,0x2f,0x17,0x1e,0x60,0x43,0x14,0xdc,0xe8,0x79,0xf1,0x8b,0xf7,0x12,0xae,0xe9,0xce,0xc5,0xbd,0x72,0xf9,0x27,0x42,0x66,0x03,0xd7,0x21,0xe5,0x07,0xb7};
    mont256_from_bytes(&ctx, augend, augend3);
    mont256_from_bytes(&ctx, addend, addend3);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum3, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend4[32] = {0x1a,0x4a,0xe4,0x41,0x07,0x2d,0x2e,0x6a,0xc7,0x19,0xf1,0x2c,0x1c,0x55,0xf3,0x12,0x0d,0x62,0xd9,0x97,0x3e,0x71,0x73,0xbf,0xdb,0xa0,0xe5,0x80,0xbf,0x16,0xb1,0xfc};
    std::uint8_t addend4[32] = {0xe9,0x5b,0x8a,0xbc,0x2e,0x68,0xe2,0x11,0x1b,0xe3,0x79,0x3f,0xf5,0xe2,0x12,0x3d,0xbb,0xf6,0xa8,0x5d,0x60,0xb7,0xa7,0xf9,0x7d,0xe7,0xcc,0x82,0xb5,0xd9,0x38,0x28};
    std::uint8_t sum4[32]    = {0x03,0xa6,0x6e,0xfe,0x35,0x96,0x10,0x7b,0xe2,0xfd,0x6a,0x6c,0x12,0x38,0x05,0x50,0x57,0x55,0xa2,0x89,0x7d,0x63,0x16,0x8e,0x05,0xcc,0xbd,0xfa,0x3b,0x1a,0xa9,0x01};
    mont256_from_bytes(&ctx, augend, augend4);
    mont256_from_bytes(&ctx, addend, addend4);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum4, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend5[32] = {0x4d,0x5c,0x2d,0xf5,0xe3,0x44,0xe3,0x40,0x1a,0x0f,0xf3,0x27,0x2c,0x6a,0xbf,0x10,0xcd,0x6e,0xa1,0xae,0xd9,0x02,0xc0,0xb9,0x30,0x2a,0xe1,0x7e,0x84,0x65,0xb1,0x18};
    std::uint8_t addend5[32] = {0x6c,0xad,0x79,0xf5,0xda,0x4a,0xe4,0xf6,0x75,0x0b,0x53,0x9a,0xe8,0x8a,0x94,0xb9,0xdf,0x61,0xf2,0x12,0x7c,0x0e,0x3c,0xd1,0x89,0x30,0xe1,0x6c,0xfb,0xa1,0x1d,0x82};
    std::uint8_t sum5[32]    = {0xba,0x09,0xa7,0xeb,0xbd,0x8f,0xc8,0x36,0x8f,0x1b,0x46,0xc2,0x14,0xf5,0x53,0xca,0xac,0xd0,0x93,0xc1,0x55,0x10,0xfd,0x8a,0xb9,0x5b,0xc2,0xeb,0x80,0x06,0xce,0x9a};
    mont256_from_bytes(&ctx, augend, augend5);
    mont256_from_bytes(&ctx, addend, addend5);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum5, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend6[32] = {0x39,0x46,0xc4,0xa0,0xf1,0xf5,0x78,0xe1,0x30,0x33,0x24,0x37,0x43,0x0b,0xef,0x00,0x52,0x42,0xc0,0xfe,0x6a,0xae,0xaa,0xb9,0xe8,0x3f,0x32,0x92,0xb0,0xbf,0x36,0xb6};
    std::uint8_t addend6[32] = {0xec,0x77,0x44,0x07,0x48,0x74,0x92,0xdb,0x2d,0x99,0xda,0xde,0x67,0x60,0xe5,0x4d,0x68,0xa9,0xac,0xe0,0xbe,0x13,0x05,0xee,0xeb,0x6f,0x4a,0x0c,0xc4,0xff,0x2a,0xdd};
    std::uint8_t sum6[32]    = {0x25,0xbe,0x08,0xa9,0x3a,0x6a,0x0b,0xbc,0x5d,0xcc,0xff,0x15,0xaa,0x6c,0xd4,0x4e,0x48,0xe8,0x8e,0x74,0x06,0xfb,0xab,0x7d,0x7f,0xf2,0x88,0x96,0x3b,0xe9,0x20,0x70};
    mont256_from_bytes(&ctx, augend, augend6);
    mont256_from_bytes(&ctx, addend, addend6);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum6, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend7[32] = {0x26,0xff,0x9a,0xd2,0x3c,0x89,0xa1,0x21,0x0f,0x65,0x02,0x04,0x31,0x42,0xc8,0x4a,0xcc,0x74,0x14,0x91,0xe5,0x14,0x70,0xda,0xa4,0x26,0x34,0xad,0x4d,0x63,0xe8,0x36};
    std::uint8_t addend7[32] = {0xac,0x7f,0x97,0x2f,0xe9,0x9a,0x1e,0x9a,0x5d,0x02,0x4b,0xfd,0xa7,0xa2,0x7f,0xaf,0xdc,0x72,0xf5,0x92,0xdc,0x8e,0xec,0xba,0x53,0xd4,0x29,0x5d,0xf3,0x98,0x2c,0x89};
    std::uint8_t sum7[32]    = {0xd3,0x7f,0x32,0x02,0x26,0x23,0xbf,0xbb,0x6c,0x67,0x4e,0x01,0xd8,0xe5,0x47,0xfa,0xa8,0xe7,0x0a,0x24,0xc1,0xa3,0x5d,0x94,0xf7,0xfa,0x5e,0x0b,0x40,0xfc,0x14,0xbf};
    mont256_from_bytes(&ctx, augend, augend7);
    mont256_from_bytes(&ctx, addend, addend7);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum7, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend8[32] = {0x64,0xe2,0xe7,0xf4,0x67,0xae,0x58,0x79,0x74,0x7d,0x10,0x5c,0xba,0x9d,0xf6,0x7d,0x2c,0x17,0x54,0xf6,0xb7,0xf3,0xf2,0x76,0x1d,0x13,0x99,0xed,0x53,0x56,0x9a,0x7e};
    std::uint8_t addend8[32] = {0x69,0xaf,0xd5,0xd6,0xa7,0x2e,0xe8,0x6e,0x58,0xda,0xe9,0x43,0xbc,0x76,0x98,0x93,0x67,0x68,0x3d,0xe9,0x65,0x8b,0xc8,0xee,0xb9,0x35,0x15,0xce,0x5a,0xb6,0x18,0x2c};
    std::uint8_t sum8[32]    = {0xce,0x92,0xbd,0xcb,0x0e,0xdd,0x40,0xe7,0xcd,0x57,0xf9,0xa0,0x77,0x14,0x8f,0x10,0x93,0x7f,0x92,0xe0,0x1d,0x7f,0xbb,0x64,0xd6,0x48,0xaf,0xbb,0xae,0x0c,0xb2,0xaa};
    mont256_from_bytes(&ctx, augend, augend8);
    mont256_from_bytes(&ctx, addend, addend8);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum8, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend9[32] = {0xce,0xa1,0x2f,0x0e,0x58,0xc4,0xc2,0xd0,0x2c,0x16,0x1a,0xea,0xa0,0x04,0x14,0xb3,0xb3,0xb2,0x88,0x0c,0xe8,0x7f,0xfe,0x3b,0x23,0xa4,0x31,0xfa,0x54,0xb4,0x5f,0xe0};
    std::uint8_t addend9[32] = {0xd1,0x9b,0x1a,0xd6,0xea,0xca,0xb0,0xc7,0xe4,0x75,0x1e,0xc8,0xf5,0x58,0x99,0x27,0x4c,0x98,0xbc,0x65,0x5b,0xe4,0xef,0xed,0x67,0x0a,0xe3,0x00,0x5e,0x87,0xa2,0x0f};
    std::uint8_t sum9[32]    = {0xa0,0x3c,0x49,0xe6,0x43,0x8f,0x73,0x98,0x10,0x8b,0x39,0xb3,0x95,0x5c,0xad,0xdb,0x8e,0x47,0x65,0x07,0x22,0x9e,0xe8,0xfd,0x36,0xf3,0x20,0xf1,0x79,0x66,0xc0,0xcc};
    mont256_from_bytes(&ctx, augend, augend9);
    mont256_from_bytes(&ctx, addend, addend9);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum9, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend10[32] = {0x44,0xf7,0x2c,0xfe,0x56,0x00,0x48,0x36,0x2d,0x57,0x4b,0xd5,0xcb,0x80,0x3b,0xe3,0x93,0x2c,0xd5,0x08,0x8c,0x0c,0xc3,0x97,0x79,0xc8,0xc2,0xae,0x7f,0xa6,0x0b,0xd1};
    std::uint8_t addend10[32] = {0x59,0x26,0x2e,0xc3,0xbd,0x43,0xa0,0x91,0x55,0x36,0xe1,0x4c,0xe8,0x1a,0xf5,0x8d,0x8e,0x6c,0x2e,0xb3,0x2f,0x5d,0xbc,0xe1,0xc1,0x1c,0x79,0xc7,0x2f,0x0b,0x5b,0x05};
    std::uint8_t sum10[32]    = {0x9e,0x1d,0x5b,0xc2,0x13,0x43,0xe8,0xc7,0x82,0x8e,0x2d,0x22,0xb3,0x9b,0x31,0x71,0x21,0x99,0x03,0xbb,0xbb,0x6a,0x80,0x79,0x3a,0xe5,0x3c,0x75,0xae,0xb1,0x66,0xd6};
    mont256_from_bytes(&ctx, augend, augend10);
    mont256_from_bytes(&ctx, addend, addend10);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum10, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend11[32] = {0xe7,0x17,0x0a,0x02,0x34,0x69,0x96,0xf6,0xcb,0x78,0xcf,0xb9,0x61,0xbe,0xfd,0xb4,0x9c,0x9d,0x4b,0x32,0xe2,0x9c,0xa1,0x79,0x11,0xe6,0xe8,0xb0,0x99,0x31,0x4e,0xd4};
    std::uint8_t addend11[32] = {0x22,0xd8,0xb7,0x91,0x44,0x96,0xd9,0x54,0x86,0x89,0x0f,0xe0,0x21,0xbd,0xcf,0x1e,0x7c,0x0c,0x21,0x82,0x52,0x48,0x5e,0x3c,0x21,0xcc,0x87,0x29,0x89,0x41,0xa6,0x72};
    std::uint8_t sum11[32]    = {0x09,0xef,0xc1,0x94,0x79,0x00,0x70,0x4b,0x52,0x01,0xdf,0x99,0x83,0x7c,0xcc,0xd3,0xa6,0xa5,0x8d,0x4a,0x13,0x1e,0xfa,0x89,0xdf,0xf7,0x7b,0xd0,0xe8,0x9d,0xb4,0x23};
    mont256_from_bytes(&ctx, augend, augend11);
    mont256_from_bytes(&ctx, addend, addend11);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum11, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend12[32] = {0xbd,0x4d,0xc4,0x2e,0x26,0x0e,0xf4,0xc0,0x2d,0x6b,0x23,0x05,0x55,0xce,0xa5,0xbf,0x4f,0x82,0x4b,0x92,0x04,0x8d,0x92,0x97,0xd7,0x1f,0x8b,0x68,0x30,0x6d,0x17,0xa2};
    std::uint8_t addend12[32] = {0xa5,0x67,0x44,0x9e,0x95,0xba,0x6b,0x57,0x82,0x44,0xfe,0x24,0xaf,0x9d,0xfe,0xfa,0x49,0xe6,0x3d,0xfe,0xcd,0x27,0x1a,0x64,0xb9,0xe8,0x84,0xa0,0xaf,0x6e,0xa0,0xae};
    std::uint8_t sum12[32]    = {0x62,0xb5,0x08,0xcd,0xbb,0xc9,0x60,0x17,0xaf,0xb0,0x21,0x2a,0x05,0x6c,0xa4,0xba,0x27,0x64,0xaa,0x25,0xaf,0xee,0xa7,0xd1,0x3d,0x4c,0x1b,0xff,0xa6,0x06,0x77,0x2d};
    mont256_from_bytes(&ctx, augend, augend12);
    mont256_from_bytes(&ctx, addend, addend12);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum12, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend13[32] = {0x04,0x6a,0x96,0x89,0x8e,0x7f,0x17,0x9e,0x0e,0xef,0x87,0x7a,0x3d,0x84,0x3b,0xbe,0x3b,0xd6,0x9b,0x2c,0xc4,0x60,0x36,0x87,0xc5,0xbe,0xe6,0xe7,0x90,0x1b,0x54,0xf7};
    std::uint8_t addend13[32] = {0x7e,0x35,0xee,0x05,0xac,0x02,0x8d,0x1b,0x84,0x9e,0x1f,0xc0,0x4f,0x4b,0x8b,0x4d,0xc1,0xbf,0xf9,0x82,0xd8,0x30,0xaf,0xf7,0xef,0xbb,0x5a,0x56,0x64,0x5b,0xbe,0x41};
    std::uint8_t sum13[32]    = {0x82,0xa0,0x84,0x8f,0x3a,0x81,0xa4,0xb9,0x93,0x8d,0xa7,0x3a,0x8c,0xcf,0xc7,0x0b,0xfd,0x96,0x94,0xaf,0x9c,0x90,0xe6,0x7f,0xb5,0x7a,0x41,0x3d,0xf4,0x77,0x13,0x38};
    mont256_from_bytes(&ctx, augend, augend13);
    mont256_from_bytes(&ctx, addend, addend13);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum13, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend14[32] = {0xc7,0x2a,0xb3,0x3f,0xcd,0x03,0x54,0x3c,0x15,0x58,0x75,0xc4,0x56,0xa3,0x6c,0xd6,0x66,0xc1,0xdc,0xcb,0x6a,0x0d,0xe8,0x80,0x5e,0xdc,0x52,0xa5,0x99,0xe2,0xaf,0x40};
    std::uint8_t addend14[32] = {0x40,0xef,0x7e,0x31,0x25,0x5e,0xdc,0x10,0x6c,0xcb,0xf9,0x91,0x8a,0x29,0xa1,0x9a,0x1e,0xe6,0xe6,0xbb,0xa3,0x6c,0x10,0x59,0xca,0x20,0x22,0xae,0xd4,0x8b,0x5a,0x14};
    std::uint8_t sum14[32]    = {0x08,0x1a,0x31,0x71,0xf2,0x62,0x30,0x4c,0x82,0x24,0x6f,0x55,0xe0,0xcd,0x0e,0x71,0x13,0xa4,0xe4,0x1b,0xeb,0xb3,0xf3,0xae,0xd5,0x40,0x81,0x4b,0x34,0x98,0xc8,0x31};
    mont256_from_bytes(&ctx, augend, augend14);
    mont256_from_bytes(&ctx, addend, addend14);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum14, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend15[32] = {0x7a,0xd1,0x71,0xa5,0xd2,0xec,0x39,0xf8,0x72,0x7f,0x86,0xa1,0x57,0xaa,0xde,0x95,0xcc,0x8e,0x64,0x53,0x29,0xd5,0x39,0x65,0x2c,0xb9,0xdc,0x3d,0x18,0xad,0xc5,0x4f};
    std::uint8_t addend15[32] = {0x81,0x0d,0x6d,0xe6,0x6a,0x7f,0x0c,0xfb,0x69,0x62,0xff,0xd7,0x9e,0xd5,0x45,0x91,0xd9,0x58,0xd7,0x9d,0xf1,0x7a,0x94,0x49,0x90,0x8c,0x66,0x29,0xc6,0x7c,0xac,0x88};
    std::uint8_t sum15[32]    = {0xfb,0xde,0xdf,0x8c,0x3d,0x6b,0x46,0xf3,0xdb,0xe2,0x86,0x78,0xf6,0x80,0x24,0x27,0xa5,0xe7,0x3b,0xf1,0x1b,0x4f,0xcd,0xae,0xbd,0x46,0x42,0x66,0xdf,0x2a,0x71,0xd7};
    mont256_from_bytes(&ctx, augend, augend15);
    mont256_from_bytes(&ctx, addend, addend15);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum15, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend16[32] = {0x4c,0x54,0x19,0x46,0x0f,0xcb,0xe5,0x0f,0x13,0xf6,0x86,0x55,0xfb,0xbf,0x39,0x9b,0x4b,0xee,0xda,0xd3,0x96,0xb8,0xe3,0xd0,0x4d,0xa5,0x3a,0xa6,0x6c,0x50,0x63,0x2f};
    std::uint8_t addend16[32] = {0x31,0xa2,0xdc,0xc6,0xe9,0xf5,0x36,0x47,0xe7,0xff,0x40,0xa7,0xa8,0xc4,0xcd,0x0d,0x26,0x4b,0xea,0x51,0xb3,0x6e,0x45,0x3e,0xc3,0x63,0xe2,0x1c,0x55,0x52,0x86,0x4e};
    std::uint8_t sum16[32]    = {0x7d,0xf6,0xf6,0x0c,0xf9,0xc1,0x1b,0x56,0xfb,0xf5,0xc6,0xfd,0xa4,0x84,0x06,0xa8,0x72,0x3a,0xc5,0x25,0x4a,0x27,0x29,0x0f,0x11,0x09,0x1c,0xc2,0xc1,0xa2,0xe9,0x7d};
    mont256_from_bytes(&ctx, augend, augend16);
    mont256_from_bytes(&ctx, addend, addend16);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum16, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend17[32] = {0xd8,0x32,0x8a,0xa7,0x33,0xa2,0x5a,0xc9,0x54,0x9f,0xcf,0x5f,0x67,0x07,0x95,0xaf,0x95,0x7f,0xc6,0x76,0x8c,0x51,0x8b,0xa4,0xff,0x2b,0x5c,0x66,0x46,0x0d,0x42,0x3a};
    std::uint8_t addend17[32] = {0xf9,0xf1,0x6b,0xa1,0x97,0x21,0xfd,0x9f,0x14,0x79,0x7f,0x5b,0x41,0xc1,0x76,0x22,0x8b,0x1e,0xf7,0x5e,0x8b,0xf2,0x83,0x05,0xbe,0xf3,0x91,0x4b,0x2a,0xfc,0x61,0xf0};
    std::uint8_t sum17[32]    = {0xd2,0x23,0xf6,0x49,0xca,0xc4,0x58,0x68,0x69,0x19,0x4e,0xba,0xa8,0xc9,0x0b,0xd2,0xae,0x9a,0xde,0x69,0xf6,0x7e,0x09,0x7f,0x6a,0x62,0xf9,0xa8,0x37,0x34,0x63,0x07};
    mont256_from_bytes(&ctx, augend, augend17);
    mont256_from_bytes(&ctx, addend, addend17);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum17, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend18[32] = {0x8c,0x82,0x02,0xfb,0x79,0x43,0x20,0x83,0xd3,0xa0,0xd2,0x0a,0x21,0xc4,0x51,0x99,0x83,0xcb,0x90,0x88,0xbe,0x7a,0x84,0xb1,0x38,0x43,0x54,0x59,0x7c,0x65,0xfe,0x40};
    std::uint8_t addend18[32] = {0x41,0xde,0x8c,0x20,0x1e,0xfc,0xd9,0x20,0x83,0xa9,0x88,0x55,0xd0,0xd4,0xdb,0x48,0xc3,0x03,0xcd,0x44,0x9c,0x24,0x6f,0x61,0xb2,0xb7,0xd3,0x83,0x4a,0x80,0x24,0x5c};
    std::uint8_t sum18[32]    = {0xce,0x60,0x8f,0x1b,0x98,0x3f,0xf9,0xa4,0x57,0x4a,0x5a,0x5f,0xf2,0x99,0x2c,0xe2,0x46,0xcf,0x5d,0xcd,0x5a,0x9e,0xf4,0x12,0xea,0xfb,0x27,0xdc,0xc6,0xe6,0x22,0x9c};
    mont256_from_bytes(&ctx, augend, augend18);
    mont256_from_bytes(&ctx, addend, addend18);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum18, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend19[32] = {0x8d,0x0d,0xe8,0x82,0x78,0x21,0x7d,0x24,0x52,0x4c,0x12,0xcd,0x37,0x8f,0x1f,0x11,0x5d,0x40,0x36,0x01,0xbe,0xa6,0x64,0xdf,0x65,0x8a,0xaf,0x80,0x1b,0x2d,0x2c,0x91};
    std::uint8_t addend19[32] = {0x28,0xad,0x24,0xd6,0x7d,0x0e,0x78,0x40,0x0e,0x28,0x13,0xf7,0x22,0xab,0x2f,0xa9,0x49,0x20,0x54,0x4c,0x7c,0x7f,0x7a,0x17,0xb9,0x2b,0xb8,0xa8,0x91,0xa4,0x00,0xdd};
    std::uint8_t sum19[32]    = {0xb5,0xbb,0x0d,0x58,0xf5,0x2f,0xf5,0x64,0x60,0x74,0x26,0xc4,0x5a,0x3a,0x4e,0xba,0xa6,0x60,0x8a,0x4e,0x3b,0x25,0xde,0xf7,0x1e,0xb6,0x68,0x28,0xac,0xd1,0x2d,0x6e};
    mont256_from_bytes(&ctx, augend, augend19);
    mont256_from_bytes(&ctx, addend, addend19);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum19, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend20[32] = {0x4e,0x5c,0x37,0x73,0x76,0x9f,0x9a,0x82,0x5b,0x10,0x4e,0x12,0xe4,0x0d,0x0b,0xf1,0x98,0x33,0x9d,0xe4,0x6a,0x92,0x2a,0x73,0x8a,0x6f,0x12,0x5d,0x4f,0x52,0x08,0x76};
    std::uint8_t addend20[32] = {0xc4,0xa4,0xe3,0x4e,0xf6,0x2a,0x72,0x9d,0x99,0xa6,0x10,0x79,0x02,0xf9,0xde,0xd8,0xf7,0x2f,0xc9,0xd2,0xc2,0x7a,0x2a,0x01,0x34,0x76,0x8d,0x00,0xd4,0xa6,0xcc,0x9a};
    std::uint8_t sum20[32]    = {0x13,0x01,0x1a,0xc3,0x6c,0xca,0x0d,0x1f,0xf4,0xb6,0x5e,0x8b,0xe7,0x06,0xea,0xcb,0x1d,0x5f,0x88,0x4c,0x0b,0x46,0x4f,0x49,0x6b,0x29,0xab,0x54,0xea,0x23,0x93,0xed};
    mont256_from_bytes(&ctx, augend, augend20);
    mont256_from_bytes(&ctx, addend, addend20);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum20, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend21[32] = {0xe1,0x45,0xcb,0x66,0xe6,0x30,0x65,0x2f,0x80,0x79,0x5c,0x79,0x0d,0x27,0xb5,0x15,0x1e,0x16,0xca,0x68,0x70,0xec,0xa7,0x3d,0x0e,0xc1,0x42,0x82,0x3f,0xdf,0xe1,0xcd};
    std::uint8_t addend21[32] = {0x98,0xe3,0x3a,0xac,0xb4,0x3c,0x5b,0x7f,0x36,0x24,0x56,0xe5,0x41,0xd1,0x49,0x98,0xb8,0xb8,0xd8,0xcf,0x5c,0xd6,0x6a,0x51,0x02,0x19,0x5b,0xcc,0xbe,0xa9,0x00,0x00};
    std::uint8_t sum21[32]    = {0x7a,0x29,0x06,0x14,0x9a,0x6c,0xc0,0xae,0xb6,0x9d,0xb3,0x5e,0x4e,0xf8,0xfe,0xae,0x64,0xcb,0xc3,0xcc,0xab,0xfd,0x0c,0x62,0xbd,0x1e,0xaa,0x45,0xc4,0xb3,0xa0,0xaa};
    mont256_from_bytes(&ctx, augend, augend21);
    mont256_from_bytes(&ctx, addend, addend21);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum21, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend22[32] = {0x65,0x6e,0x4b,0x9f,0xcb,0x30,0xe8,0x7b,0x81,0x03,0x47,0x89,0xe1,0x8f,0x7c,0x2e,0x08,0xe9,0xeb,0x4f,0x9f,0x44,0x33,0x40,0x3a,0xe5,0x61,0x4f,0xb2,0xf0,0xaf,0xbf};
    std::uint8_t addend22[32] = {0xf8,0x45,0x8e,0xfb,0xc2,0x98,0x9e,0x17,0x06,0xbd,0x70,0x08,0x55,0xf3,0x6b,0xe7,0x8d,0xf5,0x63,0x0f,0xae,0xf1,0x36,0x66,0x8c,0x53,0x2a,0xb3,0xaf,0x2b,0xf8,0xc8};
    std::uint8_t sum22[32]    = {0x5d,0xb3,0xda,0x9c,0x8d,0xc9,0x86,0x92,0x87,0xc0,0xb7,0x92,0x37,0x82,0xe8,0x16,0x24,0xdb,0x6e,0xf4,0x2c,0x6f,0x64,0x7b,0x73,0x7c,0x97,0xfa,0x28,0x47,0x67,0x64};
    mont256_from_bytes(&ctx, augend, augend22);
    mont256_from_bytes(&ctx, addend, addend22);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum22, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend23[32] = {0x46,0xe5,0x23,0x93,0x98,0x52,0xc7,0xfc,0xb6,0xdc,0xf3,0x59,0xb0,0x0b,0x84,0xf7,0x4c,0xd2,0x8e,0x51,0x40,0x04,0x2d,0x64,0x0c,0xf0,0xe1,0x64,0x05,0x64,0xe4,0x58};
    std::uint8_t addend23[32] = {0xba,0x67,0xc5,0xa6,0xcd,0x43,0x89,0xce,0x5b,0x38,0xdf,0x18,0xd6,0xf6,0x90,0xb7,0x22,0x12,0xdb,0x68,0x62,0x8e,0xb8,0x8b,0x05,0xac,0x2e,0x87,0x3e,0x36,0x5e,0xba};
    std::uint8_t sum23[32]    = {0x01,0x4c,0xe9,0x3b,0x65,0x96,0x51,0xcb,0x12,0x15,0xd2,0x72,0x87,0x02,0x15,0xae,0xfc,0xe1,0x8a,0x4e,0x80,0xcc,0xe0,0xc3,0xbe,0xe1,0x1b,0xe2,0x09,0xc6,0x01,0xef};
    mont256_from_bytes(&ctx, augend, augend23);
    mont256_from_bytes(&ctx, addend, addend23);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum23, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend24[32] = {0xbb,0xda,0xb2,0xa0,0x18,0x9f,0xcf,0x02,0xe5,0xf6,0x0d,0xe0,0xe8,0xfb,0x1f,0xcf,0x17,0x0a,0x6e,0x85,0x6d,0xa8,0x7f,0xe5,0x97,0x3b,0x35,0x4b,0xc3,0x1c,0x82,0x97};
    std::uint8_t addend24[32] = {0x2d,0x5f,0x87,0xc1,0x5e,0xa7,0x32,0x81,0xca,0x22,0x58,0xb5,0x61,0xf8,0xb6,0xf1,0x5e,0xf8,0x41,0xb0,0x60,0xe0,0xe5,0xa9,0x62,0x77,0xac,0x36,0xd6,0x8d,0x20,0xd9};
    std::uint8_t sum24[32]    = {0xe9,0x3a,0x3a,0x61,0x77,0x47,0x01,0x84,0xb0,0x18,0x66,0x96,0x4a,0xf3,0xd6,0xc0,0x76,0x02,0xb0,0x35,0xce,0x89,0x65,0x8e,0xf9,0xb2,0xe1,0x82,0x99,0xa9,0xa3,0x70};
    mont256_from_bytes(&ctx, augend, augend24);
    mont256_from_bytes(&ctx, addend, addend24);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum24, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend25[32] = {0xd9,0xa6,0xe0,0x5e,0xc3,0x06,0x09,0xe4,0xf0,0x39,0xcb,0x57,0x6b,0x5f,0x41,0xb3,0x05,0xd7,0x80,0xfa,0xc1,0x52,0xee,0x78,0x72,0x9d,0x2c,0x50,0xb3,0xf1,0x98,0x2a};
    std::uint8_t addend25[32] = {0x7b,0x84,0xbb,0xf7,0xb0,0x6d,0xe2,0xc4,0xcc,0x74,0xbf,0x56,0xd7,0x6c,0x0e,0x6c,0x86,0xf9,0xe4,0x81,0xfe,0xc7,0xec,0x35,0x3c,0xa9,0x84,0x64,0x38,0xeb,0xe9,0x9b};
    std::uint8_t sum25[32]    = {0x55,0x2b,0x9c,0x57,0x73,0x73,0xec,0xa9,0xbc,0xae,0x8a,0xae,0x42,0xcb,0x50,0x20,0x1a,0xcd,0x86,0x11,0x9e,0x54,0xd5,0x82,0x5b,0x8a,0xbc,0xab,0xb3,0x08,0x40,0xa2};
    mont256_from_bytes(&ctx, augend, augend25);
    mont256_from_bytes(&ctx, addend, addend25);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum25, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend26[32] = {0xf7,0x0a,0x83,0x0f,0xe7,0x45,0xde,0x9c,0xca,0xe0,0xc4,0xf2,0x94,0x02,0x3e,0xc2,0xe0,0x2f,0xe4,0xd4,0x25,0xf5,0xbc,0xed,0x69,0x55,0xb9,0xc0,0xc9,0x5b,0x6a,0xda};
    std::uint8_t addend26[32] = {0xc1,0x38,0x28,0x63,0xf4,0xa3,0x4e,0xd6,0x9f,0x2f,0x9e,0x13,0x8a,0xd2,0x3f,0x0a,0x9d,0x4f,0x4f,0x75,0x5b,0x86,0xaf,0x54,0xb9,0xef,0x66,0x37,0xb7,0xd1,0xa1,0x7d};
    std::uint8_t sum26[32]    = {0xb8,0x42,0xab,0x74,0xdb,0xe9,0x2d,0x73,0x6a,0x10,0x63,0x06,0x1e,0xd4,0x7d,0xce,0x0b,0x7b,0x54,0xde,0x5f,0xb6,0x67,0x16,0xcf,0x89,0x2b,0xef,0x47,0x57,0xcb,0x34};
    mont256_from_bytes(&ctx, augend, augend26);
    mont256_from_bytes(&ctx, addend, addend26);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum26, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend27[32] = {0xc9,0x04,0x6c,0x72,0x8c,0x34,0x71,0xe3,0xbb,0xfb,0x89,0x68,0x18,0xc1,0xae,0xa5,0x32,0x04,0xdf,0xd6,0x9d,0x60,0x27,0x10,0x4f,0x40,0xcd,0x3f,0x63,0x25,0xd7,0x7f};
    std::uint8_t addend27[32] = {0x7e,0x48,0xcf,0xe6,0xcf,0xef,0xdb,0x37,0xf1,0xe1,0x59,0x2c,0x9f,0x13,0x4d,0x40,0xa5,0xc2,0x94,0x25,0xee,0x78,0x0a,0xbd,0xd3,0xe5,0x5a,0xfa,0x13,0x1b,0xc4,0xfc};
    std::uint8_t sum27[32]    = {0x47,0x4d,0x3c,0x5a,0x5c,0x24,0x4d,0x1b,0xad,0xdc,0xe2,0x94,0xb7,0xd4,0xfb,0xe6,0x65,0xc3,0x94,0x91,0x6a,0x12,0x2c,0xa2,0xcf,0x6a,0x34,0x30,0x3c,0x6c,0x5b,0x58};
    mont256_from_bytes(&ctx, augend, augend27);
    mont256_from_bytes(&ctx, addend, addend27);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum27, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend28[32] = {0xc4,0xe7,0x49,0x41,0x9e,0xd0,0xe6,0xa2,0x80,0xdc,0x28,0x4f,0xa6,0xc5,0x98,0x21,0xc1,0x5f,0x18,0x22,0xa9,0x14,0xc6,0x22,0x42,0x4f,0xde,0x4c,0x48,0xf4,0x99,0xcd};
    std::uint8_t addend28[32] = {0x4c,0xa9,0xea,0x93,0x6e,0x53,0x9b,0x16,0x37,0x25,0xa0,0x80,0x40,0xcf,0x54,0xcb,0xa2,0xb0,0xd1,0x32,0x23,0xd6,0xb2,0x2c,0x02,0xef,0xe9,0x40,0x7a,0xac,0x23,0x17};
    std::uint8_t sum28[32]    = {0x11,0x91,0x33,0xd6,0x0d,0x24,0x81,0xb8,0xb8,0x01,0xc8,0xcf,0xe7,0x94,0xec,0xed,0xf2,0x0c,0x09,0xe9,0xab,0x25,0x73,0x22,0xf1,0x83,0xd3,0x83,0x89,0xcb,0x7b,0xc1};
    mont256_from_bytes(&ctx, augend, augend28);
    mont256_from_bytes(&ctx, addend, addend28);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum28, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend29[32] = {0x77,0x1c,0x18,0x6f,0x11,0x2b,0xd6,0xe0,0x82,0x8c,0x83,0xcc,0x87,0xa9,0x0a,0x94,0x34,0x93,0x13,0x9b,0xe4,0xd4,0x0a,0xcf,0x99,0x5d,0xd2,0xd1,0x17,0xef,0x3c,0x1e};
    std::uint8_t addend29[32] = {0x44,0xcf,0x46,0x6f,0xb8,0x68,0xa2,0xd0,0x42,0xa4,0x97,0x08,0x24,0xd2,0xae,0x26,0x8f,0x04,0xdf,0xb6,0x6d,0x7c,0x5b,0x02,0x66,0x85,0x87,0xb3,0xbf,0x28,0x8f,0x85};
    std::uint8_t sum29[32]    = {0xbb,0xeb,0x5e,0xde,0xc9,0x94,0x79,0xb0,0xc5,0x31,0x1a,0xd4,0xac,0x7b,0xb8,0xba,0xc3,0x97,0xf3,0x52,0x52,0x50,0x65,0xd1,0xff,0xe3,0x5a,0x84,0xd7,0x17,0xcb,0xa3};
    mont256_from_bytes(&ctx, augend, augend29);
    mont256_from_bytes(&ctx, addend, addend29);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum29, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend30[32] = {0x1c,0x24,0xfe,0x25,0xec,0x99,0x8c,0xef,0x60,0xf1,0xf8,0x5c,0xbc,0x6f,0xcd,0xd1,0x52,0x0b,0x70,0x08,0x87,0xdc,0x67,0x0b,0xde,0x2e,0xcf,0x60,0xf6,0x99,0xe8,0x14};
    std::uint8_t addend30[32] = {0x29,0xf9,0xdf,0xd7,0x13,0x89,0x59,0x3f,0x01,0x66,0xed,0x05,0x03,0x56,0x83,0x6a,0xd0,0xbe,0x3f,0xab,0x8a,0x3e,0x1b,0x1d,0x4d,0xbd,0x8c,0x88,0x5e,0xdd,0x8f,0xbc};
    std::uint8_t sum30[32]    = {0x46,0x1e,0xdd,0xfd,0x00,0x22,0xe6,0x2e,0x62,0x58,0xe5,0x61,0xbf,0xc6,0x51,0x3c,0x22,0xc9,0xaf,0xb4,0x12,0x1a,0x82,0x29,0x2b,0xec,0x5b,0xe9,0x55,0x77,0x77,0xd0};
    mont256_from_bytes(&ctx, augend, augend30);
    mont256_from_bytes(&ctx, addend, addend30);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum30, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend31[32] = {0x87,0x4b,0x9d,0xc2,0x68,0xfb,0x32,0xe7,0x17,0x35,0x91,0xc1,0xd7,0x4e,0xd4,0x47,0x64,0x95,0xeb,0x60,0x46,0xae,0xaf,0x72,0xa5,0x04,0xa0,0x76,0x4f,0x1f,0x7c,0x44};
    std::uint8_t addend31[32] = {0x5c,0x2e,0x98,0x53,0x55,0x66,0xd3,0x88,0x53,0xda,0xe9,0x8f,0x8d,0xe8,0x0f,0x8b,0x0b,0x5a,0x85,0x37,0x87,0xb7,0xf6,0xb5,0x37,0x1c,0xfb,0x99,0x11,0x82,0xd9,0x43};
    std::uint8_t sum31[32]    = {0xe3,0x7a,0x36,0x15,0xbe,0x62,0x06,0x6f,0x6b,0x10,0x7b,0x51,0x65,0x36,0xe3,0xd2,0x6f,0xf0,0x70,0x97,0xce,0x66,0xa6,0x27,0xdc,0x21,0x9c,0x0f,0x60,0xa2,0x55,0x87};
    mont256_from_bytes(&ctx, augend, augend31);
    mont256_from_bytes(&ctx, addend, addend31);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum31, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend32[32] = {0x8d,0xb4,0x89,0xa3,0xe1,0x56,0xde,0xc0,0x94,0xbd,0x8b,0x4b,0xa1,0x5e,0xa2,0x75,0x6a,0x66,0x1a,0xb0,0x38,0x0f,0xb6,0xf4,0x49,0x7c,0x13,0x9e,0x32,0x56,0x66,0x72};
    std::uint8_t addend32[32] = {0xf3,0x62,0x4b,0x38,0x5a,0x16,0x2a,0x1e,0x20,0x01,0x2e,0xfb,0xda,0x75,0xa6,0x39,0xba,0x4e,0x7f,0x43,0x78,0x68,0x20,0xfe,0x9d,0x92,0x13,0xec,0xd3,0x79,0x51,0xae};
    std::uint8_t sum32[32]    = {0x81,0x16,0xd4,0xdd,0x3b,0x6d,0x08,0xde,0xb4,0xbe,0xba,0x47,0x7b,0xd4,0x48,0xaf,0xb2,0xb0,0xba,0x88,0x8e,0xb1,0xd2,0xc7,0x93,0x52,0x33,0x81,0xcb,0xfa,0x76,0xfd};
    mont256_from_bytes(&ctx, augend, augend32);
    mont256_from_bytes(&ctx, addend, addend32);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum32, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend33[32] = {0x9f,0xec,0x87,0x84,0x81,0xe2,0xde,0x1c,0xb2,0xe2,0x08,0x54,0x1c,0x5e,0x25,0xba,0x63,0x3d,0xb7,0x79,0x17,0x3e,0x89,0x0d,0x2d,0x1c,0xd4,0x7c,0xa6,0x18,0xad,0x52};
    std::uint8_t addend33[32] = {0x95,0xb2,0xdc,0x86,0x99,0x26,0x8e,0x84,0x62,0x6d,0x3a,0x05,0xaf,0x11,0xad,0xf5,0x14,0xcb,0xac,0x4e,0x8a,0x87,0xe7,0xcc,0xed,0x68,0x76,0x14,0x97,0x6d,0x12,0x95};
    std::uint8_t sum33[32]    = {0x35,0x9f,0x64,0x0c,0x1b,0x09,0x6c,0xa1,0x15,0x4f,0x42,0x59,0xcb,0x6f,0xd3,0xb0,0x06,0x05,0x84,0x5c,0x80,0x00,0x6b,0xae,0xc6,0xc9,0x56,0x88,0x03,0xb0,0x7e,0xc4};
    mont256_from_bytes(&ctx, augend, augend33);
    mont256_from_bytes(&ctx, addend, addend33);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum33, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend34[32] = {0xcf,0xf5,0x19,0x7c,0xf7,0xdb,0x17,0x56,0x9f,0xdd,0xb6,0x9e,0xde,0x5d,0xdb,0x16,0x7a,0x2c,0x76,0xf3,0x6f,0x24,0x7a,0x77,0x1b,0xf1,0xb0,0x0a,0x61,0x41,0x32,0x02};
    std::uint8_t addend34[32] = {0x85,0xcb,0x81,0x95,0x41,0x1e,0x77,0xb3,0xc1,0x7b,0xaf,0x7e,0x09,0xe9,0xed,0x3b,0x02,0x0f,0x6e,0xa2,0xb5,0x81,0x4a,0x1b,0x0f,0x35,0xa2,0x7a,0xf0,0xcf,0x12,0xec};
    std::uint8_t sum34[32]    = {0x55,0xc0,0x9b,0x13,0x38,0xf9,0x8f,0x0a,0x61,0x59,0x66,0x1c,0xe8,0x47,0xc8,0x52,0x0a,0x38,0x06,0x2b,0x02,0xdf,0xbf,0x66,0xd7,0x6b,0x5e,0x7c,0x18,0x3b,0x03,0xcb};
    mont256_from_bytes(&ctx, augend, augend34);
    mont256_from_bytes(&ctx, addend, addend34);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum34, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend35[32] = {0x26,0x27,0xfb,0xa8,0x23,0xfa,0xa8,0xd9,0xce,0x9b,0xd5,0x16,0xb0,0xb6,0x7e,0x5e,0x3a,0x74,0x4d,0xab,0xbf,0x55,0xb1,0x3d,0x08,0x9d,0xf8,0x13,0xf0,0x58,0x33,0x76};
    std::uint8_t addend35[32] = {0x61,0xa3,0x14,0x42,0xc3,0xee,0x50,0x95,0x65,0xc7,0x2d,0xd8,0x9c,0x15,0x9e,0x96,0xdc,0x3a,0x65,0x0c,0x50,0x46,0x07,0x5c,0xd8,0x90,0xb3,0xb5,0x49,0xc2,0xb5,0xb9};
    std::uint8_t sum35[32]    = {0x87,0xcb,0x0f,0xea,0xe7,0xe8,0xf9,0x6f,0x34,0x63,0x02,0xef,0x4c,0xcc,0x1c,0xf5,0x16,0xae,0xb2,0xb8,0x0f,0x9b,0xb8,0x99,0xe1,0x2e,0xab,0xc9,0x3a,0x1a,0xe9,0x2f};
    mont256_from_bytes(&ctx, augend, augend35);
    mont256_from_bytes(&ctx, addend, addend35);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum35, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend36[32] = {0x4c,0xd3,0x00,0x5f,0x0e,0xbe,0xa4,0x5c,0x3e,0xb5,0xa1,0xf1,0x7e,0x93,0x58,0xd9,0x49,0x90,0x58,0x61,0x1a,0x87,0x17,0x9b,0xd9,0x48,0x24,0x42,0x36,0x13,0x4b,0x08};
    std::uint8_t addend36[32] = {0x0c,0x00,0x1f,0x8a,0x69,0xd1,0x58,0x18,0x6d,0x6e,0x3b,0x3f,0x2a,0xb4,0x9b,0xaf,0xff,0xf0,0xc2,0x15,0x87,0xb5,0xfc,0xde,0x7f,0x68,0x88,0x15,0x10,0x14,0xba,0x8b};
    std::uint8_t sum36[32]    = {0x58,0xd3,0x1f,0xe9,0x78,0x8f,0xfc,0x74,0xac,0x23,0xdd,0x30,0xa9,0x47,0xf4,0x89,0x49,0x81,0x1a,0x76,0xa2,0x3d,0x14,0x7a,0x58,0xb0,0xac,0x57,0x46,0x28,0x05,0x93};
    mont256_from_bytes(&ctx, augend, augend36);
    mont256_from_bytes(&ctx, addend, addend36);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum36, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend37[32] = {0x16,0x55,0x1d,0x67,0x5f,0xd9,0xc3,0xdd,0x67,0x73,0x6e,0xb2,0xd1,0xc6,0x74,0x49,0x6a,0x15,0xcf,0x28,0x78,0x8c,0xfb,0xcc,0xda,0xe5,0xbc,0xa7,0x95,0x04,0x3d,0xca};
    std::uint8_t addend37[32] = {0xee,0xa6,0x95,0x34,0xf0,0x3d,0x18,0xb6,0x8a,0xeb,0x08,0xe8,0xc2,0x14,0xe2,0x17,0xf8,0xfc,0xbe,0xc7,0xcd,0x5a,0xed,0x6e,0xaf,0x65,0xc3,0x65,0x76,0x0e,0x8b,0x2f};
    std::uint8_t sum37[32]    = {0x04,0xfb,0xb2,0x9d,0x50,0x16,0xdc,0x93,0xf2,0x5e,0x77,0x9b,0x93,0xdb,0x56,0x61,0xf1,0x0e,0xae,0x85,0x24,0x21,0xe4,0x10,0x36,0x8f,0x8c,0x03,0xd1,0x3d,0x87,0xd6};
    mont256_from_bytes(&ctx, augend, augend37);
    mont256_from_bytes(&ctx, addend, addend37);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum37, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend38[32] = {0xe9,0x59,0x2b,0x58,0x45,0xa4,0x56,0xa5,0x08,0x58,0x9f,0x98,0x93,0xd5,0x16,0x11,0xbd,0xb0,0xab,0xe2,0x5a,0x63,0xa6,0xc6,0xd9,0x51,0x9f,0x44,0x7b,0xc4,0xec,0x92};
    std::uint8_t addend38[32] = {0x4b,0x79,0x2c,0xf0,0xfb,0x82,0x11,0xe6,0x2c,0x24,0xae,0x4a,0x7f,0x47,0xe0,0x37,0x8e,0xda,0xfa,0xf1,0xf2,0x5a,0x6b,0xa9,0xc4,0x29,0xbf,0x37,0x0a,0xaf,0xc8,0x0b};
    std::uint8_t sum38[32]    = {0x34,0xd2,0x58,0x4a,0x41,0x26,0x68,0x8b,0x34,0x7d,0x4d,0xe3,0x13,0x1c,0xf6,0x49,0xda,0x87,0xc7,0x69,0x2a,0xf8,0x0d,0x45,0x49,0xbf,0x6a,0x72,0x4c,0x9f,0x73,0x7a};
    mont256_from_bytes(&ctx, augend, augend38);
    mont256_from_bytes(&ctx, addend, addend38);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum38, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend39[32] = {0x9a,0x15,0x72,0xc6,0xb9,0xec,0x84,0xfc,0xc2,0xe7,0x0e,0x73,0xae,0x87,0x10,0xac,0xbb,0xb4,0x11,0x53,0xb0,0xb9,0xf0,0xa0,0x0f,0x50,0xc9,0x3b,0x86,0x80,0x8c,0x48};
    std::uint8_t addend39[32] = {0xf4,0x47,0x26,0xa5,0x7d,0xaf,0x15,0xfc,0xd7,0x14,0x3d,0x3e,0xd5,0x1e,0x02,0xfe,0xd4,0x61,0x06,0xc4,0xef,0x66,0xae,0x33,0x50,0x64,0x63,0x27,0xd5,0xae,0x98,0xa4};
    std::uint8_t sum39[32]    = {0x8e,0x5c,0x99,0x6d,0x37,0x9b,0x9a,0xf9,0x99,0xfb,0x4b,0xb2,0x83,0xa5,0x13,0xac,0x1e,0x11,0x38,0xad,0x7e,0x5a,0x99,0xa8,0x0b,0xf9,0x38,0x5a,0x22,0x59,0xe3,0xc9};
    mont256_from_bytes(&ctx, augend, augend39);
    mont256_from_bytes(&ctx, addend, addend39);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum39, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend40[32] = {0xe8,0x01,0xc4,0x4e,0x09,0x67,0x1f,0x88,0xb6,0x02,0x18,0xbe,0xf7,0x46,0x41,0xfe,0x06,0x28,0x36,0xae,0x63,0x8e,0x55,0x80,0x53,0xeb,0xbb,0x60,0xfa,0x73,0xd2,0x3a};
    std::uint8_t addend40[32] = {0x50,0xf0,0x3d,0xf4,0x85,0xdf,0x14,0xf8,0x35,0xa9,0x14,0xa3,0xc5,0x02,0xae,0xff,0xb4,0xb0,0xc7,0xc9,0x2f,0xcc,0x84,0x2a,0xc5,0xd9,0x49,0x3b,0x76,0x98,0xfa,0xf4};
    std::uint8_t sum40[32]    = {0x38,0xf2,0x02,0x43,0x8f,0x46,0x34,0x80,0xeb,0xab,0x2d,0x62,0xbc,0x48,0xf0,0xfe,0x48,0xd5,0x1f,0x0c,0x71,0x94,0xd4,0x7f,0xc6,0x09,0x10,0x93,0x37,0x37,0x8c,0x0b};
    mont256_from_bytes(&ctx, augend, augend40);
    mont256_from_bytes(&ctx, addend, addend40);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum40, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend41[32] = {0x76,0xff,0xc7,0x7e,0xaa,0x2f,0xb0,0xb6,0x2e,0x64,0x7a,0x75,0x5a,0x53,0x6f,0x23,0xb6,0x1c,0xac,0x46,0x08,0x91,0x93,0xb9,0xcb,0x7c,0x46,0x5f,0x68,0x41,0xdb,0x66};
    std::uint8_t addend41[32] = {0x6e,0x0e,0xbb,0x1f,0xa1,0x95,0xb7,0x0a,0x19,0x94,0x1b,0xf7,0x09,0xa7,0x4a,0x8e,0x46,0xcc,0x0c,0x42,0x28,0xd9,0xc4,0x37,0xf5,0x40,0x8e,0xe8,0x83,0xbc,0x3f,0x50};
    std::uint8_t sum41[32]    = {0xe5,0x0e,0x82,0x9e,0x4b,0xc5,0x67,0xc0,0x47,0xf8,0x96,0x6c,0x63,0xfa,0xb9,0xb1,0xfc,0xe8,0xb8,0x88,0x31,0x6b,0x57,0xf1,0xc0,0xbc,0xd5,0x47,0xeb,0xfe,0x1a,0xb6};
    mont256_from_bytes(&ctx, augend, augend41);
    mont256_from_bytes(&ctx, addend, addend41);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum41, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend42[32] = {0x1d,0x6a,0xb9,0x6b,0xb1,0xc8,0xec,0xb3,0x34,0xbc,0x9d,0xe6,0x7c,0x90,0x69,0x31,0xc8,0xd9,0xe9,0x10,0x6e,0x14,0xde,0x4f,0x66,0xbc,0x81,0xac,0x6a,0x9a,0x8d,0x75};
    std::uint8_t addend42[32] = {0x9c,0xfa,0x00,0x9a,0xcd,0xe8,0x99,0x0d,0x24,0xe8,0x02,0x1a,0xca,0x03,0xec,0x5f,0xc2,0x9a,0x2f,0x0f,0xc9,0xb7,0xcb,0xe3,0x3a,0x0d,0x7b,0xcd,0x27,0xa9,0x7d,0xfd};
    std::uint8_t sum42[32]    = {0xba,0x64,0xba,0x06,0x7f,0xb1,0x85,0xc0,0x59,0xa4,0xa0,0x01,0x46,0x94,0x55,0x91,0x8b,0x74,0x18,0x20,0x37,0xcc,0xaa,0x32,0xa0,0xc9,0xfd,0x79,0x92,0x44,0x0b,0x72};
    mont256_from_bytes(&ctx, augend, augend42);
    mont256_from_bytes(&ctx, addend, addend42);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum42, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend43[32] = {0x18,0x97,0x27,0x3d,0x93,0xf5,0x8a,0xa2,0x25,0xff,0x30,0x5c,0x8d,0x0e,0xda,0x79,0x52,0xac,0xf6,0x8d,0x14,0xc3,0x80,0x2e,0x82,0xb6,0xe3,0xb7,0xa3,0xcd,0xb4,0x0e};
    std::uint8_t addend43[32] = {0x75,0xd0,0x52,0x26,0x7c,0x71,0x03,0x9e,0x84,0x1a,0x55,0x5e,0x58,0x8f,0x66,0x12,0xce,0xdd,0x20,0x53,0xed,0x77,0x55,0xa5,0xd1,0xef,0x4c,0x3b,0xbc,0x3c,0xec,0x14};
    std::uint8_t sum43[32]    = {0x8e,0x67,0x79,0x64,0x10,0x66,0x8e,0x40,0xaa,0x19,0x85,0xba,0xe5,0x9e,0x40,0x8c,0x21,0x8a,0x16,0xe1,0x02,0x3a,0xd5,0xd4,0x54,0xa6,0x2f,0xf3,0x60,0x0a,0xa0,0x22};
    mont256_from_bytes(&ctx, augend, augend43);
    mont256_from_bytes(&ctx, addend, addend43);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum43, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend44[32] = {0x66,0xf7,0x32,0x42,0x40,0x40,0x96,0x02,0x46,0x68,0x7e,0xee,0x02,0x37,0xbe,0xfd,0x47,0xd3,0x4b,0x8a,0x95,0x62,0xf3,0x77,0x93,0x75,0xcf,0x2b,0x13,0x99,0x7d,0xb4};
    std::uint8_t addend44[32] = {0x72,0x30,0xc3,0x76,0xdc,0x1a,0x6d,0x24,0xd7,0x3d,0xa9,0x26,0x7b,0x96,0x12,0x6e,0xcc,0xc1,0x2d,0xff,0x4e,0xdc,0x78,0xfe,0xd9,0xfd,0x31,0x96,0x56,0x51,0xdc,0x64};
    std::uint8_t sum44[32]    = {0xd9,0x27,0xf5,0xb9,0x1c,0x5b,0x03,0x27,0x1d,0xa6,0x28,0x14,0x7d,0xcd,0xd1,0x6c,0x14,0x94,0x79,0x89,0xe4,0x3f,0x6c,0x76,0x6d,0x73,0x00,0xc1,0x69,0xeb,0x5a,0x18};
    mont256_from_bytes(&ctx, augend, augend44);
    mont256_from_bytes(&ctx, addend, addend44);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum44, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend45[32] = {0xa1,0x5c,0xe9,0xfb,0xe0,0xa8,0xb3,0x57,0x2c,0x71,0x32,0x8b,0x71,0xc3,0x2d,0x9a,0x8f,0x50,0xc3,0x36,0xb7,0xb6,0x5e,0xba,0x29,0x3a,0x0b,0x1a,0x9a,0x49,0x9f,0x89};
    std::uint8_t addend45[32] = {0xcb,0xaa,0xba,0x2c,0x10,0xb7,0x78,0xc1,0x2e,0xd4,0xad,0x0e,0xba,0x43,0x89,0x5b,0xbb,0x2d,0x88,0xe2,0x9c,0xd0,0xa5,0x88,0x8b,0xa7,0x52,0xcc,0x0b,0xe0,0xee,0x16};
    std::uint8_t sum45[32]    = {0x6d,0x07,0xa4,0x28,0xf1,0x60,0x2c,0x18,0x5b,0x45,0xdf,0x9a,0x2c,0x06,0xb6,0xf6,0xd8,0x7a,0x6c,0xae,0x32,0xc0,0xff,0x17,0x61,0x25,0x69,0xdd,0x6c,0x55,0x4c,0x7c};
    mont256_from_bytes(&ctx, augend, augend45);
    mont256_from_bytes(&ctx, addend, addend45);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum45, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend46[32] = {0x6d,0x5c,0x75,0xcb,0x87,0xa8,0x91,0x35,0xa9,0x39,0x65,0x78,0xde,0x74,0x36,0xbb,0x93,0x9c,0xfd,0xc4,0x12,0x2d,0xf9,0x15,0x7a,0x0c,0x6c,0x14,0xb5,0x7a,0xb7,0xf5};
    std::uint8_t addend46[32] = {0x34,0x1c,0xd2,0x36,0xf4,0xd7,0xbe,0xfd,0x61,0x87,0xdc,0xb2,0x8b,0x33,0xe0,0x13,0x20,0xf6,0xa2,0xe7,0xf6,0x44,0xd7,0x98,0xd2,0x10,0x2e,0xd4,0x2e,0xfa,0x06,0x47};
    std::uint8_t sum46[32]    = {0xa1,0x79,0x48,0x02,0x7c,0x80,0x50,0x33,0x0a,0xc1,0x42,0x2b,0x69,0xa8,0x16,0xce,0xb4,0x93,0xa0,0xac,0x08,0x72,0xd0,0xae,0x4c,0x1c,0x9a,0xe8,0xe4,0x74,0xbe,0x3c};
    mont256_from_bytes(&ctx, augend, augend46);
    mont256_from_bytes(&ctx, addend, addend46);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum46, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend47[32] = {0x1b,0x38,0xf6,0x2a,0x39,0x58,0x3a,0xcf,0xbf,0x92,0x32,0x26,0x17,0xef,0xf9,0xe8,0x34,0x18,0x51,0x3f,0x35,0x08,0x5c,0xd2,0x49,0xb2,0x74,0xfb,0xc0,0x95,0x04,0x83};
    std::uint8_t addend47[32] = {0xb6,0xe7,0x4a,0xe7,0x3d,0x14,0xd9,0xee,0x78,0x89,0xf2,0xdd,0x9e,0x35,0xbd,0x70,0x67,0x87,0x14,0xe8,0xb6,0x0c,0xb3,0x25,0x2c,0x31,0xa9,0xe7,0x2a,0x85,0x26,0x05};
    std::uint8_t sum47[32]    = {0xd2,0x20,0x41,0x11,0x76,0x6d,0x14,0xbe,0x38,0x1c,0x25,0x03,0xb6,0x25,0xb7,0x58,0x9b,0x9f,0x66,0x27,0xeb,0x15,0x0f,0xf7,0x75,0xe4,0x1e,0xe2,0xeb,0x1a,0x2a,0x88};
    mont256_from_bytes(&ctx, augend, augend47);
    mont256_from_bytes(&ctx, addend, addend47);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum47, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend48[32] = {0x33,0x50,0x86,0x4b,0x8c,0x07,0xec,0xaa,0x20,0xc1,0xce,0xf7,0x75,0x13,0xfa,0x85,0xaf,0x3d,0x33,0x44,0xe0,0x6c,0x7e,0xc8,0xd2,0x37,0xa2,0x1b,0xdf,0xe9,0x6d,0x2d};
    std::uint8_t addend48[32] = {0xf4,0xb6,0xd4,0x70,0x71,0x74,0xc9,0x24,0xe1,0xc4,0xf2,0x39,0xa0,0xb5,0x9a,0x79,0x18,0x57,0x46,0xb2,0x4e,0xcb,0x1e,0x52,0xb6,0x1e,0x3e,0xad,0xed,0x92,0xe7,0xec};
    std::uint8_t sum48[32]    = {0x28,0x07,0x5a,0xbc,0xfd,0x7c,0xb5,0xcf,0x02,0x86,0xc1,0x31,0x15,0xc9,0x94,0xff,0x55,0x90,0x9a,0x8c,0x0d,0x71,0x97,0xf0,0x34,0x99,0xec,0xc0,0x93,0xa7,0x13,0xf6};
    mont256_from_bytes(&ctx, augend, augend48);
    mont256_from_bytes(&ctx, addend, addend48);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum48, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend49[32] = {0x6f,0xc2,0xf0,0x20,0x3e,0xed,0x82,0xac,0x73,0x32,0xc1,0x7f,0xcb,0x9e,0x48,0x93,0x74,0xca,0x76,0x13,0x2d,0x05,0x83,0x87,0x30,0x82,0xeb,0xd7,0x19,0x0f,0x17,0x44};
    std::uint8_t addend49[32] = {0xde,0xab,0x1e,0x75,0x2f,0x5b,0x65,0x11,0x23,0x6d,0x8c,0x36,0x53,0x3c,0x1e,0x57,0xe1,0x8a,0x6d,0xe7,0x10,0x1b,0xb8,0xb3,0x37,0xae,0xee,0x9e,0xcc,0x37,0x91,0x7d};
    std::uint8_t sum49[32]    = {0x4e,0x6e,0x0e,0x96,0x6e,0x48,0xe7,0xbd,0x96,0xa0,0x4d,0xb6,0x1e,0xda,0x66,0xeb,0xe4,0x51,0x04,0x8f,0x1b,0x5b,0x37,0x0f,0x14,0x75,0xe6,0x6c,0xab,0x71,0x67,0x9e};
    mont256_from_bytes(&ctx, augend, augend49);
    mont256_from_bytes(&ctx, addend, addend49);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum49, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend50[32] = {0x56,0xcc,0x4d,0x16,0xcd,0xfa,0xb1,0x58,0x50,0x37,0x64,0x88,0xa1,0x00,0xe8,0x6a,0x62,0x18,0x78,0x27,0x33,0xea,0x93,0x9a,0xc9,0xf7,0x6b,0x7c,0x38,0xa6,0x5c,0xa4};
    std::uint8_t addend50[32] = {0x57,0xa4,0x45,0x77,0xeb,0x78,0x24,0x2d,0x79,0x58,0x9b,0x1d,0x81,0xf1,0xe5,0x5b,0x41,0x79,0xe4,0x61,0x10,0x60,0xdd,0x3a,0xcd,0x6e,0x4d,0x36,0xd3,0x3d,0x89,0xbe};
    std::uint8_t sum50[32]    = {0xae,0x70,0x92,0x8e,0xb9,0x72,0xd5,0x85,0xc9,0x8f,0xff,0xa6,0x22,0xf2,0xcd,0xc5,0xa3,0x92,0x5c,0x88,0x44,0x4b,0x70,0xd5,0x97,0x65,0xb8,0xb3,0x0b,0xe3,0xe6,0x62};
    mont256_from_bytes(&ctx, augend, augend50);
    mont256_from_bytes(&ctx, addend, addend50);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum50, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend51[32] = {0xc6,0x51,0x9c,0x1f,0x2d,0x0b,0x83,0x58,0xdf,0x69,0xdc,0x54,0x26,0x10,0xf7,0x3c,0xbb,0x72,0x5f,0x31,0x8e,0x88,0xda,0xd8,0x64,0x1d,0x2a,0xf8,0xe7,0xbd,0x1a,0x55};
    std::uint8_t addend51[32] = {0x4e,0xa5,0x65,0x03,0x1e,0xbc,0x60,0x74,0x95,0x09,0xf0,0x26,0x3c,0x58,0x85,0xb0,0x6d,0x72,0xd7,0x77,0xde,0x45,0x79,0x60,0x56,0xd1,0x3c,0x49,0xc5,0x4e,0xf2,0x99};
    std::uint8_t sum51[32]    = {0x14,0xf7,0x01,0x23,0x4b,0xc7,0xe3,0xcd,0x74,0x73,0xcc,0x7a,0x62,0x69,0x7c,0xed,0xb6,0xe1,0x57,0x3e,0x4b,0x08,0x4f,0x0d,0x67,0x32,0x73,0x39,0x73,0x36,0xcb,0xcb};
    mont256_from_bytes(&ctx, augend, augend51);
    mont256_from_bytes(&ctx, addend, addend51);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum51, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend52[32] = {0x51,0x05,0x80,0xce,0x27,0xde,0x57,0x39,0x80,0xcc,0x2a,0x2d,0xeb,0x31,0x94,0xb5,0x75,0x6b,0xe0,0x96,0xe1,0x56,0x5d,0x2d,0x0b,0xf7,0xb5,0x02,0x32,0x2b,0xf8,0x55};
    std::uint8_t addend52[32] = {0x87,0x10,0xd6,0xbe,0xe5,0x5f,0xad,0x9d,0x15,0x38,0xf0,0xf5,0xae,0x1a,0x76,0x41,0xab,0xc5,0x29,0xde,0x1a,0x82,0x7f,0x51,0xad,0x65,0xa9,0xe1,0xae,0xbe,0xbf,0xb4};
    std::uint8_t sum52[32]    = {0xd8,0x16,0x57,0x8d,0x0d,0x3e,0x04,0xd6,0x96,0x05,0x1b,0x23,0x99,0x4c,0x0a,0xf7,0x21,0x31,0x0a,0x74,0xfb,0xd8,0xdc,0x7e,0xb9,0x5d,0x5e,0xe3,0xe0,0xea,0xb8,0x09};
    mont256_from_bytes(&ctx, augend, augend52);
    mont256_from_bytes(&ctx, addend, addend52);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum52, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend53[32] = {0xc5,0x8a,0x25,0x3d,0x02,0xac,0x63,0x2f,0x27,0xad,0x3b,0xdb,0x5f,0x90,0xc1,0xc2,0xe5,0x99,0xa0,0xf8,0x11,0x75,0xa4,0x0e,0xe9,0x7b,0x19,0xd0,0x98,0x81,0x30,0x23};
    std::uint8_t addend53[32] = {0x64,0x79,0x96,0x15,0xff,0xcc,0xbb,0xaa,0x14,0x28,0x8b,0x83,0x04,0x4e,0x5a,0xf5,0x70,0x9e,0x34,0x60,0x46,0x01,0xa0,0x8b,0xde,0xb7,0x74,0xa2,0xa7,0xbe,0x16,0xb6};
    std::uint8_t sum53[32]    = {0x2a,0x03,0xbb,0x54,0x02,0x79,0x1e,0xd9,0x3b,0xd5,0xc7,0x5e,0x63,0xdf,0x1c,0xb8,0xe4,0x33,0xf5,0xed,0x35,0xb1,0x3f,0x6f,0x74,0x76,0x9a,0x6a,0x06,0x6a,0x05,0xb6};
    mont256_from_bytes(&ctx, augend, augend53);
    mont256_from_bytes(&ctx, addend, addend53);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum53, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend54[32] = {0x98,0x98,0xa4,0x0b,0xea,0xd1,0x0b,0x11,0x8a,0x35,0xcc,0xc6,0xbf,0x33,0x40,0xc9,0x2b,0x49,0xfe,0x0b,0xaf,0x94,0x47,0xe9,0xea,0xd6,0x38,0xe3,0x89,0xb3,0x70,0x97};
    std::uint8_t addend54[32] = {0x03,0xf3,0x5a,0xd7,0x2e,0x92,0xdb,0x9a,0xff,0xed,0xf7,0x59,0xb2,0x2e,0xb2,0x88,0xc8,0x7c,0xb8,0x16,0x09,0x62,0x09,0x7a,0xd6,0xb2,0x8c,0xff,0xac,0x14,0x3f,0xbe};
    std::uint8_t sum54[32]    = {0x9c,0x8b,0xfe,0xe3,0x19,0x63,0xe6,0xac,0x8a,0x23,0xc4,0x20,0x71,0x61,0xf3,0x51,0xf3,0xc6,0xb6,0x21,0xb8,0xf6,0x51,0x64,0xc1,0x88,0xc5,0xe3,0x35,0xc7,0xb0,0x55};
    mont256_from_bytes(&ctx, augend, augend54);
    mont256_from_bytes(&ctx, addend, addend54);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum54, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend55[32] = {0x7f,0x89,0xbe,0x11,0x34,0xf7,0x68,0x5c,0xe6,0x7e,0x93,0x75,0xc0,0x1f,0x2d,0xd3,0x3a,0x1b,0x11,0x4a,0x34,0xbd,0x48,0xf3,0x51,0xf6,0x5f,0x4d,0x18,0x8f,0x0f,0x84};
    std::uint8_t addend55[32] = {0x8a,0x9d,0x8f,0xdc,0xe5,0x4b,0xb0,0x3d,0xcd,0x6d,0x77,0xc7,0xe1,0x29,0x63,0x5e,0x05,0x74,0xf5,0x35,0xed,0x9d,0x95,0xce,0x07,0x23,0xf6,0x47,0x91,0x5c,0x8d,0xd9};
    std::uint8_t sum55[32]    = {0x0a,0x27,0x4d,0xef,0x1a,0x43,0x18,0x9a,0xb3,0xec,0x0b,0x3d,0xa1,0x48,0x91,0x31,0xcd,0x8c,0x27,0x15,0x00,0x94,0xd9,0x96,0x05,0x5e,0x61,0x8b,0x70,0x16,0x5c,0x3a};
    mont256_from_bytes(&ctx, augend, augend55);
    mont256_from_bytes(&ctx, addend, addend55);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum55, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend56[32] = {0xb4,0x32,0xca,0x37,0x42,0x95,0x48,0x5f,0x5d,0xd2,0x04,0xa7,0x6b,0xda,0xa6,0x80,0xac,0x65,0xb6,0x34,0x8c,0x11,0x1a,0x4c,0x14,0x34,0xb7,0x73,0x35,0x3f,0x1d,0x42};
    std::uint8_t addend56[32] = {0x92,0x15,0x7e,0xb6,0x79,0xc0,0x2b,0x3e,0xdf,0x48,0x17,0xb7,0x4f,0xad,0x3f,0x8e,0x7b,0x82,0x18,0x17,0xfa,0x71,0xae,0x21,0x2f,0x2a,0x12,0xfe,0x68,0x02,0x48,0x72};
    std::uint8_t sum56[32]    = {0x46,0x48,0x48,0xee,0xbc,0x55,0x73,0x9e,0x3d,0x1a,0x1c,0x5e,0xbb,0x87,0xe6,0x0f,0xb5,0xe3,0xee,0xe1,0x64,0xbc,0xc3,0x41,0xef,0xa2,0xd6,0x68,0x63,0x6c,0x24,0x91};
    mont256_from_bytes(&ctx, augend, augend56);
    mont256_from_bytes(&ctx, addend, addend56);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum56, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend57[32] = {0xc1,0xe4,0x3a,0x74,0xe7,0x01,0x9f,0xcb,0x2d,0x84,0x05,0xd6,0x13,0xb9,0x59,0x4c,0x74,0x92,0x00,0x64,0x36,0x64,0x3b,0xc9,0xd4,0xb1,0x76,0x45,0x4c,0xdc,0x50,0x3a};
    std::uint8_t addend57[32] = {0x2a,0xc0,0x2e,0x65,0x8e,0x5a,0x9e,0xd0,0x71,0x5e,0x18,0x20,0x34,0xeb,0x79,0xac,0x0f,0xee,0x1f,0x57,0x12,0x9d,0xba,0x7d,0x3c,0x62,0x48,0x3a,0xbb,0xc0,0x74,0x8d};
    std::uint8_t sum57[32]    = {0xec,0xa4,0x68,0xda,0x75,0x5c,0x3e,0x9b,0x9e,0xe2,0x1d,0xf6,0x48,0xa4,0xd2,0xf8,0x84,0x80,0x1f,0xbb,0x49,0x01,0xf6,0x47,0x11,0x13,0xbe,0x80,0x08,0x9c,0xc4,0xc7};
    mont256_from_bytes(&ctx, augend, augend57);
    mont256_from_bytes(&ctx, addend, addend57);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum57, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend58[32] = {0xed,0x47,0x6f,0x32,0x91,0xd8,0x1e,0xe1,0x52,0x63,0x3a,0x21,0xdc,0x81,0x1f,0x30,0xef,0x35,0x22,0x2f,0x6d,0x64,0x30,0xe3,0x65,0x6a,0xa8,0xaa,0x1e,0x90,0xc5,0x44};
    std::uint8_t addend58[32] = {0xc7,0x5a,0x8d,0x45,0x31,0x2f,0x4d,0xf3,0xf5,0x04,0xd0,0x00,0x6d,0x6b,0xfc,0x84,0x13,0x4b,0xeb,0x2a,0x56,0x7e,0x1c,0x62,0xae,0x78,0x8a,0x41,0xba,0xba,0x67,0x62};
    std::uint8_t sum58[32]    = {0xb4,0xa1,0xfc,0x78,0xc3,0x07,0x6c,0xd5,0x47,0x68,0x0a,0x22,0x49,0xed,0x1b,0xb5,0x90,0x7d,0x2d,0xee,0xa2,0x1c,0x48,0x1a,0xc0,0x27,0x3e,0xe2,0x9f,0x75,0xeb,0x83};
    mont256_from_bytes(&ctx, augend, augend58);
    mont256_from_bytes(&ctx, addend, addend58);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum58, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend59[32] = {0x4f,0xd1,0xc7,0x4e,0x29,0x4f,0xc1,0xc3,0x17,0xdf,0x09,0x3b,0x49,0xdd,0x0a,0xc8,0x07,0xac,0xc8,0x40,0x8a,0xb3,0x58,0xa2,0x79,0xbe,0x49,0xe6,0x57,0xfb,0x20,0xf4};
    std::uint8_t addend59[32] = {0x2e,0x5a,0x57,0xc0,0xfe,0x81,0x1c,0x33,0x96,0x02,0xe5,0x77,0xca,0xf0,0x5d,0x91,0xc1,0xe7,0x2a,0x24,0xbe,0xf0,0xe5,0x15,0x43,0x72,0x93,0x2e,0x24,0xff,0x55,0xe6};
    std::uint8_t sum59[32]    = {0x7e,0x2c,0x1f,0x0f,0x27,0xd0,0xdd,0xf6,0xad,0xe1,0xee,0xb3,0x14,0xcd,0x68,0x59,0xc9,0x93,0xf2,0x65,0x49,0xa4,0x3d,0xb7,0xbd,0x30,0xdd,0x14,0x7c,0xfa,0x76,0xda};
    mont256_from_bytes(&ctx, augend, augend59);
    mont256_from_bytes(&ctx, addend, addend59);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum59, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend60[32] = {0xfd,0x5a,0xc1,0x25,0x0c,0x53,0x4e,0x6c,0x9a,0xd0,0x28,0xf2,0x83,0xec,0x00,0xd6,0x77,0x4c,0x49,0x56,0x15,0xa5,0x67,0x50,0xd4,0xa2,0x55,0xc7,0x37,0x7f,0x92,0x34};
    std::uint8_t addend60[32] = {0x22,0x3b,0xeb,0x10,0x13,0xa7,0xd0,0x30,0x79,0x46,0xd3,0x60,0x4e,0x8e,0xa8,0x0c,0x08,0xae,0x0f,0x6d,0xf7,0x18,0x30,0x6a,0x0d,0x58,0xd4,0x3b,0xea,0xf8,0x5d,0xe4};
    std::uint8_t sum60[32]    = {0x1f,0x96,0xac,0x36,0x1f,0xfb,0x1e,0x9d,0x14,0x16,0xfc,0x52,0xd2,0x7a,0xa8,0xe3,0x0d,0xf6,0x79,0x58,0xea,0xf7,0x92,0x8f,0x8e,0x3f,0x35,0xf9,0xe8,0xa2,0xae,0xf5};
    mont256_from_bytes(&ctx, augend, augend60);
    mont256_from_bytes(&ctx, addend, addend60);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum60, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend61[32] = {0x74,0x82,0x48,0x32,0x1f,0x0e,0x43,0x98,0xad,0x58,0xcf,0x14,0x68,0x8b,0x9f,0x11,0xd0,0x4c,0x46,0x9a,0x29,0xd0,0x89,0xf6,0x40,0xce,0x48,0xba,0x72,0x05,0xc7,0x60};
    std::uint8_t addend61[32] = {0x31,0xa7,0x84,0x54,0x1f,0xfd,0xea,0x03,0x76,0xd9,0x0d,0x41,0x40,0x16,0x43,0xfd,0x1c,0x8a,0x90,0x0b,0xaa,0x09,0xb3,0x96,0xb8,0xc1,0x35,0x8d,0x9a,0x50,0xf6,0x45};
    std::uint8_t sum61[32]    = {0xa6,0x29,0xcc,0x86,0x3f,0x0c,0x2d,0x9c,0x24,0x31,0xdc,0x55,0xa8,0xa1,0xe3,0x0e,0xec,0xd6,0xd6,0xa5,0xd3,0xda,0x3d,0x8c,0xf9,0x8f,0x7e,0x48,0x0c,0x56,0xbd,0xa5};
    mont256_from_bytes(&ctx, augend, augend61);
    mont256_from_bytes(&ctx, addend, addend61);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum61, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend62[32] = {0x23,0x5a,0x7f,0x05,0xae,0x90,0x77,0xf3,0x1f,0xc5,0x49,0xd6,0xac,0x85,0x3e,0x09,0x6e,0xf4,0x5d,0x19,0x97,0xa2,0xa0,0x0d,0x79,0x0d,0xaf,0x1a,0xc3,0x5a,0x6c,0x4c};
    std::uint8_t addend62[32] = {0x42,0x17,0xef,0xf9,0x12,0x14,0x09,0x34,0xde,0x22,0x17,0xee,0xb2,0xc5,0x2e,0xf0,0xc4,0x9e,0x2a,0xe3,0x31,0x4f,0x43,0x73,0xf1,0xe8,0xab,0xc5,0x13,0x24,0xac,0xf8};
    std::uint8_t sum62[32]    = {0x65,0x72,0x6e,0xfe,0xc0,0xa4,0x81,0x27,0xfd,0xe7,0x61,0xc5,0x5f,0x4a,0x6c,0xfa,0x33,0x92,0x87,0xfc,0xc8,0xf1,0xe3,0x81,0x6a,0xf6,0x5a,0xdf,0xd6,0x7f,0x19,0x44};
    mont256_from_bytes(&ctx, augend, augend62);
    mont256_from_bytes(&ctx, addend, addend62);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum62, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend63[32] = {0x8c,0x9c,0x8f,0x6e,0x36,0xc8,0x3d,0x38,0x51,0xe1,0x11,0x6c,0x30,0x4b,0x21,0xa2,0xb1,0x41,0x26,0xa6,0x4c,0xf8,0xbe,0x00,0x08,0xd1,0xe4,0xca,0x7a,0xf8,0x5d,0xf4};
    std::uint8_t addend63[32] = {0x8a,0x99,0xc7,0xd5,0xc9,0x65,0x51,0x5e,0xd1,0xc0,0x52,0x51,0xca,0x38,0xc9,0xa5,0xf2,0x88,0xc8,0x55,0x3f,0x78,0x1b,0xc0,0xb7,0x83,0x9a,0x7f,0x70,0x56,0xc6,0x7a};
    std::uint8_t sum63[32]    = {0x17,0x36,0x57,0x45,0x00,0x2d,0x8e,0x97,0x23,0xa1,0x63,0xbd,0xfa,0x83,0xeb,0x49,0x31,0xc6,0x0f,0x90,0x6a,0xaa,0xd4,0x95,0x6c,0x99,0x8b,0x40,0xb1,0x79,0xe3,0x4b};
    mont256_from_bytes(&ctx, augend, augend63);
    mont256_from_bytes(&ctx, addend, addend63);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum63, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend64[32] = {0x7f,0x7a,0xb1,0x2d,0x23,0xb1,0xfb,0xdf,0xfa,0xfa,0xd4,0x0c,0xbc,0x50,0x2c,0xb0,0xe7,0x92,0x9f,0xdb,0x06,0x1e,0x7c,0x16,0x8f,0x49,0x2b,0x03,0x4f,0x4e,0x12,0x85};
    std::uint8_t addend64[32] = {0x0f,0x60,0x9e,0xf0,0xd7,0xd6,0xd6,0xc1,0x15,0x09,0x2e,0xcf,0x88,0xb9,0xff,0xef,0x90,0xec,0xc9,0x51,0xf2,0xd5,0xeb,0x4f,0x41,0x18,0x1a,0xa2,0x1a,0x97,0x37,0x4e};
    std::uint8_t sum64[32]    = {0x8e,0xdb,0x50,0x1d,0xfb,0x88,0xd2,0xa1,0x10,0x04,0x02,0xdc,0x45,0x0a,0x2c,0xa0,0x78,0x7f,0x69,0x2c,0xf8,0xf4,0x67,0x65,0xd0,0x61,0x45,0xa5,0x69,0xe5,0x49,0xd3};
    mont256_from_bytes(&ctx, augend, augend64);
    mont256_from_bytes(&ctx, addend, addend64);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum64, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend65[32] = {0x3d,0xfa,0x37,0xc2,0x2e,0xeb,0xe1,0x38,0x59,0x0b,0x6d,0xde,0xf8,0x8a,0xb3,0x31,0x52,0x46,0x4a,0x4a,0x52,0xf3,0x6a,0xc4,0x10,0x9e,0xa4,0x1c,0x1c,0x60,0xc3,0x90};
    std::uint8_t addend65[32] = {0xad,0x85,0x2b,0x9c,0x8b,0xfd,0xcb,0x82,0x79,0x66,0x41,0x9e,0x6e,0xd0,0x9a,0xa5,0x58,0x47,0x63,0xcd,0xc4,0x2d,0x21,0x13,0x00,0xd0,0x4c,0xfd,0xc8,0x0d,0x6c,0xab};
    std::uint8_t sum65[32]    = {0xeb,0x7f,0x63,0x5e,0xba,0xe9,0xac,0xba,0xd2,0x71,0xaf,0x7d,0x67,0x5b,0x4d,0xd6,0xaa,0x8d,0xae,0x18,0x17,0x20,0x8b,0xd7,0x11,0x6e,0xf1,0x19,0xe4,0x6e,0x30,0x3b};
    mont256_from_bytes(&ctx, augend, augend65);
    mont256_from_bytes(&ctx, addend, addend65);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum65, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend66[32] = {0xf5,0x48,0x7f,0xb6,0x87,0xaf,0xdf,0xfe,0x91,0xb2,0x84,0xaa,0x7e,0xd7,0x1e,0x01,0xf5,0x44,0x18,0x84,0x90,0x55,0x9b,0x9d,0xb3,0x93,0x8e,0x52,0x2a,0xf2,0xa9,0x6f};
    std::uint8_t addend66[32] = {0x18,0xe1,0xb7,0x4e,0x26,0x43,0xaa,0xcc,0x14,0x61,0x6c,0xc6,0x09,0x1f,0xb2,0x1c,0x68,0x9c,0x1a,0x7e,0x48,0xc4,0x78,0x1d,0xaa,0xb2,0x04,0x33,0x5b,0xeb,0x5e,0x6c};
    std::uint8_t sum66[32]    = {0x0e,0x2a,0x37,0x05,0xad,0xf3,0x8a,0xca,0xa6,0x13,0xf1,0x70,0x87,0xf6,0xd0,0x1e,0xeb,0xdc,0x53,0x97,0xb7,0x54,0x0e,0x90,0x0a,0x89,0x9e,0x7c,0x4d,0x08,0xc6,0xb8};
    mont256_from_bytes(&ctx, augend, augend66);
    mont256_from_bytes(&ctx, addend, addend66);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum66, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend67[32] = {0x9f,0xf9,0x82,0x06,0x04,0x7c,0x38,0xbd,0x86,0xf7,0x71,0xac,0xf2,0x1b,0x07,0x34,0x26,0xf7,0xa3,0x76,0x4f,0xb7,0x98,0xa4,0xe3,0xb6,0xe3,0xd4,0x29,0xc0,0x0d,0x64};
    std::uint8_t addend67[32] = {0xad,0x1a,0xb5,0x12,0xc0,0x4b,0x7d,0x80,0x31,0xf8,0x5d,0xb4,0xa4,0x1f,0xcc,0xec,0xd9,0x7d,0x97,0x7a,0xb8,0x95,0x23,0x35,0x16,0xc1,0x2f,0x18,0x15,0x0c,0x9f,0x4e};
    std::uint8_t sum67[32]    = {0x4d,0x14,0x37,0x19,0xc4,0xc7,0xb6,0x3d,0xb8,0xef,0xcf,0x61,0x96,0x3a,0xd4,0x21,0x8e,0x71,0x5b,0x85,0xe6,0x86,0xb6,0xae,0xa6,0xbc,0x1e,0xe3,0x04,0xf7,0x6b,0x8f};
    mont256_from_bytes(&ctx, augend, augend67);
    mont256_from_bytes(&ctx, addend, addend67);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum67, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend68[32] = {0x1d,0x49,0xdc,0xf9,0xde,0x68,0x7c,0xde,0xda,0x5e,0x4e,0x07,0x71,0x7e,0xe3,0x37,0x16,0xb7,0x4a,0x20,0x56,0x40,0xcd,0x4d,0xeb,0xda,0xdb,0xd2,0x41,0xcf,0x45,0x39};
    std::uint8_t addend68[32] = {0x13,0xb1,0xc9,0xff,0xba,0x11,0x8f,0x6a,0x21,0x93,0xa0,0xea,0xc4,0xe8,0x83,0xf9,0x3e,0x0e,0xd9,0x78,0x0d,0x7d,0xc2,0x89,0x54,0x6a,0x31,0xd1,0x43,0x8e,0xe0,0x68};
    std::uint8_t sum68[32]    = {0x30,0xfb,0xa6,0xf9,0x98,0x7a,0x0c,0x48,0xfb,0xf1,0xee,0xf2,0x36,0x67,0x67,0x30,0x54,0xc6,0x23,0x98,0x63,0xbe,0x8f,0xd7,0x40,0x45,0x0d,0xa3,0x85,0x5e,0x25,0xa1};
    mont256_from_bytes(&ctx, augend, augend68);
    mont256_from_bytes(&ctx, addend, addend68);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum68, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend69[32] = {0x80,0x94,0x04,0x7d,0x37,0xa5,0xf2,0xfa,0xb3,0xf9,0xe2,0x86,0xdd,0x29,0x41,0x03,0xd4,0x70,0xfd,0x5e,0x1f,0x89,0x1a,0x45,0xb3,0x59,0xe2,0x96,0x29,0xb7,0x73,0x33};
    std::uint8_t addend69[32] = {0xd2,0xcb,0x4d,0xee,0x5c,0x07,0x94,0xb4,0xb0,0xf9,0xac,0x70,0xa0,0x27,0xfc,0x28,0xca,0xa5,0x42,0x71,0x65,0x65,0xdc,0x68,0x0b,0x16,0x1f,0xed,0x04,0x7c,0xe8,0x8f};
    std::uint8_t sum69[32]    = {0x53,0x5f,0x52,0x6c,0x93,0xad,0x87,0xaf,0x64,0xf3,0x8e,0xf7,0x7d,0x51,0x3d,0x2d,0x2d,0x12,0x60,0x64,0x63,0x28,0xf1,0x82,0x6a,0xb4,0x0e,0x79,0xf4,0x5f,0x1a,0x9f};
    mont256_from_bytes(&ctx, augend, augend69);
    mont256_from_bytes(&ctx, addend, addend69);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum69, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend70[32] = {0x56,0xf9,0xaf,0x99,0x74,0x6e,0x5a,0x3e,0x3c,0xca,0xb6,0x56,0xd9,0x87,0x4f,0x19,0xe3,0x1d,0x3d,0x00,0x91,0x61,0x94,0x08,0xef,0x0d,0x2c,0xc9,0x7f,0x90,0x72,0x23};
    std::uint8_t addend70[32] = {0xc4,0x75,0x31,0xcb,0xc6,0xac,0xf1,0xb9,0x31,0xc9,0x3e,0xae,0x5c,0xfe,0xd9,0xbe,0xad,0xd0,0x73,0x3e,0xa3,0x88,0x01,0x20,0xf9,0xfa,0xd9,0x28,0xd0,0x29,0x49,0x76};
    std::uint8_t sum70[32]    = {0x1b,0x6e,0xe1,0x66,0x3b,0x1b,0x4b,0xf7,0x6e,0x93,0xf5,0x05,0x36,0x86,0x28,0xd9,0x1e,0xe9,0xd0,0xd4,0x13,0x23,0x8f,0xfe,0x95,0x4c,0x11,0xe9,0x15,0xe4,0x7a,0x76};
    mont256_from_bytes(&ctx, augend, augend70);
    mont256_from_bytes(&ctx, addend, addend70);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum70, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend71[32] = {0xa6,0x86,0x4f,0xf2,0xa7,0x1b,0x50,0x61,0x67,0xcd,0x8c,0xe0,0x64,0x53,0x41,0x06,0x8c,0x99,0x2d,0xba,0xf1,0xb6,0x4e,0x0a,0x8f,0x9f,0x02,0x5b,0x6e,0x41,0xbe,0x1c};
    std::uint8_t addend71[32] = {0x41,0x65,0xc6,0xec,0xc6,0xff,0x6e,0xe3,0x5c,0xe7,0x66,0x27,0xbd,0x06,0xe7,0xde,0xd7,0xe3,0x8e,0xd7,0xe7,0x67,0x6f,0x3c,0x66,0x91,0x4c,0x94,0x86,0x62,0xc0,0x22};
    std::uint8_t sum71[32]    = {0xe7,0xec,0x16,0xdf,0x6e,0x1a,0xbf,0x44,0xc4,0xb4,0xf3,0x08,0x21,0x5a,0x28,0xe5,0x64,0x7c,0xbc,0x92,0xd9,0x1d,0xbd,0x46,0xf6,0x30,0x4e,0xef,0xf4,0xa4,0x7e,0x3e};
    mont256_from_bytes(&ctx, augend, augend71);
    mont256_from_bytes(&ctx, addend, addend71);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum71, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend72[32] = {0x99,0xe9,0x11,0x04,0xb6,0xbe,0x59,0xb2,0xa8,0x2e,0x67,0x83,0x3b,0xa2,0x94,0x6e,0xe6,0x89,0x36,0x1d,0xe5,0x01,0xa7,0xce,0x1f,0x17,0xcc,0x62,0xd2,0xb6,0x33,0x87};
    std::uint8_t addend72[32] = {0x4e,0x85,0x75,0xd6,0xb9,0x50,0xc5,0xd9,0xf1,0xf9,0xa5,0xec,0xd3,0x3b,0x21,0xde,0x53,0x99,0x67,0x3b,0x95,0x85,0xf8,0xbc,0x50,0xa5,0x60,0x01,0x0e,0x84,0x5a,0x3f};
    std::uint8_t sum72[32]    = {0xe8,0x6e,0x86,0xdb,0x70,0x0f,0x1f,0x8c,0x9a,0x28,0x0d,0x70,0x0e,0xdd,0xb6,0x4d,0x3a,0x22,0x9d,0x59,0x7a,0x87,0xa0,0x8a,0x6f,0xbd,0x2c,0x63,0xe1,0x3a,0x8d,0xc6};
    mont256_from_bytes(&ctx, augend, augend72);
    mont256_from_bytes(&ctx, addend, addend72);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum72, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend73[32] = {0xb4,0x5d,0xb7,0x07,0xac,0x74,0x77,0xb6,0x42,0x73,0x02,0x8b,0x8c,0x68,0xc4,0x67,0x22,0xcf,0xcb,0xb9,0x93,0xc5,0x65,0x17,0xd4,0x47,0xfc,0xbf,0x7a,0xa9,0x15,0x10};
    std::uint8_t addend73[32] = {0x0b,0xd6,0x32,0x68,0x7d,0x54,0x19,0xf2,0x83,0x4d,0x71,0xc9,0x54,0x6d,0x11,0x79,0x7d,0xb6,0x11,0x1d,0x96,0x54,0x6e,0x7f,0x7c,0x5c,0xce,0xb3,0x2d,0x08,0x9a,0x95};
    std::uint8_t sum73[32]    = {0xc0,0x33,0xe9,0x70,0x29,0xc8,0x91,0xa8,0xc5,0xc0,0x74,0x54,0xe0,0xd5,0xd5,0xe0,0xa0,0x85,0xdc,0xd7,0x2a,0x19,0xd3,0x97,0x50,0xa4,0xcb,0x72,0xa7,0xb1,0xaf,0xa5};
    mont256_from_bytes(&ctx, augend, augend73);
    mont256_from_bytes(&ctx, addend, addend73);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum73, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend74[32] = {0x38,0x12,0xf8,0xc4,0x87,0x60,0x71,0x44,0x9c,0xa9,0x3c,0xc0,0x87,0xfc,0x4b,0x01,0x4a,0x7f,0x4d,0xc4,0xe8,0xa2,0xdf,0x2c,0x16,0xa6,0x04,0x07,0xb4,0xec,0xc8,0x9f};
    std::uint8_t addend74[32] = {0xae,0xb9,0xc7,0x0e,0x84,0x22,0x77,0x92,0xe8,0xa9,0xcb,0x78,0x89,0x8c,0xb2,0x53,0x26,0x23,0x23,0x92,0x03,0x97,0xd7,0x17,0x5e,0xe1,0x22,0x26,0x44,0x9c,0x19,0xe9};
    std::uint8_t sum74[32]    = {0xe6,0xcc,0xbf,0xd3,0x0b,0x82,0xe8,0xd7,0x85,0x53,0x08,0x39,0x11,0x88,0xfd,0x54,0x70,0xa2,0x71,0x56,0xec,0x3a,0xb6,0x43,0x75,0x87,0x26,0x2d,0xf9,0x88,0xe2,0x88};
    mont256_from_bytes(&ctx, augend, augend74);
    mont256_from_bytes(&ctx, addend, addend74);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum74, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend75[32] = {0x3f,0xd2,0xf4,0x00,0x0f,0xfd,0x80,0x03,0xdd,0x4b,0xbb,0xe9,0x66,0x24,0x56,0x67,0x8a,0x56,0xf2,0xc3,0x93,0xf8,0xc3,0x22,0x3c,0x28,0x1f,0xce,0xbd,0x79,0x3a,0x2e};
    std::uint8_t addend75[32] = {0xa7,0x61,0xa3,0xec,0x88,0xf8,0x9b,0xd2,0xeb,0x6f,0xce,0xb0,0x61,0x60,0xdf,0x9e,0x2c,0x6a,0xd3,0xca,0x3b,0x68,0x7d,0x7c,0x2a,0xb2,0xcc,0xae,0xc1,0x32,0x1b,0x60};
    std::uint8_t sum75[32]    = {0xe7,0x34,0x97,0xec,0x98,0xf6,0x1b,0xd6,0xc8,0xbb,0x8a,0x99,0xc7,0x85,0x36,0x05,0xb6,0xc1,0xc6,0x8d,0xcf,0x61,0x40,0x9e,0x66,0xda,0xec,0x7d,0x7e,0xab,0x55,0x8e};
    mont256_from_bytes(&ctx, augend, augend75);
    mont256_from_bytes(&ctx, addend, addend75);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum75, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend76[32] = {0x3f,0x84,0xad,0xd6,0x51,0x37,0x37,0x59,0xbb,0x26,0x69,0xf9,0x91,0xfa,0xa2,0x59,0x95,0xb2,0x80,0xa3,0xa4,0xb4,0x02,0x86,0x03,0xea,0xc6,0x31,0x08,0xcc,0xd2,0x4b};
    std::uint8_t addend76[32] = {0x0a,0x4f,0x41,0x23,0x16,0xd5,0x99,0x36,0xd7,0x7d,0xe4,0xe3,0xa5,0x53,0x3f,0x42,0x09,0xf5,0x32,0xcc,0x15,0x38,0x0e,0xe1,0x8c,0x8b,0x1c,0x69,0xef,0xe7,0x79,0xc9};
    std::uint8_t sum76[32]    = {0x49,0xd3,0xee,0xf9,0x68,0x0c,0xd0,0x90,0x92,0xa4,0x4e,0xdd,0x37,0x4d,0xe1,0x9b,0x9f,0xa7,0xb3,0x6f,0xb9,0xec,0x11,0x67,0x90,0x75,0xe2,0x9a,0xf8,0xb4,0x4c,0x14};
    mont256_from_bytes(&ctx, augend, augend76);
    mont256_from_bytes(&ctx, addend, addend76);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum76, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend77[32] = {0x75,0x96,0xfd,0x85,0xce,0x33,0x25,0x34,0xf8,0x9c,0x14,0xb6,0x92,0x39,0x38,0x7e,0x76,0x2b,0xfe,0xb2,0xf3,0x09,0x75,0x30,0x50,0x5f,0x01,0x40,0x8d,0xac,0x93,0x85};
    std::uint8_t addend77[32] = {0xfb,0x6a,0xeb,0x05,0x4d,0x77,0x71,0x3d,0xd1,0xed,0xa3,0x2f,0xba,0x76,0x6e,0x2a,0x85,0xa9,0xa8,0x3f,0xd8,0x8d,0x52,0x40,0x2a,0x20,0x7c,0x5d,0x71,0xca,0xf3,0x38};
    std::uint8_t sum77[32]    = {0x71,0x01,0xe8,0x8c,0x1b,0xaa,0x96,0x72,0xca,0x89,0xb7,0xe6,0x4c,0xaf,0xa6,0xa9,0x89,0xd1,0xc7,0x87,0xa9,0xd0,0xc2,0x45,0x26,0xc3,0x89,0x94,0xc5,0xa2,0x45,0x9a};
    mont256_from_bytes(&ctx, augend, augend77);
    mont256_from_bytes(&ctx, addend, addend77);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum77, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend78[32] = {0xdb,0xdb,0xe7,0x3c,0x4f,0x4f,0xfa,0x44,0x90,0xa3,0x0d,0x3a,0xd7,0x5f,0x47,0xaa,0xb7,0x9e,0xd0,0x77,0x6c,0x34,0x8c,0x21,0xd1,0x7a,0x98,0x9e,0x88,0x3b,0x38,0x98};
    std::uint8_t addend78[32] = {0x50,0xd4,0xc3,0x6e,0x72,0xef,0xc4,0x42,0x66,0x7a,0x9b,0xa6,0x09,0x63,0xc5,0x48,0x0c,0xb4,0x65,0x5a,0xf0,0x7f,0x7e,0x02,0xbc,0xda,0xee,0x70,0x02,0x02,0x49,0x64};
    std::uint8_t sum78[32]    = {0x2c,0xb0,0xaa,0xab,0xc2,0x3f,0xbe,0x86,0xf7,0x1d,0xa8,0xe0,0xe0,0xc3,0x0c,0xf3,0x52,0x4f,0x56,0x67,0x3a,0xee,0x04,0xf9,0x3a,0x99,0x93,0x05,0x50,0x68,0x40,0xd9};
    mont256_from_bytes(&ctx, augend, augend78);
    mont256_from_bytes(&ctx, addend, addend78);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum78, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend79[32] = {0xf7,0xb2,0x97,0xd6,0x8e,0xa2,0x46,0x9d,0x7e,0xe6,0xbb,0x69,0x20,0x5a,0xff,0x32,0xd4,0x9f,0x33,0x31,0xa2,0x7d,0xe7,0x25,0x5a,0xd3,0xab,0xf1,0x2a,0xb5,0x47,0x24};
    std::uint8_t addend79[32] = {0x48,0x12,0xfb,0x67,0xea,0x9a,0xfe,0xd7,0xd4,0xb4,0x2b,0x7b,0xd8,0xb9,0x73,0x0a,0xe2,0xdc,0xb1,0x49,0x5a,0x26,0x97,0x4e,0x10,0x0b,0xfd,0x2c,0x01,0x73,0x23,0xef};
    std::uint8_t sum79[32]    = {0x3f,0xc5,0x93,0x3f,0x79,0x3d,0x45,0x75,0x53,0x9a,0xe6,0xe4,0xf9,0x14,0x72,0x3e,0x45,0x78,0x05,0x0f,0xda,0xde,0x79,0x48,0x17,0x23,0xb5,0x13,0xf2,0x53,0x29,0xf0};
    mont256_from_bytes(&ctx, augend, augend79);
    mont256_from_bytes(&ctx, addend, addend79);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum79, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend80[32] = {0x70,0xf1,0x8a,0xde,0xd6,0xa9,0xed,0x5f,0x00,0xf5,0x5f,0xeb,0xd0,0x88,0xd7,0x62,0xb8,0x24,0x7c,0xc1,0x09,0x83,0x12,0x3d,0x7e,0xb0,0x7b,0x5f,0x45,0xf0,0x54,0xfb};
    std::uint8_t addend80[32] = {0x86,0x96,0x8e,0xd7,0x7d,0x99,0xbf,0x38,0x75,0x7d,0xc1,0x04,0x12,0x06,0x40,0x57,0xef,0x5c,0x1b,0xbb,0xfa,0x08,0x2e,0xde,0xea,0x7e,0xd6,0x83,0x80,0x06,0xb5,0x1b};
    std::uint8_t sum80[32]    = {0xf7,0x88,0x19,0xb6,0x54,0x43,0xac,0x97,0x76,0x73,0x20,0xef,0xe2,0x8f,0x17,0xba,0xa7,0x80,0x98,0x7d,0x03,0x8b,0x41,0x1c,0x69,0x2f,0x51,0xe2,0xc5,0xf7,0x0a,0x16};
    mont256_from_bytes(&ctx, augend, augend80);
    mont256_from_bytes(&ctx, addend, addend80);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum80, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend81[32] = {0x85,0x15,0x50,0x75,0xcf,0x63,0x3f,0x02,0xb3,0xd4,0x02,0xd5,0xe1,0xe8,0xbb,0x67,0xf1,0x12,0xf0,0x53,0xdb,0xfe,0x23,0x9a,0xc7,0x9e,0x55,0x97,0xa7,0x4d,0x2c,0xcc};
    std::uint8_t addend81[32] = {0x78,0xfe,0x28,0xea,0x7b,0xb9,0xc5,0x19,0xb3,0x81,0x9c,0x42,0x71,0xb7,0x7b,0x55,0xc6,0x4d,0x84,0x78,0xb6,0x81,0x1a,0x85,0x4f,0x64,0xb7,0x3c,0x2f,0xa0,0xb0,0xde};
    std::uint8_t sum81[32]    = {0xfe,0x13,0x79,0x60,0x4b,0x1d,0x04,0x1c,0x67,0x55,0x9f,0x18,0x53,0xa0,0x36,0xbd,0xb7,0x60,0x74,0xcc,0x92,0x7f,0x3e,0x20,0x17,0x03,0x0c,0xd3,0xd6,0xed,0xdd,0xaa};
    mont256_from_bytes(&ctx, augend, augend81);
    mont256_from_bytes(&ctx, addend, addend81);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum81, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend82[32] = {0xa1,0x93,0x07,0x08,0xb4,0x78,0xb6,0x1f,0x32,0x52,0xe3,0xef,0xb9,0x68,0xee,0x66,0x00,0x29,0xb0,0x14,0xdd,0x3d,0xd1,0x88,0x87,0x58,0x3e,0x02,0x06,0x5f,0x75,0x50};
    std::uint8_t addend82[32] = {0xc0,0xed,0xbf,0x98,0xeb,0xb8,0x9f,0x3c,0x0a,0xa8,0xb8,0xf4,0x45,0xfb,0x1b,0x99,0x4c,0xd2,0xa2,0xae,0x11,0x1e,0x2f,0x1e,0x47,0xe2,0x04,0x89,0x32,0x33,0xd8,0x3c};
    std::uint8_t sum82[32]    = {0x62,0x80,0xc6,0xa2,0xa0,0x31,0x55,0x5b,0x3c,0xfb,0x9c,0xe3,0xff,0x64,0x09,0xff,0xda,0xf8,0x73,0x57,0xcc,0x95,0xfb,0x7b,0x7b,0x7e,0x4e,0x81,0xfe,0xbe,0x0c,0x69};
    mont256_from_bytes(&ctx, augend, augend82);
    mont256_from_bytes(&ctx, addend, addend82);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum82, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend83[32] = {0xf1,0x98,0x07,0x9e,0x46,0xec,0x11,0xc6,0x57,0x52,0x9a,0xb3,0x73,0x7a,0xb8,0x24,0x50,0x95,0x7b,0x0a,0xbe,0x8f,0x52,0x0f,0x75,0x41,0xfe,0x69,0xa6,0xf9,0xdc,0x02};
    std::uint8_t addend83[32] = {0xed,0xe2,0x82,0x5d,0x9d,0xfb,0x44,0xdb,0x62,0x2d,0x2d,0x62,0x85,0x15,0x3f,0x10,0x56,0xc2,0x2f,0xec,0xa8,0x9f,0x90,0xd8,0x49,0x5e,0x7d,0xe9,0xc9,0xb8,0xf2,0xeb};
    std::uint8_t sum83[32]    = {0xdf,0x7a,0x89,0xfc,0xe4,0xe7,0x56,0xa1,0xb9,0x7f,0xc8,0x15,0xf8,0x8f,0xf7,0x35,0x35,0x53,0xcb,0x8c,0x45,0x68,0xdd,0xbc,0x6a,0xe4,0x88,0x4a,0x36,0xdd,0x8d,0xca};
    mont256_from_bytes(&ctx, augend, augend83);
    mont256_from_bytes(&ctx, addend, addend83);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum83, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend84[32] = {0xf0,0xa3,0xdf,0xee,0x07,0xb2,0x0d,0xfd,0x0b,0x0a,0x8a,0x6c,0x54,0x52,0xdb,0x15,0xa6,0x81,0xa4,0x12,0x07,0x23,0x30,0x65,0x48,0x86,0x08,0xb6,0x88,0xe9,0xf7,0xde};
    std::uint8_t addend84[32] = {0xc0,0x81,0xbb,0x34,0x57,0xde,0x38,0x5e,0x2e,0x78,0xa5,0x2a,0x18,0x43,0x6b,0x92,0xd2,0x57,0x1f,0x85,0xbd,0xc8,0xbb,0x48,0xbf,0x13,0x04,0xbf,0x1e,0x0f,0xfa,0xfc};
    std::uint8_t sum84[32]    = {0xb1,0x25,0x9b,0x23,0x5f,0x90,0x46,0x5b,0x39,0x83,0x2f,0x96,0x6c,0x96,0x46,0xa9,0x06,0xd4,0xe4,0x2c,0xa3,0x25,0xe6,0x82,0xb3,0xdd,0x19,0x6c,0x6d,0x24,0xb1,0xb7};
    mont256_from_bytes(&ctx, augend, augend84);
    mont256_from_bytes(&ctx, addend, addend84);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum84, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend85[32] = {0x9d,0x88,0x25,0xcc,0x1d,0x8f,0xce,0xf8,0xa1,0x2f,0x17,0x83,0x16,0xcb,0x1b,0x5c,0x88,0xad,0x1b,0xfd,0x7b,0xd9,0x1a,0x71,0x24,0xf5,0x52,0x60,0x07,0xb2,0x0f,0xbb};
    std::uint8_t addend85[32] = {0x7e,0xa2,0xb1,0xad,0x7d,0xc3,0xa7,0x87,0x71,0x94,0xfb,0x64,0x19,0x8e,0xa5,0xfa,0x48,0x2e,0x07,0x1e,0xcb,0xb4,0xe0,0x1a,0xeb,0x84,0xc3,0x4b,0x7d,0x5c,0x46,0x25};
    std::uint8_t sum85[32]    = {0x1c,0x2a,0xd7,0x7a,0x9b,0x53,0x76,0x80,0x12,0xc4,0x12,0xe7,0x30,0x59,0xc1,0x57,0x5e,0xd7,0x43,0xb1,0x25,0xc7,0xf5,0x60,0xbc,0xbe,0x21,0xa2,0x4b,0x39,0x14,0xbd};
    mont256_from_bytes(&ctx, augend, augend85);
    mont256_from_bytes(&ctx, addend, addend85);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum85, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend86[32] = {0xf0,0xdb,0x19,0xe2,0x57,0x83,0x8e,0x64,0xcc,0x16,0x66,0xce,0xfb,0x2c,0x8b,0x0d,0xe9,0x30,0x32,0xe6,0x8b,0x67,0xf6,0x30,0x04,0xc0,0xc7,0xed,0xb6,0xcb,0x6a,0x27};
    std::uint8_t addend86[32] = {0xe7,0xb8,0x94,0x55,0xd0,0xa8,0x74,0x91,0x0f,0x5f,0xbd,0x9f,0xd4,0x29,0x7f,0xd4,0xe4,0x06,0x65,0xe8,0x0b,0xb8,0xd3,0x54,0x3f,0xe3,0x1d,0x36,0xe9,0x7e,0xbe,0x62};
    std::uint8_t sum86[32]    = {0xd8,0x93,0xae,0x39,0x28,0x2c,0x02,0xf5,0xdb,0x76,0x24,0x6e,0xcf,0x56,0x0a,0xe3,0x5b,0x32,0xb9,0x63,0x75,0x5a,0xc4,0x58,0xf0,0xe7,0xf1,0x1b,0x66,0x74,0xe7,0x66};
    mont256_from_bytes(&ctx, augend, augend86);
    mont256_from_bytes(&ctx, addend, addend86);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum86, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend87[32] = {0xf8,0x23,0x97,0x31,0x3d,0x28,0x8c,0xcf,0x48,0x8b,0x29,0x98,0x66,0xe9,0xf7,0xfe,0x64,0xb0,0xb1,0x36,0x72,0xe6,0x23,0x02,0xaa,0x8d,0x23,0xce,0x37,0xa0,0xaf,0xf8};
    std::uint8_t addend87[32] = {0x83,0xa4,0x18,0x81,0x34,0x42,0x02,0x8e,0x40,0xca,0x4d,0x24,0x41,0x84,0xb4,0xe1,0xb8,0x77,0x73,0xe0,0x15,0x18,0xe3,0x8c,0xdc,0x3c,0x40,0x1d,0x3f,0xbc,0x5c,0xed};
    std::uint8_t sum87[32]    = {0x7b,0xc7,0xaf,0xb3,0x71,0x6a,0x8f,0x5d,0x89,0x55,0x76,0xbc,0xa8,0x6e,0xac,0xe0,0xab,0x24,0x45,0xab,0x66,0x39,0x01,0x64,0x33,0x0d,0x6f,0xe2,0x3d,0x87,0xcb,0xc2};
    mont256_from_bytes(&ctx, augend, augend87);
    mont256_from_bytes(&ctx, addend, addend87);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum87, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend88[32] = {0x20,0x43,0xaf,0xd6,0xb4,0x8f,0xa6,0xd9,0xf9,0x34,0xad,0x4b,0x32,0x76,0xfa,0x63,0xff,0x23,0x2f,0x1f,0x26,0xa6,0xb1,0xad,0xf3,0x85,0xcf,0xa5,0x3b,0xd9,0x71,0xd7};
    std::uint8_t addend88[32] = {0x93,0x66,0x9c,0xef,0x43,0x06,0x2e,0xbd,0x07,0xc1,0x70,0xa1,0x79,0xc9,0x25,0x93,0xfc,0x34,0x16,0x8f,0xec,0x6e,0xa6,0x59,0xa8,0x7d,0x7c,0xd0,0xce,0x44,0xf1,0xc8};
    std::uint8_t sum88[32]    = {0xb3,0xaa,0x4c,0xc5,0xf7,0x95,0xd5,0x97,0x00,0xf6,0x1d,0xec,0xac,0x40,0x1f,0xf7,0xfb,0x57,0x45,0xaf,0x13,0x15,0x58,0x07,0x9c,0x03,0x4c,0x76,0x0a,0x1e,0x63,0x9f};
    mont256_from_bytes(&ctx, augend, augend88);
    mont256_from_bytes(&ctx, addend, addend88);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum88, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend89[32] = {0x6b,0x84,0xf7,0xf7,0xf7,0x03,0xc8,0x84,0x1f,0x73,0x7d,0xda,0x5b,0x82,0xbf,0x26,0xba,0x89,0x53,0x47,0x57,0x85,0xc1,0x51,0x26,0x7d,0x48,0xb5,0x94,0x4f,0xcd,0xc8};
    std::uint8_t addend89[32] = {0x52,0x55,0xfb,0x47,0xbd,0x42,0x2f,0x06,0x43,0xb2,0x70,0xf3,0xa9,0x66,0xde,0x3e,0xe3,0xa3,0x98,0x97,0x56,0x0b,0x39,0xa9,0x66,0xb7,0xbe,0x40,0xc2,0xe0,0x6f,0x3c};
    std::uint8_t sum89[32]    = {0xbd,0xda,0xf3,0x3f,0xb4,0x45,0xf7,0x8a,0x63,0x25,0xee,0xce,0x04,0xe9,0x9d,0x65,0x9e,0x2c,0xeb,0xde,0xad,0x90,0xfa,0xfa,0x8d,0x35,0x06,0xf6,0x57,0x30,0x3d,0x04};
    mont256_from_bytes(&ctx, augend, augend89);
    mont256_from_bytes(&ctx, addend, addend89);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum89, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend90[32] = {0x09,0x9d,0x95,0x25,0x9a,0xd8,0x15,0x7c,0xcc,0x40,0x0d,0x7f,0xe8,0x82,0xbd,0xe5,0x11,0xc2,0x87,0x54,0xb5,0xfe,0x13,0xb4,0x85,0x55,0x6d,0xcd,0x29,0x04,0x3a,0x15};
    std::uint8_t addend90[32] = {0xfb,0x93,0xc7,0x5d,0xd8,0x50,0x40,0x39,0x3e,0x12,0x63,0x06,0xf8,0x3e,0xb2,0xf6,0x8a,0x0f,0xd9,0x29,0xb5,0x40,0x14,0xfb,0x26,0x2b,0x91,0xa6,0xf4,0x61,0xb3,0x96};
    std::uint8_t sum90[32]    = {0x05,0x31,0x5c,0x84,0x73,0x28,0x55,0xb6,0x0a,0x52,0x70,0x86,0xe0,0xc1,0x70,0xdc,0x29,0xce,0x81,0x13,0x49,0x78,0x23,0x84,0x57,0xc5,0x0b,0x6a,0xe3,0x90,0xac,0x88};
    mont256_from_bytes(&ctx, augend, augend90);
    mont256_from_bytes(&ctx, addend, addend90);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum90, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend91[32] = {0xbd,0x0d,0x88,0x37,0x08,0xe0,0x2a,0x87,0x43,0x9a,0x92,0xba,0xc5,0x76,0x24,0x85,0xfc,0x0a,0x64,0x90,0x7a,0xee,0x07,0xa4,0xbc,0x75,0x08,0x6b,0x0a,0xdc,0x80,0xfd};
    std::uint8_t addend91[32] = {0xca,0xf1,0x0c,0x83,0xb5,0x55,0x83,0x3d,0xe6,0xfa,0xa7,0x38,0xcd,0xe0,0x73,0xb0,0xf1,0xa3,0x79,0x48,0x56,0x25,0x1d,0x3e,0x1e,0x53,0xa4,0xdd,0xaa,0x3a,0xed,0x43};
    std::uint8_t sum91[32]    = {0x87,0xfe,0x94,0xbb,0xbe,0x35,0xad,0xc5,0x2a,0x95,0x39,0xf3,0x93,0x56,0x98,0x37,0x7b,0xa9,0xfe,0x6d,0xaf,0x4d,0x1f,0xb7,0x87,0x0c,0xb9,0x3f,0x7b,0x42,0x2d,0x1d};
    mont256_from_bytes(&ctx, augend, augend91);
    mont256_from_bytes(&ctx, addend, addend91);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum91, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend92[32] = {0x67,0x1e,0x00,0x56,0xe0,0x19,0x2f,0x30,0xfc,0xd4,0x2d,0x92,0x4f,0xa0,0x2a,0x30,0x37,0x8a,0x75,0xe7,0x3b,0xf1,0x72,0x6c,0x16,0xb1,0x83,0x25,0xca,0xa1,0x55,0xbb};
    std::uint8_t addend92[32] = {0xc6,0x46,0x43,0x3c,0x32,0x6d,0x18,0xe0,0x93,0xa5,0x10,0x98,0x9a,0x5b,0x75,0x9d,0xc4,0x59,0xf9,0xc8,0xa5,0x47,0xdd,0x78,0x39,0xa0,0x8a,0xf3,0xb5,0xa6,0x11,0x75};
    std::uint8_t sum92[32]    = {0x2d,0x64,0x43,0x94,0x12,0x86,0x48,0x11,0x90,0x79,0x3e,0x2a,0xe9,0xfb,0x9f,0xce,0x89,0xe0,0x90,0x44,0xbf,0x73,0x4a,0xb8,0xfc,0x96,0x1a,0x10,0x46,0x72,0x26,0x0d};
    mont256_from_bytes(&ctx, augend, augend92);
    mont256_from_bytes(&ctx, addend, addend92);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum92, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend93[32] = {0xe0,0x34,0xc9,0xb4,0xe3,0x75,0x83,0xd4,0x45,0xab,0xda,0x0b,0x0a,0xab,0x78,0x0a,0x4c,0xa7,0x88,0x62,0xac,0xf3,0xc7,0x02,0x06,0xa1,0x3b,0x1e,0x72,0x4b,0x5f,0x48};
    std::uint8_t addend93[32] = {0x5a,0x82,0x4b,0xde,0x59,0x70,0xcf,0x3e,0x9e,0x92,0xc3,0xfc,0x45,0x28,0xf1,0xfc,0x9c,0x9e,0x6b,0x55,0x7a,0x21,0x04,0xbf,0x39,0xd9,0x26,0x52,0x30,0x49,0x80,0xab};
    std::uint8_t sum93[32]    = {0x3a,0xb7,0x15,0x94,0x3c,0xe6,0x53,0x12,0xe4,0x3e,0x9e,0x07,0x4f,0xd4,0x6a,0x07,0x77,0x42,0x14,0x4d,0x05,0x4e,0xc6,0x95,0xec,0xbe,0x6d,0x67,0x68,0xbf,0x9e,0xd0};
    mont256_from_bytes(&ctx, augend, augend93);
    mont256_from_bytes(&ctx, addend, addend93);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum93, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend94[32] = {0x89,0xe2,0x21,0x36,0x71,0xac,0xc2,0x9a,0x30,0x78,0xd6,0xb3,0xb2,0xca,0xf0,0xfd,0x9f,0x48,0x99,0xbf,0x2d,0xac,0x1c,0xee,0x22,0x7e,0xce,0x49,0x18,0xd9,0x71,0xf8};
    std::uint8_t addend94[32] = {0xb6,0x9f,0x15,0x7e,0xc9,0x64,0xb8,0x48,0x4e,0xc1,0x6b,0xd2,0xd8,0xe5,0x5d,0x6b,0xfd,0x12,0x97,0x9d,0x0c,0xec,0x22,0xa4,0x87,0xf2,0xf3,0x54,0x28,0xbd,0xef,0xfe};
    std::uint8_t sum94[32]    = {0x40,0x81,0x36,0xb6,0x3b,0x11,0x7a,0xe2,0x7f,0x3a,0x42,0x86,0x8b,0xb0,0x4e,0x6a,0x2a,0x57,0x51,0xf1,0x18,0xd2,0x3a,0x67,0x56,0xb5,0xcd,0x94,0x07,0xc2,0x20,0xd3};
    mont256_from_bytes(&ctx, augend, augend94);
    mont256_from_bytes(&ctx, addend, addend94);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum94, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend95[32] = {0x0f,0x35,0xb5,0x69,0x68,0x70,0x1c,0x1f,0x75,0xd2,0x98,0xec,0xff,0x04,0xd3,0xd1,0xc7,0x4f,0x77,0x77,0x1f,0x08,0xda,0x2f,0xe7,0x0c,0x80,0x70,0xf9,0x0a,0xa6,0xa6};
    std::uint8_t addend95[32] = {0xb1,0xd0,0x0b,0x8a,0x1d,0x09,0x33,0x70,0x03,0xb7,0xa9,0xa6,0x34,0xd9,0x80,0xa1,0xc8,0x65,0x26,0x5d,0xe0,0x39,0x57,0x85,0x0b,0xc9,0x1e,0x7f,0xfb,0x59,0x84,0x25};
    std::uint8_t sum95[32]    = {0xc1,0x05,0xc0,0xf3,0x85,0x79,0x4f,0x8f,0x79,0x8a,0x42,0x93,0x33,0xde,0x54,0x73,0x8f,0xb4,0x9d,0xd4,0xff,0x42,0x31,0xb4,0xf2,0xd5,0x9e,0xf0,0xf4,0x64,0x2a,0xcb};
    mont256_from_bytes(&ctx, augend, augend95);
    mont256_from_bytes(&ctx, addend, addend95);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum95, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend96[32] = {0x54,0x18,0x10,0x0d,0x4f,0x5f,0x52,0xc6,0x1d,0x5a,0xc7,0x1d,0x7f,0x62,0xdf,0xde,0x2c,0xe9,0xb9,0xac,0xd7,0xa2,0x88,0xd4,0xcf,0x10,0x32,0x52,0x1c,0x46,0xbb,0x0e};
    std::uint8_t addend96[32] = {0x7a,0x24,0x98,0x57,0x65,0x08,0x7a,0xbb,0x67,0xd8,0x3d,0x8c,0xa0,0x98,0x02,0xac,0xb2,0xab,0x67,0xd1,0x5b,0x48,0xcb,0xa1,0xee,0x68,0x4b,0x76,0xf4,0x24,0x6c,0x2a};
    std::uint8_t sum96[32]    = {0xce,0x3c,0xa8,0x64,0xb4,0x67,0xcd,0x81,0x85,0x33,0x04,0xaa,0x1f,0xfa,0xe2,0x8a,0xdf,0x95,0x21,0x7e,0x32,0xeb,0x54,0x76,0xbd,0x78,0x7d,0xc9,0x10,0x6b,0x27,0x38};
    mont256_from_bytes(&ctx, augend, augend96);
    mont256_from_bytes(&ctx, addend, addend96);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum96, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend97[32] = {0xc0,0x8c,0xc1,0x3f,0x2b,0xf6,0xf7,0x23,0x79,0x04,0x7b,0x66,0x94,0xd6,0x5d,0x10,0x79,0x28,0xae,0xb7,0x0f,0x0d,0x78,0x11,0x0e,0xe3,0x0a,0x7e,0xd8,0x89,0xa8,0x84};
    std::uint8_t addend97[32] = {0xe9,0xb7,0x2b,0x74,0xbe,0xa1,0x4f,0x7d,0xac,0x33,0x88,0x66,0x87,0xfe,0x48,0xa1,0x0a,0xc8,0x44,0x58,0xf0,0x24,0x59,0x44,0xc2,0x74,0x69,0x5e,0xdb,0xbc,0x69,0xee};
    std::uint8_t sum97[32]    = {0xaa,0x43,0xec,0xb4,0xea,0x98,0x46,0xa1,0x25,0x38,0x03,0xcd,0x1c,0xd4,0xa5,0xb2,0x11,0xed,0x13,0xa4,0xdd,0x6b,0xcc,0x2a,0x7d,0x9b,0x7f,0xd4,0x7a,0x70,0xd1,0x4f};
    mont256_from_bytes(&ctx, augend, augend97);
    mont256_from_bytes(&ctx, addend, addend97);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum97, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend98[32] = {0x1d,0x9b,0x73,0x4b,0xd6,0x2d,0x7e,0xe4,0x1d,0x95,0x62,0x49,0xb2,0x45,0x54,0x29,0x29,0x60,0x5e,0x23,0xf5,0xf1,0x7d,0x05,0xfc,0xee,0x35,0x50,0x3e,0x42,0x51,0xfd};
    std::uint8_t addend98[32] = {0xec,0x3e,0xc1,0xb8,0x8a,0xa5,0x32,0x12,0x38,0xe4,0x4f,0x0a,0x78,0xc7,0x48,0xf1,0x6f,0xe3,0x6d,0x18,0x77,0x50,0x93,0x35,0xca,0xd0,0x53,0xb1,0x02,0x6f,0xb5,0x4c};
    std::uint8_t sum98[32]    = {0x09,0xda,0x35,0x05,0x60,0xd2,0xb0,0xf6,0x56,0x79,0xb1,0x54,0x2b,0x0c,0x9d,0x1b,0x27,0x3f,0xeb,0xd1,0x4b,0x7c,0x0b,0x10,0x74,0x02,0x94,0xf8,0x06,0xdc,0xc6,0x26};
    mont256_from_bytes(&ctx, augend, augend98);
    mont256_from_bytes(&ctx, addend, addend98);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum98, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }

    std::uint8_t augend99[32] = {0xfc,0x7c,0x93,0x95,0x4d,0x79,0xbc,0x38,0x55,0x6e,0xeb,0x60,0xf0,0xde,0x71,0xc9,0x1e,0x55,0x30,0x94,0xd0,0x89,0x41,0x7d,0xbf,0x97,0x4a,0x59,0x07,0xd8,0x86,0xf5};
    std::uint8_t addend99[32] = {0x32,0x09,0xcf,0xe2,0x0a,0x61,0x56,0x8b,0x0e,0xfb,0x2f,0x65,0x49,0x1e,0x34,0x7c,0x1f,0x4f,0x9f,0xff,0x89,0x83,0xa2,0xa4,0xd2,0x30,0x92,0xc1,0x8c,0xaa,0x0e,0x14};
    std::uint8_t sum99[32]    = {0x2e,0x86,0x63,0x78,0x57,0xdb,0x12,0xc3,0x64,0x6a,0x1a,0xc6,0x39,0xfc,0xa6,0x45,0xcb,0xa0,0xf1,0x29,0x38,0x46,0xde,0xf7,0x3e,0x0b,0xe9,0x11,0x5a,0xad,0x53,0xe6};
    mont256_from_bytes(&ctx, augend, augend99);
    mont256_from_bytes(&ctx, addend, addend99);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum99, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_add");
    }
}
#else
void test_mont256_x64_add()
{
}
#endif