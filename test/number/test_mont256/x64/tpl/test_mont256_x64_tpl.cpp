#if defined(CPU_FLAG_MOVBE) && defined(CPU_FLAG_BMI2)
#include <gmlib/number/internal/mont256_x64.h>
#include <gmlib/number/internal/uint256_x64.h>
#include <stdexcept>
#include <cstring>

using namespace number::internal::x64;

static std::uint8_t  P_data[32]      = {0xff,0xff,0xff,0xfe,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff};
static std::uint8_t  P_SUB2_data[32] = {0xff,0xff,0xff,0xfe,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfd};
static std::uint8_t  R_data[32]      = {0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01};
static std::uint8_t  R_POW2_data[32] = {0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x02,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x03};
static std::uint32_t N_              = 1;

void test_mont256_x64_tpl()
{
    uint256_t P, P_SUB2, R, R_POW2;
    uint256_from_bytes(P, P_data);
    uint256_from_bytes(P_SUB2, P_SUB2_data);
    uint256_from_bytes(R, R_data);
    uint256_from_bytes(R_POW2, R_POW2_data);

    Mont256CTX ctx;
    ctx.P = P, ctx.P_SUB2 = P_SUB2;
    ctx.R = R, ctx.R_POW2 = R_POW2;
    ctx.N_ = N_;

    mont256_t    multiplier, product;
    std::uint8_t product_data[32];

    std::uint8_t multiplier0[32] = {0xba,0x01,0x4b,0x6f,0x2a,0x11,0xf5,0x7d,0xe7,0x0d,0x5e,0x4e,0x20,0x17,0x4e,0x49,0x45,0xf7,0xf9,0xf2,0x68,0x9c,0x53,0xa6,0xeb,0xde,0x84,0x6d,0x2b,0x54,0xf0,0x24};
    std::uint8_t product0[32]    = {0x2e,0x03,0xe2,0x4f,0x7e,0x35,0xe0,0x79,0xb5,0x28,0x1a,0xea,0x60,0x45,0xea,0xdb,0xd1,0xe7,0xed,0xd9,0x39,0xd4,0xfa,0xf2,0xc3,0x9b,0x8d,0x47,0x81,0xfe,0xd0,0x6e};
    mont256_from_bytes(&ctx, multiplier, multiplier0);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product0, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier1[32] = {0x59,0x20,0xcf,0xbc,0xda,0x32,0x34,0xb7,0x46,0x4e,0x48,0xab,0xb0,0x67,0x1c,0xab,0x13,0xfc,0xb8,0xab,0x06,0x5f,0x1c,0x1a,0x39,0x3d,0x4a,0x27,0x4d,0xb8,0xd0,0x18};
    std::uint8_t product1[32]    = {0x0b,0x62,0x6f,0x37,0x8e,0x96,0x9e,0x25,0xd2,0xea,0xda,0x03,0x11,0x35,0x56,0x01,0x3b,0xf6,0x2a,0x02,0x13,0x1d,0x54,0x4d,0xab,0xb7,0xde,0x75,0xe9,0x2a,0x70,0x49};
    mont256_from_bytes(&ctx, multiplier, multiplier1);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product1, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier2[32] = {0xac,0xa9,0x87,0xfe,0xcd,0x83,0x39,0xa3,0x6d,0xcf,0x81,0x30,0x88,0x5d,0x88,0x55,0xc9,0xad,0x29,0xb3,0xf8,0xf1,0x69,0x1a,0x43,0xa8,0xa2,0xb6,0xf2,0x84,0xb7,0xf7};
    std::uint8_t product2[32]    = {0x05,0xfc,0x97,0xfe,0x68,0x89,0xac,0xea,0x49,0x6e,0x83,0x91,0x99,0x18,0x99,0x01,0x5d,0x07,0x7d,0x1d,0xea,0xd4,0x3b,0x4c,0xca,0xf9,0xe8,0x24,0xd7,0x8e,0x27,0xe7};
    mont256_from_bytes(&ctx, multiplier, multiplier2);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product2, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier3[32] = {0x03,0x63,0xc5,0x37,0x42,0x75,0xab,0x83,0x54,0x00,0x4a,0xc6,0x62,0xfa,0x0e,0xd9,0xa3,0x3d,0x67,0xfa,0x61,0x66,0x43,0x03,0x7a,0xe3,0xe5,0x16,0xae,0xd0,0x95,0xc4};
    std::uint8_t product3[32]    = {0x0a,0x2b,0x4f,0xa5,0xc7,0x61,0x02,0x89,0xfc,0x00,0xe0,0x53,0x28,0xee,0x2c,0x8c,0xe9,0xb8,0x37,0xef,0x24,0x32,0xc9,0x0a,0x70,0xab,0xaf,0x44,0x0c,0x71,0xc1,0x4c};
    mont256_from_bytes(&ctx, multiplier, multiplier3);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product3, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier4[32] = {0x2d,0xca,0x55,0x3c,0x56,0xc7,0xa0,0x49,0x6c,0x11,0xdd,0x09,0x15,0xf5,0x9b,0x3d,0x8f,0x42,0x34,0xc0,0x33,0x38,0x45,0x61,0x35,0x19,0x9c,0x0d,0x1e,0xa7,0xf2,0xde};
    std::uint8_t product4[32]    = {0x89,0x5e,0xff,0xb5,0x04,0x56,0xe0,0xdc,0x44,0x35,0x97,0x1b,0x41,0xe0,0xd1,0xb8,0xad,0xc6,0x9e,0x40,0x99,0xa8,0xd0,0x23,0x9f,0x4c,0xd4,0x27,0x5b,0xf7,0xd8,0x9a};
    mont256_from_bytes(&ctx, multiplier, multiplier4);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product4, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier5[32] = {0x35,0x27,0xcd,0xa3,0x9b,0x3b,0x68,0xb3,0x29,0x65,0x50,0x87,0x48,0x9d,0xcb,0x47,0xda,0xe5,0xe3,0x0f,0xe0,0xb6,0x8f,0x9e,0xa3,0xc5,0x11,0xa4,0xa8,0x68,0xce,0xbc};
    std::uint8_t product5[32]    = {0x9f,0x77,0x68,0xea,0xd1,0xb2,0x3a,0x19,0x7c,0x2f,0xf1,0x95,0xd9,0xd9,0x61,0xd7,0x90,0xb1,0xa9,0x2f,0xa2,0x23,0xae,0xdb,0xeb,0x4f,0x34,0xed,0xf9,0x3a,0x6c,0x34};
    mont256_from_bytes(&ctx, multiplier, multiplier5);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product5, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier6[32] = {0x9c,0x2a,0x06,0x7d,0xd1,0x7d,0x79,0x41,0xaf,0x75,0xc9,0xa3,0xdf,0xfc,0x11,0x67,0x12,0xa9,0x8f,0xf3,0x72,0x8c,0xcf,0x98,0x4a,0xd5,0x6f,0x18,0xbe,0x16,0x8e,0x4e};
    std::uint8_t product6[32]    = {0xd4,0x7e,0x13,0x7a,0x74,0x78,0x6b,0xc5,0x0e,0x61,0x5c,0xeb,0x9f,0xf4,0x34,0x35,0x37,0xfc,0xaf,0xdb,0x57,0xa6,0x6e,0xc7,0xe0,0x80,0x4d,0x4a,0x3a,0x43,0xaa,0xeb};
    mont256_from_bytes(&ctx, multiplier, multiplier6);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product6, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier7[32] = {0x02,0x3a,0x23,0x02,0x4b,0x5b,0x05,0x86,0xea,0x0f,0x32,0xd8,0xf3,0x14,0x59,0x92,0x5d,0x65,0xe0,0x96,0x1e,0x26,0x9d,0xa5,0xb8,0xa4,0x9e,0xd7,0x67,0x4b,0x73,0xbf};
    std::uint8_t product7[32]    = {0x06,0xae,0x69,0x06,0xe2,0x11,0x10,0x94,0xbe,0x2d,0x98,0x8a,0xd9,0x3d,0x0c,0xb7,0x18,0x31,0xa1,0xc2,0x5a,0x73,0xd8,0xf1,0x29,0xed,0xdc,0x86,0x35,0xe2,0x5b,0x3d};
    mont256_from_bytes(&ctx, multiplier, multiplier7);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product7, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier8[32] = {0xfd,0x7d,0xbe,0x32,0xd0,0xa3,0x33,0x91,0x92,0xff,0x4a,0x83,0xb8,0xc5,0xdd,0x4d,0xbb,0xe5,0x3e,0x78,0x5c,0x6b,0xdb,0x1b,0xf4,0x86,0x0f,0xf1,0x5f,0x8e,0x3d,0xfd};
    std::uint8_t product8[32]    = {0xf8,0x79,0x3a,0x9a,0x71,0xe9,0x9a,0xb4,0xb8,0xfd,0xdf,0x8b,0x2a,0x51,0x97,0xe9,0x33,0xaf,0xbb,0x6b,0x15,0x43,0x91,0x51,0xdd,0x92,0x2f,0xd4,0x1e,0xaa,0xb9,0xf9};
    mont256_from_bytes(&ctx, multiplier, multiplier8);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product8, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier9[32] = {0x88,0x9d,0x0b,0x87,0x59,0x06,0xba,0xf1,0xcc,0x80,0x58,0x49,0x54,0xca,0x55,0x84,0x73,0x78,0xca,0x23,0xcf,0xbb,0xa6,0x76,0xdd,0xfd,0xb5,0x21,0xdb,0xb5,0xc7,0x13};
    std::uint8_t product9[32]    = {0x99,0xd7,0x22,0x97,0x0b,0x14,0x30,0xd5,0x65,0x81,0x08,0xdb,0xfe,0x5f,0x00,0x8d,0x5a,0x6a,0x5e,0x6c,0x6f,0x32,0xf3,0x63,0x99,0xf9,0x1f,0x65,0x93,0x21,0x55,0x3a};
    mont256_from_bytes(&ctx, multiplier, multiplier9);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product9, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier10[32] = {0x4f,0x75,0x15,0xd0,0x2d,0xeb,0x67,0xf6,0x5c,0xe6,0xe8,0xb1,0x78,0xdf,0xcf,0xf8,0x0d,0xf0,0x26,0x6a,0x1b,0x42,0x08,0xb2,0x02,0x24,0x9b,0xf7,0x0a,0xe9,0x90,0x14};
    std::uint8_t product10[32]    = {0xee,0x5f,0x41,0x70,0x89,0xc2,0x37,0xe3,0x16,0xb4,0xba,0x14,0x6a,0x9f,0x6f,0xe8,0x29,0xd0,0x73,0x3e,0x51,0xc6,0x1a,0x16,0x06,0x6d,0xd3,0xe5,0x20,0xbc,0xb0,0x3c};
    mont256_from_bytes(&ctx, multiplier, multiplier10);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product10, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier11[32] = {0xa4,0xb6,0x09,0x6d,0xcc,0xcd,0x81,0x31,0x50,0x81,0xe1,0x5e,0x09,0xfd,0x1e,0x15,0x56,0xbb,0xbd,0xec,0x57,0xe5,0x49,0x95,0x49,0xdd,0x8e,0xc1,0xa0,0x87,0x6b,0xce};
    std::uint8_t product11[32]    = {0xee,0x22,0x1c,0x4a,0x66,0x68,0x83,0x93,0xf1,0x85,0xa4,0x1a,0x1d,0xf7,0x5a,0x40,0x04,0x33,0x39,0xc6,0x07,0xaf,0xdc,0xbe,0xdd,0x98,0xac,0x44,0xe1,0x96,0x43,0x6b};
    mont256_from_bytes(&ctx, multiplier, multiplier11);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product11, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier12[32] = {0x3c,0x1a,0xa5,0x04,0x8f,0x2d,0x3e,0xc3,0x0d,0x64,0x63,0x49,0x3f,0x82,0x10,0xa1,0x76,0x9f,0x7c,0xc0,0x2e,0xab,0x78,0x8d,0xe8,0xd1,0x2b,0x74,0x1d,0xff,0xe5,0x22};
    std::uint8_t product12[32]    = {0xb4,0x4f,0xef,0x0d,0xad,0x87,0xbc,0x49,0x28,0x2d,0x29,0xdb,0xbe,0x86,0x31,0xe4,0x63,0xde,0x76,0x40,0x8c,0x02,0x69,0xa9,0xba,0x73,0x82,0x5c,0x59,0xff,0xaf,0x66};
    mont256_from_bytes(&ctx, multiplier, multiplier12);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product12, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier13[32] = {0x76,0xc1,0x2f,0x46,0xe5,0x7b,0xe1,0x3d,0xa1,0x71,0xb6,0x1b,0x62,0xde,0x8b,0x26,0x15,0x78,0xe7,0x18,0x45,0xdf,0x92,0xa5,0x8e,0x33,0x1f,0x17,0x61,0xab,0xad,0xca};
    std::uint8_t product13[32]    = {0x64,0x43,0x8d,0xd5,0xb0,0x73,0xa3,0xb8,0xe4,0x55,0x22,0x52,0x28,0x9b,0xa1,0x72,0x40,0x6a,0xb5,0x49,0xd1,0x9e,0xb7,0xef,0xaa,0x99,0x5d,0x46,0x25,0x03,0x09,0x5f};
    mont256_from_bytes(&ctx, multiplier, multiplier13);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product13, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier14[32] = {0xad,0xdd,0x39,0x89,0xba,0x6b,0x9e,0x45,0xda,0x46,0x6f,0x01,0x4c,0x29,0x6d,0x6a,0x3a,0xd9,0x23,0x72,0x1f,0xc0,0xeb,0xe6,0x36,0x02,0xb8,0xe4,0xdf,0xb2,0xa9,0xc6};
    std::uint8_t product14[32]    = {0x09,0x97,0xac,0x9f,0x2f,0x42,0xda,0xd1,0x8e,0xd3,0x4d,0x03,0xe4,0x7c,0x48,0x3e,0xb0,0x8b,0x6a,0x58,0x5f,0x42,0xc3,0xb0,0xa2,0x08,0x2a,0xae,0x9f,0x17,0xfd,0x54};
    mont256_from_bytes(&ctx, multiplier, multiplier14);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product14, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier15[32] = {0x31,0x88,0x63,0x64,0x4b,0xe3,0x86,0x49,0x7b,0xbb,0xc1,0x39,0x09,0xf2,0xdc,0xf6,0xdd,0x13,0x70,0xf8,0x37,0xb2,0x64,0x8c,0x44,0x30,0x9d,0x18,0x7c,0x0e,0x0e,0x67};
    std::uint8_t product15[32]    = {0x94,0x99,0x2a,0x2c,0xe3,0xaa,0x92,0xdc,0x73,0x33,0x43,0xab,0x1d,0xd8,0x96,0xe4,0x97,0x3a,0x52,0xe8,0xa7,0x17,0x2d,0xa4,0xcc,0x91,0xd7,0x49,0x74,0x2a,0x2b,0x35};
    mont256_from_bytes(&ctx, multiplier, multiplier15);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product15, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier16[32] = {0x56,0xdc,0x62,0x9a,0x38,0xc0,0xb5,0x73,0x5c,0x12,0x24,0x53,0x16,0x9b,0x26,0xbe,0x3a,0xb2,0x11,0x8b,0x6f,0x31,0xc2,0x2b,0x8b,0x75,0x6b,0x15,0xb1,0x38,0xa2,0x1c};
    std::uint8_t product16[32]    = {0x04,0x95,0x27,0xcf,0xaa,0x42,0x20,0x5a,0x14,0x36,0x6c,0xf9,0x43,0xd1,0x74,0x3a,0xb0,0x16,0x34,0xa3,0x4d,0x95,0x46,0x81,0xa2,0x60,0x41,0x41,0x13,0xa9,0xe6,0x55};
    mont256_from_bytes(&ctx, multiplier, multiplier16);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product16, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier17[32] = {0x17,0x53,0x86,0xf9,0xe9,0x78,0x06,0x96,0x2d,0x5f,0x0d,0x0d,0x1b,0x3d,0xd9,0xbb,0x4a,0x4a,0xb0,0x14,0xc3,0xab,0x3a,0xdf,0x66,0x5b,0xf0,0x05,0x8f,0xd0,0x37,0xf0};
    std::uint8_t product17[32]    = {0x45,0xfa,0x94,0xed,0xbc,0x68,0x13,0xc2,0x88,0x1d,0x27,0x27,0x51,0xb9,0x8d,0x31,0xde,0xe0,0x10,0x3e,0x4b,0x01,0xb0,0x9e,0x33,0x13,0xd0,0x10,0xaf,0x70,0xa7,0xd0};
    mont256_from_bytes(&ctx, multiplier, multiplier17);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product17, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier18[32] = {0xdd,0x0e,0x79,0x30,0x6f,0xd0,0x8c,0xba,0xfd,0xc1,0x5c,0x93,0x85,0xf7,0x88,0x03,0x53,0x85,0x1a,0xc1,0xff,0x1a,0x7d,0x95,0xc6,0xfb,0x22,0xe9,0x21,0xdd,0x82,0xbc};
    std::uint8_t product18[32]    = {0x97,0x2b,0x6b,0x93,0x4f,0x71,0xa6,0x30,0xf9,0x44,0x15,0xba,0x91,0xe6,0x98,0x09,0xfa,0x8f,0x50,0x47,0xfd,0x4f,0x78,0xbf,0x54,0xf1,0x68,0xbb,0x65,0x98,0x88,0x36};
    mont256_from_bytes(&ctx, multiplier, multiplier18);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product18, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier19[32] = {0xd9,0x8c,0x70,0x5a,0xa5,0x8f,0xfd,0x67,0x84,0x14,0xb6,0x75,0x27,0xe0,0xad,0xc8,0x47,0x85,0x66,0x9c,0xc2,0x2e,0x94,0x13,0x3e,0x76,0x81,0x00,0x4a,0xad,0x21,0xd1};
    std::uint8_t product19[32]    = {0x8c,0xa5,0x51,0x11,0xf0,0xaf,0xf8,0x36,0x8c,0x3e,0x23,0x5f,0x77,0xa2,0x09,0x58,0xd6,0x90,0x33,0xd8,0x46,0x8b,0xbc,0x37,0xbb,0x63,0x83,0x00,0xe0,0x07,0x65,0x75};
    mont256_from_bytes(&ctx, multiplier, multiplier19);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product19, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier20[32] = {0x07,0xc5,0xa6,0x0d,0x79,0x78,0x82,0xa4,0x57,0xb2,0xad,0x69,0xcd,0xfb,0x57,0xf6,0x3a,0x68,0x72,0xbf,0xc0,0x38,0xe1,0x96,0x7e,0x77,0x13,0xd7,0xd4,0xe1,0xb0,0x31};
    std::uint8_t product20[32]    = {0x17,0x50,0xf2,0x28,0x6c,0x69,0x87,0xed,0x07,0x18,0x08,0x3d,0x69,0xf2,0x07,0xe2,0xaf,0x39,0x58,0x3f,0x40,0xaa,0xa4,0xc3,0x7b,0x65,0x3b,0x87,0x7e,0xa5,0x10,0x93};
    mont256_from_bytes(&ctx, multiplier, multiplier20);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product20, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier21[32] = {0x62,0x43,0x9d,0x98,0x64,0x0c,0xcc,0x17,0x2f,0xab,0x49,0x0c,0xb3,0x8e,0x2d,0x20,0x0d,0xda,0xb0,0x56,0xb7,0x23,0x3e,0xd8,0xcd,0x49,0x55,0x2a,0x1d,0xa1,0x63,0xfc};
    std::uint8_t product21[32]    = {0x26,0xca,0xd8,0xca,0x2c,0x26,0x64,0x45,0x8f,0x01,0xdb,0x26,0x1a,0xaa,0x87,0x60,0x29,0x90,0x11,0x05,0x25,0x69,0xbc,0x89,0x67,0xdb,0xff,0x7e,0x58,0xe4,0x2b,0xf5};
    mont256_from_bytes(&ctx, multiplier, multiplier21);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product21, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier22[32] = {0x71,0x7a,0xd1,0xab,0x6b,0x50,0xeb,0xc6,0x32,0xa6,0x9b,0x1a,0xc6,0x7b,0x53,0xf2,0x64,0x09,0x68,0x30,0x35,0x1e,0x9c,0x7f,0xca,0x67,0xbd,0x2c,0x08,0xbc,0x8f,0xe9};
    std::uint8_t product22[32]    = {0x54,0x70,0x75,0x03,0x41,0xf2,0xc3,0x52,0x97,0xf3,0xd1,0x50,0x53,0x71,0xfb,0xd7,0x2c,0x1c,0x38,0x91,0x9f,0x5b,0xd5,0x7e,0x5f,0x37,0x37,0x84,0x1a,0x35,0xaf,0xbc};
    mont256_from_bytes(&ctx, multiplier, multiplier22);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product22, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier23[32] = {0x49,0xfc,0x4d,0x27,0x56,0x45,0xc2,0x63,0x43,0xe6,0x36,0x62,0xf6,0x3e,0x22,0x38,0x30,0xba,0x16,0x44,0x83,0x52,0x9e,0xef,0x1a,0xa5,0xc3,0x34,0xb9,0x41,0xdc,0xfe};
    std::uint8_t product23[32]    = {0xdd,0xf4,0xe7,0x76,0x02,0xd1,0x47,0x29,0xcb,0xb2,0xa3,0x28,0xe2,0xba,0x66,0xa8,0x92,0x2e,0x42,0xcd,0x89,0xf7,0xdc,0xcd,0x4f,0xf1,0x49,0x9e,0x2b,0xc5,0x96,0xfa};
    mont256_from_bytes(&ctx, multiplier, multiplier23);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product23, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier24[32] = {0x8c,0xef,0xa8,0x72,0xf9,0xed,0xbe,0x03,0xe5,0x79,0x44,0x3c,0x36,0x76,0x07,0xca,0x29,0xab,0xbb,0x0e,0x8f,0x07,0x78,0x87,0x1e,0x0d,0x5f,0xa7,0x56,0x4f,0x6f,0x2f};
    std::uint8_t product24[32]    = {0xa6,0xce,0xf9,0x59,0xed,0xc9,0x3a,0x0b,0xb0,0x6b,0xcc,0xb4,0xa3,0x62,0x17,0x5e,0x7d,0x03,0x31,0x2c,0xad,0x16,0x69,0x94,0x5a,0x28,0x1e,0xf6,0x02,0xee,0x4d,0x8e};
    mont256_from_bytes(&ctx, multiplier, multiplier24);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product24, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier25[32] = {0x25,0xae,0x85,0x92,0xad,0x52,0x9d,0x74,0x08,0x37,0xfe,0x2b,0x81,0x9d,0xd3,0x45,0x9c,0x94,0xbd,0x3f,0xdf,0x5e,0xfc,0x7d,0x09,0x30,0xa5,0x8b,0x9b,0x38,0x52,0x59};
    std::uint8_t product25[32]    = {0x71,0x0b,0x90,0xb8,0x07,0xf7,0xd8,0x5c,0x18,0xa7,0xfa,0x82,0x84,0xd9,0x79,0xd0,0xd5,0xbe,0x37,0xbf,0x9e,0x1c,0xf5,0x77,0x1b,0x91,0xf0,0xa2,0xd1,0xa8,0xf7,0x0b};
    mont256_from_bytes(&ctx, multiplier, multiplier25);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product25, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier26[32] = {0x92,0xe1,0x18,0x2a,0xf2,0x7a,0x39,0x07,0x0e,0xbe,0x26,0x5a,0xae,0xee,0x3d,0xf9,0x37,0x6e,0x54,0xa5,0xf5,0x4b,0x29,0xbe,0x2d,0xb9,0x46,0x1a,0xb0,0x99,0x25,0x80};
    std::uint8_t product26[32]    = {0xb8,0xa3,0x48,0x81,0xd7,0x6e,0xab,0x15,0x2c,0x3a,0x73,0x10,0x0c,0xca,0xb9,0xeb,0xa6,0x4a,0xfd,0xf2,0xdf,0xe1,0x7d,0x39,0x89,0x2b,0xd2,0x50,0x11,0xcb,0x70,0x81};
    mont256_from_bytes(&ctx, multiplier, multiplier26);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product26, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier27[32] = {0xdd,0x28,0x7d,0x7f,0x07,0xa4,0x14,0xb6,0xbd,0xf4,0x0c,0xec,0xad,0x1c,0xbb,0xdc,0x0e,0xe5,0x97,0x68,0x22,0x84,0xde,0xc8,0x1e,0x43,0x47,0x1f,0xb9,0x89,0x50,0x8a};
    std::uint8_t product27[32]    = {0x97,0x79,0x78,0x7f,0x16,0xec,0x3e,0x24,0x39,0xdc,0x26,0xc6,0x07,0x56,0x33,0x94,0x2c,0xb0,0xc6,0x3a,0x67,0x8e,0x9c,0x56,0x5a,0xc9,0xd5,0x5f,0x2c,0x9b,0xf1,0xa0};
    mont256_from_bytes(&ctx, multiplier, multiplier27);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product27, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier28[32] = {0x37,0x68,0x84,0x31,0xbe,0x38,0xe5,0xce,0x21,0xf5,0xaa,0xc2,0x50,0xa6,0x46,0xec,0xfd,0xd2,0x89,0xd2,0x71,0xe3,0x35,0x67,0xb7,0xfe,0x24,0x73,0x58,0x97,0xe5,0xda};
    std::uint8_t product28[32]    = {0xa6,0x39,0x8c,0x95,0x3a,0xaa,0xb1,0x6a,0x65,0xe1,0x00,0x46,0xf1,0xf2,0xd4,0xc6,0xf9,0x77,0x9d,0x77,0x55,0xa9,0xa0,0x37,0x27,0xfa,0x6d,0x5a,0x09,0xc7,0xb1,0x8e};
    mont256_from_bytes(&ctx, multiplier, multiplier28);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product28, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier29[32] = {0xfe,0xad,0x53,0xcf,0xd6,0xaf,0xde,0xd5,0xf2,0x13,0xbb,0x9a,0x2e,0x77,0x96,0xb8,0x60,0x9d,0xfd,0x2f,0xc5,0xef,0x70,0x39,0x15,0x6f,0xa8,0xab,0x1e,0xba,0x7f,0x43};
    std::uint8_t product29[32]    = {0xfc,0x07,0xfb,0x71,0x84,0x0f,0x9c,0x81,0xd6,0x3b,0x32,0xce,0x8b,0x66,0xc4,0x29,0x21,0xd9,0xf7,0x91,0x51,0xce,0x50,0xa9,0x40,0x4e,0xfa,0x01,0x5c,0x2f,0x7d,0xcb};
    mont256_from_bytes(&ctx, multiplier, multiplier29);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product29, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier30[32] = {0xa2,0xb3,0xde,0x6a,0xb9,0xab,0x78,0x28,0xcd,0xda,0xb6,0xa9,0xb1,0x3b,0x9a,0x79,0x94,0xdb,0x1a,0xbb,0x09,0x0a,0x8e,0x97,0xc9,0x33,0x32,0x82,0xda,0xb2,0x87,0x3e};
    std::uint8_t product30[32]    = {0xe8,0x1b,0x9b,0x41,0x2d,0x02,0x68,0x7a,0x69,0x90,0x23,0xfd,0x13,0xb2,0xcf,0x6c,0xbe,0x91,0x50,0x32,0x1b,0x1f,0xab,0xc6,0x5b,0x99,0x97,0x88,0x90,0x17,0x95,0xbb};
    mont256_from_bytes(&ctx, multiplier, multiplier30);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product30, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier31[32] = {0x8e,0x7b,0x6f,0x3d,0x24,0x7c,0x47,0xc6,0x00,0xe5,0xf7,0x92,0x96,0xf7,0x4d,0x45,0xf0,0x7c,0xf8,0x06,0xfd,0x10,0xf0,0x36,0xc1,0x48,0x6c,0x28,0xe0,0x83,0xc3,0x99};
    std::uint8_t product31[32]    = {0xab,0x72,0x4d,0xb8,0x6d,0x74,0xd7,0x52,0x02,0xb1,0xe6,0xb7,0xc4,0xe5,0xe7,0xd1,0xd1,0x76,0xe8,0x15,0xf7,0x32,0xd0,0xa3,0x43,0xd9,0x44,0x7a,0xa1,0x8b,0x4a,0xcc};
    mont256_from_bytes(&ctx, multiplier, multiplier31);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product31, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier32[32] = {0x8e,0xbd,0xe9,0xad,0xc2,0x78,0x79,0x72,0xba,0xb6,0x0b,0x0d,0x62,0x5f,0xd2,0xc6,0x7a,0x56,0x03,0xfa,0x5b,0x9f,0x25,0x03,0x4f,0x8c,0x98,0xae,0xcd,0x12,0xee,0x63};
    std::uint8_t product32[32]    = {0xac,0x39,0xbd,0x0a,0x47,0x69,0x6c,0x58,0x30,0x22,0x21,0x28,0x27,0x1f,0x78,0x53,0x6f,0x02,0x0b,0xf0,0x12,0xdd,0x6f,0x08,0xee,0xa5,0xca,0x0c,0x67,0x38,0xcb,0x2a};
    mont256_from_bytes(&ctx, multiplier, multiplier32);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product32, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier33[32] = {0x0c,0x78,0xb8,0xcb,0x5d,0x3f,0xf2,0xd9,0xc5,0xbb,0x0b,0x79,0xd5,0x4d,0x1b,0x4c,0x46,0x92,0x4a,0x18,0x60,0x22,0x6f,0x51,0x7d,0xe7,0x1e,0x5c,0x16,0x72,0x66,0x92};
    std::uint8_t product33[32]    = {0x25,0x6a,0x2a,0x62,0x17,0xbf,0xd8,0x8d,0x51,0x31,0x22,0x6d,0x7f,0xe7,0x51,0xe4,0xd3,0xb6,0xde,0x49,0x20,0x67,0x4d,0xf4,0x79,0xb5,0x5b,0x14,0x43,0x57,0x33,0xb6};
    mont256_from_bytes(&ctx, multiplier, multiplier33);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product33, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier34[32] = {0x8a,0x71,0x66,0x92,0xf9,0xe7,0xc8,0x9b,0xa7,0xbd,0x09,0x54,0xbe,0x8d,0x64,0x15,0xf1,0x89,0x0e,0x6d,0x7f,0x88,0x2d,0x1b,0x25,0x00,0x9f,0x19,0xf7,0x35,0x50,0x74};
    std::uint8_t product34[32]    = {0x9f,0x54,0x33,0xb9,0xed,0xb7,0x59,0xd2,0xf7,0x37,0x1b,0xfe,0x3b,0xa8,0x2c,0x41,0xd4,0x9b,0x2b,0x49,0x7e,0x98,0x87,0x50,0x6f,0x01,0xdd,0x4d,0xe5,0x9f,0xf1,0x5d};
    mont256_from_bytes(&ctx, multiplier, multiplier34);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product34, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier35[32] = {0xab,0x64,0x3f,0x13,0xe0,0xaa,0xd7,0x33,0xfb,0x5d,0x35,0x95,0x23,0x82,0x9e,0x78,0x0f,0x6d,0x02,0x3a,0x78,0x1d,0x30,0x90,0xb7,0x9d,0x9e,0xbb,0x74,0x3a,0x06,0xd6};
    std::uint8_t product35[32]    = {0x02,0x2c,0xbd,0x3d,0xa2,0x00,0x85,0x9b,0xf2,0x17,0xa0,0xbf,0x6a,0x87,0xdb,0x68,0x2e,0x47,0x06,0xb1,0x68,0x57,0x91,0xb0,0x26,0xd8,0xdc,0x32,0x5c,0xae,0x14,0x84};
    mont256_from_bytes(&ctx, multiplier, multiplier35);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product35, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier36[32] = {0x62,0xce,0xb3,0x80,0x4a,0xdc,0x7f,0x59,0x4b,0xda,0xeb,0x13,0x73,0x86,0x8c,0x26,0xa5,0xad,0x07,0x8c,0x0b,0x71,0x5f,0xd8,0xb2,0xda,0x43,0xb4,0x50,0x6b,0xd8,0xbf};
    std::uint8_t product36[32]    = {0x28,0x6c,0x1a,0x81,0xe0,0x95,0x7e,0x0b,0xe3,0x90,0xc1,0x3a,0x5a,0x93,0xa4,0x73,0xf1,0x07,0x16,0xa5,0x22,0x54,0x1f,0x89,0x18,0x8e,0xcb,0x1c,0xf1,0x43,0x8a,0x3e};
    mont256_from_bytes(&ctx, multiplier, multiplier36);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product36, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier37[32] = {0xd5,0xc7,0x0c,0x95,0xca,0x6e,0x46,0x90,0xae,0x7d,0x72,0x57,0x1c,0xbf,0xda,0x26,0x19,0x22,0x73,0xb2,0x30,0x28,0x0f,0x59,0xdd,0x34,0x4a,0xe7,0x14,0xb5,0x5e,0xf8};
    std::uint8_t product37[32]    = {0x81,0x55,0x25,0xc3,0x5f,0x4a,0xd3,0xb2,0x0b,0x78,0x57,0x05,0x56,0x3f,0x8e,0x72,0x4b,0x67,0x5b,0x18,0x90,0x78,0x2e,0x0b,0x97,0x9c,0xe0,0xb5,0x3e,0x20,0x1c,0xea};
    mont256_from_bytes(&ctx, multiplier, multiplier37);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product37, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier38[32] = {0xc1,0x74,0x07,0xba,0x05,0x56,0x4c,0x7b,0xea,0xcf,0xb3,0x5e,0x54,0x1e,0x2b,0xd5,0xfe,0x25,0x96,0x9c,0x17,0xfe,0xfe,0x0d,0x89,0x1d,0xa9,0x8a,0x76,0xca,0x55,0x1a};
    std::uint8_t product38[32]    = {0x44,0x5c,0x17,0x30,0x10,0x02,0xe5,0x73,0xc0,0x6f,0x1a,0x1a,0xfc,0x5a,0x83,0x81,0xfa,0x70,0xc3,0xd6,0x47,0xfc,0xfa,0x26,0x9b,0x58,0xfc,0x9f,0x64,0x5e,0xff,0x50};
    mont256_from_bytes(&ctx, multiplier, multiplier38);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product38, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier39[32] = {0x70,0x12,0xc1,0xab,0x4c,0x02,0x1b,0xba,0x7c,0x5a,0xa1,0x0f,0x96,0xe8,0xb8,0x04,0xda,0xd8,0x9f,0x7d,0x4f,0xe2,0x27,0x5c,0x7b,0x06,0x4c,0x7f,0x3e,0xc0,0x4e,0x18};
    std::uint8_t product39[32]    = {0x50,0x38,0x45,0x02,0xe4,0x06,0x53,0x2f,0x75,0x0f,0xe3,0x2e,0xc4,0xba,0x28,0x0e,0x90,0x89,0xde,0x78,0xef,0xa6,0x76,0x14,0x71,0x12,0xe5,0x7d,0xbc,0x40,0xea,0x49};
    mont256_from_bytes(&ctx, multiplier, multiplier39);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product39, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier40[32] = {0x31,0xac,0xc5,0xed,0xfb,0x6c,0x24,0xc5,0x37,0x5e,0x5e,0x8e,0x8b,0xfa,0xcc,0x9c,0xf7,0xf0,0xa8,0xb3,0xe1,0xf2,0xd1,0xff,0xac,0x5f,0x32,0x24,0x9a,0x36,0xb8,0x0a};
    std::uint8_t product40[32]    = {0x95,0x06,0x51,0xc9,0xf2,0x44,0x6e,0x4f,0xa6,0x1b,0x1b,0xab,0xa3,0xf0,0x65,0xd6,0xe7,0xd1,0xfa,0x1b,0xa5,0xd8,0x75,0xff,0x05,0x1d,0x96,0x6d,0xce,0xa4,0x28,0x1e};
    mont256_from_bytes(&ctx, multiplier, multiplier40);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product40, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier41[32] = {0x5d,0xdd,0xec,0xbb,0x63,0x02,0x5b,0x7e,0x5e,0xed,0x92,0xf7,0xdb,0xc0,0x18,0x12,0x2c,0xc4,0x7e,0xb1,0x94,0x48,0x52,0x22,0xba,0x28,0xa9,0xd0,0x87,0xf6,0x09,0x7a};
    std::uint8_t product41[32]    = {0x19,0x99,0xc6,0x33,0x29,0x07,0x12,0x7b,0x1c,0xc8,0xb8,0xe7,0x93,0x40,0x48,0x36,0x86,0x4d,0x7c,0x15,0xbc,0xd8,0xf6,0x67,0x2e,0x79,0xfd,0x71,0x97,0xe2,0x1c,0x6f};
    mont256_from_bytes(&ctx, multiplier, multiplier41);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product41, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier42[32] = {0xa4,0x76,0x8f,0x15,0x38,0x38,0x25,0x97,0x75,0xb1,0xab,0x1b,0x31,0x87,0x92,0xc8,0x79,0xd5,0xc3,0x30,0x42,0x6f,0xe2,0x62,0x9c,0x9c,0x5c,0xc7,0x22,0x65,0x37,0x86};
    std::uint8_t product42[32]    = {0xed,0x63,0xad,0x40,0xa8,0xa8,0x70,0xc6,0x61,0x15,0x01,0x51,0x94,0x96,0xb8,0x59,0x6d,0x81,0x49,0x91,0xc7,0x4f,0xa7,0x26,0xd5,0xd5,0x16,0x55,0x67,0x2f,0xa6,0x93};
    mont256_from_bytes(&ctx, multiplier, multiplier42);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product42, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier43[32] = {0x45,0xcf,0xaa,0x89,0xf1,0x9d,0xfd,0x96,0x20,0xa3,0x2f,0xba,0x48,0x74,0xe7,0x7b,0xd8,0x49,0x54,0x1c,0xd3,0x5a,0x9b,0xea,0xb1,0x1c,0x52,0x6f,0x0e,0x01,0x8d,0x31};
    std::uint8_t product43[32]    = {0xd1,0x6e,0xff,0x9d,0xd4,0xd9,0xf8,0xc2,0x61,0xe9,0x8f,0x2e,0xd9,0x5e,0xb6,0x73,0x88,0xdb,0xfc,0x56,0x7a,0x0f,0xd3,0xc0,0x13,0x54,0xf7,0x4d,0x2a,0x04,0xa7,0x93};
    mont256_from_bytes(&ctx, multiplier, multiplier43);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product43, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier44[32] = {0x95,0x22,0x8e,0xf2,0x01,0x68,0xa5,0x08,0x7f,0x02,0x70,0xd9,0xdc,0xb3,0x8c,0xe8,0x25,0xcd,0x29,0x5f,0xe3,0xef,0xd6,0x67,0x1e,0xf4,0xcf,0x06,0x11,0x26,0xc5,0xff};
    std::uint8_t product44[32]    = {0xbf,0x67,0xac,0xd7,0x04,0x39,0xef,0x19,0x7d,0x07,0x52,0x8d,0x96,0x1a,0xa6,0xb8,0x71,0x67,0x7c,0x20,0xab,0xcf,0x83,0x34,0x5c,0xde,0x6d,0x12,0x33,0x74,0x51,0xfe};
    mont256_from_bytes(&ctx, multiplier, multiplier44);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product44, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier45[32] = {0x76,0xff,0x16,0x7c,0x80,0x00,0xcc,0xe2,0xdc,0xc8,0xc8,0x9d,0xfb,0xd2,0x6b,0x65,0xef,0xdb,0x72,0xed,0xdd,0x85,0x9c,0xeb,0xae,0x11,0x7c,0x73,0x49,0xf2,0x2f,0xb7};
    std::uint8_t product45[32]    = {0x64,0xfd,0x43,0x76,0x80,0x02,0x66,0xa8,0x96,0x5a,0x59,0xd9,0xf3,0x77,0x42,0x31,0xcf,0x92,0x58,0xca,0x98,0x90,0xd6,0xc2,0x0a,0x34,0x75,0x59,0xdd,0xd6,0x8f,0x26};
    mont256_from_bytes(&ctx, multiplier, multiplier45);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product45, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier46[32] = {0x3d,0x2b,0x1d,0xdc,0xb8,0x81,0x69,0x99,0xf9,0x67,0x95,0xab,0xf7,0xc6,0x8e,0x93,0xa5,0xcd,0xa0,0x95,0x91,0xd0,0x3a,0xe9,0x98,0x99,0xf9,0x83,0x6c,0xe4,0xec,0xf8};
    std::uint8_t product46[32]    = {0xb7,0x81,0x59,0x96,0x29,0x84,0x3c,0xcd,0xec,0x36,0xc1,0x03,0xe7,0x53,0xab,0xba,0xf1,0x68,0xe1,0xc0,0xb5,0x70,0xb0,0xbc,0xc9,0xcd,0xec,0x8a,0x46,0xae,0xc6,0xe8};
    mont256_from_bytes(&ctx, multiplier, multiplier46);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product46, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier47[32] = {0x8a,0xa6,0xa7,0xce,0xe6,0x53,0xff,0x4c,0x8d,0x3e,0x58,0x37,0xdf,0x8e,0x5a,0x9b,0x1b,0xe8,0x9a,0x3e,0x77,0x0d,0xd4,0xf3,0x2f,0x8b,0x14,0x94,0x63,0x35,0x70,0x05};
    std::uint8_t product47[32]    = {0x9f,0xf3,0xf7,0x6d,0xb2,0xfb,0xfd,0xe5,0xa7,0xbb,0x08,0xa7,0x9e,0xab,0x0f,0xd1,0x53,0xb9,0xce,0xbc,0x65,0x29,0x7e,0xd8,0x8e,0xa1,0x3d,0xbd,0x29,0xa0,0x50,0x10};
    mont256_from_bytes(&ctx, multiplier, multiplier47);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product47, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier48[32] = {0x7d,0x7c,0xa0,0xbc,0xce,0x73,0xed,0xd5,0x8c,0x3a,0x3d,0x8a,0x38,0x5e,0xc6,0xeb,0x7c,0x3c,0x07,0xf6,0x7e,0x40,0x7c,0x72,0xdf,0x90,0x19,0xe1,0x2e,0x7d,0x47,0x0c};
    std::uint8_t product48[32]    = {0x78,0x75,0xe2,0x37,0x6b,0x5b,0xc9,0x80,0xa4,0xae,0xb8,0x9e,0xa9,0x1c,0x54,0xc2,0x74,0xb4,0x17,0xe4,0x7a,0xc1,0x75,0x57,0x9e,0xb0,0x4d,0xa3,0x8b,0x77,0xd5,0x25};
    mont256_from_bytes(&ctx, multiplier, multiplier48);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product48, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier49[32] = {0xb2,0x61,0xc3,0xc5,0x5b,0x87,0x4d,0x61,0x30,0x20,0x1b,0x91,0xc4,0x66,0xf0,0x13,0x88,0xbc,0xba,0x93,0xd8,0xd5,0xee,0xc3,0xa7,0xbc,0x82,0x0a,0xe8,0xcd,0x0c,0x0e};
    std::uint8_t product49[32]    = {0x17,0x25,0x4b,0x52,0x12,0x95,0xe8,0x23,0x90,0x60,0x52,0xb5,0x4d,0x34,0xd0,0x3a,0x9a,0x36,0x2f,0xbd,0x8a,0x81,0xcc,0x48,0xf7,0x35,0x86,0x20,0xba,0x67,0x24,0x2c};
    mont256_from_bytes(&ctx, multiplier, multiplier49);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product49, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier50[32] = {0xfe,0x5f,0x61,0xa8,0xde,0x81,0xfa,0x55,0x57,0x66,0xe0,0x01,0xe5,0x9e,0x95,0x06,0xa3,0x4b,0x4c,0x71,0x2f,0x57,0xea,0xdd,0x5a,0xd3,0xe8,0x58,0x22,0xa9,0xf4,0xf0};
    std::uint8_t product50[32]    = {0xfb,0x1e,0x24,0xfc,0x9b,0x85,0xef,0x00,0x06,0x34,0xa0,0x05,0xb0,0xdb,0xbf,0x13,0xe9,0xe1,0xe5,0x55,0x8e,0x07,0xc0,0x96,0x10,0x7b,0xb9,0x08,0x67,0xfd,0xde,0xd2};
    mont256_from_bytes(&ctx, multiplier, multiplier50);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product50, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier51[32] = {0xb2,0xdc,0x25,0xdb,0xb2,0x2a,0xcb,0x3f,0xb7,0x5a,0x6d,0x8c,0x40,0x0b,0x21,0xfa,0xa6,0x77,0xba,0x16,0x5e,0x13,0x39,0x16,0xf9,0x0c,0xe8,0xaa,0x81,0x22,0x3b,0x9d};
    std::uint8_t product51[32]    = {0x18,0x94,0x71,0x95,0x16,0x80,0x61,0xbf,0x26,0x0f,0x48,0xa4,0xc0,0x21,0x65,0xef,0xf3,0x67,0x2e,0x45,0x1a,0x39,0xab,0x42,0xeb,0x26,0xb9,0xff,0x83,0x66,0xb2,0xd9};
    mont256_from_bytes(&ctx, multiplier, multiplier51);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product51, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier52[32] = {0x2b,0x8a,0xc1,0x43,0xd4,0x34,0xe4,0x3a,0x70,0xdb,0xff,0x0c,0xde,0xaa,0xa0,0xe8,0x72,0x4b,0x92,0x7a,0x99,0x12,0xe7,0x90,0x9d,0xb5,0x63,0x3f,0x0b,0x2b,0xd7,0x9c};
    std::uint8_t product52[32]    = {0x82,0xa0,0x43,0xcb,0x7c,0x9e,0xac,0xaf,0x52,0x93,0xfd,0x26,0x9b,0xff,0xe2,0xb9,0x56,0xe2,0xb7,0x6f,0xcb,0x38,0xb6,0xb1,0xd9,0x20,0x29,0xbd,0x21,0x83,0x86,0xd4};
    mont256_from_bytes(&ctx, multiplier, multiplier52);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product52, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier53[32] = {0xc2,0x4e,0x72,0x61,0x2b,0x5b,0x40,0x23,0xc3,0xb4,0x4e,0x41,0x8f,0xab,0x72,0xd1,0x9e,0x03,0x93,0x5e,0xda,0x88,0x8e,0xc2,0x9c,0x40,0xb7,0xdf,0x48,0x61,0x41,0x23};
    std::uint8_t product53[32]    = {0x46,0xeb,0x57,0x25,0x82,0x11,0xc0,0x6b,0x4b,0x1c,0xea,0xc4,0xaf,0x02,0x58,0x74,0xda,0x0a,0xba,0x1e,0x8f,0x99,0xac,0x45,0xd4,0xc2,0x27,0x9d,0xd9,0x23,0xc3,0x6b};
    mont256_from_bytes(&ctx, multiplier, multiplier53);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product53, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier54[32] = {0x1d,0x79,0x34,0xb5,0xcf,0x4e,0x03,0xeb,0xb5,0x57,0xd2,0x56,0x98,0xb2,0xc6,0x01,0x45,0x3d,0x14,0x19,0x6b,0x02,0x98,0x3f,0xc6,0x99,0xe2,0x34,0xe5,0x25,0xe8,0xc2};
    std::uint8_t product54[32]    = {0x58,0x6b,0x9e,0x21,0x6d,0xea,0x0b,0xc3,0x20,0x07,0x77,0x03,0xca,0x18,0x52,0x03,0xcf,0xb7,0x3c,0x4c,0x41,0x07,0xc8,0xbf,0x53,0xcd,0xa6,0x9e,0xaf,0x71,0xba,0x46};
    mont256_from_bytes(&ctx, multiplier, multiplier54);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product54, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier55[32] = {0xdf,0x7a,0xa4,0xa0,0x1f,0x09,0x74,0x08,0x60,0x73,0x82,0x8e,0x7e,0x6c,0x92,0xba,0x1e,0x15,0x11,0x47,0x56,0xb8,0x0b,0xcb,0xd6,0xa8,0xb2,0xf4,0xe4,0xea,0xaf,0xc4};
    std::uint8_t product55[32]    = {0x9e,0x6f,0xed,0xe2,0x5d,0x1c,0x5c,0x19,0x21,0x5a,0x87,0xab,0x7b,0x45,0xb8,0x2e,0x5a,0x3f,0x33,0xd8,0x04,0x28,0x23,0x61,0x83,0xfa,0x18,0xde,0xae,0xc0,0x0f,0x4e};
    mont256_from_bytes(&ctx, multiplier, multiplier55);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product55, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier56[32] = {0x50,0x6a,0xa2,0x9d,0xc6,0xa8,0x38,0x7d,0xdf,0xcc,0x94,0x3b,0x42,0xdc,0x9d,0xc8,0x13,0xbc,0xb4,0xc3,0x05,0xea,0xef,0x78,0xdd,0xca,0x0c,0x46,0x4f,0xed,0x59,0xf8};
    std::uint8_t product56[32]    = {0xf1,0x3f,0xe7,0xd9,0x53,0xf8,0xa9,0x79,0x9f,0x65,0xbc,0xb1,0xc8,0x95,0xd9,0x58,0x3b,0x36,0x1e,0x49,0x11,0xc0,0xce,0x6a,0x99,0x5e,0x24,0xd2,0xef,0xc8,0x0d,0xe8};
    mont256_from_bytes(&ctx, multiplier, multiplier56);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product56, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier57[32] = {0x2f,0xb4,0xce,0x39,0x44,0x5f,0xa6,0x8c,0xea,0x86,0x85,0xf9,0x83,0xa7,0xb1,0x6d,0xe7,0xfd,0x0b,0x1d,0x45,0x3d,0xd4,0x74,0x1e,0xb3,0x11,0x8f,0x05,0xf8,0x83,0x59};
    std::uint8_t product57[32]    = {0x8f,0x1e,0x6a,0xab,0xcd,0x1e,0xf3,0xa6,0xbf,0x93,0x91,0xec,0x8a,0xf7,0x14,0x49,0xb7,0xf7,0x21,0x57,0xcf,0xb9,0x7d,0x5c,0x5c,0x19,0x34,0xad,0x11,0xe9,0x8a,0x0b};
    mont256_from_bytes(&ctx, multiplier, multiplier57);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product57, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier58[32] = {0x49,0x84,0x6b,0xfb,0xe1,0x7a,0x0f,0xa0,0xc0,0x35,0x2d,0x9c,0xab,0x28,0xa5,0xb3,0x30,0x00,0xad,0x3d,0x50,0xbb,0x0c,0xf0,0x3b,0xf9,0xf4,0x0f,0x7d,0x20,0x44,0x19};
    std::uint8_t product58[32]    = {0xdc,0x8d,0x43,0xf3,0xa4,0x6e,0x2e,0xe2,0x40,0x9f,0x88,0xd6,0x01,0x79,0xf1,0x19,0x90,0x02,0x07,0xb7,0xf2,0x31,0x26,0xd0,0xb3,0xed,0xdc,0x2e,0x77,0x60,0xcc,0x4b};
    mont256_from_bytes(&ctx, multiplier, multiplier58);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product58, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier59[32] = {0x74,0x2c,0x04,0x91,0x56,0x3b,0x35,0xf7,0xc8,0xcd,0xb0,0x7e,0x6a,0xd8,0x84,0x42,0xad,0x51,0x17,0x1c,0x1c,0xe4,0x71,0xb2,0xa3,0xe4,0x36,0x84,0x93,0x63,0x44,0x9a};
    std::uint8_t product59[32]    = {0x5c,0x84,0x0d,0xb5,0x02,0xb1,0xa1,0xe7,0x5a,0x69,0x11,0x7b,0x40,0x89,0x8c,0xc8,0x07,0xf3,0x45,0x55,0x56,0xad,0x55,0x16,0xeb,0xac,0xa3,0x8d,0xba,0x29,0xcd,0xcf};
    mont256_from_bytes(&ctx, multiplier, multiplier59);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product59, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier60[32] = {0xf8,0x58,0xf9,0xde,0x5f,0x88,0x8e,0x2d,0x7c,0x56,0x4b,0xb8,0x30,0x16,0x03,0x99,0xae,0x5d,0x65,0xea,0x91,0x1a,0xb8,0x6d,0xd3,0xac,0xc6,0x0a,0x4e,0xe7,0xb6,0x99};
    std::uint8_t product60[32]    = {0xe9,0x0a,0xed,0x9d,0x1e,0x99,0xaa,0x88,0x75,0x02,0xe3,0x28,0x90,0x42,0x0a,0xcd,0x0b,0x18,0x31,0xc1,0xb3,0x50,0x29,0x47,0x7b,0x06,0x52,0x1e,0xec,0xb7,0x23,0xcd};
    mont256_from_bytes(&ctx, multiplier, multiplier60);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product60, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier61[32] = {0xa3,0xdf,0xb5,0x79,0x86,0x84,0x4f,0xbe,0x20,0xd7,0xf4,0xbe,0xf2,0x9b,0x80,0xa5,0xf6,0x88,0x6a,0x34,0x49,0x4f,0xc5,0x5a,0x4e,0x8c,0xa4,0xeb,0xf6,0x2b,0x12,0x36};
    std::uint8_t product61[32]    = {0xeb,0x9f,0x20,0x6d,0x93,0x8c,0xef,0x3a,0x62,0x87,0xde,0x3c,0xd7,0xd2,0x81,0xf1,0xe3,0x99,0x3e,0x9d,0xdb,0xef,0x50,0x0d,0xeb,0xa5,0xee,0xc3,0xe2,0x81,0x36,0xa3};
    mont256_from_bytes(&ctx, multiplier, multiplier61);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product61, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier62[32] = {0x29,0x0b,0xc0,0xf5,0x8b,0xcf,0xff,0xb6,0xad,0x33,0x32,0x87,0x2f,0xab,0x4f,0x64,0x7f,0xa3,0x1e,0x06,0x7e,0x89,0xbc,0x97,0xd0,0x4c,0x88,0x31,0xc6,0x63,0xa3,0xa5};
    std::uint8_t product62[32]    = {0x7b,0x23,0x42,0xe0,0xa3,0x6f,0xff,0x24,0x07,0x99,0x97,0x95,0x8f,0x01,0xee,0x2d,0x7e,0xe9,0x5a,0x13,0x7b,0x9d,0x35,0xc7,0x70,0xe5,0x98,0x95,0x53,0x2a,0xea,0xef};
    mont256_from_bytes(&ctx, multiplier, multiplier62);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product62, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier63[32] = {0x45,0xcf,0xbf,0x9d,0xca,0xed,0x03,0xb7,0x70,0x52,0x08,0xb9,0x37,0x6d,0x73,0x52,0x2b,0x05,0xdd,0x31,0xd1,0xa2,0xff,0x29,0x4b,0x51,0xbc,0xc9,0x5e,0x60,0xc1,0x05};
    std::uint8_t product63[32]    = {0xd1,0x6f,0x3e,0xd9,0x60,0xc7,0x0b,0x26,0x50,0xf6,0x1a,0x2b,0xa6,0x48,0x59,0xf6,0x81,0x11,0x97,0x95,0x74,0xe8,0xfd,0x7b,0xe1,0xf5,0x36,0x5c,0x1b,0x22,0x43,0x0f};
    mont256_from_bytes(&ctx, multiplier, multiplier63);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product63, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier64[32] = {0x4a,0xfe,0x20,0x11,0xa1,0x6a,0x2a,0xec,0xba,0x23,0xfd,0xf0,0xe2,0xec,0x05,0xe8,0x0c,0xb3,0x73,0xb3,0x14,0x06,0x31,0x9b,0x1f,0x75,0x5f,0x27,0x2b,0x1c,0x62,0x77};
    std::uint8_t product64[32]    = {0xe0,0xfa,0x60,0x34,0xe4,0x3e,0x80,0xc6,0x2e,0x6b,0xf9,0xd2,0xa8,0xc4,0x11,0xb8,0x26,0x1a,0x5b,0x19,0x3c,0x12,0x94,0xd1,0x5e,0x60,0x1d,0x75,0x81,0x55,0x27,0x65};
    mont256_from_bytes(&ctx, multiplier, multiplier64);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product64, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier65[32] = {0xed,0xfa,0xb3,0x43,0xa1,0x26,0x19,0x03,0xac,0x19,0x38,0x01,0xcb,0x2e,0xf2,0x32,0xf0,0xd8,0x4f,0x26,0x05,0xdf,0x4d,0x15,0x60,0xcc,0xc4,0x1a,0x14,0x21,0x0a,0x7b};
    std::uint8_t product65[32]    = {0xc9,0xf0,0x19,0xcc,0xe3,0x72,0x4b,0x0b,0x04,0x4b,0xa8,0x05,0x61,0x8c,0xd6,0x98,0xd2,0x88,0xed,0x74,0x11,0x9d,0xe7,0x3e,0x22,0x66,0x4c,0x4e,0x3c,0x63,0x1f,0x73};
    mont256_from_bytes(&ctx, multiplier, multiplier65);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product65, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier66[32] = {0x36,0xdb,0x38,0x15,0xe2,0x07,0x95,0x97,0x83,0xc1,0x7a,0xd6,0xd0,0x95,0x45,0x5a,0x63,0xaa,0x2e,0xa4,0xee,0xcd,0x04,0xd3,0x0a,0xac,0x82,0x11,0x0c,0xa9,0x23,0x45};
    std::uint8_t product66[32]    = {0xa4,0x91,0xa8,0x41,0xa6,0x16,0xc0,0xc6,0x8b,0x44,0x70,0x84,0x71,0xbf,0xd0,0x0f,0x2a,0xfe,0x8b,0xee,0xcc,0x67,0x0e,0x79,0x20,0x05,0x86,0x33,0x25,0xfb,0x69,0xcf};
    mont256_from_bytes(&ctx, multiplier, multiplier66);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product66, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier67[32] = {0x39,0xbd,0x08,0xe0,0x99,0x9a,0xc9,0x29,0xc3,0x51,0x32,0x2a,0xd6,0x95,0x8e,0xe4,0xb6,0xa8,0x44,0x61,0xb1,0x0d,0x17,0x9c,0x8a,0x93,0x24,0x6a,0x8a,0xff,0x8b,0xe7};
    std::uint8_t product67[32]    = {0xad,0x37,0x1a,0xa1,0xcc,0xd0,0x5b,0x7d,0x49,0xf3,0x96,0x80,0x83,0xc0,0xac,0xae,0x23,0xf8,0xcd,0x25,0x13,0x27,0x46,0xd5,0x9f,0xb9,0x6d,0x3f,0xa0,0xfe,0xa3,0xb5};
    mont256_from_bytes(&ctx, multiplier, multiplier67);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product67, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier68[32] = {0x47,0xf7,0x45,0x0c,0x1d,0x0c,0x6a,0x30,0x54,0xbc,0x97,0x07,0x26,0x51,0x0f,0x09,0xe9,0xe7,0x71,0x18,0x68,0x2b,0xec,0x12,0x0b,0x4e,0x76,0xec,0x6b,0x59,0x36,0x0e};
    std::uint8_t product68[32]    = {0xd7,0xe5,0xcf,0x24,0x57,0x25,0x3e,0x90,0xfe,0x35,0xc5,0x15,0x72,0xf3,0x2d,0x1d,0xbd,0xb6,0x53,0x49,0x38,0x83,0xc4,0x36,0x21,0xeb,0x64,0xc5,0x42,0x0b,0xa2,0x2a};
    mont256_from_bytes(&ctx, multiplier, multiplier68);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product68, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier69[32] = {0xdd,0xb0,0x73,0xa6,0x48,0xcc,0x40,0x04,0x7b,0xb6,0x60,0x91,0x00,0x1b,0x4d,0xaf,0xda,0x40,0x3e,0xf9,0x66,0x44,0xbe,0xd9,0x1e,0xa6,0x89,0x90,0x83,0xa8,0x93,0x2e};
    std::uint8_t product69[32]    = {0x99,0x11,0x5a,0xf4,0xda,0x64,0xc0,0x0d,0x73,0x23,0x21,0xb3,0x00,0x51,0xe9,0x0f,0x8e,0xc0,0xbc,0xee,0x32,0xce,0x3c,0x89,0x5b,0xf3,0x9c,0xb1,0x8a,0xf9,0xb9,0x8c};
    mont256_from_bytes(&ctx, multiplier, multiplier69);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product69, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier70[32] = {0x5b,0xb0,0x82,0x94,0xb6,0x87,0x1e,0x13,0x7b,0xa6,0x00,0xce,0x98,0xed,0x32,0x14,0xe3,0x08,0xf5,0x19,0x35,0xc2,0x87,0x2e,0x2e,0xa8,0xaa,0xae,0x53,0xbe,0xe5,0x9f};
    std::uint8_t product70[32]    = {0x13,0x11,0x87,0xbf,0x23,0x95,0x5a,0x3a,0x72,0xf2,0x02,0x6b,0xca,0xc7,0x96,0x3e,0xa9,0x1a,0xdf,0x4c,0xa1,0x47,0x95,0x89,0x8b,0xfa,0x00,0x0a,0xfb,0x3c,0xb0,0xde};
    mont256_from_bytes(&ctx, multiplier, multiplier70);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product70, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier71[32] = {0x04,0xf1,0xec,0x8b,0xa3,0x06,0xa9,0x38,0x3d,0x57,0x29,0x9f,0xcd,0xc6,0x0b,0xd1,0xd7,0x9e,0x81,0x4a,0xfa,0x65,0x90,0xf8,0x9d,0x36,0x5f,0xf5,0x4b,0x55,0x46,0x32};
    std::uint8_t product71[32]    = {0x0e,0xd5,0xc5,0xa2,0xe9,0x13,0xfb,0xa8,0xb8,0x05,0x7c,0xdf,0x69,0x52,0x23,0x75,0x86,0xdb,0x83,0xe0,0xef,0x30,0xb2,0xe9,0xd7,0xa3,0x1f,0xdf,0xe1,0xff,0xd2,0x96};
    mont256_from_bytes(&ctx, multiplier, multiplier71);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product71, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier72[32] = {0x9c,0x7a,0x70,0xf9,0x1b,0xc3,0xc0,0x6d,0x02,0x00,0x59,0xd0,0xf4,0xbd,0x5c,0x05,0x94,0x6e,0xe3,0x6c,0xf6,0xae,0xfe,0xf8,0x86,0x26,0xdb,0xdb,0x61,0x38,0xed,0xf8};
    std::uint8_t product72[32]    = {0xd5,0x6f,0x52,0xec,0x53,0x4b,0x41,0x47,0x06,0x01,0x0d,0x72,0xde,0x38,0x14,0x10,0xbd,0x4c,0xaa,0x47,0xe4,0x0c,0xfc,0xe8,0x92,0x74,0x93,0x92,0x23,0xaa,0xc9,0xe9};
    mont256_from_bytes(&ctx, multiplier, multiplier72);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product72, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier73[32] = {0x9f,0x45,0x3f,0x40,0x86,0xe4,0xf0,0x53,0xa3,0x68,0x45,0x85,0x2d,0xfa,0xd4,0x41,0xb8,0xaa,0x5c,0xca,0x3c,0x2e,0x10,0x95,0xb2,0x6c,0xe0,0x46,0x4a,0xd7,0x13,0x51};
    std::uint8_t product73[32]    = {0xdd,0xcf,0xbd,0xc2,0x94,0xae,0xd0,0xfa,0xea,0x38,0xd0,0x8f,0x89,0xf0,0x7c,0xc5,0x29,0xff,0x16,0x5f,0xb4,0x8a,0x31,0xc0,0x17,0x46,0xa0,0xd2,0xe0,0x85,0x39,0xf4};
    mont256_from_bytes(&ctx, multiplier, multiplier73);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product73, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier74[32] = {0x64,0xc4,0x63,0x29,0xf5,0xed,0x16,0x92,0x90,0x9e,0x7c,0x5d,0xe8,0x2f,0x68,0xc6,0xb5,0x7d,0x03,0x38,0xc9,0x8d,0xac,0x83,0xf5,0x49,0xfd,0x38,0x72,0x1b,0xd9,0xfb};
    std::uint8_t product74[32]    = {0x2e,0x4d,0x29,0x7e,0xe1,0xc7,0x43,0xb7,0xb1,0xdb,0x75,0x19,0xb8,0x8e,0x3a,0x54,0x20,0x77,0x09,0xab,0x5c,0xa9,0x05,0x8a,0xdf,0xdd,0xf7,0xa9,0x56,0x53,0x8d,0xf2};
    mont256_from_bytes(&ctx, multiplier, multiplier74);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product74, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier75[32] = {0xc7,0x45,0x07,0xec,0x41,0x3e,0x75,0xd5,0x93,0x59,0x24,0x95,0xed,0xd3,0x05,0x20,0xfd,0x32,0x06,0x1b,0x94,0xe8,0x45,0x8f,0xed,0x24,0xd6,0xab,0x56,0x4e,0xb6,0x12};
    std::uint8_t product75[32]    = {0x55,0xcf,0x17,0xc6,0xc3,0xbb,0x61,0x80,0xba,0x0b,0x6d,0xc1,0xc9,0x79,0x0f,0x62,0xf7,0x96,0x12,0x54,0xbe,0xb8,0xd0,0xad,0xc7,0x6e,0x84,0x02,0x02,0xec,0x22,0x38};
    mont256_from_bytes(&ctx, multiplier, multiplier75);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product75, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier76[32] = {0xf9,0x4d,0xe1,0x43,0x8d,0xf4,0x93,0x87,0xce,0x02,0x1d,0x45,0xa1,0xdb,0x7d,0x38,0x2f,0xe4,0xe5,0xe2,0xc9,0xac,0xab,0xc0,0x6a,0x0f,0xb8,0x91,0xd4,0xb0,0xd1,0x0f};
    std::uint8_t product76[32]    = {0xeb,0xe9,0xa3,0xcc,0xa9,0xdd,0xba,0x97,0x6a,0x06,0x57,0xd0,0xe5,0x92,0x77,0xa8,0x8f,0xae,0xb1,0xaa,0x5d,0x06,0x03,0x3f,0x3e,0x2f,0x29,0xb5,0x7e,0x12,0x73,0x2f};
    mont256_from_bytes(&ctx, multiplier, multiplier76);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product76, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier77[32] = {0x03,0xda,0xa0,0xc4,0xec,0x55,0x31,0x03,0xcd,0x28,0x6a,0xc9,0x0c,0x53,0x17,0xda,0xb9,0xab,0x3b,0x66,0x3d,0x41,0xaf,0xfb,0xda,0xfa,0xb2,0x9e,0xb0,0xdc,0x40,0x0f};
    std::uint8_t product77[32]    = {0x0b,0x8f,0xe2,0x4e,0xc4,0xff,0x93,0x0b,0x67,0x79,0x40,0x5b,0x24,0xf9,0x47,0x90,0x2d,0x01,0xb2,0x32,0xb7,0xc5,0x0f,0xf3,0x90,0xf0,0x17,0xdc,0x12,0x94,0xc0,0x2d};
    mont256_from_bytes(&ctx, multiplier, multiplier77);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product77, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier78[32] = {0x3d,0x37,0x9f,0x17,0x5d,0x3a,0x98,0xda,0xe6,0xde,0xae,0x4a,0x87,0x64,0x2d,0xb3,0xea,0x33,0x74,0xf0,0xc9,0x41,0x28,0x8a,0xb3,0x6c,0xc6,0x92,0x70,0x86,0xa5,0x3c};
    std::uint8_t product78[32]    = {0xb7,0xa6,0xdd,0x46,0x17,0xaf,0xca,0x90,0xb4,0x9c,0x0a,0xdf,0x96,0x2c,0x89,0x1b,0xbe,0x9a,0x5e,0xd2,0x5b,0xc3,0x79,0xa0,0x1a,0x46,0x53,0xb7,0x51,0x93,0xef,0xb4};
    mont256_from_bytes(&ctx, multiplier, multiplier78);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product78, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier79[32] = {0xa9,0xb1,0xde,0xf6,0x61,0xe8,0x9a,0x0b,0xc8,0x49,0xe4,0x14,0xbf,0xbd,0x99,0x9a,0x52,0xe5,0xbb,0xb5,0x21,0x86,0x1d,0x74,0xb8,0x05,0x2c,0x72,0xd3,0xe0,0x7b,0x14};
    std::uint8_t product79[32]    = {0xfd,0x15,0x9c,0xe4,0x25,0xb9,0xce,0x23,0x58,0xdd,0xac,0x3e,0x3f,0x38,0xcc,0xce,0xf8,0xb1,0x33,0x20,0x64,0x92,0x58,0x5d,0x28,0x0f,0x85,0x58,0x7b,0xa1,0x71,0x3d};
    mont256_from_bytes(&ctx, multiplier, multiplier79);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product79, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier80[32] = {0x9a,0xe4,0xf2,0xc3,0x75,0x00,0x70,0xc2,0x9c,0xae,0xa6,0x17,0xc9,0x3f,0x5e,0xb5,0x59,0x67,0x06,0xae,0xed,0x3c,0xcb,0xcf,0x50,0x9c,0xc4,0xc8,0xd5,0xa3,0x39,0x1c};
    std::uint8_t product80[32]    = {0xd0,0xae,0xd8,0x4b,0x5f,0x01,0x52,0x47,0xd6,0x0b,0xf2,0x47,0x5b,0xbe,0x1c,0x20,0x0c,0x35,0x14,0x0d,0xc7,0xb6,0x63,0x6c,0xf1,0xd6,0x4e,0x5a,0x80,0xe9,0xab,0x55};
    mont256_from_bytes(&ctx, multiplier, multiplier80);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product80, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier81[32] = {0x0d,0x8a,0x00,0x6b,0x5a,0xfc,0xcc,0x1f,0x86,0xd5,0x01,0xda,0xd9,0x2b,0xf8,0xe6,0x27,0xcd,0x68,0x3b,0x8c,0x13,0x22,0x7f,0x49,0x59,0xba,0x4c,0x4f,0xf6,0xb1,0xd9};
    std::uint8_t product81[32]    = {0x28,0x9e,0x01,0x42,0x10,0xf6,0x64,0x5e,0x94,0x7f,0x05,0x90,0x8b,0x83,0xea,0xb2,0x77,0x68,0x38,0xb2,0xa4,0x39,0x67,0x7d,0xdc,0x0d,0x2e,0xe4,0xef,0xe4,0x15,0x8b};
    mont256_from_bytes(&ctx, multiplier, multiplier81);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product81, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier82[32] = {0x90,0xcf,0x9f,0xcd,0xdb,0x0b,0x0d,0x33,0xe2,0xf5,0x1c,0xbe,0x1f,0x27,0xc3,0x54,0x31,0xf5,0x02,0xd6,0x8b,0xfc,0xfa,0xcc,0xe8,0x23,0xc8,0xa3,0x0a,0xd7,0x11,0x35};
    std::uint8_t product82[32]    = {0xb2,0x6e,0xdf,0x6a,0x91,0x21,0x27,0x9b,0xa8,0xdf,0x56,0x3a,0x5d,0x77,0x49,0xfc,0x95,0xdf,0x08,0x84,0xa3,0xf6,0xf0,0x65,0xb8,0x6b,0x59,0xe9,0x20,0x85,0x33,0xa0};
    mont256_from_bytes(&ctx, multiplier, multiplier82);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product82, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier83[32] = {0x15,0xa7,0x88,0x6d,0x30,0xd9,0x17,0x48,0x05,0xa2,0x85,0x73,0xa1,0xe2,0xe2,0x80,0x00,0x01,0xf7,0x07,0x87,0x4e,0x95,0x63,0xc4,0xd1,0x16,0x15,0x2a,0x3d,0xc9,0x2f};
    std::uint8_t product83[32]    = {0x40,0xf6,0x99,0x47,0x92,0x8b,0x45,0xd8,0x10,0xe7,0x90,0x5a,0xe5,0xa8,0xa7,0x80,0x00,0x05,0xe5,0x16,0x95,0xeb,0xc0,0x2b,0x4e,0x73,0x42,0x3f,0x7e,0xb9,0x5b,0x8d};
    mont256_from_bytes(&ctx, multiplier, multiplier83);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product83, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier84[32] = {0x0b,0x65,0xd6,0x99,0xc1,0xeb,0x38,0x64,0x08,0x0b,0x0f,0x0f,0x30,0x9a,0x0e,0xe4,0x6c,0x27,0x66,0x46,0x7a,0x10,0x3c,0x16,0x68,0xb4,0xb9,0xf3,0xb8,0x22,0x43,0x0c};
    std::uint8_t product84[32]    = {0x22,0x31,0x83,0xcd,0x45,0xc1,0xa9,0x2c,0x18,0x21,0x2d,0x2d,0x91,0xce,0x2c,0xad,0x44,0x76,0x32,0xd3,0x6e,0x30,0xb4,0x43,0x3a,0x1e,0x2d,0xdb,0x28,0x66,0xc9,0x24};
    mont256_from_bytes(&ctx, multiplier, multiplier84);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product84, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier85[32] = {0x9f,0x30,0x73,0x8e,0xa7,0xc6,0xbe,0x9c,0x20,0x8b,0xc7,0xf8,0x22,0x62,0xae,0x56,0x75,0xa0,0x0d,0x6d,0xb6,0x1e,0xe4,0x6e,0xb6,0x87,0xb5,0x29,0xef,0x5c,0x28,0xa9};
    std::uint8_t product85[32]    = {0xdd,0x91,0x5a,0xac,0xf7,0x54,0x3b,0xd4,0x61,0xa3,0x57,0xe8,0x67,0x28,0x0b,0x03,0x60,0xe0,0x28,0x4a,0x22,0x5c,0xad,0x4b,0x23,0x97,0x1f,0x7d,0xce,0x14,0x79,0xfc};
    mont256_from_bytes(&ctx, multiplier, multiplier85);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product85, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier86[32] = {0x1e,0x28,0xd8,0xc5,0xf2,0x8f,0x24,0x68,0x49,0x46,0xc5,0x13,0x79,0x11,0x5e,0xab,0x3d,0xe0,0x25,0xde,0x0b,0xf9,0x9a,0x63,0x93,0x57,0x80,0x47,0xbb,0xe6,0x69,0x80};
    std::uint8_t product86[32]    = {0x5a,0x7a,0x8a,0x51,0xd7,0xad,0x6d,0x38,0xdb,0xd4,0x4f,0x3a,0x6b,0x34,0x1c,0x01,0xb9,0xa0,0x71,0x9a,0x23,0xec,0xcf,0x2a,0xba,0x06,0x80,0xd7,0x33,0xb3,0x3c,0x80};
    mont256_from_bytes(&ctx, multiplier, multiplier86);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product86, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier87[32] = {0x2c,0xf5,0x75,0x1e,0xd5,0x25,0xf5,0xd1,0x2c,0xf9,0x07,0xed,0xb3,0xae,0x7f,0x62,0xeb,0xeb,0x57,0x63,0x17,0xb2,0xdf,0x01,0x8f,0xac,0x6f,0x90,0xcc,0x31,0x2f,0x7b};
    std::uint8_t product87[32]    = {0x86,0xe0,0x5f,0x5c,0x7f,0x71,0xe1,0x73,0x86,0xeb,0x17,0xc9,0x1b,0x0b,0x7e,0x28,0xc3,0xc2,0x06,0x29,0x47,0x18,0x9d,0x04,0xaf,0x05,0x4e,0xb2,0x64,0x93,0x8e,0x71};
    mont256_from_bytes(&ctx, multiplier, multiplier87);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product87, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier88[32] = {0x4a,0xac,0xe5,0x00,0x59,0xf6,0xfa,0x46,0xa3,0xd3,0xf6,0xd0,0x7c,0xca,0x27,0x5e,0xf0,0xc6,0xf5,0x7f,0xf2,0x06,0xa7,0x59,0xc0,0x50,0x0f,0xdc,0x5c,0x27,0x50,0x32};
    std::uint8_t product88[32]    = {0xe0,0x06,0xaf,0x01,0x0d,0xe4,0xee,0xd3,0xeb,0x7b,0xe4,0x71,0x76,0x5e,0x76,0x1c,0xd2,0x54,0xe0,0x7f,0xd6,0x13,0xf6,0x0d,0x40,0xf0,0x2f,0x95,0x14,0x75,0xf0,0x96};
    mont256_from_bytes(&ctx, multiplier, multiplier88);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product88, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier89[32] = {0xb8,0xc1,0x56,0x5d,0x21,0x53,0x5f,0xe2,0xcc,0xde,0xe8,0xf6,0x11,0xb1,0x14,0x1b,0x2d,0x97,0xb2,0x6c,0x2a,0x70,0xdc,0xbc,0xf9,0x69,0x10,0xa3,0xa2,0x78,0x4a,0xa1};
    std::uint8_t product89[32]    = {0x2a,0x44,0x03,0x19,0x63,0xfa,0x1f,0xa8,0x66,0x9c,0xba,0xe2,0x35,0x13,0x3c,0x51,0x88,0xc7,0x17,0x46,0x7f,0x52,0x96,0x34,0xec,0x3b,0x31,0xea,0xe7,0x68,0xdf,0xe5};
    mont256_from_bytes(&ctx, multiplier, multiplier89);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product89, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier90[32] = {0x9b,0x79,0x05,0xc9,0x50,0xdb,0x95,0x10,0xa6,0x8a,0x91,0x5a,0x63,0x75,0x45,0xbe,0x32,0x30,0xe1,0x51,0x97,0xc6,0xa4,0x45,0x91,0x8f,0x4f,0x66,0xd4,0x20,0xc4,0x6a};
    std::uint8_t product90[32]    = {0xd2,0x6b,0x11,0x5c,0xf2,0x92,0xbf,0x31,0xf3,0x9f,0xb4,0x0f,0x2a,0x5f,0xd1,0x3a,0x96,0x92,0xa3,0xf5,0xc7,0x53,0xec,0xcf,0xb4,0xad,0xee,0x34,0x7c,0x62,0x4d,0x3f};
    mont256_from_bytes(&ctx, multiplier, multiplier90);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product90, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier91[32] = {0x26,0xc9,0xe5,0xe7,0x52,0x10,0x67,0x8f,0x96,0x62,0xef,0x61,0xfa,0x05,0xbb,0x36,0xf6,0x14,0x33,0xd9,0x5b,0x51,0x69,0x89,0x04,0xfc,0x69,0x13,0xcc,0x53,0x65,0x1b};
    std::uint8_t product91[32]    = {0x74,0x5d,0xb1,0xb5,0xf6,0x31,0x36,0xae,0xc3,0x28,0xce,0x25,0xee,0x11,0x31,0xa4,0xe2,0x3c,0x9b,0x8c,0x11,0xf4,0x3c,0x9b,0x0e,0xf5,0x3b,0x3b,0x64,0xfa,0x2f,0x51};
    mont256_from_bytes(&ctx, multiplier, multiplier91);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product91, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier92[32] = {0xb7,0x62,0x41,0x39,0xd2,0x20,0xf0,0xe8,0x34,0x69,0x21,0x66,0xfc,0x67,0xfa,0x62,0x24,0x85,0x13,0xe8,0x45,0x0f,0x8d,0x06,0x4e,0x72,0x51,0x1b,0x4f,0xfa,0x04,0xe1};
    std::uint8_t product92[32]    = {0x26,0x26,0xc3,0xaf,0x76,0x62,0xd2,0xb8,0x9d,0x3b,0x64,0x34,0xf5,0x37,0xef,0x26,0x6d,0x8f,0x3b,0xba,0xcf,0x2e,0xa7,0x10,0xeb,0x56,0xf3,0x51,0xef,0xee,0x0e,0xa5};
    mont256_from_bytes(&ctx, multiplier, multiplier92);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product92, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier93[32] = {0xe4,0x43,0x7f,0x09,0x6d,0xd0,0xcb,0x2e,0x58,0x3d,0x49,0x3c,0x88,0x51,0x91,0x5f,0xf8,0x85,0xab,0xde,0x7f,0x45,0x36,0xe8,0x37,0xb6,0xb6,0xa2,0x61,0x83,0x5d,0x5b};
    std::uint8_t product93[32]    = {0xac,0xca,0x7d,0x1e,0x49,0x72,0x61,0x8b,0x08,0xb7,0xdb,0xb5,0x98,0xf4,0xb4,0x1f,0xe9,0x91,0x03,0x9d,0x7d,0xcf,0xa4,0xb6,0xa7,0x24,0x23,0xe7,0x24,0x8a,0x18,0x13};
    mont256_from_bytes(&ctx, multiplier, multiplier93);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product93, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier94[32] = {0xbf,0xe3,0x80,0xcc,0xa2,0xc5,0x4c,0x29,0x7f,0x40,0xd8,0x98,0xba,0xef,0x17,0x23,0x2e,0x68,0xfe,0x79,0x95,0x70,0xcb,0x32,0x45,0x7a,0x40,0x6e,0xee,0x16,0x29,0x2f};
    std::uint8_t product94[32]    = {0x3f,0xaa,0x82,0x67,0xe8,0x4f,0xe4,0x7c,0x7d,0xc2,0x89,0xca,0x30,0xcd,0x45,0x69,0x8b,0x3a,0xfb,0x6e,0xc0,0x52,0x61,0x94,0xd0,0x6e,0xc1,0x4c,0xca,0x42,0x7b,0x8f};
    mont256_from_bytes(&ctx, multiplier, multiplier94);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product94, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier95[32] = {0xcd,0x39,0x5d,0xaa,0x4e,0xb8,0xd2,0xb3,0xfb,0x1c,0xfe,0x35,0x3a,0x6f,0x4a,0xb1,0xc1,0xc9,0xfe,0xd9,0x9d,0x2f,0x62,0x2b,0x04,0x45,0x04,0x5d,0x8d,0x3a,0xc9,0x61};
    std::uint8_t product95[32]    = {0x67,0xac,0x19,0x00,0xec,0x2a,0x78,0x1b,0xf1,0x56,0xfa,0x9f,0xaf,0x4d,0xe0,0x15,0x45,0x5d,0xfc,0x8e,0xd7,0x8e,0x26,0x7f,0x0c,0xcf,0x0d,0x18,0xa7,0xb0,0x5c,0x25};
    mont256_from_bytes(&ctx, multiplier, multiplier95);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product95, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier96[32] = {0xe7,0x4b,0xfa,0x72,0x9d,0xae,0x77,0xf3,0x1e,0x3d,0x3e,0xf9,0xf9,0x49,0x76,0x15,0x5c,0x4d,0xb2,0xf4,0xac,0xe2,0x77,0xee,0x04,0x4c,0x2e,0xfc,0x5a,0xf9,0xe8,0x2b};
    std::uint8_t product96[32]    = {0xb5,0xe3,0xef,0x59,0xd9,0x0b,0x67,0xd9,0x5a,0xb7,0xbc,0xed,0xeb,0xdc,0x62,0x40,0x14,0xe9,0x18,0xe0,0x06,0xa7,0x67,0xc8,0x0c,0xe4,0x8c,0xf5,0x10,0xed,0xb8,0x83};
    mont256_from_bytes(&ctx, multiplier, multiplier96);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product96, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier97[32] = {0x9f,0x53,0xc8,0xb9,0xde,0x15,0xe5,0xf9,0xa1,0x3a,0x64,0x04,0xf7,0x80,0xa4,0x61,0x76,0xeb,0x25,0x2f,0x6c,0xaf,0x5c,0x6d,0x1e,0x18,0xc9,0xf0,0x4c,0x08,0xd3,0x24};
    std::uint8_t product97[32]    = {0xdd,0xfb,0x5a,0x2e,0x9a,0x41,0xb1,0xec,0xe3,0xaf,0x2c,0x0e,0xe6,0x81,0xed,0x24,0x64,0xc1,0x6f,0x8f,0x46,0x0e,0x15,0x46,0x5a,0x4a,0x5d,0xd0,0xe4,0x1a,0x79,0x6d};
    mont256_from_bytes(&ctx, multiplier, multiplier97);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product97, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier98[32] = {0x26,0x8f,0x5f,0x8f,0x40,0xff,0x73,0x1a,0x3b,0xbf,0x23,0x05,0x64,0x65,0x30,0x56,0x6a,0xe3,0x79,0x8c,0xf1,0x18,0xba,0x97,0xb1,0x4b,0xa7,0xe0,0x9d,0x4f,0xcf,0x8a};
    std::uint8_t product98[32]    = {0x73,0xae,0x1e,0xad,0xc2,0xfe,0x59,0x4e,0xb3,0x3d,0x69,0x10,0x2d,0x2f,0x91,0x03,0x40,0xaa,0x6c,0xa6,0xd3,0x4a,0x2f,0xc7,0x13,0xe2,0xf7,0xa1,0xd7,0xef,0x6e,0x9e};
    mont256_from_bytes(&ctx, multiplier, multiplier98);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product98, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }

    std::uint8_t multiplier99[32] = {0xf7,0xc3,0x32,0x33,0xad,0x80,0xc8,0x00,0xbb,0x56,0xaf,0x3e,0xf8,0x95,0x0b,0x27,0x29,0x72,0x0e,0x9a,0x5d,0x62,0x47,0xf9,0xc9,0x9a,0xcc,0x5c,0x20,0x81,0x6c,0x72};
    std::uint8_t product99[32]    = {0xe7,0x49,0x96,0x9d,0x08,0x82,0x58,0x02,0x32,0x04,0x0d,0xbc,0xe9,0xbf,0x21,0x75,0x7c,0x56,0x2b,0xd1,0x18,0x26,0xd7,0xeb,0x5c,0xd0,0x65,0x14,0x61,0x84,0x45,0x58};
    mont256_from_bytes(&ctx, multiplier, multiplier99);
    mont256_tpl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product99, product_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_tpl");
    }
}
#else
void test_mont256_x64_tpl()
{
}
#endif