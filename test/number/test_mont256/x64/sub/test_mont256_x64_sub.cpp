#if defined(CPU_FLAG_MOVBE) && defined(CPU_FLAG_BMI2)
#include <gmlib/number/internal/mont256_x64.h>
#include <gmlib/number/internal/uint256_x64.h>
#include <stdexcept>
#include <cstring>

using namespace number::internal::x64;

static std::uint8_t  P_data[32]      = {0xff,0xff,0xff,0xfe,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff};
static std::uint8_t  P_SUB2_data[32] = {0xff,0xff,0xff,0xfe,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfd};
static std::uint8_t  R_data[32]      = {0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01};
static std::uint8_t  R_POW2_data[32] = {0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x02,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x03};
static std::uint32_t N_              = 1;

void test_mont256_x64_sub()
{
    uint256_t P, P_SUB2, R, R_POW2;
    uint256_from_bytes(P, P_data);
    uint256_from_bytes(P_SUB2, P_SUB2_data);
    uint256_from_bytes(R, R_data);
    uint256_from_bytes(R_POW2, R_POW2_data);

    Mont256CTX ctx;
    ctx.P = P, ctx.P_SUB2 = P_SUB2;
    ctx.R = R, ctx.R_POW2 = R_POW2;
    ctx.N_ = N_;

    mont256_t    minuend, subtrahend, difference;
    std::uint8_t difference_data[32];

    std::uint8_t minuend0[32]       = {0x90,0xa1,0xa1,0xce,0x3c,0xa6,0xf0,0xd5,0xd3,0xfb,0x34,0xab,0x94,0xcc,0x25,0x31,0x66,0xe7,0xef,0xc0,0xfe,0x95,0xf0,0xdf,0xba,0x6f,0x69,0x27,0xde,0x4b,0xd7,0x91};
    std::uint8_t subtrahend0[32]    = {0x49,0xba,0x7a,0x0d,0xcc,0x6e,0x66,0x0e,0xee,0x0b,0x8b,0xf5,0xdc,0xfd,0xc0,0x0c,0x99,0x4f,0xa0,0x71,0xf5,0x3d,0x0c,0x37,0x41,0xc5,0xd4,0x2d,0xa6,0x2d,0x11,0x77};
    std::uint8_t difference0[32]    = {0x46,0xe7,0x27,0xc0,0x70,0x38,0x8a,0xc6,0xe5,0xef,0xa8,0xb5,0xb7,0xce,0x65,0x24,0xcd,0x98,0x4f,0x4f,0x09,0x58,0xe4,0xa8,0x78,0xa9,0x94,0xfa,0x38,0x1e,0xc6,0x1a};
    mont256_from_bytes(&ctx, minuend, minuend0);
    mont256_from_bytes(&ctx, subtrahend, subtrahend0);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference0, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend1[32]       = {0x50,0x1b,0x71,0x0e,0xc9,0x50,0x47,0xbf,0xb9,0xce,0xd3,0x11,0x50,0x4f,0x02,0x9b,0xe9,0x39,0x3b,0x6f,0x39,0x51,0x77,0x98,0xb0,0x31,0x9e,0x51,0x4c,0x64,0x19,0x07};
    std::uint8_t subtrahend1[32]    = {0x56,0x9c,0x16,0x43,0x26,0x4b,0x1d,0x8d,0xe2,0xda,0x41,0x5c,0x8f,0x76,0xac,0x48,0x25,0x9c,0x4c,0x89,0x5b,0x73,0xd7,0x48,0x29,0x20,0x4c,0xaf,0xa7,0x49,0xb2,0x3d};
    std::uint8_t difference1[32]    = {0xf9,0x7f,0x5a,0xca,0xa3,0x05,0x2a,0x31,0xd6,0xf4,0x91,0xb4,0xc0,0xd8,0x56,0x53,0xc3,0x9c,0xee,0xe4,0xdd,0xdd,0xa0,0x51,0x87,0x11,0x51,0xa1,0xa5,0x1a,0x66,0xc9};
    mont256_from_bytes(&ctx, minuend, minuend1);
    mont256_from_bytes(&ctx, subtrahend, subtrahend1);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference1, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend2[32]       = {0xe9,0x43,0x26,0xc6,0xa8,0x2c,0xf1,0x59,0x88,0xfb,0xdc,0xad,0xb6,0xb8,0xa9,0xe7,0x32,0x64,0xaa,0x05,0x82,0x0c,0x18,0xc9,0xf8,0xc1,0x25,0xf2,0xe0,0xd6,0x4d,0x7e};
    std::uint8_t subtrahend2[32]    = {0x39,0x64,0xac,0x3b,0xab,0xe4,0xb9,0x4d,0xcf,0x3a,0x86,0x62,0xb5,0xc4,0xe4,0x53,0xf5,0xbd,0xbb,0x6d,0x45,0xe4,0x55,0x0f,0x99,0x72,0xc4,0xde,0x61,0x01,0x6b,0x01};
    std::uint8_t difference2[32]    = {0xaf,0xde,0x7a,0x8a,0xfc,0x48,0x38,0x0b,0xb9,0xc1,0x56,0x4b,0x00,0xf3,0xc5,0x93,0x3c,0xa6,0xee,0x98,0x3c,0x27,0xc3,0xba,0x5f,0x4e,0x61,0x14,0x7f,0xd4,0xe2,0x7d};
    mont256_from_bytes(&ctx, minuend, minuend2);
    mont256_from_bytes(&ctx, subtrahend, subtrahend2);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference2, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend3[32]       = {0xcb,0x82,0xdd,0x83,0x97,0xa7,0x68,0x66,0x27,0x64,0x31,0xf7,0xfd,0x2f,0x2c,0xdb,0x66,0xdb,0x25,0x8c,0x9c,0xab,0xd4,0x67,0xd1,0x0e,0xfb,0x2f,0x34,0x66,0xbb,0x70};
    std::uint8_t subtrahend3[32]    = {0x84,0xcf,0x49,0xf9,0xcb,0x10,0x15,0x73,0x04,0xf0,0x0a,0x04,0x0b,0x7e,0x28,0xd4,0xee,0x96,0x44,0xa0,0x22,0x92,0x2c,0x45,0x4e,0x6d,0x2f,0x1a,0x70,0xd1,0xf9,0x1a};
    std::uint8_t difference3[32]    = {0x46,0xb3,0x93,0x89,0xcc,0x97,0x52,0xf3,0x22,0x74,0x27,0xf3,0xf1,0xb1,0x04,0x06,0x78,0x44,0xe0,0xec,0x7a,0x19,0xa8,0x22,0x82,0xa1,0xcc,0x14,0xc3,0x94,0xc2,0x56};
    mont256_from_bytes(&ctx, minuend, minuend3);
    mont256_from_bytes(&ctx, subtrahend, subtrahend3);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference3, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend4[32]       = {0xba,0x1b,0x70,0x0c,0xdc,0x12,0x14,0xde,0x22,0x37,0x25,0x0f,0x15,0x78,0xd9,0x3c,0x35,0xe5,0xee,0x30,0x18,0xb5,0x44,0x0c,0xb8,0x88,0xa8,0x53,0x91,0xcf,0x15,0xf3};
    std::uint8_t subtrahend4[32]    = {0x69,0x05,0xdb,0x0d,0x33,0x5a,0x5b,0x43,0x79,0x40,0x1b,0x62,0xfc,0xe2,0xbd,0x7a,0x02,0xad,0x63,0x69,0x80,0x59,0x5e,0xa6,0x34,0x83,0x36,0xcd,0xd5,0x88,0x00,0x50};
    std::uint8_t difference4[32]    = {0x51,0x15,0x94,0xff,0xa8,0xb7,0xb9,0x9a,0xa8,0xf7,0x09,0xac,0x18,0x96,0x1b,0xc2,0x33,0x38,0x8a,0xc6,0x98,0x5b,0xe5,0x66,0x84,0x05,0x71,0x85,0xbc,0x47,0x15,0xa3};
    mont256_from_bytes(&ctx, minuend, minuend4);
    mont256_from_bytes(&ctx, subtrahend, subtrahend4);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference4, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend5[32]       = {0xfd,0xb4,0xd0,0xc0,0xd4,0x54,0x9d,0x50,0x6e,0xa0,0xcc,0xde,0xf2,0xf8,0x31,0x3c,0x11,0x4d,0xf9,0x91,0xdd,0x1f,0xda,0xa3,0x35,0x4d,0x5e,0xf3,0x96,0x29,0xea,0xa5};
    std::uint8_t subtrahend5[32]    = {0xa7,0x68,0xa6,0x4e,0x88,0x73,0x90,0xc7,0x73,0x3b,0x53,0xb3,0x23,0x48,0xba,0x7c,0x16,0x2e,0x50,0x63,0x82,0x5b,0xc0,0x9f,0x5c,0x9c,0xa3,0x83,0xd9,0xad,0x56,0xd9};
    std::uint8_t difference5[32]    = {0x56,0x4c,0x2a,0x72,0x4b,0xe1,0x0c,0x88,0xfb,0x65,0x79,0x2b,0xcf,0xaf,0x76,0xbf,0xfb,0x1f,0xa9,0x2e,0x5a,0xc4,0x1a,0x03,0xd8,0xb0,0xbb,0x6f,0xbc,0x7c,0x93,0xcc};
    mont256_from_bytes(&ctx, minuend, minuend5);
    mont256_from_bytes(&ctx, subtrahend, subtrahend5);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference5, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend6[32]       = {0xd3,0x58,0x6a,0x9b,0x95,0x09,0x94,0xc0,0x91,0x2d,0x2f,0x1b,0xf2,0x25,0xc4,0xe2,0x74,0xbf,0x57,0x34,0x5d,0xe9,0xfa,0x10,0x59,0xc3,0x29,0x7a,0x4f,0xad,0xe9,0xe6};
    std::uint8_t subtrahend6[32]    = {0x13,0x8b,0x60,0x30,0x91,0xc0,0x6c,0xcb,0x68,0x09,0xa5,0x30,0x46,0x96,0xe1,0x81,0xd9,0x03,0x0b,0x4a,0x81,0xc6,0xaf,0xbf,0x26,0xc8,0xd8,0xb3,0xf4,0xea,0x24,0x40};
    std::uint8_t difference6[32]    = {0xbf,0xcd,0x0a,0x6b,0x03,0x49,0x27,0xf5,0x29,0x23,0x89,0xeb,0xab,0x8e,0xe3,0x60,0x9b,0xbc,0x4b,0xe9,0xdc,0x23,0x4a,0x51,0x32,0xfa,0x50,0xc6,0x5a,0xc3,0xc5,0xa6};
    mont256_from_bytes(&ctx, minuend, minuend6);
    mont256_from_bytes(&ctx, subtrahend, subtrahend6);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference6, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend7[32]       = {0x1a,0x90,0x98,0x2d,0xa6,0xfc,0x5f,0x57,0x9a,0xad,0x01,0xf4,0x0b,0x44,0x79,0xa7,0xfe,0xbc,0x0e,0x88,0x63,0x2f,0xfb,0x29,0xc3,0xe0,0x4e,0x85,0x5d,0x55,0x57,0x03};
    std::uint8_t subtrahend7[32]    = {0x3b,0xca,0x43,0x1a,0x09,0x85,0x0d,0x33,0x99,0x8c,0xa4,0xd7,0x90,0xe4,0x4f,0x38,0x34,0xf3,0xa2,0xe2,0x8a,0xe8,0x5a,0x39,0xb6,0xcb,0xed,0x0b,0xda,0x33,0xff,0xa8};
    std::uint8_t difference7[32]    = {0xde,0xc6,0x55,0x12,0x9d,0x77,0x52,0x24,0x01,0x20,0x5d,0x1c,0x7a,0x60,0x2a,0x6f,0xc9,0xc8,0x6b,0xa4,0xd8,0x47,0xa0,0xf1,0x0d,0x14,0x61,0x79,0x83,0x21,0x57,0x5a};
    mont256_from_bytes(&ctx, minuend, minuend7);
    mont256_from_bytes(&ctx, subtrahend, subtrahend7);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference7, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend8[32]       = {0xad,0x08,0xc7,0xe7,0xc4,0x26,0x25,0xf1,0xd7,0x11,0x48,0xd0,0x76,0xb1,0x57,0xc6,0x2a,0x96,0xd6,0x9d,0xa7,0xc1,0xba,0xe1,0x98,0x47,0x43,0x59,0xa1,0xa9,0x41,0x13};
    std::uint8_t subtrahend8[32]    = {0x96,0x34,0xfd,0x5f,0x65,0x07,0x4b,0x06,0x9b,0x65,0x4e,0xa0,0x0f,0x57,0x3e,0x1f,0x8a,0xe1,0x24,0x3a,0x7a,0xd1,0x09,0xdc,0x39,0xe5,0x1d,0x83,0x3a,0xc6,0x13,0x1f};
    std::uint8_t difference8[32]    = {0x16,0xd3,0xca,0x88,0x5f,0x1e,0xda,0xeb,0x3b,0xab,0xfa,0x30,0x67,0x5a,0x19,0xa6,0x9f,0xb5,0xb2,0x63,0x2c,0xf0,0xb1,0x05,0x5e,0x62,0x25,0xd6,0x66,0xe3,0x2d,0xf4};
    mont256_from_bytes(&ctx, minuend, minuend8);
    mont256_from_bytes(&ctx, subtrahend, subtrahend8);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference8, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend9[32]       = {0x47,0x6c,0x12,0x01,0xfe,0x09,0x57,0xc5,0x77,0x31,0x57,0xf9,0x8b,0x29,0x64,0xc3,0xb2,0xbf,0xad,0xe6,0xcd,0xad,0x0a,0x12,0x8b,0x8b,0xbb,0x3e,0x9e,0xe8,0x36,0xba};
    std::uint8_t subtrahend9[32]    = {0x70,0x0d,0x03,0x10,0xd9,0xf7,0x15,0x99,0xe0,0x78,0xd2,0xfe,0xa5,0x46,0xe3,0x07,0xec,0xf6,0x2f,0x7b,0x94,0x89,0x41,0x7b,0x19,0x49,0xfd,0xdd,0xcf,0x87,0x4b,0xdc};
    std::uint8_t difference9[32]    = {0xd7,0x5f,0x0e,0xf0,0x24,0x12,0x42,0x2b,0x96,0xb8,0x84,0xfa,0xe5,0xe2,0x81,0xbb,0xc5,0xc9,0x7e,0x6a,0x39,0x23,0xc8,0x98,0x72,0x41,0xbd,0x60,0xcf,0x60,0xea,0xdd};
    mont256_from_bytes(&ctx, minuend, minuend9);
    mont256_from_bytes(&ctx, subtrahend, subtrahend9);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference9, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend10[32]       = {0x26,0xf7,0xf4,0xf3,0x66,0x04,0xfd,0x72,0x56,0x46,0xa5,0xad,0x8c,0xd7,0x1d,0xf4,0xba,0xef,0xf6,0xe1,0x5e,0x2f,0x29,0xba,0xd1,0xda,0x17,0x87,0xc0,0x16,0xa3,0x31};
    std::uint8_t subtrahend10[32]    = {0x97,0xe2,0xb2,0xdb,0xfb,0x22,0x08,0xb5,0xce,0x50,0xe8,0x53,0x7b,0xbf,0x15,0x95,0x76,0xa4,0x19,0xe0,0x92,0x97,0x15,0x6d,0xf4,0xd2,0x71,0xe4,0x2c,0x13,0xbf,0x1e};
    std::uint8_t difference10[32]    = {0x8f,0x15,0x42,0x16,0x6a,0xe2,0xf4,0xbc,0x87,0xf5,0xbd,0x5a,0x11,0x18,0x08,0x5f,0x44,0x4b,0xdc,0xff,0xcb,0x98,0x14,0x4d,0xdd,0x07,0xa5,0xa3,0x94,0x02,0xe4,0x12};
    mont256_from_bytes(&ctx, minuend, minuend10);
    mont256_from_bytes(&ctx, subtrahend, subtrahend10);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference10, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend11[32]       = {0x46,0xf8,0x93,0x1d,0xee,0x63,0x6b,0x60,0xa0,0x84,0x15,0xe4,0x5e,0xee,0x9a,0x09,0xae,0xa0,0xb8,0x16,0x9c,0x5f,0xf2,0xef,0xc0,0xcb,0xd2,0xf2,0x36,0x00,0x12,0xdf};
    std::uint8_t subtrahend11[32]    = {0x74,0xe6,0x11,0xf7,0xe8,0x9a,0x37,0x5a,0xab,0x70,0x3c,0xc1,0xa6,0xd8,0xf3,0x7c,0xae,0x4b,0x98,0x87,0x3a,0x21,0xda,0xf2,0xc3,0x26,0xfc,0x97,0x8e,0x82,0x0b,0x0c};
    std::uint8_t difference11[32]    = {0xd2,0x12,0x81,0x25,0x05,0xc9,0x34,0x05,0xf5,0x13,0xd9,0x22,0xb8,0x15,0xa6,0x8d,0x00,0x55,0x1f,0x8e,0x62,0x3e,0x17,0xfd,0xfd,0xa4,0xd6,0x5a,0xa7,0x7e,0x07,0xd2};
    mont256_from_bytes(&ctx, minuend, minuend11);
    mont256_from_bytes(&ctx, subtrahend, subtrahend11);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference11, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend12[32]       = {0x63,0x11,0xd7,0x74,0x4d,0xb5,0xd7,0xdb,0x8a,0x37,0x01,0x9e,0xbc,0x6f,0x49,0x65,0x76,0x03,0x0d,0x1a,0x45,0xb6,0x37,0x25,0xed,0xe2,0xeb,0xb9,0xaa,0x6a,0x8a,0x6d};
    std::uint8_t subtrahend12[32]    = {0x44,0x0d,0xb7,0xa2,0x83,0x7c,0x0f,0xa2,0xe1,0x13,0x7a,0xf4,0x03,0x59,0x8b,0x9c,0xf8,0xdc,0xaa,0xcc,0x2c,0x96,0xf9,0xdf,0x37,0x3b,0x84,0xe8,0x8f,0x77,0x09,0x8f};
    std::uint8_t difference12[32]    = {0x1f,0x04,0x1f,0xd1,0xca,0x39,0xc8,0x38,0xa9,0x23,0x86,0xaa,0xb9,0x15,0xbd,0xc8,0x7d,0x26,0x62,0x4e,0x19,0x1f,0x3d,0x46,0xb6,0xa7,0x66,0xd1,0x1a,0xf3,0x80,0xde};
    mont256_from_bytes(&ctx, minuend, minuend12);
    mont256_from_bytes(&ctx, subtrahend, subtrahend12);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference12, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend13[32]       = {0xa7,0x76,0x30,0xf3,0xca,0x62,0x44,0x56,0x28,0x02,0x91,0xff,0x23,0x13,0xde,0x82,0x8d,0xca,0x14,0xc2,0x8e,0x87,0x90,0x90,0x8c,0xd9,0x99,0x6a,0xba,0x1c,0x9d,0x11};
    std::uint8_t subtrahend13[32]    = {0xe9,0x0b,0x46,0xc2,0xb5,0xfd,0xc5,0x0d,0xf2,0x1e,0x53,0xf2,0x70,0x4c,0xc0,0xa4,0xc2,0x13,0x25,0x48,0x3c,0xeb,0x5c,0x22,0xb7,0x0a,0x27,0x98,0xf2,0xa4,0x80,0x6b};
    std::uint8_t difference13[32]    = {0xbe,0x6a,0xea,0x30,0x14,0x64,0x7f,0x48,0x35,0xe4,0x3e,0x0c,0xb2,0xc7,0x1d,0xdd,0xcb,0xb6,0xef,0x79,0x51,0x9c,0x34,0x6e,0xd5,0xcf,0x71,0xd1,0xc7,0x78,0x1c,0xa5};
    mont256_from_bytes(&ctx, minuend, minuend13);
    mont256_from_bytes(&ctx, subtrahend, subtrahend13);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference13, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend14[32]       = {0x14,0x28,0xcf,0xc1,0x30,0xc1,0xb2,0x37,0xa4,0xd8,0x2d,0x46,0x6a,0xd6,0xa7,0xab,0x9a,0xb8,0x8f,0xf2,0x6e,0x14,0x35,0x8d,0x2f,0xa8,0x62,0x6d,0x5e,0x4f,0x8a,0xbb};
    std::uint8_t subtrahend14[32]    = {0x3e,0x3f,0x49,0xb5,0xa6,0x83,0x89,0x6f,0x73,0x41,0x16,0x5e,0xd4,0x57,0x83,0x44,0xdf,0x6d,0x45,0x14,0xd5,0xae,0x8a,0x4a,0x6b,0x55,0x2f,0xad,0xe7,0x0f,0x7c,0x79};
    std::uint8_t difference14[32]    = {0xd5,0xe9,0x86,0x0a,0x8a,0x3e,0x28,0xc8,0x31,0x97,0x16,0xe7,0x96,0x7f,0x24,0x66,0xbb,0x4b,0x4a,0xdc,0x98,0x65,0xab,0x43,0xc4,0x53,0x32,0xbf,0x77,0x40,0x0e,0x41};
    mont256_from_bytes(&ctx, minuend, minuend14);
    mont256_from_bytes(&ctx, subtrahend, subtrahend14);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference14, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend15[32]       = {0xe5,0xc9,0x88,0x3c,0xa4,0x82,0x11,0x2f,0xdd,0xb2,0xf0,0x13,0xe2,0x88,0x44,0x96,0x88,0x65,0x92,0xc3,0xc6,0xce,0x0f,0x32,0xd8,0x01,0x4f,0x0b,0xb6,0x6b,0x05,0x40};
    std::uint8_t subtrahend15[32]    = {0xa6,0x13,0xdb,0x9a,0x54,0xf4,0xeb,0x21,0xc5,0x99,0x8e,0x8a,0x41,0x67,0x94,0x4b,0x44,0x0e,0x22,0x38,0xe1,0xcc,0xd0,0x94,0x1a,0x76,0xb5,0xcb,0xf7,0x88,0x69,0x31};
    std::uint8_t difference15[32]    = {0x3f,0xb5,0xac,0xa2,0x4f,0x8d,0x26,0x0e,0x18,0x19,0x61,0x89,0xa1,0x20,0xb0,0x4b,0x44,0x57,0x70,0x8a,0xe5,0x01,0x3e,0x9e,0xbd,0x8a,0x99,0x3f,0xbe,0xe2,0x9c,0x0f};
    mont256_from_bytes(&ctx, minuend, minuend15);
    mont256_from_bytes(&ctx, subtrahend, subtrahend15);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference15, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend16[32]       = {0xcd,0xc9,0xe7,0xe5,0x81,0x1e,0x3d,0x3d,0x74,0xba,0xa8,0x03,0xe6,0x28,0x42,0x6e,0x31,0xdd,0x99,0x3d,0xdd,0x97,0x2c,0x59,0x55,0x49,0x0e,0xa5,0xf3,0xce,0xa4,0x0a};
    std::uint8_t subtrahend16[32]    = {0xb8,0xf6,0xdc,0xaf,0x90,0xc6,0xc0,0x68,0x97,0x4c,0x40,0xd0,0x51,0xd9,0xf7,0x9f,0xa4,0xdf,0x39,0xc1,0x37,0x34,0x27,0xe7,0x9c,0x1e,0x69,0x52,0x49,0x34,0x5d,0x73};
    std::uint8_t difference16[32]    = {0x14,0xd3,0x0b,0x35,0xf0,0x57,0x7c,0xd4,0xdd,0x6e,0x67,0x33,0x94,0x4e,0x4a,0xce,0x8c,0xfe,0x5f,0x7c,0xa6,0x63,0x04,0x71,0xb9,0x2a,0xa5,0x53,0xaa,0x9a,0x46,0x97};
    mont256_from_bytes(&ctx, minuend, minuend16);
    mont256_from_bytes(&ctx, subtrahend, subtrahend16);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference16, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend17[32]       = {0x47,0x8c,0xd8,0x98,0x56,0x52,0x5c,0x71,0xee,0xcc,0x89,0xad,0x2e,0x8c,0x29,0xd7,0x6c,0xe3,0x7c,0x2e,0x04,0x67,0x03,0x6d,0xba,0x2a,0x50,0x4e,0xdd,0xb2,0x11,0x0e};
    std::uint8_t subtrahend17[32]    = {0x10,0x2a,0x6d,0x9d,0xc7,0x20,0x03,0xc1,0x8c,0xed,0xd1,0x9c,0x99,0x0d,0x4d,0x1c,0x95,0xf5,0x29,0x09,0xd2,0x2d,0x59,0x16,0x9a,0xea,0xc5,0xc9,0xb0,0xa4,0xf0,0x30};
    std::uint8_t difference17[32]    = {0x37,0x62,0x6a,0xfa,0x8f,0x32,0x58,0xb0,0x61,0xde,0xb8,0x10,0x95,0x7e,0xdc,0xba,0xd6,0xee,0x53,0x24,0x32,0x39,0xaa,0x57,0x1f,0x3f,0x8a,0x85,0x2d,0x0d,0x20,0xde};
    mont256_from_bytes(&ctx, minuend, minuend17);
    mont256_from_bytes(&ctx, subtrahend, subtrahend17);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference17, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend18[32]       = {0x79,0x6a,0x49,0x4a,0xf1,0xec,0xf7,0xee,0x59,0x52,0x92,0xf7,0xe4,0xe3,0x5b,0x37,0xc0,0xfa,0x67,0xcf,0x2d,0x9a,0x82,0xc7,0xf0,0x7f,0x94,0x52,0x7f,0xa5,0xd1,0x90};
    std::uint8_t subtrahend18[32]    = {0x53,0xf8,0xa5,0xc7,0xec,0xd7,0xf5,0x8c,0xe9,0x88,0x50,0x3c,0xcf,0x4a,0xc5,0x37,0x43,0xff,0x5a,0xc0,0xf8,0x36,0x55,0xa6,0xa9,0x02,0x3a,0xe8,0xd6,0x65,0x8e,0x44};
    std::uint8_t difference18[32]    = {0x25,0x71,0xa3,0x83,0x05,0x15,0x02,0x61,0x6f,0xca,0x42,0xbb,0x15,0x98,0x96,0x00,0x7c,0xfb,0x0d,0x0e,0x35,0x64,0x2d,0x21,0x47,0x7d,0x59,0x69,0xa9,0x40,0x43,0x4c};
    mont256_from_bytes(&ctx, minuend, minuend18);
    mont256_from_bytes(&ctx, subtrahend, subtrahend18);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference18, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend19[32]       = {0x7b,0x97,0x2e,0xf2,0xa6,0xc8,0xf0,0x0c,0x2f,0x6a,0x11,0xa6,0x89,0x65,0xf2,0x04,0x48,0x8e,0x3b,0xbf,0xa2,0x66,0x86,0x2a,0x90,0x80,0x29,0x87,0x5c,0xdb,0x13,0x9b};
    std::uint8_t subtrahend19[32]    = {0x6f,0xa1,0xfd,0x6b,0x38,0xbd,0x82,0x9f,0x9e,0xec,0x35,0x47,0x12,0x40,0x64,0xee,0xf9,0x55,0xf3,0xc3,0x44,0x26,0x10,0x5a,0x45,0xcf,0xd6,0xe1,0x5b,0x5a,0x9c,0x01};
    std::uint8_t difference19[32]    = {0x0b,0xf5,0x31,0x87,0x6e,0x0b,0x6d,0x6c,0x90,0x7d,0xdc,0x5f,0x77,0x25,0x8d,0x15,0x4f,0x38,0x47,0xfc,0x5e,0x40,0x75,0xd0,0x4a,0xb0,0x52,0xa6,0x01,0x80,0x77,0x9a};
    mont256_from_bytes(&ctx, minuend, minuend19);
    mont256_from_bytes(&ctx, subtrahend, subtrahend19);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference19, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend20[32]       = {0x32,0xb0,0x6c,0x56,0x27,0x1f,0x01,0xa5,0xe1,0x92,0x52,0xfe,0x93,0x55,0x4d,0x74,0xcf,0x3d,0xb0,0x15,0x02,0xa2,0xe1,0x8f,0xc4,0xc4,0x89,0x8c,0xa4,0xc6,0x3c,0xa5};
    std::uint8_t subtrahend20[32]    = {0x66,0x4f,0x35,0xf5,0x4c,0xe2,0x33,0x8e,0xdb,0x41,0x30,0x92,0xb0,0x7b,0x5f,0x10,0x6c,0xc6,0xdc,0xf6,0xd5,0x25,0xab,0x1c,0x08,0xc4,0xbe,0xf4,0xe5,0xac,0x06,0xdb};
    std::uint8_t difference20[32]    = {0xcc,0x61,0x36,0x5f,0xda,0x3c,0xce,0x17,0x06,0x51,0x22,0x6b,0xe2,0xd9,0xee,0x64,0x62,0x76,0xd3,0x1d,0x2d,0x7d,0x36,0x74,0xbb,0xff,0xca,0x97,0xbf,0x1a,0x35,0xc9};
    mont256_from_bytes(&ctx, minuend, minuend20);
    mont256_from_bytes(&ctx, subtrahend, subtrahend20);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference20, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend21[32]       = {0xb3,0xf0,0x01,0xdd,0x96,0x2d,0x1f,0xb8,0x77,0xc7,0xa8,0xe4,0xb0,0x82,0x66,0xd2,0x19,0x15,0x6b,0xc3,0xa6,0xa2,0x83,0x00,0xf7,0x98,0x07,0x2c,0xe9,0x15,0x32,0x54};
    std::uint8_t subtrahend21[32]    = {0xde,0x45,0x6d,0xe3,0x7d,0x05,0xb6,0xaf,0x51,0x3f,0x41,0x73,0x77,0x8e,0x2c,0xa9,0xa0,0xbc,0x0c,0xe6,0xb1,0xec,0xeb,0xe7,0xb3,0xf0,0xca,0x54,0xe7,0xa7,0xb3,0xfd};
    std::uint8_t difference21[32]    = {0xd5,0xaa,0x93,0xf9,0x19,0x27,0x69,0x09,0x26,0x88,0x67,0x71,0x38,0xf4,0x3a,0x28,0x78,0x59,0x5e,0xdb,0xf4,0xb5,0x97,0x1a,0x43,0xa7,0x3c,0xd8,0x01,0x6d,0x7e,0x56};
    mont256_from_bytes(&ctx, minuend, minuend21);
    mont256_from_bytes(&ctx, subtrahend, subtrahend21);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference21, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend22[32]       = {0xc0,0x4d,0xa1,0x39,0x55,0x13,0x4c,0xd6,0xeb,0x8c,0x6c,0x0b,0x9d,0xc6,0x0a,0xbd,0x08,0x09,0xd5,0x67,0xc9,0xc6,0xcf,0x0b,0x59,0xde,0x80,0xd6,0xc1,0x36,0x17,0x85};
    std::uint8_t subtrahend22[32]    = {0xbb,0x40,0xf3,0xd6,0x8d,0x1f,0xf6,0xfe,0x38,0x41,0xb9,0x76,0x2e,0xf8,0x55,0xf2,0x70,0xa0,0xe6,0x98,0x5e,0x2b,0xa4,0xe8,0xa2,0x7c,0xf2,0xe6,0x15,0xa0,0xc2,0xbd};
    std::uint8_t difference22[32]    = {0x05,0x0c,0xad,0x62,0xc7,0xf3,0x55,0xd8,0xb3,0x4a,0xb2,0x95,0x6e,0xcd,0xb4,0xca,0x97,0x68,0xee,0xcf,0x6b,0x9b,0x2a,0x22,0xb7,0x61,0x8d,0xf0,0xab,0x95,0x54,0xc8};
    mont256_from_bytes(&ctx, minuend, minuend22);
    mont256_from_bytes(&ctx, subtrahend, subtrahend22);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference22, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend23[32]       = {0xc0,0x39,0x56,0xf2,0x50,0x5e,0xd2,0x03,0x8e,0x7d,0x37,0xba,0xbf,0xd2,0xf0,0x47,0x03,0xa3,0x8f,0x00,0xe8,0x20,0x73,0x44,0x90,0x32,0x1e,0x4d,0xe9,0xbb,0x5e,0xad};
    std::uint8_t subtrahend23[32]    = {0x63,0xa5,0x17,0x19,0x42,0xef,0xf2,0x95,0x30,0xac,0xfb,0x88,0xa8,0xfe,0x7d,0x05,0x92,0x87,0x65,0x24,0x5c,0xda,0x64,0x64,0xa5,0xcb,0xae,0x01,0x46,0x3d,0xf4,0xa8};
    std::uint8_t difference23[32]    = {0x5c,0x94,0x3f,0xd9,0x0d,0x6e,0xdf,0x6e,0x5d,0xd0,0x3c,0x32,0x16,0xd4,0x73,0x41,0x71,0x1c,0x29,0xdc,0x8b,0x46,0x0e,0xdf,0xea,0x66,0x70,0x4c,0xa3,0x7d,0x6a,0x05};
    mont256_from_bytes(&ctx, minuend, minuend23);
    mont256_from_bytes(&ctx, subtrahend, subtrahend23);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference23, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend24[32]       = {0xda,0x5c,0x61,0xa1,0xa6,0x07,0x37,0x37,0xcf,0x1c,0x5e,0x9a,0x3a,0x5a,0xce,0x41,0xec,0x8d,0xed,0x3a,0x07,0x1e,0x4a,0x43,0xb0,0x4f,0x47,0x67,0x81,0xf0,0xce,0xc6};
    std::uint8_t subtrahend24[32]    = {0xcc,0xf6,0xf2,0xed,0x18,0xa9,0x0f,0x3c,0xcd,0xf7,0x45,0x9e,0xd7,0x6f,0xd1,0x80,0xc5,0x8e,0x10,0x45,0xed,0xc6,0xc3,0x70,0xe4,0xbd,0xb8,0xc3,0x12,0xa1,0xe3,0xcb};
    std::uint8_t difference24[32]    = {0x0d,0x65,0x6e,0xb4,0x8d,0x5e,0x27,0xfb,0x01,0x25,0x18,0xfb,0x62,0xea,0xfc,0xc1,0x26,0xff,0xdc,0xf4,0x19,0x57,0x86,0xd2,0xcb,0x91,0x8e,0xa4,0x6f,0x4e,0xea,0xfb};
    mont256_from_bytes(&ctx, minuend, minuend24);
    mont256_from_bytes(&ctx, subtrahend, subtrahend24);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference24, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend25[32]       = {0x90,0xd6,0xe5,0x0b,0x92,0x36,0x1b,0xb7,0xc8,0x45,0xbb,0x36,0xed,0xa1,0x1b,0xe6,0xc0,0x39,0x3f,0xf4,0x9a,0x90,0x20,0xbf,0xeb,0x55,0x6f,0xb0,0xaf,0x37,0x90,0xc6};
    std::uint8_t subtrahend25[32]    = {0x0f,0xa8,0x5e,0xbb,0xf0,0xa3,0x8c,0x85,0xc1,0x02,0x0a,0xd0,0x88,0x08,0x64,0xc2,0xdc,0x6d,0xcf,0x2a,0x6f,0x8d,0xc1,0x27,0x1e,0x7b,0x15,0x9a,0x80,0x77,0x15,0x64};
    std::uint8_t difference25[32]    = {0x81,0x2e,0x86,0x4f,0xa1,0x92,0x8f,0x32,0x07,0x43,0xb0,0x66,0x65,0x98,0xb7,0x23,0xe3,0xcb,0x70,0xca,0x2b,0x02,0x5f,0x98,0xcc,0xda,0x5a,0x16,0x2e,0xc0,0x7b,0x62};
    mont256_from_bytes(&ctx, minuend, minuend25);
    mont256_from_bytes(&ctx, subtrahend, subtrahend25);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference25, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend26[32]       = {0x1c,0x0a,0x0c,0xab,0xc2,0x72,0x56,0xdc,0x8b,0xed,0xe6,0xa4,0x14,0xe7,0x34,0xae,0x69,0xc2,0x76,0xc9,0x9a,0x5c,0xf0,0x9d,0xf2,0x9e,0xfa,0xcd,0x4a,0xa8,0x78,0x56};
    std::uint8_t subtrahend26[32]    = {0x3b,0xc7,0xbc,0x70,0x10,0x9f,0xe4,0x11,0x9c,0x7b,0x0a,0x6b,0x90,0xde,0x64,0xa3,0x93,0x2e,0x07,0x21,0x97,0x00,0xdb,0xed,0x6f,0x6a,0xfc,0x47,0xb1,0xad,0x94,0x70};
    std::uint8_t difference26[32]    = {0xe0,0x42,0x50,0x3a,0xb1,0xd2,0x72,0xca,0xef,0x72,0xdc,0x38,0x84,0x08,0xd0,0x0a,0xd6,0x94,0x6f,0xa7,0x03,0x5c,0x14,0xb1,0x83,0x33,0xfe,0x85,0x98,0xfa,0xe3,0xe5};
    mont256_from_bytes(&ctx, minuend, minuend26);
    mont256_from_bytes(&ctx, subtrahend, subtrahend26);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference26, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend27[32]       = {0x02,0xd1,0xec,0xa7,0xae,0xec,0xa0,0x4c,0x03,0x6b,0x27,0x8d,0xe9,0xbe,0x03,0xde,0x5d,0x14,0x04,0x2e,0xa0,0x10,0x0c,0xbc,0xa1,0xbc,0xe4,0xfc,0x69,0xc3,0xee,0xf0};
    std::uint8_t subtrahend27[32]    = {0xf8,0x04,0x9f,0xce,0x04,0x00,0xa7,0x88,0x52,0xcd,0x63,0x7f,0xd2,0xa0,0x7e,0xb1,0x9b,0xfe,0x9f,0x5c,0xfc,0x57,0x0f,0x53,0x28,0xe8,0x57,0x60,0x7d,0xd5,0x8d,0x7c};
    std::uint8_t difference27[32]    = {0x0a,0xcd,0x4c,0xd8,0xaa,0xeb,0xf8,0xc3,0xb0,0x9d,0xc4,0x0e,0x17,0x1d,0x85,0x2c,0xc1,0x15,0x64,0xd0,0xa3,0xb8,0xfd,0x6a,0x78,0xd4,0x8d,0x9b,0xeb,0xee,0x61,0x73};
    mont256_from_bytes(&ctx, minuend, minuend27);
    mont256_from_bytes(&ctx, subtrahend, subtrahend27);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference27, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend28[32]       = {0x48,0x3f,0x11,0x8e,0x09,0xc3,0xe8,0x27,0x77,0xa8,0x9a,0x6b,0x1f,0xe8,0x8e,0x51,0xab,0xfe,0x19,0x64,0xe7,0x1e,0xed,0xd8,0x37,0xf8,0x1b,0xc9,0xbf,0x23,0x28,0x2b};
    std::uint8_t subtrahend28[32]    = {0x3c,0xe3,0x1c,0x99,0x53,0x4a,0x8b,0x75,0x7b,0x60,0xfa,0xb9,0x0e,0x06,0x07,0x26,0xc5,0xbb,0xca,0x1f,0xe6,0xeb,0x51,0xa2,0x8b,0x65,0x78,0xd2,0x6d,0xb6,0x98,0x41};
    std::uint8_t difference28[32]    = {0x0b,0x5b,0xf4,0xf4,0xb6,0x79,0x5c,0xb1,0xfc,0x47,0x9f,0xb2,0x11,0xe2,0x87,0x2a,0xe6,0x42,0x4f,0x45,0x00,0x33,0x9c,0x35,0xac,0x92,0xa2,0xf7,0x51,0x6c,0x8f,0xea};
    mont256_from_bytes(&ctx, minuend, minuend28);
    mont256_from_bytes(&ctx, subtrahend, subtrahend28);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference28, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend29[32]       = {0x54,0x75,0x32,0x69,0x13,0xc2,0xd8,0xac,0x82,0xbd,0x91,0xe7,0xd3,0xec,0x4f,0xfb,0x1a,0xf2,0x51,0xa3,0x5b,0x3f,0x3a,0xb0,0x58,0xd7,0x7a,0xfe,0x3c,0x00,0xb4,0x45};
    std::uint8_t subtrahend29[32]    = {0x68,0x7f,0x42,0xd8,0xf7,0xb3,0x1c,0xcb,0x21,0xcf,0xc1,0xec,0x01,0xa4,0x1a,0xf7,0x58,0xa1,0xfd,0x62,0xe8,0xfa,0x7b,0x82,0x4b,0xa5,0xc1,0x73,0x6c,0x3b,0x57,0xa3};
    std::uint8_t difference29[32]    = {0xeb,0xf5,0xef,0x8f,0x1c,0x0f,0xbb,0xe1,0x60,0xed,0xcf,0xfb,0xd2,0x48,0x35,0x03,0xc2,0x50,0x54,0x3f,0x72,0x44,0xbf,0x2f,0x0d,0x31,0xb9,0x8a,0xcf,0xc5,0x5c,0xa1};
    mont256_from_bytes(&ctx, minuend, minuend29);
    mont256_from_bytes(&ctx, subtrahend, subtrahend29);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference29, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend30[32]       = {0xc1,0x13,0xc7,0xea,0xf0,0x7b,0xe5,0x59,0xf2,0xad,0x59,0x70,0x81,0x73,0x28,0x33,0xd7,0x8e,0xa0,0x17,0xbe,0xba,0x40,0x84,0xeb,0x01,0xe7,0xb2,0x7e,0x5c,0x0a,0x6d};
    std::uint8_t subtrahend30[32]    = {0xf7,0x91,0xf9,0xd3,0xff,0x66,0x75,0xe8,0x49,0x31,0x8f,0x6e,0xad,0xb7,0x21,0x9d,0x17,0x01,0xa2,0x90,0xbb,0x1d,0x90,0x28,0x67,0xb5,0x07,0xb3,0x95,0x89,0x4d,0xe8};
    std::uint8_t difference30[32]    = {0xc9,0x81,0xce,0x15,0xf1,0x15,0x6f,0x71,0xa9,0x7b,0xca,0x01,0xd3,0xbc,0x06,0x96,0xc0,0x8c,0xfd,0x86,0x03,0x9c,0xb0,0x5d,0x83,0x4c,0xdf,0xfe,0xe8,0xd2,0xbc,0x84};
    mont256_from_bytes(&ctx, minuend, minuend30);
    mont256_from_bytes(&ctx, subtrahend, subtrahend30);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference30, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend31[32]       = {0x4e,0xeb,0x8e,0x11,0xe9,0xc2,0x61,0x69,0xbe,0x41,0xdd,0x49,0xb2,0x1f,0xeb,0x6b,0x37,0xca,0xd9,0x5c,0x5c,0x1a,0x40,0x22,0xaf,0x2e,0x61,0x5e,0x6a,0xd4,0x1f,0x8f};
    std::uint8_t subtrahend31[32]    = {0x01,0xc0,0x16,0x0f,0x00,0x87,0x71,0x4f,0x80,0xad,0x8c,0xb9,0xcc,0x62,0xf4,0x93,0x08,0x8d,0x2f,0x0d,0x4b,0xaf,0x25,0x89,0xcc,0x3c,0xfa,0xe2,0x66,0x64,0x0f,0x02};
    std::uint8_t difference31[32]    = {0x4d,0x2b,0x78,0x02,0xe9,0x3a,0xf0,0x1a,0x3d,0x94,0x50,0x8f,0xe5,0xbc,0xf6,0xd8,0x2f,0x3d,0xaa,0x4f,0x10,0x6b,0x1a,0x98,0xe2,0xf1,0x66,0x7c,0x04,0x70,0x10,0x8d};
    mont256_from_bytes(&ctx, minuend, minuend31);
    mont256_from_bytes(&ctx, subtrahend, subtrahend31);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference31, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend32[32]       = {0xe4,0x17,0x8b,0xd4,0x01,0xf2,0x09,0x12,0x83,0xd7,0x88,0x17,0x75,0x8b,0x96,0x72,0x48,0xd9,0x61,0x20,0x8f,0x26,0x8b,0x29,0x73,0xc0,0x1f,0x71,0xff,0xc8,0x19,0x7c};
    std::uint8_t subtrahend32[32]    = {0xf4,0x5d,0xd0,0x98,0xab,0x0c,0x25,0xa7,0xa7,0x72,0xa3,0xed,0xa8,0xd0,0x1f,0x9f,0x5c,0x40,0xf5,0x93,0xb3,0x7c,0x8d,0x54,0xdc,0x55,0xa4,0xb1,0x3a,0xd7,0x8b,0x09};
    std::uint8_t difference32[32]    = {0xef,0xb9,0xbb,0x3a,0x56,0xe5,0xe3,0x6a,0xdc,0x64,0xe4,0x29,0xcc,0xbb,0x76,0xd2,0xec,0x98,0x6b,0x8b,0xdb,0xa9,0xfd,0xd5,0x97,0x6a,0x7a,0xc0,0xc4,0xf0,0x8e,0x72};
    mont256_from_bytes(&ctx, minuend, minuend32);
    mont256_from_bytes(&ctx, subtrahend, subtrahend32);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference32, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend33[32]       = {0x64,0xb0,0xc5,0xc1,0x76,0x7f,0x59,0x79,0xa7,0xb2,0xb6,0xe6,0x54,0x19,0x9a,0x54,0x96,0xf9,0x2f,0x37,0xc4,0x1e,0x03,0xe7,0x87,0x1c,0x56,0x33,0x7d,0xea,0x63,0xb5};
    std::uint8_t subtrahend33[32]    = {0x3f,0xc3,0xf8,0x9e,0x6f,0x90,0x66,0xc5,0x5f,0x2f,0xfb,0x8b,0xdd,0xb7,0x98,0x4e,0x8a,0x20,0xef,0xa9,0xd6,0x7c,0xe9,0x8c,0x69,0x5e,0x78,0x73,0xca,0x63,0xc7,0xf9};
    std::uint8_t difference33[32]    = {0x24,0xec,0xcd,0x23,0x06,0xee,0xf2,0xb4,0x48,0x82,0xbb,0x5a,0x76,0x62,0x02,0x06,0x0c,0xd8,0x3f,0x8d,0xed,0xa1,0x1a,0x5b,0x1d,0xbd,0xdd,0xbf,0xb3,0x86,0x9b,0xbc};
    mont256_from_bytes(&ctx, minuend, minuend33);
    mont256_from_bytes(&ctx, subtrahend, subtrahend33);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference33, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend34[32]       = {0xba,0xa3,0x2d,0x42,0xa7,0xd0,0x32,0x72,0xd2,0x11,0x3f,0xb2,0x54,0xfc,0x80,0x1c,0x43,0x53,0xd8,0x3e,0x6e,0xf4,0xe3,0x8a,0xb3,0xf5,0xea,0x21,0xbb,0x4b,0x7f,0xa9};
    std::uint8_t subtrahend34[32]    = {0x39,0xeb,0x2b,0xf3,0x32,0x8c,0x0a,0x44,0x3d,0x4e,0x30,0x6e,0x79,0xa6,0xa7,0x7a,0x55,0x35,0xe1,0xbc,0x06,0x9a,0x9e,0x40,0x1a,0x75,0x13,0xd4,0x1a,0x9d,0x93,0x5a};
    std::uint8_t difference34[32]    = {0x80,0xb8,0x01,0x4f,0x75,0x44,0x28,0x2e,0x94,0xc3,0x0f,0x43,0xdb,0x55,0xd8,0xa1,0xee,0x1d,0xf6,0x82,0x68,0x5a,0x45,0x4a,0x99,0x80,0xd6,0x4d,0xa0,0xad,0xec,0x4f};
    mont256_from_bytes(&ctx, minuend, minuend34);
    mont256_from_bytes(&ctx, subtrahend, subtrahend34);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference34, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend35[32]       = {0x58,0xd4,0x9a,0xa2,0xf7,0x49,0x86,0x10,0x16,0x05,0x8d,0xe4,0x2e,0xed,0xe1,0x85,0x7e,0xe2,0xe2,0x84,0xbc,0xd3,0x42,0xe7,0xd8,0xbf,0x17,0xc0,0xf0,0xf8,0x1a,0x2e};
    std::uint8_t subtrahend35[32]    = {0xa5,0x87,0xf1,0xbf,0x15,0xd4,0x87,0xc9,0x4b,0x67,0x00,0xbb,0x3c,0xa8,0xb5,0xed,0x39,0x91,0x83,0x4b,0x21,0xd0,0xf2,0xe2,0xa7,0x7f,0x3b,0x62,0xc2,0x2c,0x38,0x84};
    std::uint8_t difference35[32]    = {0xb3,0x4c,0xa8,0xe2,0xe1,0x74,0xfe,0x46,0xca,0x9e,0x8d,0x28,0xf2,0x45,0x2b,0x98,0x45,0x51,0x5f,0x38,0x9b,0x02,0x50,0x06,0x31,0x3f,0xdc,0x5e,0x2e,0xcb,0xe1,0xa9};
    mont256_from_bytes(&ctx, minuend, minuend35);
    mont256_from_bytes(&ctx, subtrahend, subtrahend35);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference35, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend36[32]       = {0x88,0xa8,0xa3,0x10,0x95,0xbb,0x82,0x1a,0x49,0x45,0xa6,0x1b,0xac,0xbe,0x2b,0x35,0x9d,0x10,0x24,0xab,0xf2,0xda,0x0e,0x84,0x18,0xc4,0xf0,0xe0,0x76,0xc8,0x91,0x42};
    std::uint8_t subtrahend36[32]    = {0x45,0x04,0xf6,0x48,0x2d,0xf6,0x0b,0xb8,0x8f,0xf3,0xcb,0x65,0xda,0x11,0x30,0x8c,0xe4,0x7f,0x5d,0x2f,0x80,0x5e,0xe3,0xd1,0x00,0xd7,0x7e,0x07,0xba,0xfa,0xf8,0x09};
    std::uint8_t difference36[32]    = {0x43,0xa3,0xac,0xc8,0x67,0xc5,0x76,0x61,0xb9,0x51,0xda,0xb5,0xd2,0xac,0xfa,0xa8,0xb8,0x90,0xc7,0x7c,0x72,0x7b,0x2a,0xb3,0x17,0xed,0x72,0xd8,0xbb,0xcd,0x99,0x39};
    mont256_from_bytes(&ctx, minuend, minuend36);
    mont256_from_bytes(&ctx, subtrahend, subtrahend36);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference36, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend37[32]       = {0xcb,0x8e,0x80,0xf4,0x30,0x35,0x58,0x0c,0xac,0x9c,0x82,0xf9,0x86,0xbb,0xd5,0x7a,0x8c,0xd5,0x1e,0x2c,0x35,0x98,0x8a,0x69,0x96,0xe1,0x03,0x47,0x71,0x71,0xf4,0x34};
    std::uint8_t subtrahend37[32]    = {0xe3,0x89,0xe0,0x47,0x70,0xfb,0xbf,0x92,0x64,0x92,0x71,0xd1,0x4e,0xa1,0xc3,0x84,0x2b,0x40,0xa7,0x38,0xcd,0xe8,0x7c,0x73,0xbd,0xe7,0x81,0x7e,0xf6,0x6f,0xd0,0x5a};
    std::uint8_t difference37[32]    = {0xe8,0x04,0xa0,0xab,0xbf,0x39,0x98,0x7a,0x48,0x0a,0x11,0x28,0x38,0x1a,0x11,0xf6,0x61,0x94,0x76,0xf2,0x67,0xb0,0x0d,0xf6,0xd8,0xf9,0x81,0xc8,0x7b,0x02,0x23,0xd9};
    mont256_from_bytes(&ctx, minuend, minuend37);
    mont256_from_bytes(&ctx, subtrahend, subtrahend37);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference37, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend38[32]       = {0x74,0x89,0x9c,0x8b,0x10,0xa1,0x34,0x1c,0xee,0x0f,0x48,0xc3,0x60,0xb6,0xdf,0x84,0x44,0x59,0xd1,0x93,0xe2,0x03,0x9c,0x89,0xd5,0xa3,0xa6,0x88,0xa9,0x72,0xc0,0xba};
    std::uint8_t subtrahend38[32]    = {0xb6,0xaa,0x19,0x30,0x81,0x4b,0x6e,0xc6,0x18,0x70,0x3f,0x36,0x7f,0x78,0xb0,0x8c,0xc6,0x39,0x23,0x15,0xf6,0x26,0x4b,0x22,0x80,0x9a,0xae,0x24,0xf7,0x34,0xed,0x96};
    std::uint8_t difference38[32]    = {0xbd,0xdf,0x83,0x59,0x8f,0x55,0xc5,0x56,0xd5,0x9f,0x09,0x8c,0xe1,0x3e,0x2e,0xf7,0x7e,0x20,0xae,0x7c,0xeb,0xdd,0x51,0x68,0x55,0x08,0xf8,0x63,0xb2,0x3d,0xd3,0x23};
    mont256_from_bytes(&ctx, minuend, minuend38);
    mont256_from_bytes(&ctx, subtrahend, subtrahend38);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference38, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend39[32]       = {0xeb,0x88,0xbb,0x12,0x08,0xaf,0x63,0xeb,0x63,0x4c,0x1c,0x36,0x5a,0x3d,0xf6,0x80,0x08,0x86,0x6c,0xe2,0x79,0x29,0x18,0xe6,0xe4,0x02,0x5e,0x62,0xe6,0x65,0x81,0xa4};
    std::uint8_t subtrahend39[32]    = {0x3d,0x7d,0x49,0x10,0x29,0x72,0xfe,0x9c,0xee,0x37,0xae,0x83,0x57,0x1c,0x37,0x71,0x03,0x65,0xa2,0xf9,0x77,0x06,0xc2,0x27,0x8c,0xa4,0xd8,0xaf,0x1c,0x05,0xac,0x41};
    std::uint8_t difference39[32]    = {0xae,0x0b,0x72,0x01,0xdf,0x3c,0x65,0x4e,0x75,0x14,0x6d,0xb3,0x03,0x21,0xbf,0x0f,0x05,0x20,0xc9,0xe9,0x02,0x22,0x56,0xbf,0x57,0x5d,0x85,0xb3,0xca,0x5f,0xd5,0x63};
    mont256_from_bytes(&ctx, minuend, minuend39);
    mont256_from_bytes(&ctx, subtrahend, subtrahend39);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference39, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend40[32]       = {0x6d,0x08,0xbe,0xe2,0x3a,0x57,0x90,0xa8,0xb1,0x13,0x4d,0x32,0x88,0x83,0xc2,0x7b,0x62,0x3f,0xd9,0x37,0xe1,0xb3,0x58,0xa4,0xe4,0xbf,0x91,0x2d,0xe6,0xb0,0x3a,0x1b};
    std::uint8_t subtrahend40[32]    = {0x82,0x7d,0x2a,0x6e,0x3f,0xce,0x81,0xa2,0xd3,0xf8,0x65,0x1c,0xd2,0x72,0x42,0x3d,0x90,0x99,0x9e,0xb7,0xdc,0x32,0xb2,0x9b,0x59,0x46,0xf5,0xdb,0xd1,0x0c,0xca,0xaf};
    std::uint8_t difference40[32]    = {0xea,0x8b,0x94,0x72,0xfa,0x89,0x0f,0x05,0xdd,0x1a,0xe8,0x15,0xb6,0x11,0x80,0x3d,0xd1,0xa6,0x3a,0x7f,0x05,0x80,0xa6,0x0a,0x8b,0x78,0x9b,0x52,0x15,0xa3,0x6f,0x6b};
    mont256_from_bytes(&ctx, minuend, minuend40);
    mont256_from_bytes(&ctx, subtrahend, subtrahend40);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference40, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend41[32]       = {0x15,0xa1,0x20,0x70,0x52,0xdd,0x79,0x5e,0x70,0xe7,0xd4,0xe1,0xba,0x17,0x19,0x9f,0x83,0x30,0x73,0x61,0xec,0xe0,0xff,0xf7,0x2e,0x44,0x32,0x4b,0x31,0xf6,0x09,0x20};
    std::uint8_t subtrahend41[32]    = {0xdc,0x2b,0x1e,0x67,0x6e,0xb3,0x3e,0xf7,0xce,0xb0,0x27,0x30,0xce,0x7b,0x88,0x5b,0x41,0x45,0xae,0x49,0xfb,0x6f,0x11,0x49,0x7f,0xdc,0x7e,0xf2,0xd3,0x12,0x42,0x52};
    std::uint8_t difference41[32]    = {0x39,0x76,0x02,0x07,0xe4,0x2a,0x3a,0x66,0xa2,0x37,0xad,0xb0,0xeb,0x9b,0x91,0x44,0x41,0xea,0xc5,0x16,0xf1,0x71,0xee,0xae,0xae,0x67,0xb3,0x58,0x5e,0xe3,0xc6,0xcd};
    mont256_from_bytes(&ctx, minuend, minuend41);
    mont256_from_bytes(&ctx, subtrahend, subtrahend41);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference41, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend42[32]       = {0xb6,0x6e,0xca,0x6e,0x7d,0xdd,0x23,0x9d,0x77,0xa1,0xfb,0xb9,0x7d,0x09,0x1c,0xe2,0x88,0x9f,0x1d,0x45,0x53,0xaf,0x27,0xb9,0xc5,0x6b,0xca,0x7d,0x3d,0x66,0x93,0x6a};
    std::uint8_t subtrahend42[32]    = {0xab,0x51,0xd6,0xb3,0xee,0xa9,0x91,0x77,0x3b,0x06,0x38,0xc2,0xfd,0x1b,0x2c,0xd1,0x89,0x4c,0x41,0xf3,0x01,0xf7,0x5d,0x3e,0xce,0x22,0xd3,0xef,0x1c,0xbc,0x1e,0xae};
    std::uint8_t difference42[32]    = {0x0b,0x1c,0xf3,0xba,0x8f,0x33,0x92,0x26,0x3c,0x9b,0xc2,0xf6,0x7f,0xed,0xf0,0x10,0xff,0x52,0xdb,0x52,0x51,0xb7,0xca,0x7a,0xf7,0x48,0xf6,0x8e,0x20,0xaa,0x74,0xbc};
    mont256_from_bytes(&ctx, minuend, minuend42);
    mont256_from_bytes(&ctx, subtrahend, subtrahend42);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference42, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend43[32]       = {0x55,0x64,0x38,0x40,0x83,0x15,0xf8,0x1f,0x3c,0x55,0x93,0x4e,0xf5,0x3e,0xa7,0xc5,0xf9,0xce,0xf3,0x87,0x42,0x31,0x82,0xc9,0xf6,0x87,0xfe,0x1f,0x17,0x87,0x4b,0xb1};
    std::uint8_t subtrahend43[32]    = {0xba,0xdb,0xba,0x7f,0x90,0x1a,0x7e,0xea,0x79,0x7d,0xe4,0x20,0x7d,0xd6,0x57,0xbf,0x30,0x35,0xc4,0x48,0x0c,0xd4,0x30,0x69,0x34,0x5f,0x97,0x5a,0x12,0xc0,0xa4,0x07};
    std::uint8_t difference43[32]    = {0x9a,0x88,0x7d,0xbf,0xf2,0xfb,0x79,0x34,0xc2,0xd7,0xaf,0x2e,0x77,0x68,0x50,0x06,0xc9,0x99,0x2f,0x3e,0x35,0x5d,0x52,0x61,0xc2,0x28,0x66,0xc5,0x04,0xc6,0xa7,0xa9};
    mont256_from_bytes(&ctx, minuend, minuend43);
    mont256_from_bytes(&ctx, subtrahend, subtrahend43);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference43, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend44[32]       = {0x18,0x56,0x47,0xea,0x38,0xd8,0x70,0x1d,0xfa,0x3c,0xe1,0x8e,0x26,0x2c,0xe2,0xc2,0x9e,0xcd,0x81,0x41,0x2a,0x0c,0x09,0x6c,0x7d,0xb7,0xb1,0xb8,0x48,0x41,0x1a,0x5f};
    std::uint8_t subtrahend44[32]    = {0xd3,0x4a,0xe2,0x64,0x5b,0x35,0x46,0x1e,0xc4,0x77,0x97,0x16,0x60,0xaf,0xdc,0x8b,0xcb,0x74,0x2a,0x80,0xda,0x33,0x46,0x9f,0xfa,0xfe,0x37,0xbc,0x7d,0x6d,0xdc,0x9b};
    std::uint8_t difference44[32]    = {0x45,0x0b,0x65,0x84,0xdd,0xa3,0x29,0xff,0x35,0xc5,0x4a,0x77,0xc5,0x7d,0x06,0x36,0xd3,0x59,0x56,0xbf,0x4f,0xd8,0xc2,0xcd,0x82,0xb9,0x79,0xfb,0xca,0xd3,0x3d,0xc3};
    mont256_from_bytes(&ctx, minuend, minuend44);
    mont256_from_bytes(&ctx, subtrahend, subtrahend44);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference44, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend45[32]       = {0x34,0xac,0x9a,0xfa,0x2c,0xfa,0x14,0xbf,0xd4,0x59,0x0f,0x3a,0x31,0x29,0x42,0x3e,0xc2,0xa4,0xf1,0x66,0x18,0x00,0x43,0xfa,0x35,0xe8,0xe9,0x7e,0x1f,0x1a,0x45,0xe1};
    std::uint8_t subtrahend45[32]    = {0x97,0x0a,0x82,0xab,0x3b,0x3b,0x70,0x40,0x57,0x39,0x0a,0x31,0xeb,0xc1,0xb5,0x4d,0xd8,0x96,0x51,0xac,0xb2,0x3f,0xba,0x68,0xba,0x6d,0x96,0xac,0x0d,0x05,0xf9,0x58};
    std::uint8_t difference45[32]    = {0x9d,0xa2,0x18,0x4d,0xf1,0xbe,0xa4,0x7f,0x7d,0x20,0x05,0x08,0x45,0x67,0x8c,0xf0,0xea,0x0e,0x9f,0xb8,0x65,0xc0,0x89,0x92,0x7b,0x7b,0x52,0xd2,0x12,0x14,0x4c,0x88};
    mont256_from_bytes(&ctx, minuend, minuend45);
    mont256_from_bytes(&ctx, subtrahend, subtrahend45);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference45, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend46[32]       = {0x15,0xbe,0xf6,0xa4,0xad,0x0c,0xc2,0x18,0x8a,0x70,0x89,0x08,0x24,0x54,0x39,0xb2,0xd8,0x3d,0x70,0xba,0xef,0x50,0x89,0xb1,0xaa,0x4f,0x07,0xc5,0x9d,0xcd,0x5c,0xd6};
    std::uint8_t subtrahend46[32]    = {0xca,0x02,0xcf,0xd7,0x47,0x98,0x78,0xd8,0xa7,0x67,0x8e,0x32,0xb9,0x11,0x04,0xf3,0xe4,0x38,0x3c,0x3b,0xa6,0x2e,0xec,0x7c,0xdd,0xfc,0x02,0x90,0x35,0xb9,0x9c,0xd9};
    std::uint8_t difference46[32]    = {0x4b,0xbc,0x26,0xcc,0x65,0x74,0x49,0x3f,0xe3,0x08,0xfa,0xd5,0x6b,0x43,0x34,0xbe,0xf4,0x05,0x34,0x7e,0x49,0x21,0x9d,0x35,0xcc,0x53,0x05,0x35,0x68,0x13,0xbf,0xfc};
    mont256_from_bytes(&ctx, minuend, minuend46);
    mont256_from_bytes(&ctx, subtrahend, subtrahend46);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference46, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend47[32]       = {0xd6,0x16,0x08,0xc9,0x77,0xf9,0xbd,0x2c,0x06,0x2e,0xd0,0x5e,0xab,0x1c,0x73,0xf0,0x22,0x7f,0x1c,0xac,0x8c,0x3f,0x79,0xd5,0x0c,0xd0,0xa1,0x98,0x75,0x5e,0xa0,0x8b};
    std::uint8_t subtrahend47[32]    = {0xdc,0x54,0x05,0xff,0x49,0x7c,0x87,0x97,0x01,0xa9,0x91,0xd3,0x1f,0x75,0x38,0xcc,0x90,0xa5,0xea,0x64,0x25,0xb8,0x76,0x42,0x8c,0x88,0x61,0x39,0xd1,0x3c,0x5e,0x38};
    std::uint8_t difference47[32]    = {0xf9,0xc2,0x02,0xc9,0x2e,0x7d,0x35,0x95,0x04,0x85,0x3e,0x8b,0x8b,0xa7,0x3b,0x23,0x91,0xd9,0x32,0x47,0x66,0x87,0x03,0x93,0x80,0x48,0x40,0x5e,0xa4,0x22,0x42,0x52};
    mont256_from_bytes(&ctx, minuend, minuend47);
    mont256_from_bytes(&ctx, subtrahend, subtrahend47);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference47, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend48[32]       = {0xa8,0xb8,0x2e,0x53,0x8c,0x99,0x9e,0xa1,0x06,0xb3,0x7c,0x78,0xdd,0x6a,0x79,0xdc,0x57,0x40,0x12,0xa6,0xf2,0xbb,0xae,0x6d,0x6c,0x58,0x86,0xcb,0xe0,0x7d,0x6d,0xb1};
    std::uint8_t subtrahend48[32]    = {0x7e,0x08,0xa2,0x0b,0x8f,0x65,0x3c,0x61,0x4d,0xd8,0x64,0x62,0x85,0xdc,0xac,0x07,0x42,0xc9,0xf5,0xe4,0xed,0x86,0xf6,0x61,0x82,0x0f,0x68,0x20,0x62,0xe6,0xaf,0x88};
    std::uint8_t difference48[32]    = {0x2a,0xaf,0x8c,0x47,0xfd,0x34,0x62,0x3f,0xb8,0xdb,0x18,0x16,0x57,0x8d,0xcd,0xd5,0x14,0x76,0x1c,0xc2,0x05,0x34,0xb8,0x0b,0xea,0x49,0x1e,0xab,0x7d,0x96,0xbe,0x29};
    mont256_from_bytes(&ctx, minuend, minuend48);
    mont256_from_bytes(&ctx, subtrahend, subtrahend48);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference48, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend49[32]       = {0x35,0x00,0x39,0xf3,0x0a,0x6a,0x50,0x81,0x8a,0x8d,0x21,0xc9,0x93,0xa6,0x85,0x51,0xf0,0x31,0x95,0x3c,0x2f,0x6a,0xd6,0xfe,0xd5,0x0d,0x80,0xfc,0x4d,0x98,0xb4,0xaa};
    std::uint8_t subtrahend49[32]    = {0x8f,0xff,0xe3,0x57,0xc2,0x98,0x9e,0xd8,0xa5,0x4b,0x20,0xf3,0xbf,0x0c,0x01,0x5d,0x6e,0xa2,0x1f,0xd3,0xd1,0x09,0x5f,0xf8,0x76,0x25,0x9b,0xe6,0xc9,0x5d,0x7d,0x13};
    std::uint8_t difference49[32]    = {0xa5,0x00,0x56,0x9a,0x47,0xd1,0xb1,0xa8,0xe5,0x42,0x00,0xd5,0xd4,0x9a,0x83,0xf4,0x81,0x8f,0x75,0x67,0x5e,0x61,0x77,0x07,0x5e,0xe7,0xe5,0x15,0x84,0x3b,0x37,0x96};
    mont256_from_bytes(&ctx, minuend, minuend49);
    mont256_from_bytes(&ctx, subtrahend, subtrahend49);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference49, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend50[32]       = {0x75,0x44,0x20,0x1d,0x84,0xbb,0xbe,0x19,0x9e,0x47,0x81,0xdf,0x80,0x32,0x4c,0x36,0x41,0xfe,0x63,0x9f,0x3b,0x15,0x27,0x0d,0x63,0x77,0x0c,0x9d,0xb9,0x8a,0xfd,0x60};
    std::uint8_t subtrahend50[32]    = {0xb3,0x76,0xb2,0x27,0xed,0x60,0xbd,0xc6,0xe0,0x0b,0x75,0x33,0x84,0x7a,0x71,0x62,0x8b,0x4b,0x7c,0xc9,0x25,0x30,0x34,0xbc,0xd3,0xd7,0x65,0x3c,0xc9,0xbe,0x20,0xc3};
    std::uint8_t difference50[32]    = {0xc1,0xcd,0x6d,0xf4,0x97,0x5b,0x00,0x52,0xbe,0x3c,0x0c,0xab,0xfb,0xb7,0xda,0xd3,0xb6,0xb2,0xe6,0xd5,0x15,0xe4,0xf2,0x51,0x8f,0x9f,0xa7,0x60,0xef,0xcc,0xdc,0x9c};
    mont256_from_bytes(&ctx, minuend, minuend50);
    mont256_from_bytes(&ctx, subtrahend, subtrahend50);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference50, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend51[32]       = {0x93,0xce,0x51,0x8e,0x98,0x5b,0x90,0xd7,0xac,0x98,0xb6,0xbb,0x42,0xb9,0x16,0x51,0x53,0x04,0x87,0x5f,0x95,0x6e,0xbb,0xd6,0x4f,0xa5,0x10,0x08,0x9d,0x05,0x62,0xb1};
    std::uint8_t subtrahend51[32]    = {0x92,0x6d,0x1d,0xb5,0xd4,0x4e,0x43,0xeb,0xc1,0xd6,0xc0,0xcb,0xf7,0x5d,0xcb,0xc1,0x4d,0xa1,0x6b,0x8c,0x81,0x3b,0x11,0xad,0x5e,0x25,0xd3,0x3c,0xe8,0x7d,0xcb,0x9b};
    std::uint8_t difference51[32]    = {0x01,0x61,0x33,0xd8,0xc4,0x0d,0x4c,0xeb,0xea,0xc1,0xf5,0xef,0x4b,0x5b,0x4a,0x90,0x05,0x63,0x1b,0xd3,0x14,0x33,0xaa,0x28,0xf1,0x7f,0x3c,0xcb,0xb4,0x87,0x97,0x16};
    mont256_from_bytes(&ctx, minuend, minuend51);
    mont256_from_bytes(&ctx, subtrahend, subtrahend51);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference51, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend52[32]       = {0x4f,0xb6,0xba,0xa5,0xe2,0x21,0xbd,0x1a,0x90,0xd3,0x8a,0xda,0x41,0xf2,0x46,0xea,0xe6,0x02,0x29,0xc5,0xc9,0xd0,0x9d,0x09,0xe6,0x93,0xfa,0x99,0xf4,0xd9,0x9d,0xed};
    std::uint8_t subtrahend52[32]    = {0xa7,0xfd,0x00,0x39,0xff,0x1e,0xb3,0x1c,0xae,0xae,0xb5,0xb9,0xcb,0x12,0xf6,0x3c,0xdf,0x4d,0x84,0x13,0x94,0xae,0x8a,0x2d,0x17,0xdf,0x0d,0x06,0x47,0xd3,0xa6,0x50};
    std::uint8_t difference52[32]    = {0xa7,0xb9,0xba,0x6a,0xe3,0x03,0x09,0xfd,0xe2,0x24,0xd5,0x20,0x76,0xdf,0x50,0xae,0x06,0xb4,0xa5,0xb1,0x35,0x22,0x12,0xdd,0xce,0xb4,0xed,0x93,0xad,0x05,0xf7,0x9c};
    mont256_from_bytes(&ctx, minuend, minuend52);
    mont256_from_bytes(&ctx, subtrahend, subtrahend52);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference52, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend53[32]       = {0x35,0xc1,0xf6,0x6b,0xb6,0x57,0xe3,0xba,0x84,0xa5,0x0c,0x0f,0x92,0xf5,0x88,0xae,0xea,0xe1,0x99,0x8a,0x21,0x46,0xe8,0x2c,0x45,0xd4,0x9d,0xac,0xda,0x48,0xaf,0xf2};
    std::uint8_t subtrahend53[32]    = {0xb2,0x40,0x7b,0x82,0xce,0xa6,0x3e,0x14,0xb5,0x8e,0x33,0x22,0x0b,0xe0,0x88,0xf0,0x23,0x9a,0x4c,0xce,0x6e,0xd8,0xe7,0xa8,0x0c,0xc2,0x55,0x20,0xde,0x7d,0x20,0x8f};
    std::uint8_t difference53[32]    = {0x83,0x81,0x7a,0xe7,0xe7,0xb1,0xa5,0xa5,0xcf,0x16,0xd8,0xed,0x87,0x14,0xff,0xbe,0xc7,0x47,0x4c,0xba,0xb2,0x6e,0x00,0x85,0x39,0x12,0x48,0x8b,0xfb,0xcb,0x8f,0x62};
    mont256_from_bytes(&ctx, minuend, minuend53);
    mont256_from_bytes(&ctx, subtrahend, subtrahend53);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference53, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend54[32]       = {0xb9,0x33,0xf0,0xbe,0x1b,0x2d,0x9b,0x1d,0xb9,0x29,0x73,0x45,0x8d,0x1c,0x40,0x73,0xb4,0x7c,0xc8,0xfb,0x3d,0x1b,0xa5,0xe4,0x86,0xb7,0xca,0x6d,0xfc,0x75,0x76,0x56};
    std::uint8_t subtrahend54[32]    = {0xa6,0x13,0x0f,0x19,0x5e,0x65,0x51,0x87,0xbb,0x7f,0xd1,0x46,0x4d,0x91,0x56,0x18,0x58,0xc4,0xfb,0x1d,0x59,0x4c,0x13,0xe7,0xde,0xea,0xc4,0x34,0xf7,0x5a,0x85,0xc2};
    std::uint8_t difference54[32]    = {0x13,0x20,0xe1,0xa4,0xbc,0xc8,0x49,0x95,0xfd,0xa9,0xa1,0xff,0x3f,0x8a,0xea,0x5b,0x5b,0xb7,0xcd,0xdd,0xe3,0xcf,0x91,0xfc,0xa7,0xcd,0x06,0x39,0x05,0x1a,0xf0,0x94};
    mont256_from_bytes(&ctx, minuend, minuend54);
    mont256_from_bytes(&ctx, subtrahend, subtrahend54);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference54, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend55[32]       = {0x51,0x45,0x9c,0x1d,0x4d,0x1e,0x7a,0x28,0x3b,0x36,0x4d,0x76,0x01,0x3f,0xdf,0x0a,0x21,0xc1,0x49,0xdf,0x9c,0x64,0x62,0x84,0x88,0x15,0xb9,0x83,0x50,0x33,0x95,0xd5};
    std::uint8_t subtrahend55[32]    = {0xa2,0x62,0x98,0xec,0xc0,0xfa,0xd3,0xef,0xf1,0xa0,0x55,0x96,0x1b,0x3a,0x35,0x8a,0x74,0x79,0x17,0x75,0x4a,0x3b,0x82,0x6d,0x38,0x9a,0xab,0x13,0xa2,0x67,0xf2,0x2b};
    std::uint8_t difference55[32]    = {0xae,0xe3,0x03,0x2f,0x8c,0x23,0xa6,0x38,0x49,0x95,0xf7,0xdf,0xe6,0x05,0xa9,0x7f,0xad,0x48,0x32,0x69,0x52,0x28,0xe0,0x18,0x4f,0x7b,0x0e,0x6f,0xad,0xcb,0xa3,0xa9};
    mont256_from_bytes(&ctx, minuend, minuend55);
    mont256_from_bytes(&ctx, subtrahend, subtrahend55);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference55, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend56[32]       = {0xb4,0x7d,0x64,0xf3,0x10,0x37,0x23,0x12,0x83,0x3d,0x6e,0x2f,0x12,0xff,0x76,0x5e,0x2d,0x2d,0x9b,0x42,0xfe,0x10,0x35,0xab,0xcf,0x92,0x5f,0xcc,0xd2,0x0e,0x2e,0x7d};
    std::uint8_t subtrahend56[32]    = {0x9b,0xe7,0xee,0x12,0x12,0x39,0xc3,0x6c,0x53,0xe0,0xa5,0xb6,0xad,0x92,0xee,0xd9,0xe5,0x7d,0xe0,0xb1,0xa4,0x9b,0x55,0xe9,0x03,0x63,0x1a,0xf5,0x1c,0x38,0xec,0x26};
    std::uint8_t difference56[32]    = {0x18,0x95,0x76,0xe0,0xfd,0xfd,0x5f,0xa6,0x2f,0x5c,0xc8,0x78,0x65,0x6c,0x87,0x84,0x47,0xaf,0xba,0x91,0x59,0x74,0xdf,0xc2,0xcc,0x2f,0x44,0xd7,0xb5,0xd5,0x42,0x57};
    mont256_from_bytes(&ctx, minuend, minuend56);
    mont256_from_bytes(&ctx, subtrahend, subtrahend56);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference56, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend57[32]       = {0xfb,0x0b,0x2c,0xe6,0x1d,0x70,0x70,0x69,0xca,0xd0,0x80,0x7b,0x66,0x71,0x45,0xfa,0x2c,0x3f,0xd5,0x98,0x4d,0x07,0x4d,0xd7,0xb3,0x71,0x5f,0xd8,0xea,0x1d,0x3c,0xab};
    std::uint8_t subtrahend57[32]    = {0x28,0x8d,0x1c,0xb6,0xa0,0xfd,0xd4,0xa6,0x6f,0x29,0xc3,0x8a,0x2a,0x5b,0x65,0x3d,0x9d,0x6b,0x30,0x96,0x0d,0xcb,0x73,0xfd,0xae,0x63,0x5b,0x1e,0x47,0xfb,0x78,0xb8};
    std::uint8_t difference57[32]    = {0xd2,0x7e,0x10,0x2f,0x7c,0x72,0x9b,0xc3,0x5b,0xa6,0xbc,0xf1,0x3c,0x15,0xe0,0xbc,0x8e,0xd4,0xa5,0x02,0x3f,0x3b,0xd9,0xda,0x05,0x0e,0x04,0xba,0xa2,0x21,0xc3,0xf3};
    mont256_from_bytes(&ctx, minuend, minuend57);
    mont256_from_bytes(&ctx, subtrahend, subtrahend57);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference57, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend58[32]       = {0x82,0x46,0x9b,0x73,0x94,0x4c,0xeb,0x63,0xf3,0xb8,0xeb,0x17,0xf6,0x85,0x83,0x4a,0x84,0xd6,0xf4,0x14,0xe3,0x2b,0xdd,0xcd,0x09,0xef,0x03,0x0e,0xfc,0xc1,0x5f,0x15};
    std::uint8_t subtrahend58[32]    = {0x93,0x79,0x8f,0xb4,0xf4,0xfc,0xd6,0xe3,0x50,0x7b,0x8e,0x55,0xb9,0xbd,0x13,0x12,0x8b,0x8f,0x19,0xd5,0xec,0x24,0x2c,0xf4,0x4b,0x80,0xcd,0xeb,0xa9,0x1f,0x72,0x0f};
    std::uint8_t difference58[32]    = {0xee,0xcd,0x0b,0xbd,0x9f,0x50,0x14,0x80,0xa3,0x3d,0x5c,0xc2,0x3c,0xc8,0x70,0x37,0xf9,0x47,0xda,0x3d,0xf7,0x07,0xb0,0xd9,0xbe,0x6e,0x35,0x23,0x53,0xa1,0xed,0x05};
    mont256_from_bytes(&ctx, minuend, minuend58);
    mont256_from_bytes(&ctx, subtrahend, subtrahend58);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference58, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend59[32]       = {0xbb,0xc9,0x13,0x5e,0xe4,0x0f,0x21,0x78,0xbd,0xd2,0x23,0x76,0xcb,0xc7,0xc7,0x38,0xec,0x82,0x85,0x97,0xf2,0x17,0x8a,0x17,0x1a,0x1a,0x9a,0x4f,0x2d,0x12,0xfc,0x51};
    std::uint8_t subtrahend59[32]    = {0xdd,0x5d,0x18,0xa2,0xbb,0x72,0xc6,0xe6,0x98,0xb3,0x8d,0x10,0x75,0x12,0xe3,0x9b,0xc2,0x76,0xe7,0xca,0x05,0x89,0x71,0xd9,0x0e,0x5f,0xe6,0x7c,0x92,0x30,0x51,0x82};
    std::uint8_t difference59[32]    = {0xde,0x6b,0xfa,0xbb,0x28,0x9c,0x5a,0x92,0x25,0x1e,0x96,0x66,0x56,0xb4,0xe3,0x9d,0x2a,0x0b,0x9d,0xcc,0xec,0x8e,0x18,0x3f,0x0b,0xba,0xb3,0xd2,0x9a,0xe2,0xaa,0xce};
    mont256_from_bytes(&ctx, minuend, minuend59);
    mont256_from_bytes(&ctx, subtrahend, subtrahend59);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference59, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend60[32]       = {0x2b,0xb7,0x2f,0x09,0x44,0x40,0xfc,0x3c,0x2c,0x10,0x08,0xb8,0xac,0x19,0xb9,0x9a,0x48,0x6a,0x70,0x46,0xb3,0xeb,0x5c,0xd0,0x76,0xf0,0x1e,0x66,0xbc,0x8f,0x1d,0x39};
    std::uint8_t subtrahend60[32]    = {0x13,0xad,0x98,0xf1,0x45,0x4c,0xa5,0xdf,0x6b,0xff,0x72,0x7f,0x01,0xf6,0xd2,0x0c,0x6a,0xbe,0xc3,0x3d,0x93,0xc0,0xd5,0x1f,0xc1,0xf7,0xdf,0xe8,0x88,0x88,0xd2,0xe2};
    std::uint8_t difference60[32]    = {0x18,0x09,0x96,0x17,0xfe,0xf4,0x56,0x5c,0xc0,0x10,0x96,0x39,0xaa,0x22,0xe7,0x8d,0xdd,0xab,0xad,0x09,0x20,0x2a,0x87,0xb0,0xb4,0xf8,0x3e,0x7e,0x34,0x06,0x4a,0x57};
    mont256_from_bytes(&ctx, minuend, minuend60);
    mont256_from_bytes(&ctx, subtrahend, subtrahend60);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference60, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend61[32]       = {0x8f,0xd1,0x4c,0x69,0xce,0xa6,0x72,0xc6,0x07,0x50,0x93,0x47,0xcd,0xa9,0x57,0xfb,0x60,0x99,0x17,0x55,0x0e,0xb0,0xb9,0x40,0x04,0x85,0x4a,0x22,0x76,0x97,0x2c,0x17};
    std::uint8_t subtrahend61[32]    = {0x2d,0x58,0x96,0xe6,0x2a,0x7e,0xeb,0xd1,0x03,0xab,0xd9,0x5a,0x1e,0x5e,0x12,0xf6,0x0a,0x5b,0x56,0xc7,0xa1,0x48,0x44,0x46,0x3a,0x0c,0x2f,0x60,0x20,0xa9,0x5d,0xca};
    std::uint8_t difference61[32]    = {0x62,0x78,0xb5,0x83,0xa4,0x27,0x86,0xf5,0x03,0xa4,0xb9,0xed,0xaf,0x4b,0x45,0x05,0x56,0x3d,0xc0,0x8d,0x6d,0x68,0x74,0xf9,0xca,0x79,0x1a,0xc2,0x55,0xed,0xce,0x4d};
    mont256_from_bytes(&ctx, minuend, minuend61);
    mont256_from_bytes(&ctx, subtrahend, subtrahend61);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference61, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend62[32]       = {0xfd,0x8a,0x3f,0xfe,0x8a,0xee,0x7e,0xfa,0xe5,0xb6,0x18,0xed,0xb8,0x7f,0x10,0x90,0x48,0x42,0x64,0xa7,0x23,0x17,0x85,0xdb,0x7f,0xe0,0x2a,0xdf,0x8e,0x22,0x9f,0x51};
    std::uint8_t subtrahend62[32]    = {0xa7,0xfd,0x2a,0x1b,0x0b,0x25,0x1c,0x67,0xba,0x97,0xce,0x7b,0x75,0x01,0x66,0xf2,0xa8,0xd2,0x2f,0x51,0x40,0x4a,0xf5,0xed,0xba,0xb7,0x2b,0x4a,0x6e,0xaa,0xd9,0x07};
    std::uint8_t difference62[32]    = {0x55,0x8d,0x15,0xe3,0x7f,0xc9,0x62,0x93,0x2b,0x1e,0x4a,0x72,0x43,0x7d,0xa9,0x9d,0x9f,0x70,0x35,0x55,0xe2,0xcc,0x8f,0xed,0xc5,0x28,0xff,0x95,0x1f,0x77,0xc6,0x4a};
    mont256_from_bytes(&ctx, minuend, minuend62);
    mont256_from_bytes(&ctx, subtrahend, subtrahend62);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference62, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend63[32]       = {0x56,0x01,0xea,0x00,0xc6,0xdd,0x2b,0xd5,0x2a,0x9e,0x75,0x58,0x47,0x84,0xe7,0xb0,0x72,0xff,0x1b,0x91,0x60,0xf5,0xbf,0xb1,0x6a,0x41,0x41,0xea,0x73,0x60,0x83,0x76};
    std::uint8_t subtrahend63[32]    = {0xc7,0x65,0xa2,0x02,0xf3,0x5d,0x2c,0x44,0x86,0x85,0x5e,0x59,0xff,0xb9,0xcf,0x79,0x22,0x06,0x81,0x28,0x7e,0x06,0x72,0x21,0x08,0xb4,0xd9,0x3f,0xbe,0x5d,0x40,0x42};
    std::uint8_t difference63[32]    = {0x8e,0x9c,0x47,0xfc,0xd3,0x7f,0xff,0x90,0xa4,0x19,0x16,0xfe,0x47,0xcb,0x18,0x37,0x50,0xf8,0x9a,0x67,0xe2,0xef,0x4d,0x91,0x61,0x8c,0x68,0xaa,0xb5,0x03,0x43,0x33};
    mont256_from_bytes(&ctx, minuend, minuend63);
    mont256_from_bytes(&ctx, subtrahend, subtrahend63);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference63, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend64[32]       = {0xb6,0x95,0xa7,0x63,0xd3,0xf7,0xbf,0x4b,0x23,0x57,0xa7,0x49,0x4b,0xb9,0x7e,0xb4,0xec,0xbc,0x8c,0xa3,0x55,0x9d,0x2e,0xb2,0x32,0x13,0x50,0x7e,0x39,0xe8,0xd4,0x29};
    std::uint8_t subtrahend64[32]    = {0xe3,0x09,0x60,0xc0,0xb3,0x91,0x28,0x17,0x40,0xe8,0xfc,0xdc,0x6a,0xe8,0x72,0x3b,0xb9,0x0d,0xfa,0xc6,0xe9,0xcb,0x02,0x2f,0xfb,0x7e,0x7d,0x8a,0xfb,0x64,0xc5,0xdc};
    std::uint8_t difference64[32]    = {0xd3,0x8c,0x46,0xa2,0x20,0x66,0x97,0x33,0xe2,0x6e,0xaa,0x6c,0xe0,0xd1,0x0c,0x79,0x33,0xae,0x91,0xdb,0x6b,0xd2,0x2c,0x83,0x36,0x94,0xd2,0xf3,0x3e,0x84,0x0e,0x4c};
    mont256_from_bytes(&ctx, minuend, minuend64);
    mont256_from_bytes(&ctx, subtrahend, subtrahend64);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference64, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend65[32]       = {0x15,0x19,0xfb,0x74,0x53,0x3c,0x1f,0x8c,0xce,0x50,0x5b,0x70,0xc6,0x3e,0xe5,0x81,0x04,0x04,0x4c,0xb3,0x9b,0x29,0x82,0x2c,0x5a,0xa1,0x2e,0xfa,0x41,0xbc,0x26,0xeb};
    std::uint8_t subtrahend65[32]    = {0x9d,0x3c,0x0b,0x19,0xa1,0x55,0x5c,0xf8,0xd2,0x81,0xf8,0xd8,0x1d,0x18,0xfd,0x40,0xf5,0xbf,0xc9,0xa1,0x50,0x36,0xdd,0x4c,0x0f,0xf0,0xe3,0x6b,0x18,0x2f,0x78,0x51};
    std::uint8_t difference65[32]    = {0x77,0xdd,0xf0,0x59,0xb1,0xe6,0xc2,0x93,0xfb,0xce,0x62,0x98,0xa9,0x25,0xe8,0x40,0x0e,0x44,0x83,0x11,0x4a,0xf2,0xa4,0xe1,0x4a,0xb0,0x4b,0x8f,0x29,0x8c,0xae,0x99};
    mont256_from_bytes(&ctx, minuend, minuend65);
    mont256_from_bytes(&ctx, subtrahend, subtrahend65);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference65, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend66[32]       = {0x6d,0x28,0xa4,0x98,0x12,0x93,0x13,0x61,0xb0,0xe1,0x9b,0x7e,0xd7,0xfb,0x10,0xa8,0x86,0x37,0x04,0x87,0x2a,0x28,0x97,0x98,0xa3,0xe5,0xb5,0x14,0xeb,0xc1,0x7d,0x8e};
    std::uint8_t subtrahend66[32]    = {0x2e,0x6b,0x14,0x53,0x17,0x0e,0xb7,0x24,0xb1,0x21,0x25,0x43,0xca,0x98,0xf0,0xb1,0xb8,0x8d,0x98,0xcb,0x68,0x8b,0xa7,0x7b,0x71,0x54,0xc5,0x2d,0x6a,0xf9,0xce,0x7d};
    std::uint8_t difference66[32]    = {0x3e,0xbd,0x90,0x44,0xfb,0x84,0x5c,0x3c,0xff,0xc0,0x76,0x3b,0x0d,0x62,0x1f,0xf6,0xcd,0xa9,0x6b,0xbb,0xc1,0x9c,0xf0,0x1d,0x32,0x90,0xef,0xe7,0x80,0xc7,0xaf,0x11};
    mont256_from_bytes(&ctx, minuend, minuend66);
    mont256_from_bytes(&ctx, subtrahend, subtrahend66);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference66, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend67[32]       = {0xc6,0x87,0x95,0x24,0x7d,0x5e,0x7d,0xe5,0x9c,0xd7,0xd2,0xea,0x08,0x08,0x8d,0x5b,0x75,0xf6,0x88,0x08,0x66,0x79,0xb8,0x1c,0x64,0xeb,0x0f,0x67,0x61,0x07,0xa0,0x88};
    std::uint8_t subtrahend67[32]    = {0xf2,0xd3,0x9a,0x5e,0x23,0xd4,0x58,0x04,0x24,0xb6,0xf3,0x20,0x33,0x52,0x10,0xb4,0x8a,0x97,0x3e,0x26,0xa2,0xb2,0x52,0x4f,0xc9,0xb4,0x4c,0x4e,0xbc,0xc2,0x5a,0x9a};
    std::uint8_t difference67[32]    = {0xd3,0xb3,0xfa,0xc5,0x59,0x8a,0x25,0xe1,0x78,0x20,0xdf,0xc9,0xd4,0xb6,0x7c,0xa6,0xeb,0x5f,0x49,0xe0,0xc3,0xc7,0x65,0xcd,0x9b,0x36,0xc3,0x18,0xa4,0x45,0x45,0xed};
    mont256_from_bytes(&ctx, minuend, minuend67);
    mont256_from_bytes(&ctx, subtrahend, subtrahend67);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference67, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend68[32]       = {0xc1,0x25,0x29,0x22,0x55,0xdc,0xeb,0x60,0x38,0x45,0xdf,0x9d,0x23,0xc9,0x6b,0x96,0x3d,0x99,0x3b,0xad,0x9a,0xf4,0x3f,0xe0,0xa4,0xe6,0x8f,0x7b,0xc8,0x1f,0x8a,0xe3};
    std::uint8_t subtrahend68[32]    = {0x1a,0xc3,0x35,0xb1,0x74,0x08,0x4d,0x8d,0x76,0xd3,0x34,0x1a,0xfb,0xd2,0x6c,0x75,0x62,0xf7,0x88,0x66,0x5f,0x86,0xb9,0x7f,0x58,0xf5,0xc6,0x35,0xc2,0x28,0x35,0x81};
    std::uint8_t difference68[32]    = {0xa6,0x61,0xf3,0x70,0xe1,0xd4,0x9d,0xd2,0xc1,0x72,0xab,0x82,0x27,0xf6,0xff,0x20,0xda,0xa1,0xb3,0x47,0x3b,0x6d,0x86,0x61,0x4b,0xf0,0xc9,0x46,0x05,0xf7,0x55,0x62};
    mont256_from_bytes(&ctx, minuend, minuend68);
    mont256_from_bytes(&ctx, subtrahend, subtrahend68);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference68, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend69[32]       = {0x45,0x99,0x5a,0xe6,0x12,0x16,0x02,0x34,0x33,0x2d,0x01,0x7c,0x95,0x37,0x58,0xe6,0xf4,0xc6,0xd4,0x56,0x0a,0xde,0xc6,0x99,0x43,0x75,0xfc,0x9f,0x0b,0x16,0x9a,0x2c};
    std::uint8_t subtrahend69[32]    = {0xe4,0x83,0x91,0x30,0x65,0x43,0x09,0xa9,0x8f,0x99,0x6f,0x14,0x43,0xff,0xe6,0x92,0x28,0x0a,0x69,0xc8,0x78,0xe9,0x11,0xde,0x7d,0x44,0x65,0xc0,0x7b,0x34,0x12,0x90};
    std::uint8_t difference69[32]    = {0x61,0x15,0xc9,0xb4,0xac,0xd2,0xf8,0x8a,0xa3,0x93,0x92,0x68,0x51,0x37,0x72,0x54,0xcc,0xbc,0x6a,0x8c,0x91,0xf5,0xb4,0xbb,0xc6,0x31,0x96,0xde,0x8f,0xe2,0x87,0x9b};
    mont256_from_bytes(&ctx, minuend, minuend69);
    mont256_from_bytes(&ctx, subtrahend, subtrahend69);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference69, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend70[32]       = {0xdb,0x36,0x9e,0xe8,0xec,0x9a,0x2d,0x3a,0xd0,0xe8,0xa2,0x90,0xbf,0x39,0x7b,0x83,0x19,0x17,0x53,0x04,0xee,0x46,0xc8,0x32,0x18,0x66,0x87,0x5a,0x9c,0x1f,0xbb,0xba};
    std::uint8_t subtrahend70[32]    = {0x5d,0x07,0xe0,0x3b,0xba,0xc8,0xc1,0xa3,0xd4,0x09,0xa8,0xfa,0x9f,0x63,0xcf,0x3c,0xf1,0x46,0x21,0x35,0x23,0xe7,0x4b,0x4b,0xd2,0x28,0xd0,0xa4,0xb2,0xaf,0x8a,0xb4};
    std::uint8_t difference70[32]    = {0x7e,0x2e,0xbe,0xad,0x31,0xd1,0x6b,0x96,0xfc,0xde,0xf9,0x96,0x1f,0xd5,0xac,0x46,0x27,0xd1,0x31,0xcf,0xca,0x5f,0x7c,0xe6,0x46,0x3d,0xb6,0xb5,0xe9,0x70,0x31,0x06};
    mont256_from_bytes(&ctx, minuend, minuend70);
    mont256_from_bytes(&ctx, subtrahend, subtrahend70);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference70, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend71[32]       = {0x1b,0x87,0xf5,0x59,0x8b,0xb0,0x31,0x53,0x77,0x35,0x1e,0x6c,0x0a,0xd7,0x48,0x09,0x8b,0xe1,0x70,0x15,0xeb,0x41,0xdb,0x79,0x07,0x38,0xaa,0x5c,0x34,0xb7,0x28,0xaa};
    std::uint8_t subtrahend71[32]    = {0xc4,0x55,0x71,0x19,0xd8,0x16,0x96,0xce,0x4a,0xd9,0xe9,0xc2,0x12,0xf3,0xc8,0x2b,0x40,0x6c,0xfe,0x01,0x37,0xec,0xbb,0x17,0x50,0x11,0xa6,0x7d,0x45,0xe3,0x03,0x65};
    std::uint8_t difference71[32]    = {0x57,0x32,0x84,0x3e,0xb3,0x99,0x9a,0x85,0x2c,0x5b,0x34,0xa9,0xf7,0xe3,0x7f,0xde,0x4b,0x74,0x72,0x13,0xb3,0x55,0x20,0x62,0xb7,0x27,0x03,0xde,0xee,0xd4,0x25,0x44};
    mont256_from_bytes(&ctx, minuend, minuend71);
    mont256_from_bytes(&ctx, subtrahend, subtrahend71);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference71, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend72[32]       = {0x77,0x1c,0x21,0xdc,0x04,0x0a,0x76,0x5c,0x81,0xfd,0x5e,0x8b,0x46,0x43,0xca,0xa9,0x85,0x34,0x07,0x08,0xa1,0xd3,0xbb,0xe5,0xef,0xd5,0x33,0x55,0x73,0x15,0x57,0x36};
    std::uint8_t subtrahend72[32]    = {0x8d,0xd4,0xca,0x75,0x4f,0x00,0x5f,0x88,0xa6,0xe6,0x68,0x94,0x08,0x3a,0xee,0x6c,0xa9,0x3e,0xcd,0x56,0xf0,0x74,0x89,0x2f,0x47,0x8b,0x40,0x12,0x70,0x11,0x26,0xa6};
    std::uint8_t difference72[32]    = {0xe9,0x47,0x57,0x65,0xb5,0x0a,0x16,0xd3,0xdb,0x16,0xf5,0xf7,0x3e,0x08,0xdc,0x3c,0xdb,0xf5,0x39,0xb0,0xb1,0x5f,0x32,0xb7,0xa8,0x49,0xf3,0x43,0x03,0x04,0x30,0x8f};
    mont256_from_bytes(&ctx, minuend, minuend72);
    mont256_from_bytes(&ctx, subtrahend, subtrahend72);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference72, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend73[32]       = {0x3a,0x8c,0x6c,0xd4,0x70,0xb4,0x8e,0xa6,0x3c,0x1b,0x00,0x9e,0xa8,0xc2,0xab,0xab,0xf4,0x14,0xe8,0x41,0x52,0x85,0xb6,0x77,0x73,0x7e,0x73,0x91,0x97,0x8c,0x69,0xc6};
    std::uint8_t subtrahend73[32]    = {0x6f,0xfd,0x27,0x61,0x4f,0xb4,0xc3,0x77,0x81,0xae,0x4a,0x63,0x53,0xf0,0x56,0x80,0x06,0x1d,0x4c,0xc0,0x12,0x47,0xdf,0x05,0x98,0x91,0x08,0x2c,0xce,0xf0,0xc5,0x5a};
    std::uint8_t difference73[32]    = {0xca,0x8f,0x45,0x72,0x20,0xff,0xcb,0x2e,0xba,0x6c,0xb6,0x3b,0x54,0xd2,0x55,0x2b,0xed,0xf7,0x9b,0x80,0x40,0x3d,0xd7,0x72,0xda,0xed,0x6b,0x64,0xc8,0x9b,0xa4,0x6b};
    mont256_from_bytes(&ctx, minuend, minuend73);
    mont256_from_bytes(&ctx, subtrahend, subtrahend73);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference73, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend74[32]       = {0xca,0x54,0x85,0xce,0x62,0x4f,0x39,0x44,0x97,0x82,0x2d,0xe2,0x77,0xc9,0xe3,0x5a,0xe0,0x8e,0xf2,0xa6,0x88,0x9b,0x3e,0x4d,0xd2,0xed,0x3e,0xa8,0xc0,0x05,0x52,0x0a};
    std::uint8_t subtrahend74[32]    = {0x8f,0x1b,0x5e,0x86,0x71,0xba,0x1c,0x13,0x19,0x37,0x9b,0xfc,0x47,0x13,0xba,0xa9,0xbd,0x08,0x46,0x68,0x11,0x0c,0x8e,0xf0,0x37,0x78,0x6d,0x70,0x05,0x9d,0x53,0x8c};
    std::uint8_t difference74[32]    = {0x3b,0x39,0x27,0x47,0xf0,0x95,0x1d,0x31,0x7e,0x4a,0x91,0xe6,0x30,0xb6,0x28,0xb1,0x23,0x86,0xac,0x3e,0x77,0x8e,0xaf,0x5d,0x9b,0x74,0xd1,0x38,0xba,0x67,0xfe,0x7e};
    mont256_from_bytes(&ctx, minuend, minuend74);
    mont256_from_bytes(&ctx, subtrahend, subtrahend74);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference74, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend75[32]       = {0x7e,0x9e,0xc8,0xe4,0x47,0xa1,0x12,0x86,0xe2,0xc0,0x0c,0xe6,0x0c,0xd8,0x57,0xd9,0xe0,0x0c,0x0d,0x3c,0xe6,0x4c,0xfd,0xbe,0xde,0x7a,0x43,0xc2,0x0c,0x1e,0xd1,0xe6};
    std::uint8_t subtrahend75[32]    = {0x60,0xdc,0xe1,0x62,0x2a,0x6e,0x98,0x47,0x44,0x8d,0xb9,0x5c,0x23,0x63,0xd9,0x37,0x0c,0xa1,0xd5,0xcc,0x08,0xed,0x06,0xf7,0xb1,0x40,0x7d,0x5c,0x4d,0xed,0x32,0x71};
    std::uint8_t difference75[32]    = {0x1d,0xc1,0xe7,0x82,0x1d,0x32,0x7a,0x3f,0x9e,0x32,0x53,0x89,0xe9,0x74,0x7e,0xa2,0xd3,0x6a,0x37,0x70,0xdd,0x5f,0xf6,0xc7,0x2d,0x39,0xc6,0x65,0xbe,0x31,0x9f,0x75};
    mont256_from_bytes(&ctx, minuend, minuend75);
    mont256_from_bytes(&ctx, subtrahend, subtrahend75);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference75, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend76[32]       = {0x31,0xd2,0x94,0x5b,0x58,0xef,0xc9,0x0e,0x12,0x92,0xd6,0xb3,0xd8,0xf1,0x22,0x74,0x31,0x65,0xaa,0xa3,0x68,0xb3,0xa8,0x19,0xe9,0x5c,0x2c,0x17,0x33,0x21,0x8e,0x8e};
    std::uint8_t subtrahend76[32]    = {0x8c,0xec,0xc1,0x33,0x20,0x92,0x3d,0x1a,0x15,0xae,0x58,0x42,0x73,0xd6,0xe5,0x61,0x58,0xc3,0x35,0x8b,0x70,0xa7,0xe7,0x08,0xf4,0x87,0xf3,0xed,0x99,0x21,0x24,0x42};
    std::uint8_t difference76[32]    = {0xa4,0xe5,0xd3,0x27,0x38,0x5d,0x8b,0xf3,0xfc,0xe4,0x7e,0x71,0x65,0x1a,0x3d,0x12,0xd8,0xa2,0x75,0x16,0xf8,0x0b,0xc1,0x11,0xf4,0xd4,0x38,0x29,0x9a,0x00,0x6a,0x4b};
    mont256_from_bytes(&ctx, minuend, minuend76);
    mont256_from_bytes(&ctx, subtrahend, subtrahend76);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference76, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend77[32]       = {0x5e,0xe5,0x68,0x4c,0x39,0xb3,0x81,0xd6,0xa6,0xa8,0x1b,0x3c,0x2c,0xde,0xb9,0xed,0x65,0xab,0xad,0x50,0xed,0x5f,0x0c,0xf8,0x4d,0x0b,0x2a,0xe1,0xd2,0x41,0xb0,0xf7};
    std::uint8_t subtrahend77[32]    = {0x69,0x2b,0xce,0xca,0x5c,0x38,0x75,0x23,0x51,0x93,0x2e,0xc7,0x38,0xc6,0x81,0x36,0xf4,0x87,0x51,0xdd,0xe6,0x79,0x4b,0x93,0x31,0x36,0x25,0xba,0xd3,0xae,0xd9,0xdc};
    std::uint8_t difference77[32]    = {0xf5,0xb9,0x99,0x80,0xdd,0x7b,0x0c,0xb3,0x55,0x14,0xec,0x74,0xf4,0x18,0x38,0xb6,0x71,0x24,0x5b,0x72,0x06,0xe5,0xc1,0x66,0x1b,0xd5,0x05,0x26,0xfe,0x92,0xd7,0x1a};
    mont256_from_bytes(&ctx, minuend, minuend77);
    mont256_from_bytes(&ctx, subtrahend, subtrahend77);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference77, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend78[32]       = {0xdb,0x06,0x0a,0x72,0x99,0xfb,0x78,0x43,0x4c,0xf5,0x3d,0x41,0x70,0x03,0x8e,0x81,0xb0,0x08,0xf2,0xdf,0x3d,0x4b,0x6e,0x61,0x20,0x67,0x67,0x95,0xc2,0x5c,0x24,0x5e};
    std::uint8_t subtrahend78[32]    = {0x69,0xdd,0x3e,0xed,0xed,0xf2,0x7d,0x1e,0xef,0xfa,0x49,0xc3,0xea,0x8c,0xf2,0xf1,0x71,0x00,0x0e,0xd7,0x92,0x90,0xa2,0x3b,0x80,0xbf,0xbd,0xea,0x8b,0x46,0x91,0x0e};
    std::uint8_t difference78[32]    = {0x71,0x28,0xcb,0x84,0xac,0x08,0xfb,0x24,0x5c,0xfa,0xf3,0x7d,0x85,0x76,0x9b,0x90,0x3f,0x08,0xe4,0x07,0xaa,0xba,0xcc,0x25,0x9f,0xa7,0xa9,0xab,0x37,0x15,0x93,0x50};
    mont256_from_bytes(&ctx, minuend, minuend78);
    mont256_from_bytes(&ctx, subtrahend, subtrahend78);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference78, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend79[32]       = {0xad,0xbb,0xb9,0x16,0x74,0x07,0xbf,0x2a,0x6b,0x2a,0x89,0x3b,0x76,0xf5,0xc8,0xd4,0x6c,0x8e,0x3c,0x03,0x4a,0x05,0x13,0x16,0xf8,0x7f,0x6f,0xc1,0x06,0xca,0xec,0x9c};
    std::uint8_t subtrahend79[32]    = {0xff,0x76,0xb2,0x35,0x7a,0xa7,0x73,0x5f,0x2d,0xf8,0x64,0x1e,0xdc,0x64,0x87,0xff,0x13,0x39,0x9c,0xcd,0xf8,0xcc,0xcc,0x40,0x8f,0xe0,0x2f,0xb0,0x5e,0x33,0x6e,0x2d};
    std::uint8_t difference79[32]    = {0xae,0x45,0x06,0xdf,0xf9,0x60,0x4b,0xcb,0x3d,0x32,0x25,0x1c,0x9a,0x91,0x40,0xd5,0x59,0x54,0x9f,0x34,0x51,0x38,0x46,0xd7,0x68,0x9f,0x40,0x10,0xa8,0x97,0x7e,0x6e};
    mont256_from_bytes(&ctx, minuend, minuend79);
    mont256_from_bytes(&ctx, subtrahend, subtrahend79);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference79, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend80[32]       = {0x0c,0x00,0xed,0xd4,0x23,0xe3,0xfb,0x7e,0x72,0x74,0x6f,0x3b,0xbe,0x87,0xb7,0x69,0x1e,0x06,0x9f,0xf2,0xb9,0x95,0x62,0xa5,0x70,0xe3,0xce,0x7b,0xde,0x42,0x46,0xcc};
    std::uint8_t subtrahend80[32]    = {0x3c,0x4a,0x7a,0x95,0xf2,0x03,0x67,0x9e,0x42,0x99,0x9e,0xdb,0x7d,0xa6,0x3c,0x16,0xec,0x4f,0x63,0x72,0xd4,0xa4,0x51,0xf7,0x3d,0x45,0x3e,0x94,0xe0,0x0e,0xde,0x87};
    std::uint8_t difference80[32]    = {0xcf,0xb6,0x73,0x3d,0x31,0xe0,0x93,0xe0,0x2f,0xda,0xd0,0x60,0x40,0xe1,0x7b,0x52,0x31,0xb7,0x3c,0x7e,0xe4,0xf1,0x10,0xaf,0x33,0x9e,0x8f,0xe6,0xfe,0x33,0x68,0x44};
    mont256_from_bytes(&ctx, minuend, minuend80);
    mont256_from_bytes(&ctx, subtrahend, subtrahend80);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference80, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend81[32]       = {0xc8,0xe3,0x24,0xa8,0xa7,0xcb,0x47,0x74,0x25,0x72,0xdb,0x62,0xb3,0x80,0x28,0x9c,0xd1,0x2c,0xb0,0x1b,0xb2,0x79,0x21,0x2f,0x5d,0x15,0x68,0x8b,0x02,0xe8,0x48,0xab};
    std::uint8_t subtrahend81[32]    = {0x1c,0x90,0x7d,0x25,0xa4,0xc3,0x27,0x09,0x7f,0x76,0x70,0x59,0xa5,0x70,0xb9,0xf7,0xb4,0xa2,0x94,0x89,0xbf,0x09,0xd2,0x97,0xa9,0xf0,0x43,0xe6,0xd7,0xb0,0x5c,0x89};
    std::uint8_t difference81[32]    = {0xac,0x52,0xa7,0x83,0x03,0x08,0x20,0x6a,0xa5,0xfc,0x6b,0x09,0x0e,0x0f,0x6e,0xa5,0x1c,0x8a,0x1b,0x91,0xf3,0x6f,0x4e,0x97,0xb3,0x25,0x24,0xa4,0x2b,0x37,0xec,0x22};
    mont256_from_bytes(&ctx, minuend, minuend81);
    mont256_from_bytes(&ctx, subtrahend, subtrahend81);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference81, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend82[32]       = {0x98,0x73,0xcd,0xaa,0x12,0xa2,0x97,0xe6,0x12,0x38,0xc5,0x3e,0x99,0x25,0xaf,0xaf,0x63,0x52,0xcd,0xf5,0xca,0x2c,0x5a,0xd2,0xf6,0x6a,0x40,0x40,0x01,0xaf,0xa3,0x70};
    std::uint8_t subtrahend82[32]    = {0xbd,0x3e,0x1d,0x60,0x4c,0x85,0x8c,0x97,0x59,0x28,0xac,0xa2,0x5f,0xb3,0xd2,0x52,0x9b,0xb6,0xe2,0x4a,0x01,0x1c,0xcc,0x4e,0x1d,0x2c,0x60,0xbb,0xc1,0x46,0xc8,0xf2};
    std::uint8_t difference82[32]    = {0xdb,0x35,0xb0,0x48,0xc6,0x1d,0x0b,0x4e,0xb9,0x10,0x18,0x9c,0x39,0x71,0xdd,0x5c,0xc7,0x9b,0xeb,0xaa,0xc9,0x0f,0x8e,0x85,0xd9,0x3d,0xdf,0x84,0x40,0x68,0xda,0x7d};
    mont256_from_bytes(&ctx, minuend, minuend82);
    mont256_from_bytes(&ctx, subtrahend, subtrahend82);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference82, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend83[32]       = {0xd4,0x89,0xd9,0x69,0x7e,0x87,0x5e,0xb0,0x62,0x67,0x1e,0x2b,0x0a,0x41,0xe1,0x12,0xeb,0x2a,0xa7,0xc7,0x56,0xf1,0xc9,0x44,0x19,0x67,0x0e,0xe1,0x60,0x18,0x26,0xcb};
    std::uint8_t subtrahend83[32]    = {0x62,0x2c,0x33,0x7c,0x11,0x62,0x21,0x49,0x9c,0x07,0x94,0x4c,0x07,0x87,0x88,0xb5,0xb4,0x7c,0x3e,0x5b,0xc7,0xa3,0x96,0x4f,0x9d,0x5c,0x68,0x66,0x86,0x1f,0x9d,0x38};
    std::uint8_t difference83[32]    = {0x72,0x5d,0xa5,0xed,0x6d,0x25,0x3d,0x66,0xc6,0x5f,0x89,0xdf,0x02,0xba,0x58,0x5d,0x36,0xae,0x69,0x6b,0x8f,0x4e,0x32,0xf4,0x7c,0x0a,0xa6,0x7a,0xd9,0xf8,0x89,0x93};
    mont256_from_bytes(&ctx, minuend, minuend83);
    mont256_from_bytes(&ctx, subtrahend, subtrahend83);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference83, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend84[32]       = {0xa0,0x95,0xa5,0x24,0xbc,0x4d,0x65,0xfa,0xd9,0x99,0x8a,0x45,0xec,0x41,0x2e,0x45,0x25,0x0b,0xfa,0x8c,0xed,0x80,0xa2,0x57,0x3a,0xb0,0x95,0x61,0x61,0xc3,0xf2,0xc9};
    std::uint8_t subtrahend84[32]    = {0x6b,0xb6,0x06,0x9b,0xe5,0xe4,0xda,0xa0,0x72,0x99,0xc1,0xd3,0xbf,0x4c,0xcc,0x8b,0x23,0x48,0x24,0x53,0x9f,0xc5,0xfc,0x50,0xea,0x44,0xfe,0x3e,0x2f,0x36,0xb9,0xf5};
    std::uint8_t difference84[32]    = {0x34,0xdf,0x9e,0x88,0xd6,0x68,0x8b,0x5a,0x66,0xff,0xc8,0x72,0x2c,0xf4,0x61,0xba,0x01,0xc3,0xd6,0x39,0x4d,0xba,0xa6,0x06,0x50,0x6b,0x97,0x23,0x32,0x8d,0x38,0xd4};
    mont256_from_bytes(&ctx, minuend, minuend84);
    mont256_from_bytes(&ctx, subtrahend, subtrahend84);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference84, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend85[32]       = {0xa4,0x4e,0xe6,0xb4,0x25,0xee,0x72,0xb3,0x88,0xa1,0xc3,0xec,0x97,0x88,0x6b,0xf3,0x51,0x6b,0xf5,0x07,0x36,0x2c,0x54,0xeb,0x99,0x59,0xa9,0x35,0xf5,0xe9,0x63,0xa9};
    std::uint8_t subtrahend85[32]    = {0x35,0x54,0x3f,0x65,0x50,0x8a,0xf1,0x53,0x90,0xe0,0x3e,0x82,0x1b,0xfd,0xea,0xfa,0x7e,0x9b,0x40,0x69,0xb5,0x11,0x64,0x6f,0xf7,0x72,0x11,0x58,0xc1,0x35,0xa5,0x92};
    std::uint8_t difference85[32]    = {0x6e,0xfa,0xa7,0x4e,0xd5,0x63,0x81,0x5f,0xf7,0xc1,0x85,0x6a,0x7b,0x8a,0x80,0xf8,0xd2,0xd0,0xb4,0x9d,0x81,0x1a,0xf0,0x7b,0xa1,0xe7,0x97,0xdd,0x34,0xb3,0xbe,0x17};
    mont256_from_bytes(&ctx, minuend, minuend85);
    mont256_from_bytes(&ctx, subtrahend, subtrahend85);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference85, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend86[32]       = {0xbc,0x9a,0xfc,0xe4,0x77,0x2b,0xa1,0x60,0x5a,0x73,0x61,0xe4,0x03,0x5f,0x35,0xdd,0x56,0xd4,0x1f,0x1d,0x00,0xbe,0xe6,0xfa,0x15,0xef,0x3c,0x5d,0x87,0xa0,0xa2,0xca};
    std::uint8_t subtrahend86[32]    = {0x4a,0x6d,0x3d,0xae,0xc7,0x64,0xf7,0x35,0x78,0xd2,0x91,0xe2,0x76,0x53,0xc8,0xf8,0xfd,0x2a,0x2b,0x69,0x62,0x65,0xf2,0xe4,0xd2,0x52,0xe0,0x15,0x68,0x6a,0xb4,0x6a};
    std::uint8_t difference86[32]    = {0x72,0x2d,0xbf,0x35,0xaf,0xc6,0xaa,0x2a,0xe1,0xa0,0xd0,0x01,0x8d,0x0b,0x6c,0xe4,0x59,0xa9,0xf3,0xb3,0x9e,0x58,0xf4,0x15,0x43,0x9c,0x5c,0x48,0x1f,0x35,0xee,0x60};
    mont256_from_bytes(&ctx, minuend, minuend86);
    mont256_from_bytes(&ctx, subtrahend, subtrahend86);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference86, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend87[32]       = {0x26,0x0d,0xbf,0xc0,0x55,0xc2,0x2a,0x03,0x93,0x15,0xcc,0x59,0x51,0x88,0xb0,0xc6,0x94,0x4d,0xba,0xbc,0xe0,0xae,0x5a,0x59,0x6a,0x95,0x8f,0x4c,0xfa,0xcd,0x64,0x30};
    std::uint8_t subtrahend87[32]    = {0xbc,0xba,0x9a,0xfd,0xff,0x84,0xb9,0x6b,0xc8,0x5c,0xdf,0x16,0x6e,0xff,0x9e,0x74,0x72,0x38,0xf0,0xd0,0x41,0x0a,0x00,0x57,0xc8,0x52,0x53,0x56,0x83,0x71,0x56,0x9c};
    std::uint8_t difference87[32]    = {0x69,0x53,0x24,0xc1,0x56,0x3d,0x70,0x97,0xca,0xb8,0xed,0x42,0xe2,0x89,0x12,0x52,0x22,0x14,0xc9,0xeb,0x9f,0xa4,0x5a,0x02,0xa2,0x43,0x3b,0xf6,0x77,0x5c,0x0d,0x93};
    mont256_from_bytes(&ctx, minuend, minuend87);
    mont256_from_bytes(&ctx, subtrahend, subtrahend87);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference87, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend88[32]       = {0x79,0x74,0x16,0x57,0x60,0x6a,0xc4,0x06,0xca,0x62,0x23,0x3e,0x7b,0xeb,0xcd,0xdc,0x0f,0xd5,0x88,0x6b,0x80,0x54,0x51,0x5a,0x7b,0xba,0xe9,0xe6,0x93,0x6d,0xd9,0xcc};
    std::uint8_t subtrahend88[32]    = {0xeb,0x26,0xb8,0xa5,0xaa,0x7f,0x8b,0xe1,0x4c,0xb0,0x06,0x69,0xc0,0x7f,0x9c,0x21,0xc7,0x6c,0x51,0xff,0x8a,0x4e,0x7e,0x7c,0x60,0xad,0xe0,0xa1,0xdc,0x76,0x10,0xa1};
    std::uint8_t difference88[32]    = {0x8e,0x4d,0x5d,0xb0,0xb5,0xeb,0x38,0x25,0x7d,0xb2,0x1c,0xd4,0xbb,0x6c,0x31,0xba,0x48,0x69,0x36,0x6a,0xf6,0x05,0xd2,0xdf,0x1b,0x0d,0x09,0x44,0xb6,0xf7,0xc9,0x2a};
    mont256_from_bytes(&ctx, minuend, minuend88);
    mont256_from_bytes(&ctx, subtrahend, subtrahend88);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference88, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend89[32]       = {0xc4,0x29,0x90,0xfa,0xad,0xad,0x51,0xf2,0x41,0xe6,0x76,0x0f,0x7b,0x2f,0x7d,0x79,0xaa,0x46,0x17,0xa4,0x1c,0x44,0x3b,0xa1,0xd9,0x02,0xd2,0xd9,0x09,0x93,0xd0,0xbc};
    std::uint8_t subtrahend89[32]    = {0x3a,0x5a,0xd4,0xc8,0x64,0x5b,0x69,0x46,0x79,0x00,0x7c,0x43,0xb6,0xc3,0xb6,0x64,0xfc,0xd2,0xfe,0x49,0x07,0x6a,0x88,0x1d,0xe6,0x0f,0x58,0x15,0x0b,0x04,0x1b,0x7a};
    std::uint8_t difference89[32]    = {0x89,0xce,0xbc,0x32,0x49,0x51,0xe8,0xab,0xc8,0xe5,0xf9,0xcb,0xc4,0x6b,0xc7,0x14,0xad,0x73,0x19,0x5b,0x14,0xd9,0xb3,0x83,0xf2,0xf3,0x7a,0xc3,0xfe,0x8f,0xb5,0x42};
    mont256_from_bytes(&ctx, minuend, minuend89);
    mont256_from_bytes(&ctx, subtrahend, subtrahend89);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference89, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend90[32]       = {0x11,0xce,0x89,0xf9,0x1c,0x0f,0xe6,0x07,0xda,0x81,0x9a,0xfc,0x77,0x88,0xd5,0x65,0x8d,0x18,0x3f,0xbf,0xc7,0x9c,0x31,0xb4,0xe1,0x5a,0xe4,0x8c,0xdc,0x7f,0x46,0xd0};
    std::uint8_t subtrahend90[32]    = {0xb2,0x69,0xc4,0xea,0x6e,0xbe,0xed,0x03,0x4a,0x24,0xee,0xd4,0x8e,0xa9,0xb8,0xb9,0xd7,0x65,0x1c,0x11,0xd6,0x21,0x28,0xd5,0xae,0x9a,0x34,0xa2,0xbc,0x9d,0x12,0x2a};
    std::uint8_t difference90[32]    = {0x5f,0x64,0xc5,0x0d,0xad,0x50,0xf9,0x04,0x90,0x5c,0xac,0x27,0xe8,0xdf,0x1c,0xab,0xb5,0xb3,0x23,0xac,0xf1,0x7b,0x08,0xe0,0x32,0xc0,0xaf,0xea,0x1f,0xe2,0x34,0xa5};
    mont256_from_bytes(&ctx, minuend, minuend90);
    mont256_from_bytes(&ctx, subtrahend, subtrahend90);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference90, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend91[32]       = {0x67,0xa6,0x19,0xe1,0x9d,0x4d,0x42,0x84,0x14,0x84,0x41,0x8e,0x79,0x26,0x1c,0x54,0x26,0x55,0x83,0x39,0xcf,0xe3,0x3d,0xdb,0x8a,0xda,0xe8,0x3f,0x29,0xdd,0x0e,0xc9};
    std::uint8_t subtrahend91[32]    = {0xae,0xc8,0xb0,0x05,0x3f,0x9d,0x53,0x31,0xfe,0xa7,0xca,0x40,0x1a,0x10,0xb1,0xb3,0x81,0x3c,0x46,0x4d,0x90,0x5b,0xf2,0x03,0x23,0x90,0x44,0x14,0xa3,0xe1,0x82,0x56};
    std::uint8_t difference91[32]    = {0xb8,0xdd,0x69,0xdb,0x5d,0xaf,0xef,0x52,0x15,0xdc,0x77,0x4e,0x5f,0x15,0x6a,0xa0,0xa5,0x19,0x3c,0xeb,0x3f,0x87,0x4b,0xd9,0x67,0x4a,0xa4,0x2a,0x85,0xfb,0x8c,0x72};
    mont256_from_bytes(&ctx, minuend, minuend91);
    mont256_from_bytes(&ctx, subtrahend, subtrahend91);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference91, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend92[32]       = {0x92,0xae,0xac,0xeb,0x7c,0x11,0x8d,0xdd,0xdf,0x14,0x4d,0x68,0xb6,0xe1,0x48,0x6e,0x2b,0xc7,0x39,0xb8,0x1e,0xa0,0x9b,0x78,0x08,0x36,0x2d,0x5e,0xb8,0x7f,0x46,0x90};
    std::uint8_t subtrahend92[32]    = {0x43,0x63,0xd9,0xa6,0xf2,0xeb,0x94,0x6d,0x7a,0xfb,0x06,0xf6,0x92,0xea,0x86,0x1f,0x1e,0x94,0xf1,0x7e,0x1b,0x53,0x10,0x73,0x20,0xe0,0x2d,0x8a,0xf0,0x9f,0xe8,0x1a};
    std::uint8_t difference92[32]    = {0x4f,0x4a,0xd3,0x44,0x89,0x25,0xf9,0x70,0x64,0x19,0x46,0x72,0x23,0xf6,0xc2,0x4f,0x0d,0x32,0x48,0x3a,0x03,0x4d,0x8b,0x04,0xe7,0x55,0xff,0xd3,0xc7,0xdf,0x5e,0x76};
    mont256_from_bytes(&ctx, minuend, minuend92);
    mont256_from_bytes(&ctx, subtrahend, subtrahend92);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference92, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend93[32]       = {0x92,0xff,0xa8,0xdc,0x7f,0xd1,0xeb,0x2d,0xb9,0xcc,0x94,0x8f,0x94,0xa8,0xbb,0xb3,0xbf,0x59,0xbe,0x62,0x46,0xea,0x3e,0xd2,0x2e,0xa5,0xb0,0x1a,0x8c,0x2b,0xd4,0xd7};
    std::uint8_t subtrahend93[32]    = {0x4b,0xf1,0x36,0xb6,0x1b,0x9d,0x08,0xea,0xab,0x3c,0xab,0x7a,0x29,0xc1,0xbd,0xb4,0x45,0xee,0x97,0x64,0xaa,0xea,0x87,0x54,0x7f,0x94,0xd2,0x14,0xfd,0x96,0xb4,0xd3};
    std::uint8_t difference93[32]    = {0x47,0x0e,0x72,0x26,0x64,0x34,0xe2,0x43,0x0e,0x8f,0xe9,0x15,0x6a,0xe6,0xfd,0xff,0x79,0x6b,0x26,0xfd,0x9b,0xff,0xb7,0x7d,0xaf,0x10,0xde,0x05,0x8e,0x95,0x20,0x04};
    mont256_from_bytes(&ctx, minuend, minuend93);
    mont256_from_bytes(&ctx, subtrahend, subtrahend93);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference93, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend94[32]       = {0x43,0xed,0x9c,0xa3,0xaf,0x87,0x66,0xb4,0xea,0xd1,0x3b,0x03,0x09,0x8c,0xbd,0x3d,0x66,0x7e,0xf6,0x21,0xe2,0x78,0x89,0x28,0xb8,0x37,0xf1,0x3c,0xdb,0xa1,0xf5,0xcb};
    std::uint8_t subtrahend94[32]    = {0x8d,0x5e,0x30,0xd7,0xd5,0x44,0xfd,0x43,0xfa,0xd2,0xaa,0x8b,0xa5,0xf2,0x51,0xc6,0x4d,0x1a,0xbd,0x60,0x94,0xf9,0xa3,0x56,0x58,0x3e,0x35,0x38,0x3e,0x13,0x96,0xb1};
    std::uint8_t difference94[32]    = {0xb6,0x8f,0x6b,0xca,0xda,0x42,0x69,0x70,0xef,0xfe,0x90,0x77,0x63,0x9a,0x6b,0x77,0x19,0x64,0x38,0xc0,0x4d,0x7e,0xe5,0xd3,0x5f,0xf9,0xbc,0x04,0x9d,0x8e,0x5f,0x19};
    mont256_from_bytes(&ctx, minuend, minuend94);
    mont256_from_bytes(&ctx, subtrahend, subtrahend94);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference94, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend95[32]       = {0x3f,0x31,0xe3,0x6d,0xcc,0xae,0xbf,0xc4,0xae,0x28,0x05,0x3d,0x54,0xa1,0xf5,0x96,0xa6,0xb0,0x15,0xc4,0xd0,0x73,0x7c,0x96,0x8b,0x58,0x55,0x1f,0x01,0x55,0x65,0x75};
    std::uint8_t subtrahend95[32]    = {0x54,0x7f,0x0f,0xa2,0xe6,0x83,0x7c,0xb4,0x24,0xc2,0xba,0x5d,0x4d,0xfe,0xa6,0x8b,0x64,0xec,0x5f,0xc0,0xfb,0x89,0x68,0x4c,0xcf,0xe2,0x27,0x90,0x4e,0xc7,0xb0,0x90};
    std::uint8_t difference95[32]    = {0xea,0xb2,0xd3,0xc9,0xe6,0x2b,0x43,0x10,0x89,0x65,0x4a,0xe0,0x06,0xa3,0x4f,0x0b,0x41,0xc3,0xb6,0x02,0xd4,0xea,0x14,0x4a,0xbb,0x76,0x2d,0x8e,0xb2,0x8d,0xb4,0xe4};
    mont256_from_bytes(&ctx, minuend, minuend95);
    mont256_from_bytes(&ctx, subtrahend, subtrahend95);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference95, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend96[32]       = {0x59,0x03,0x7a,0x85,0xdc,0x5e,0x62,0x24,0xaa,0x99,0x14,0x25,0x2a,0xd4,0xea,0x81,0xff,0xc4,0x2b,0x59,0x72,0xc7,0x59,0x72,0x02,0xa7,0x84,0x5b,0xf6,0x48,0x7f,0xdd};
    std::uint8_t subtrahend96[32]    = {0xef,0xda,0x67,0x1a,0xd8,0xdd,0x7c,0x9a,0xca,0x7c,0x04,0x9a,0x49,0x15,0x5c,0xdc,0x2c,0x99,0x0c,0x90,0x7f,0x77,0x0e,0x8d,0xb3,0x29,0xd3,0x4a,0xdf,0xe0,0x6f,0x8b};
    std::uint8_t difference96[32]    = {0x69,0x29,0x13,0x6a,0x03,0x80,0xe5,0x89,0xe0,0x1d,0x0f,0x8a,0xe1,0xbf,0x8d,0xa5,0xd3,0x2b,0x1e,0xc7,0xf3,0x50,0x4a,0xe5,0x4f,0x7d,0xb1,0x11,0x16,0x68,0x10,0x51};
    mont256_from_bytes(&ctx, minuend, minuend96);
    mont256_from_bytes(&ctx, subtrahend, subtrahend96);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference96, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend97[32]       = {0x7d,0xc3,0x95,0x9f,0x34,0x4c,0x60,0x26,0x96,0xe9,0x82,0x7a,0x4d,0xaf,0x2c,0x6f,0xf4,0x8f,0x11,0x12,0xde,0xfd,0x07,0x40,0xfd,0x66,0xe6,0xe5,0x66,0x42,0x5e,0x82};
    std::uint8_t subtrahend97[32]    = {0x57,0x34,0x57,0x1a,0x0d,0xa2,0x9d,0x19,0xf2,0x45,0x4e,0x91,0x97,0x0c,0x42,0x5e,0xff,0xde,0x60,0xb6,0x87,0x1e,0xc8,0xde,0x72,0xb8,0x0b,0x01,0x75,0xc5,0x14,0x86};
    std::uint8_t difference97[32]    = {0x26,0x8f,0x3e,0x85,0x26,0xa9,0xc3,0x0c,0xa4,0xa4,0x33,0xe8,0xb6,0xa2,0xea,0x10,0xf4,0xb0,0xb0,0x5c,0x57,0xde,0x3e,0x62,0x8a,0xae,0xdb,0xe3,0xf0,0x7d,0x49,0xfc};
    mont256_from_bytes(&ctx, minuend, minuend97);
    mont256_from_bytes(&ctx, subtrahend, subtrahend97);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference97, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend98[32]       = {0x5e,0x00,0x79,0xd2,0x6c,0x4b,0xca,0x43,0x52,0x51,0x3d,0x5e,0x31,0x93,0x91,0x28,0x48,0x2f,0x87,0x5f,0x35,0x35,0xa1,0x68,0x4b,0x2a,0x1d,0x5b,0xf3,0x17,0x04,0xe5};
    std::uint8_t subtrahend98[32]    = {0x2f,0xcf,0x75,0x26,0x2b,0xc9,0xec,0xc9,0xce,0x82,0x90,0x9c,0x70,0x2d,0x95,0x73,0x6b,0xf7,0x17,0x23,0xa8,0x4b,0xb9,0x78,0xf3,0xf5,0xc2,0x89,0xd4,0xf9,0xf6,0x61};
    std::uint8_t difference98[32]    = {0x2e,0x31,0x04,0xac,0x40,0x81,0xdd,0x79,0x83,0xce,0xac,0xc1,0xc1,0x65,0xfb,0xb4,0xdc,0x38,0x70,0x3b,0x8c,0xe9,0xe7,0xef,0x57,0x34,0x5a,0xd2,0x1e,0x1d,0x0e,0x84};
    mont256_from_bytes(&ctx, minuend, minuend98);
    mont256_from_bytes(&ctx, subtrahend, subtrahend98);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference98, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }

    std::uint8_t minuend99[32]       = {0x69,0x5b,0xc9,0x6e,0x89,0x96,0xfd,0x83,0x3e,0x3f,0x69,0x79,0xc4,0xf3,0x07,0xc8,0x8a,0x6f,0x45,0x4f,0xb4,0x81,0xc0,0x31,0x09,0x56,0x84,0x50,0xe6,0x9d,0x91,0xbf};
    std::uint8_t subtrahend99[32]    = {0xa1,0xdd,0xe5,0x62,0xca,0xbc,0x72,0xa4,0xdb,0xa6,0x04,0x84,0x26,0xb0,0x64,0x21,0x0e,0x6a,0xc3,0x3d,0xf3,0xd7,0xfb,0x1b,0xe3,0xc8,0xb7,0x44,0x16,0xcd,0x56,0xfd};
    std::uint8_t difference99[32]    = {0xc7,0x7d,0xe4,0x0a,0xbe,0xda,0x8a,0xde,0x62,0x99,0x64,0xf5,0x9e,0x42,0xa3,0xa7,0x7c,0x04,0x82,0x10,0xc0,0xa9,0xc5,0x16,0x25,0x8d,0xcd,0x0c,0xcf,0xd0,0x3a,0xc1};
    mont256_from_bytes(&ctx, minuend, minuend99);
    mont256_from_bytes(&ctx, subtrahend, subtrahend99);
    mont256_sub(&ctx, difference, minuend, subtrahend);
    mont256_to_bytes(&ctx, difference_data, difference);
    if (std::memcmp(difference99, difference_data, 32) != 0)
    {
        throw std::runtime_error("err in x64::mont256_sub");
    }
}
#else
void test_mont256_x64_sub()
{
}
#endif