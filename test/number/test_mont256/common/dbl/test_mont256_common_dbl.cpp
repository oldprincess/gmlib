#include <gmlib/number/internal/mont256_common.h>
#include <gmlib/number/internal/uint256_common.h>
#include <stdexcept>
#include <cstring>

using namespace number::internal::common;

static std::uint8_t  P_data[32]      = {0xff,0xff,0xff,0xfe,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff};
static std::uint8_t  P_SUB2_data[32] = {0xff,0xff,0xff,0xfe,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfd};
static std::uint8_t  R_data[32]      = {0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01};
static std::uint8_t  R_POW2_data[32] = {0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x02,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x03};
static std::uint32_t N_              = 1;

void test_mont256_common_dbl()
{
    uint256_t P, P_SUB2, R, R_POW2;
    uint256_from_bytes(P, P_data);
    uint256_from_bytes(P_SUB2, P_SUB2_data);
    uint256_from_bytes(R, R_data);
    uint256_from_bytes(R_POW2, R_POW2_data);

    Mont256CTX ctx;
    ctx.P = P, ctx.P_SUB2 = P_SUB2;
    ctx.R = R, ctx.R_POW2 = R_POW2;
    ctx.N_ = N_;

    mont256_t    multiplier, product;
    std::uint8_t product_data[32];

    std::uint8_t multiplier0[32] = {0x7e,0x48,0x76,0xbc,0x32,0xad,0x4d,0x06,0xb2,0xbc,0x45,0xcc,0xff,0xf1,0x4c,0x6d,0xc1,0x9c,0x71,0x2a,0xdd,0x57,0x44,0x95,0x56,0xc9,0x94,0xfc,0x64,0x09,0x2f,0x9a};
    std::uint8_t product0[32]    = {0xfc,0x90,0xed,0x78,0x65,0x5a,0x9a,0x0d,0x65,0x78,0x8b,0x99,0xff,0xe2,0x98,0xdb,0x83,0x38,0xe2,0x55,0xba,0xae,0x89,0x2a,0xad,0x93,0x29,0xf8,0xc8,0x12,0x5f,0x34};
    mont256_from_bytes(&ctx, multiplier, multiplier0);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product0, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier1[32] = {0x42,0x1e,0x4c,0x1b,0x10,0x1f,0xcf,0x4d,0x71,0xe2,0x22,0x25,0xbf,0xa0,0x6a,0xe8,0x86,0xbb,0x52,0x8c,0x9b,0xe2,0xcc,0x4a,0x3f,0x1c,0xdc,0x8b,0x5e,0x25,0xd0,0x38};
    std::uint8_t product1[32]    = {0x84,0x3c,0x98,0x36,0x20,0x3f,0x9e,0x9a,0xe3,0xc4,0x44,0x4b,0x7f,0x40,0xd5,0xd1,0x0d,0x76,0xa5,0x19,0x37,0xc5,0x98,0x94,0x7e,0x39,0xb9,0x16,0xbc,0x4b,0xa0,0x70};
    mont256_from_bytes(&ctx, multiplier, multiplier1);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product1, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier2[32] = {0x28,0xb5,0x50,0xda,0x02,0x86,0x88,0xf2,0x49,0x84,0x98,0x49,0x2f,0xa1,0xef,0xae,0xc0,0xfc,0xdc,0xdf,0x35,0x05,0x20,0x16,0x8d,0x4b,0x37,0xff,0xe1,0xbb,0x37,0xdd};
    std::uint8_t product2[32]    = {0x51,0x6a,0xa1,0xb4,0x05,0x0d,0x11,0xe4,0x93,0x09,0x30,0x92,0x5f,0x43,0xdf,0x5d,0x81,0xf9,0xb9,0xbe,0x6a,0x0a,0x40,0x2d,0x1a,0x96,0x6f,0xff,0xc3,0x76,0x6f,0xba};
    mont256_from_bytes(&ctx, multiplier, multiplier2);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product2, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier3[32] = {0xb3,0x03,0xe3,0x3f,0x9a,0x05,0xb0,0x21,0x21,0xae,0x21,0xbf,0x02,0x92,0x7a,0xa1,0x0a,0x97,0x62,0xa9,0xcc,0xfc,0xa6,0x3d,0x95,0xf0,0xe2,0x6e,0x1f,0xab,0x09,0x72};
    std::uint8_t product3[32]    = {0x66,0x07,0xc6,0x80,0x34,0x0b,0x60,0x42,0x43,0x5c,0x43,0x7e,0x05,0x24,0xf5,0x42,0x15,0x2e,0xc5,0x54,0x99,0xf9,0x4c,0x7a,0x2b,0xe1,0xc4,0xdc,0x3f,0x56,0x12,0xe5};
    mont256_from_bytes(&ctx, multiplier, multiplier3);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product3, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier4[32] = {0xb5,0x42,0xba,0xe9,0xed,0x77,0x5b,0xfd,0xff,0x65,0x18,0x5b,0xe4,0xc7,0x48,0x0e,0xeb,0xea,0xa3,0x14,0x6d,0x61,0x55,0xa3,0x30,0xa5,0xdc,0x1c,0x62,0x31,0x62,0xb1};
    std::uint8_t product4[32]    = {0x6a,0x85,0x75,0xd4,0xda,0xee,0xb7,0xfb,0xfe,0xca,0x30,0xb7,0xc9,0x8e,0x90,0x1d,0xd7,0xd5,0x46,0x29,0xda,0xc2,0xab,0x45,0x61,0x4b,0xb8,0x38,0xc4,0x62,0xc5,0x63};
    mont256_from_bytes(&ctx, multiplier, multiplier4);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product4, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier5[32] = {0xce,0x0c,0x05,0x08,0xd4,0x9b,0xfb,0x90,0xef,0x9d,0xbe,0xce,0x81,0x48,0x5b,0xa9,0x9c,0xca,0x47,0x17,0xad,0xd7,0x61,0x1a,0xbb,0x0e,0x73,0x38,0x06,0x90,0xbd,0x41};
    std::uint8_t product5[32]    = {0x9c,0x18,0x0a,0x12,0xa9,0x37,0xf7,0x21,0xdf,0x3b,0x7d,0x9d,0x02,0x90,0xb7,0x53,0x39,0x94,0x8e,0x30,0x5b,0xae,0xc2,0x34,0x76,0x1c,0xe6,0x70,0x0d,0x21,0x7a,0x83};
    mont256_from_bytes(&ctx, multiplier, multiplier5);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product5, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier6[32] = {0xba,0x48,0xef,0xfd,0xe6,0xcd,0x91,0x3c,0x92,0xb6,0x69,0x0b,0x34,0xc7,0x5f,0x3b,0xed,0xf6,0x2b,0xd8,0x96,0x8a,0xc2,0x06,0xf1,0x50,0x63,0x96,0x70,0x53,0x0e,0x6e};
    std::uint8_t product6[32]    = {0x74,0x91,0xdf,0xfc,0xcd,0x9b,0x22,0x79,0x25,0x6c,0xd2,0x16,0x69,0x8e,0xbe,0x77,0xdb,0xec,0x57,0xb2,0x2d,0x15,0x84,0x0c,0xe2,0xa0,0xc7,0x2c,0xe0,0xa6,0x1c,0xdd};
    mont256_from_bytes(&ctx, multiplier, multiplier6);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product6, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier7[32] = {0xc5,0x41,0xe7,0x91,0x42,0x78,0xfa,0x6e,0x1d,0x69,0x9b,0xbb,0x7b,0xe3,0x89,0xce,0x4f,0x5a,0xfa,0x6a,0x78,0xc5,0x07,0xdc,0x86,0x3c,0x61,0x17,0x3a,0x8c,0x88,0x2f};
    std::uint8_t product7[32]    = {0x8a,0x83,0xcf,0x23,0x84,0xf1,0xf4,0xdc,0x3a,0xd3,0x37,0x76,0xf7,0xc7,0x13,0x9c,0x9e,0xb5,0xf4,0xd5,0xf1,0x8a,0x0f,0xb8,0x0c,0x78,0xc2,0x2e,0x75,0x19,0x10,0x5f};
    mont256_from_bytes(&ctx, multiplier, multiplier7);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product7, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier8[32] = {0xce,0x1a,0x95,0xba,0xcf,0xfc,0x0b,0x13,0xbe,0xd3,0xf9,0xd2,0x95,0x57,0x2a,0x14,0x47,0x2f,0xef,0xf2,0xd3,0x1e,0xc1,0x91,0x5c,0x83,0xf1,0xd2,0x12,0xd2,0xe7,0xf2};
    std::uint8_t product8[32]    = {0x9c,0x35,0x2b,0x76,0x9f,0xf8,0x16,0x27,0x7d,0xa7,0xf3,0xa5,0x2a,0xae,0x54,0x28,0x8e,0x5f,0xdf,0xe6,0xa6,0x3d,0x83,0x21,0xb9,0x07,0xe3,0xa4,0x25,0xa5,0xcf,0xe5};
    mont256_from_bytes(&ctx, multiplier, multiplier8);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product8, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier9[32] = {0x50,0x81,0x43,0xd8,0x29,0x14,0x0f,0x4d,0xc3,0xed,0xf8,0x90,0x59,0xaa,0xf7,0xfc,0xf4,0x0f,0xe4,0x7d,0x58,0x5c,0xba,0xdd,0xde,0xc9,0x69,0x87,0x9e,0xa1,0xd9,0x8e};
    std::uint8_t product9[32]    = {0xa1,0x02,0x87,0xb0,0x52,0x28,0x1e,0x9b,0x87,0xdb,0xf1,0x20,0xb3,0x55,0xef,0xf9,0xe8,0x1f,0xc8,0xfa,0xb0,0xb9,0x75,0xbb,0xbd,0x92,0xd3,0x0f,0x3d,0x43,0xb3,0x1c};
    mont256_from_bytes(&ctx, multiplier, multiplier9);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product9, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier10[32] = {0x2a,0xe1,0x11,0xd9,0xa8,0xfe,0xda,0x85,0x31,0x5f,0x62,0xbd,0xd6,0x1f,0xf7,0x36,0x51,0x54,0xb6,0x64,0xff,0xd0,0x2a,0x06,0x79,0x96,0x3e,0x68,0xcb,0x34,0x02,0x1d};
    std::uint8_t product10[32]    = {0x55,0xc2,0x23,0xb3,0x51,0xfd,0xb5,0x0a,0x62,0xbe,0xc5,0x7b,0xac,0x3f,0xee,0x6c,0xa2,0xa9,0x6c,0xc9,0xff,0xa0,0x54,0x0c,0xf3,0x2c,0x7c,0xd1,0x96,0x68,0x04,0x3a};
    mont256_from_bytes(&ctx, multiplier, multiplier10);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product10, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier11[32] = {0xfa,0xa0,0xf0,0xcf,0xf4,0xa3,0xf4,0x7c,0x02,0x7f,0x8c,0xa6,0xa5,0x34,0x1b,0x4e,0x78,0x94,0xdc,0x9c,0xcf,0x7a,0x80,0xa6,0xc3,0x60,0x60,0x96,0x99,0xa4,0xc1,0xcb};
    std::uint8_t product11[32]    = {0xf5,0x41,0xe1,0xa0,0xe9,0x47,0xe8,0xf8,0x04,0xff,0x19,0x4d,0x4a,0x68,0x36,0x9c,0xf1,0x29,0xb9,0x3a,0x9e,0xf5,0x01,0x4c,0x86,0xc0,0xc1,0x2d,0x33,0x49,0x83,0x97};
    mont256_from_bytes(&ctx, multiplier, multiplier11);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product11, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier12[32] = {0x61,0x08,0x15,0x61,0x58,0x17,0xe4,0xa0,0xa2,0x4c,0x64,0x8c,0x79,0xe2,0xea,0x2b,0xd3,0xc5,0x53,0x1a,0xe1,0x78,0xc7,0xe0,0xba,0x0e,0x66,0xb1,0x6c,0x3e,0x8e,0x6e};
    std::uint8_t product12[32]    = {0xc2,0x10,0x2a,0xc2,0xb0,0x2f,0xc9,0x41,0x44,0x98,0xc9,0x18,0xf3,0xc5,0xd4,0x57,0xa7,0x8a,0xa6,0x35,0xc2,0xf1,0x8f,0xc1,0x74,0x1c,0xcd,0x62,0xd8,0x7d,0x1c,0xdc};
    mont256_from_bytes(&ctx, multiplier, multiplier12);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product12, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier13[32] = {0x72,0x79,0x94,0x60,0xb7,0xd8,0xd1,0x6a,0x91,0x4e,0xa3,0xb8,0xdc,0x8c,0xaa,0x67,0x81,0xb5,0xac,0x42,0x67,0x3b,0x7c,0x70,0x21,0xe0,0x65,0xe2,0xe1,0x82,0x06,0xa8};
    std::uint8_t product13[32]    = {0xe4,0xf3,0x28,0xc1,0x6f,0xb1,0xa2,0xd5,0x22,0x9d,0x47,0x71,0xb9,0x19,0x54,0xcf,0x03,0x6b,0x58,0x84,0xce,0x76,0xf8,0xe0,0x43,0xc0,0xcb,0xc5,0xc3,0x04,0x0d,0x50};
    mont256_from_bytes(&ctx, multiplier, multiplier13);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product13, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier14[32] = {0x5a,0xa7,0xa9,0x96,0xe6,0xa3,0xc0,0xcb,0xc9,0x6b,0x2d,0x29,0xf4,0xa3,0xb8,0x31,0xb9,0x87,0xf2,0x53,0x67,0x36,0x87,0x3b,0xa9,0xba,0x8e,0x2f,0xdf,0x4d,0x82,0xc1};
    std::uint8_t product14[32]    = {0xb5,0x4f,0x53,0x2d,0xcd,0x47,0x81,0x97,0x92,0xd6,0x5a,0x53,0xe9,0x47,0x70,0x63,0x73,0x0f,0xe4,0xa6,0xce,0x6d,0x0e,0x77,0x53,0x75,0x1c,0x5f,0xbe,0x9b,0x05,0x82};
    mont256_from_bytes(&ctx, multiplier, multiplier14);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product14, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier15[32] = {0x13,0x6a,0xc2,0x09,0xdd,0xd8,0xec,0x00,0x20,0x85,0x2c,0x55,0xbe,0x9d,0xce,0x35,0x97,0xb1,0xfd,0x43,0x6b,0xdf,0xcc,0xe3,0xc5,0xa7,0x82,0x6b,0x38,0xfa,0x73,0x24};
    std::uint8_t product15[32]    = {0x26,0xd5,0x84,0x13,0xbb,0xb1,0xd8,0x00,0x41,0x0a,0x58,0xab,0x7d,0x3b,0x9c,0x6b,0x2f,0x63,0xfa,0x86,0xd7,0xbf,0x99,0xc7,0x8b,0x4f,0x04,0xd6,0x71,0xf4,0xe6,0x48};
    mont256_from_bytes(&ctx, multiplier, multiplier15);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product15, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier16[32] = {0x9e,0x2f,0xbc,0xec,0xf1,0x08,0x20,0x6e,0x2e,0xbe,0x85,0x06,0x78,0x4b,0xfa,0xee,0x22,0x2f,0x9d,0x0a,0x04,0x2e,0x8c,0xa0,0x13,0x4d,0xf6,0x5a,0xb4,0x36,0x7d,0x33};
    std::uint8_t product16[32]    = {0x3c,0x5f,0x79,0xda,0xe2,0x10,0x40,0xdc,0x5d,0x7d,0x0a,0x0c,0xf0,0x97,0xf5,0xdc,0x44,0x5f,0x3a,0x15,0x08,0x5d,0x19,0x3f,0x26,0x9b,0xec,0xb5,0x68,0x6c,0xfa,0x67};
    mont256_from_bytes(&ctx, multiplier, multiplier16);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product16, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier17[32] = {0x95,0xfe,0x12,0x7c,0xda,0xb7,0xb1,0x5f,0xb8,0x75,0x27,0xe4,0xd7,0xd5,0xe8,0x41,0x82,0xc3,0xea,0x46,0xd0,0xbb,0xd3,0x60,0x0a,0xcd,0x23,0xac,0xa1,0x17,0x19,0xbb};
    std::uint8_t product17[32]    = {0x2b,0xfc,0x24,0xfa,0xb5,0x6f,0x62,0xbf,0x70,0xea,0x4f,0xc9,0xaf,0xab,0xd0,0x83,0x05,0x87,0xd4,0x8e,0xa1,0x77,0xa6,0xbf,0x15,0x9a,0x47,0x59,0x42,0x2e,0x33,0x77};
    mont256_from_bytes(&ctx, multiplier, multiplier17);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product17, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier18[32] = {0xca,0x21,0x37,0x02,0x27,0x05,0xda,0x10,0x28,0xad,0xe2,0x91,0x32,0x29,0xef,0xca,0xfd,0x22,0x82,0xef,0x5f,0x6f,0x1b,0x8d,0xbc,0x76,0x3d,0x1c,0x71,0x92,0xa9,0xeb};
    std::uint8_t product18[32]    = {0x94,0x42,0x6e,0x05,0x4e,0x0b,0xb4,0x20,0x51,0x5b,0xc5,0x22,0x64,0x53,0xdf,0x95,0xfa,0x45,0x05,0xdf,0xbe,0xde,0x37,0x1a,0x78,0xec,0x7a,0x38,0xe3,0x25,0x53,0xd7};
    mont256_from_bytes(&ctx, multiplier, multiplier18);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product18, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier19[32] = {0xd2,0x82,0x5b,0x17,0x77,0xba,0x84,0x29,0x1f,0x86,0xc1,0xdd,0xd4,0x30,0x5d,0x0e,0x8c,0x85,0x97,0x1d,0xb4,0x7d,0x3f,0xf6,0x3b,0x23,0x25,0xed,0x29,0x9d,0xf2,0x22};
    std::uint8_t product19[32]    = {0xa5,0x04,0xb6,0x2f,0xef,0x75,0x08,0x52,0x3f,0x0d,0x83,0xbb,0xa8,0x60,0xba,0x1d,0x19,0x0b,0x2e,0x3c,0x68,0xfa,0x7f,0xeb,0x76,0x46,0x4b,0xda,0x53,0x3b,0xe4,0x45};
    mont256_from_bytes(&ctx, multiplier, multiplier19);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product19, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier20[32] = {0xe5,0xa7,0x97,0x97,0x7e,0x90,0xd6,0x30,0x6c,0xfb,0xc8,0xf2,0x71,0x78,0xbf,0x5b,0x42,0xc8,0xa3,0x92,0x40,0xed,0xd0,0x18,0x91,0x23,0x80,0xfb,0x5a,0x06,0x43,0x36};
    std::uint8_t product20[32]    = {0xcb,0x4f,0x2f,0x2f,0xfd,0x21,0xac,0x60,0xd9,0xf7,0x91,0xe4,0xe2,0xf1,0x7e,0xb6,0x85,0x91,0x47,0x25,0x81,0xdb,0xa0,0x30,0x22,0x47,0x01,0xf6,0xb4,0x0c,0x86,0x6d};
    mont256_from_bytes(&ctx, multiplier, multiplier20);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product20, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier21[32] = {0x73,0xff,0xa0,0x07,0x21,0x8c,0xfc,0x33,0xaa,0xce,0xea,0x8c,0x66,0x14,0x5b,0xf2,0xc4,0x3c,0x49,0x09,0x25,0x1d,0xd3,0x24,0x8b,0xde,0x69,0x4d,0x8b,0x14,0xea,0x95};
    std::uint8_t product21[32]    = {0xe7,0xff,0x40,0x0e,0x43,0x19,0xf8,0x67,0x55,0x9d,0xd5,0x18,0xcc,0x28,0xb7,0xe5,0x88,0x78,0x92,0x12,0x4a,0x3b,0xa6,0x49,0x17,0xbc,0xd2,0x9b,0x16,0x29,0xd5,0x2a};
    mont256_from_bytes(&ctx, multiplier, multiplier21);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product21, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier22[32] = {0xcf,0xf4,0x5f,0xd9,0x53,0xf4,0x1c,0x76,0x54,0xe6,0x44,0x92,0x09,0xc2,0x1c,0xce,0x48,0xc4,0x93,0xeb,0x7a,0x50,0x08,0x4d,0xc0,0x64,0x49,0xe5,0x24,0x66,0xe4,0xb9};
    std::uint8_t product22[32]    = {0x9f,0xe8,0xbf,0xb3,0xa7,0xe8,0x38,0xec,0xa9,0xcc,0x89,0x24,0x13,0x84,0x39,0x9c,0x91,0x89,0x27,0xd7,0xf4,0xa0,0x10,0x9a,0x80,0xc8,0x93,0xca,0x48,0xcd,0xc9,0x73};
    mont256_from_bytes(&ctx, multiplier, multiplier22);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product22, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier23[32] = {0x2a,0x0a,0x1a,0xa6,0x28,0x3a,0xf9,0xf0,0xe5,0x00,0x86,0x33,0x25,0xcd,0x16,0x33,0x75,0x68,0x0c,0x13,0x2f,0xe2,0x8b,0x42,0x4c,0x05,0xe1,0x40,0x42,0x72,0x18,0xc1};
    std::uint8_t product23[32]    = {0x54,0x14,0x35,0x4c,0x50,0x75,0xf3,0xe1,0xca,0x01,0x0c,0x66,0x4b,0x9a,0x2c,0x66,0xea,0xd0,0x18,0x26,0x5f,0xc5,0x16,0x84,0x98,0x0b,0xc2,0x80,0x84,0xe4,0x31,0x82};
    mont256_from_bytes(&ctx, multiplier, multiplier23);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product23, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier24[32] = {0xcc,0x64,0x05,0x54,0x18,0x79,0x52,0x8e,0x12,0xfe,0xe5,0x14,0xd4,0x72,0x18,0x46,0x4d,0x5a,0xac,0xbe,0x0e,0xe4,0x8e,0xca,0xd3,0x54,0x0c,0x32,0x2b,0x80,0xb3,0xb9};
    std::uint8_t product24[32]    = {0x98,0xc8,0x0a,0xa9,0x30,0xf2,0xa5,0x1c,0x25,0xfd,0xca,0x29,0xa8,0xe4,0x30,0x8c,0x9a,0xb5,0x59,0x7d,0x1d,0xc9,0x1d,0x94,0xa6,0xa8,0x18,0x64,0x57,0x01,0x67,0x73};
    mont256_from_bytes(&ctx, multiplier, multiplier24);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product24, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier25[32] = {0x86,0xbb,0x5f,0x52,0x4b,0xca,0x68,0xc0,0x96,0x16,0xb2,0x98,0x21,0xa9,0xc2,0x08,0xa8,0x28,0x34,0x43,0xaf,0x2d,0x0f,0xfb,0x66,0xb7,0xe0,0x6c,0xce,0x44,0x91,0x9a};
    std::uint8_t product25[32]    = {0x0d,0x76,0xbe,0xa5,0x97,0x94,0xd1,0x81,0x2c,0x2d,0x65,0x30,0x43,0x53,0x84,0x11,0x50,0x50,0x68,0x88,0x5e,0x5a,0x1f,0xf5,0xcd,0x6f,0xc0,0xd9,0x9c,0x89,0x23,0x35};
    mont256_from_bytes(&ctx, multiplier, multiplier25);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product25, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier26[32] = {0x6c,0x73,0xe5,0x3a,0x6a,0x5d,0x60,0x33,0x34,0x70,0x7e,0x15,0x92,0x43,0xe8,0x57,0x85,0xec,0x40,0x25,0x7f,0xd9,0xdd,0x3c,0x24,0x85,0x5a,0x99,0x40,0x1f,0xe6,0x4d};
    std::uint8_t product26[32]    = {0xd8,0xe7,0xca,0x74,0xd4,0xba,0xc0,0x66,0x68,0xe0,0xfc,0x2b,0x24,0x87,0xd0,0xaf,0x0b,0xd8,0x80,0x4a,0xff,0xb3,0xba,0x78,0x49,0x0a,0xb5,0x32,0x80,0x3f,0xcc,0x9a};
    mont256_from_bytes(&ctx, multiplier, multiplier26);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product26, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier27[32] = {0x30,0x87,0x5d,0x8e,0x16,0xbb,0xef,0xfc,0x82,0xc7,0x76,0xd6,0x5e,0xed,0xc0,0x92,0xba,0x75,0x19,0x01,0x0d,0x62,0xc3,0xbe,0xf0,0xf8,0xba,0x40,0x2a,0x68,0xf2,0x74};
    std::uint8_t product27[32]    = {0x61,0x0e,0xbb,0x1c,0x2d,0x77,0xdf,0xf9,0x05,0x8e,0xed,0xac,0xbd,0xdb,0x81,0x25,0x74,0xea,0x32,0x02,0x1a,0xc5,0x87,0x7d,0xe1,0xf1,0x74,0x80,0x54,0xd1,0xe4,0xe8};
    mont256_from_bytes(&ctx, multiplier, multiplier27);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product27, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier28[32] = {0x1c,0x07,0x94,0x3d,0x5c,0x4d,0x23,0x9d,0x9b,0x16,0xd4,0x04,0x3a,0xc1,0x90,0xcd,0xb8,0x6d,0x4c,0x99,0xc0,0x5f,0x9e,0xc1,0x43,0x8a,0x1b,0xa0,0xb5,0x25,0xcb,0xeb};
    std::uint8_t product28[32]    = {0x38,0x0f,0x28,0x7a,0xb8,0x9a,0x47,0x3b,0x36,0x2d,0xa8,0x08,0x75,0x83,0x21,0x9b,0x70,0xda,0x99,0x33,0x80,0xbf,0x3d,0x82,0x87,0x14,0x37,0x41,0x6a,0x4b,0x97,0xd6};
    mont256_from_bytes(&ctx, multiplier, multiplier28);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product28, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier29[32] = {0x14,0x89,0xfa,0xb2,0x1e,0xc2,0x6d,0x11,0xb7,0xf1,0xfa,0x4d,0x86,0x4e,0x1a,0x68,0x56,0x26,0x55,0xc6,0xd9,0xbb,0x7c,0x8f,0x0e,0x41,0xcb,0x19,0xf6,0x46,0x9e,0x23};
    std::uint8_t product29[32]    = {0x29,0x13,0xf5,0x64,0x3d,0x84,0xda,0x23,0x6f,0xe3,0xf4,0x9b,0x0c,0x9c,0x34,0xd0,0xac,0x4c,0xab,0x8d,0xb3,0x76,0xf9,0x1e,0x1c,0x83,0x96,0x33,0xec,0x8d,0x3c,0x46};
    mont256_from_bytes(&ctx, multiplier, multiplier29);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product29, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier30[32] = {0x5e,0x04,0x2b,0x12,0x20,0xd7,0x68,0xbf,0xd2,0xe8,0xfd,0xf2,0xe1,0x80,0x4f,0x3f,0x96,0x0b,0x3b,0xf7,0x47,0xb4,0x50,0x69,0x82,0x00,0x90,0x47,0x4d,0x36,0x07,0x3f};
    std::uint8_t product30[32]    = {0xbc,0x08,0x56,0x24,0x41,0xae,0xd1,0x7f,0xa5,0xd1,0xfb,0xe5,0xc3,0x00,0x9e,0x7f,0x2c,0x16,0x77,0xee,0x8f,0x68,0xa0,0xd3,0x04,0x01,0x20,0x8e,0x9a,0x6c,0x0e,0x7e};
    mont256_from_bytes(&ctx, multiplier, multiplier30);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product30, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier31[32] = {0x6b,0x52,0x2e,0xda,0xeb,0xb2,0xa9,0x45,0xa8,0xfa,0x7b,0x33,0xe8,0xd4,0x21,0xb6,0xbb,0x14,0x53,0x56,0x7f,0x20,0x7b,0x6b,0x59,0x9a,0x07,0xd0,0x3b,0x02,0x1e,0x42};
    std::uint8_t product31[32]    = {0xd6,0xa4,0x5d,0xb5,0xd7,0x65,0x52,0x8b,0x51,0xf4,0xf6,0x67,0xd1,0xa8,0x43,0x6d,0x76,0x28,0xa6,0xac,0xfe,0x40,0xf6,0xd6,0xb3,0x34,0x0f,0xa0,0x76,0x04,0x3c,0x84};
    mont256_from_bytes(&ctx, multiplier, multiplier31);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product31, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier32[32] = {0xa4,0x4b,0xdd,0xc4,0x81,0xde,0x09,0xd8,0x4e,0xf0,0x3b,0xd2,0x5a,0x06,0x6b,0xaa,0x77,0x83,0x8d,0xfe,0x4f,0xbd,0x3b,0x91,0x7b,0x57,0xf1,0x36,0x6a,0x7c,0x78,0xf8};
    std::uint8_t product32[32]    = {0x48,0x97,0xbb,0x8a,0x03,0xbc,0x13,0xb0,0x9d,0xe0,0x77,0xa4,0xb4,0x0c,0xd7,0x54,0xef,0x07,0x1b,0xfd,0x9f,0x7a,0x77,0x21,0xf6,0xaf,0xe2,0x6c,0xd4,0xf8,0xf1,0xf1};
    mont256_from_bytes(&ctx, multiplier, multiplier32);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product32, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier33[32] = {0x92,0x31,0xc8,0x1f,0x46,0x9a,0x78,0xf2,0x3e,0xbb,0x3b,0x47,0xa7,0xcf,0x74,0x1a,0x91,0x0c,0x9b,0xa7,0x07,0x01,0x3c,0xdf,0xc6,0x94,0x12,0xcf,0xea,0x82,0x18,0x68};
    std::uint8_t product33[32]    = {0x24,0x63,0x90,0x3f,0x8d,0x34,0xf1,0xe4,0x7d,0x76,0x76,0x8f,0x4f,0x9e,0xe8,0x35,0x22,0x19,0x37,0x4f,0x0e,0x02,0x79,0xbe,0x8d,0x28,0x25,0x9f,0xd5,0x04,0x30,0xd1};
    mont256_from_bytes(&ctx, multiplier, multiplier33);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product33, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier34[32] = {0xcd,0x69,0x7a,0x37,0xda,0xff,0x0c,0xa9,0xa2,0x57,0x85,0x7c,0x33,0x56,0x85,0x64,0xc0,0x14,0x4b,0x1d,0x91,0x4c,0x0f,0xc3,0x75,0xf3,0x5d,0x6d,0x67,0x20,0x78,0x55};
    std::uint8_t product34[32]    = {0x9a,0xd2,0xf4,0x70,0xb5,0xfe,0x19,0x53,0x44,0xaf,0x0a,0xf8,0x66,0xad,0x0a,0xc9,0x80,0x28,0x96,0x3c,0x22,0x98,0x1f,0x85,0xeb,0xe6,0xba,0xda,0xce,0x40,0xf0,0xab};
    mont256_from_bytes(&ctx, multiplier, multiplier34);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product34, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier35[32] = {0x0f,0x1d,0x67,0xc0,0x1e,0x8b,0x03,0xfe,0xd9,0x41,0x2b,0x54,0xbf,0xf9,0xb5,0x08,0xa0,0x4f,0x95,0x4e,0xda,0x78,0xa9,0x59,0xe5,0x98,0x86,0x16,0xfc,0x9d,0x2e,0x56};
    std::uint8_t product35[32]    = {0x1e,0x3a,0xcf,0x80,0x3d,0x16,0x07,0xfd,0xb2,0x82,0x56,0xa9,0x7f,0xf3,0x6a,0x11,0x40,0x9f,0x2a,0x9d,0xb4,0xf1,0x52,0xb3,0xcb,0x31,0x0c,0x2d,0xf9,0x3a,0x5c,0xac};
    mont256_from_bytes(&ctx, multiplier, multiplier35);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product35, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier36[32] = {0x54,0x6b,0x70,0xda,0x0e,0x29,0x0b,0xf6,0x2e,0x15,0xab,0x17,0x58,0x57,0x74,0xa7,0x76,0xe1,0x17,0x4f,0xef,0x76,0x6b,0x9e,0xc4,0x75,0x90,0xc8,0x02,0x81,0x7d,0x29};
    std::uint8_t product36[32]    = {0xa8,0xd6,0xe1,0xb4,0x1c,0x52,0x17,0xec,0x5c,0x2b,0x56,0x2e,0xb0,0xae,0xe9,0x4e,0xed,0xc2,0x2e,0x9f,0xde,0xec,0xd7,0x3d,0x88,0xeb,0x21,0x90,0x05,0x02,0xfa,0x52};
    mont256_from_bytes(&ctx, multiplier, multiplier36);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product36, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier37[32] = {0x68,0x7e,0xbc,0x36,0x6e,0xa2,0x3a,0xe5,0xf9,0x4f,0x97,0x50,0xdf,0xf2,0xe4,0xa9,0x89,0xd2,0x92,0x64,0xf3,0xfd,0xea,0x36,0x50,0x99,0x3b,0xde,0x4e,0x17,0x97,0xf1};
    std::uint8_t product37[32]    = {0xd0,0xfd,0x78,0x6c,0xdd,0x44,0x75,0xcb,0xf2,0x9f,0x2e,0xa1,0xbf,0xe5,0xc9,0x53,0x13,0xa5,0x24,0xc9,0xe7,0xfb,0xd4,0x6c,0xa1,0x32,0x77,0xbc,0x9c,0x2f,0x2f,0xe2};
    mont256_from_bytes(&ctx, multiplier, multiplier37);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product37, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier38[32] = {0x81,0x40,0x05,0x29,0x15,0xe3,0x13,0xb2,0xf9,0x23,0x38,0xf4,0xa4,0x9d,0x95,0x26,0x35,0xc4,0xe4,0x74,0x6a,0x73,0x37,0x37,0x09,0xb6,0xc8,0xb7,0x33,0xea,0x99,0x0b};
    std::uint8_t product38[32]    = {0x02,0x80,0x0a,0x53,0x2b,0xc6,0x27,0x65,0xf2,0x46,0x71,0xe9,0x49,0x3b,0x2a,0x4c,0x6b,0x89,0xc8,0xe9,0xd4,0xe6,0x6e,0x6d,0x13,0x6d,0x91,0x6e,0x67,0xd5,0x32,0x17};
    mont256_from_bytes(&ctx, multiplier, multiplier38);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product38, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier39[32] = {0x2b,0xa7,0x61,0xd1,0x65,0x8a,0xaf,0x0a,0x18,0x00,0x01,0x97,0x4f,0xdd,0x92,0xb4,0x62,0xe8,0x59,0xc0,0x49,0x0e,0x88,0x5e,0xe0,0xa4,0xa6,0x22,0x2a,0x2e,0xd7,0x44};
    std::uint8_t product39[32]    = {0x57,0x4e,0xc3,0xa2,0xcb,0x15,0x5e,0x14,0x30,0x00,0x03,0x2e,0x9f,0xbb,0x25,0x68,0xc5,0xd0,0xb3,0x80,0x92,0x1d,0x10,0xbd,0xc1,0x49,0x4c,0x44,0x54,0x5d,0xae,0x88};
    mont256_from_bytes(&ctx, multiplier, multiplier39);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product39, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier40[32] = {0x72,0xbd,0x5e,0x69,0x16,0xdc,0x05,0xc0,0x7b,0x05,0xcb,0xab,0xf3,0x25,0xde,0x5e,0x1d,0x5c,0x3b,0x50,0xb3,0x57,0x35,0x6c,0x6e,0xa5,0x57,0x53,0x1c,0xa1,0x14,0x8f};
    std::uint8_t product40[32]    = {0xe5,0x7a,0xbc,0xd2,0x2d,0xb8,0x0b,0x80,0xf6,0x0b,0x97,0x57,0xe6,0x4b,0xbc,0xbc,0x3a,0xb8,0x76,0xa1,0x66,0xae,0x6a,0xd8,0xdd,0x4a,0xae,0xa6,0x39,0x42,0x29,0x1e};
    mont256_from_bytes(&ctx, multiplier, multiplier40);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product40, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier41[32] = {0x8d,0x7a,0x41,0xd4,0x67,0xd3,0xe0,0xc1,0x54,0x41,0x8f,0x88,0xe9,0x06,0x45,0x15,0x0c,0xc8,0xaa,0xe3,0xa9,0xd5,0xcd,0x55,0xf3,0x52,0xd4,0x69,0x84,0x2e,0xe6,0x6e};
    std::uint8_t product41[32]    = {0x1a,0xf4,0x83,0xa9,0xcf,0xa7,0xc1,0x82,0xa8,0x83,0x1f,0x11,0xd2,0x0c,0x8a,0x2a,0x19,0x91,0x55,0xc8,0x53,0xab,0x9a,0xaa,0xe6,0xa5,0xa8,0xd3,0x08,0x5d,0xcc,0xdd};
    mont256_from_bytes(&ctx, multiplier, multiplier41);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product41, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier42[32] = {0x28,0x66,0xa9,0x0d,0x7d,0xa3,0x1a,0x9b,0xaf,0xb7,0x09,0x2f,0xa6,0x70,0xfb,0xb2,0xbf,0xe4,0x60,0x8d,0x1f,0x45,0xe6,0xea,0x1c,0x13,0x72,0xbf,0xdd,0xc7,0xf2,0x03};
    std::uint8_t product42[32]    = {0x50,0xcd,0x52,0x1a,0xfb,0x46,0x35,0x37,0x5f,0x6e,0x12,0x5f,0x4c,0xe1,0xf7,0x65,0x7f,0xc8,0xc1,0x1a,0x3e,0x8b,0xcd,0xd4,0x38,0x26,0xe5,0x7f,0xbb,0x8f,0xe4,0x06};
    mont256_from_bytes(&ctx, multiplier, multiplier42);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product42, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier43[32] = {0x75,0x42,0x3c,0xfa,0xb2,0xe1,0x1e,0xa4,0xc2,0x85,0xa7,0x65,0x51,0xc5,0xc0,0x28,0xf8,0xfa,0x8d,0xda,0x68,0xef,0x1c,0x2b,0xb7,0xfd,0xce,0x50,0xbb,0xad,0xca,0xa3};
    std::uint8_t product43[32]    = {0xea,0x84,0x79,0xf5,0x65,0xc2,0x3d,0x49,0x85,0x0b,0x4e,0xca,0xa3,0x8b,0x80,0x51,0xf1,0xf5,0x1b,0xb4,0xd1,0xde,0x38,0x57,0x6f,0xfb,0x9c,0xa1,0x77,0x5b,0x95,0x46};
    mont256_from_bytes(&ctx, multiplier, multiplier43);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product43, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier44[32] = {0x30,0xe7,0xfe,0x96,0x62,0xf1,0xae,0x44,0x5e,0x5e,0x1b,0xf5,0x5c,0x87,0x22,0xc5,0xf3,0x93,0x35,0xa8,0xbd,0x6a,0xc3,0xe6,0x8e,0x5c,0x94,0x52,0x14,0xfc,0x00,0xdc};
    std::uint8_t product44[32]    = {0x61,0xcf,0xfd,0x2c,0xc5,0xe3,0x5c,0x88,0xbc,0xbc,0x37,0xea,0xb9,0x0e,0x45,0x8b,0xe7,0x26,0x6b,0x51,0x7a,0xd5,0x87,0xcd,0x1c,0xb9,0x28,0xa4,0x29,0xf8,0x01,0xb8};
    mont256_from_bytes(&ctx, multiplier, multiplier44);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product44, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier45[32] = {0x01,0xac,0x46,0xf1,0x6a,0x2b,0x0b,0x2f,0x10,0x92,0x44,0x9f,0x74,0x46,0xd4,0x96,0xbc,0xe4,0xaf,0x1b,0xe8,0xc3,0xbb,0xa1,0x45,0x0e,0x30,0x53,0xea,0x43,0xde,0x29};
    std::uint8_t product45[32]    = {0x03,0x58,0x8d,0xe2,0xd4,0x56,0x16,0x5e,0x21,0x24,0x89,0x3e,0xe8,0x8d,0xa9,0x2d,0x79,0xc9,0x5e,0x37,0xd1,0x87,0x77,0x42,0x8a,0x1c,0x60,0xa7,0xd4,0x87,0xbc,0x52};
    mont256_from_bytes(&ctx, multiplier, multiplier45);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product45, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier46[32] = {0x76,0xa1,0x1d,0x5a,0x38,0x88,0x88,0x90,0x81,0x3e,0x0f,0xc8,0x96,0xc0,0x17,0xfc,0x6b,0x6d,0x2f,0xb5,0xfb,0x13,0xb4,0x17,0x30,0x7e,0xc9,0x02,0x66,0x19,0x51,0x3d};
    std::uint8_t product46[32]    = {0xed,0x42,0x3a,0xb4,0x71,0x11,0x11,0x21,0x02,0x7c,0x1f,0x91,0x2d,0x80,0x2f,0xf8,0xd6,0xda,0x5f,0x6b,0xf6,0x27,0x68,0x2e,0x60,0xfd,0x92,0x04,0xcc,0x32,0xa2,0x7a};
    mont256_from_bytes(&ctx, multiplier, multiplier46);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product46, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier47[32] = {0x92,0xec,0xfc,0x0a,0xeb,0x93,0x8c,0xd8,0x0d,0x01,0x2a,0x30,0x5a,0x9e,0x7e,0x56,0xa9,0x4d,0x27,0x7d,0xd9,0x8f,0x47,0x9b,0x1c,0x42,0xf2,0xa0,0x19,0x27,0x35,0x7a};
    std::uint8_t product47[32]    = {0x25,0xd9,0xf8,0x16,0xd7,0x27,0x19,0xb0,0x1a,0x02,0x54,0x60,0xb5,0x3c,0xfc,0xad,0x52,0x9a,0x4e,0xfc,0xb3,0x1e,0x8f,0x35,0x38,0x85,0xe5,0x40,0x32,0x4e,0x6a,0xf5};
    mont256_from_bytes(&ctx, multiplier, multiplier47);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product47, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier48[32] = {0xf1,0x4c,0x89,0x2b,0xab,0x7d,0x52,0x59,0x3c,0x3a,0x3f,0x8d,0x60,0x91,0xc6,0xc4,0x6f,0x3d,0x61,0x9b,0x5b,0x3d,0xa1,0x79,0x4b,0x77,0xaa,0xfa,0x86,0xc4,0x25,0x65};
    std::uint8_t product48[32]    = {0xe2,0x99,0x12,0x58,0x56,0xfa,0xa4,0xb2,0x78,0x74,0x7f,0x1a,0xc1,0x23,0x8d,0x88,0xde,0x7a,0xc3,0x37,0xb6,0x7b,0x42,0xf1,0x96,0xef,0x55,0xf5,0x0d,0x88,0x4a,0xcb};
    mont256_from_bytes(&ctx, multiplier, multiplier48);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product48, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier49[32] = {0x17,0xde,0xfd,0x5c,0xe8,0xeb,0xdc,0x6c,0xfa,0xd4,0x11,0x19,0x5c,0xa1,0x5a,0x90,0xe8,0x02,0x0a,0x20,0x27,0x8b,0x44,0x8d,0x7a,0x0a,0xeb,0x5a,0xb6,0xa5,0x45,0x78};
    std::uint8_t product49[32]    = {0x2f,0xbd,0xfa,0xb9,0xd1,0xd7,0xb8,0xd9,0xf5,0xa8,0x22,0x32,0xb9,0x42,0xb5,0x21,0xd0,0x04,0x14,0x40,0x4f,0x16,0x89,0x1a,0xf4,0x15,0xd6,0xb5,0x6d,0x4a,0x8a,0xf0};
    mont256_from_bytes(&ctx, multiplier, multiplier49);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product49, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier50[32] = {0x55,0x44,0xb7,0x58,0xe5,0x86,0xa4,0xc8,0x1a,0x14,0x6c,0xa3,0xcf,0xd3,0x56,0x0b,0xb1,0x2f,0x13,0x7c,0xea,0x14,0xc1,0x1f,0x9e,0x27,0xff,0xca,0x2a,0x4c,0x99,0x4f};
    std::uint8_t product50[32]    = {0xaa,0x89,0x6e,0xb1,0xcb,0x0d,0x49,0x90,0x34,0x28,0xd9,0x47,0x9f,0xa6,0xac,0x17,0x62,0x5e,0x26,0xf9,0xd4,0x29,0x82,0x3f,0x3c,0x4f,0xff,0x94,0x54,0x99,0x32,0x9e};
    mont256_from_bytes(&ctx, multiplier, multiplier50);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product50, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier51[32] = {0xb3,0xe4,0x7d,0x4a,0x08,0x4d,0x33,0x87,0xf3,0x12,0x2b,0x2f,0xef,0xde,0x04,0xe1,0x2c,0x3c,0x58,0xaa,0xcd,0x88,0xcf,0x74,0x8f,0x90,0xb0,0x23,0xe9,0x0e,0x47,0x2d};
    std::uint8_t product51[32]    = {0x67,0xc8,0xfa,0x95,0x10,0x9a,0x67,0x0f,0xe6,0x24,0x56,0x5f,0xdf,0xbc,0x09,0xc2,0x58,0x78,0xb1,0x56,0x9b,0x11,0x9e,0xe8,0x1f,0x21,0x60,0x47,0xd2,0x1c,0x8e,0x5b};
    mont256_from_bytes(&ctx, multiplier, multiplier51);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product51, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier52[32] = {0x07,0x0f,0xd7,0x52,0x4c,0x6f,0x5f,0x7b,0x0d,0x73,0xa0,0x6e,0x8e,0xe9,0xf8,0xb2,0xe7,0xc2,0x5b,0x33,0x0a,0x8b,0xd6,0xa4,0xf1,0xd5,0xb8,0x97,0xe7,0x7d,0x2b,0x81};
    std::uint8_t product52[32]    = {0x0e,0x1f,0xae,0xa4,0x98,0xde,0xbe,0xf6,0x1a,0xe7,0x40,0xdd,0x1d,0xd3,0xf1,0x65,0xcf,0x84,0xb6,0x66,0x15,0x17,0xad,0x49,0xe3,0xab,0x71,0x2f,0xce,0xfa,0x57,0x02};
    mont256_from_bytes(&ctx, multiplier, multiplier52);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product52, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier53[32] = {0x01,0x78,0x71,0x4a,0xc3,0x99,0x8f,0x06,0x3a,0xfa,0x2c,0x59,0x1b,0x88,0x87,0xda,0x20,0x81,0xc9,0xb0,0x3c,0x1b,0xa3,0xcd,0xf2,0xf7,0xa3,0x80,0x06,0xd7,0x71,0x9c};
    std::uint8_t product53[32]    = {0x02,0xf0,0xe2,0x95,0x87,0x33,0x1e,0x0c,0x75,0xf4,0x58,0xb2,0x37,0x11,0x0f,0xb4,0x41,0x03,0x93,0x60,0x78,0x37,0x47,0x9b,0xe5,0xef,0x47,0x00,0x0d,0xae,0xe3,0x38};
    mont256_from_bytes(&ctx, multiplier, multiplier53);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product53, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier54[32] = {0xcd,0x1e,0x3f,0xab,0xb3,0x9a,0x58,0x07,0x1c,0x55,0x54,0x6e,0xa2,0xd7,0x83,0xf9,0xcd,0xff,0x93,0x87,0x79,0x7f,0x93,0x46,0xf5,0x39,0x1f,0x22,0xd6,0xb7,0x89,0xf7};
    std::uint8_t product54[32]    = {0x9a,0x3c,0x7f,0x58,0x67,0x34,0xb0,0x0e,0x38,0xaa,0xa8,0xdd,0x45,0xaf,0x07,0xf3,0x9b,0xff,0x27,0x0f,0xf2,0xff,0x26,0x8c,0xea,0x72,0x3e,0x45,0xad,0x6f,0x13,0xef};
    mont256_from_bytes(&ctx, multiplier, multiplier54);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product54, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier55[32] = {0xea,0x20,0x26,0x30,0x09,0xf7,0xd7,0x3b,0x26,0x6f,0x06,0xcc,0xcc,0xce,0xde,0xdb,0xe5,0x4b,0x6e,0x51,0x43,0x24,0xcf,0x99,0x40,0xa8,0x6d,0xbc,0x27,0xcd,0x3c,0x0f};
    std::uint8_t product55[32]    = {0xd4,0x40,0x4c,0x61,0x13,0xef,0xae,0x76,0x4c,0xde,0x0d,0x99,0x99,0x9d,0xbd,0xb7,0xca,0x96,0xdc,0xa3,0x86,0x49,0x9f,0x31,0x81,0x50,0xdb,0x78,0x4f,0x9a,0x78,0x1f};
    mont256_from_bytes(&ctx, multiplier, multiplier55);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product55, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier56[32] = {0xa1,0x84,0x62,0xfc,0x7a,0x02,0xec,0x51,0x5c,0xe7,0xad,0x58,0x15,0xdc,0x3e,0xfe,0xfb,0x7d,0x55,0xac,0x3b,0xcd,0x6b,0x50,0x41,0xd1,0x3c,0xd3,0x34,0x6d,0x86,0x8d};
    std::uint8_t product56[32]    = {0x43,0x08,0xc5,0xf9,0xf4,0x05,0xd8,0xa2,0xb9,0xcf,0x5a,0xb0,0x2b,0xb8,0x7d,0xfd,0xf6,0xfa,0xab,0x59,0x77,0x9a,0xd6,0x9f,0x83,0xa2,0x79,0xa6,0x68,0xdb,0x0d,0x1b};
    mont256_from_bytes(&ctx, multiplier, multiplier56);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product56, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier57[32] = {0x3e,0xec,0x7a,0xc1,0x63,0xcb,0xb7,0x36,0xe3,0x76,0x3d,0x56,0x7e,0x64,0x7c,0xa9,0x24,0x1c,0x6a,0xf2,0xe3,0xec,0xb6,0x9a,0x81,0x52,0x0b,0x7f,0xa4,0x05,0x9d,0x7d};
    std::uint8_t product57[32]    = {0x7d,0xd8,0xf5,0x82,0xc7,0x97,0x6e,0x6d,0xc6,0xec,0x7a,0xac,0xfc,0xc8,0xf9,0x52,0x48,0x38,0xd5,0xe5,0xc7,0xd9,0x6d,0x35,0x02,0xa4,0x16,0xff,0x48,0x0b,0x3a,0xfa};
    mont256_from_bytes(&ctx, multiplier, multiplier57);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product57, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier58[32] = {0x5b,0x8f,0x94,0xb5,0x5b,0xbe,0x5f,0xc4,0xe9,0xf3,0x48,0xe8,0x90,0x41,0x44,0xe8,0x00,0x49,0x67,0x83,0x58,0xd3,0x73,0xaa,0x7e,0x34,0xa9,0xcf,0xd7,0x44,0xbc,0x49};
    std::uint8_t product58[32]    = {0xb7,0x1f,0x29,0x6a,0xb7,0x7c,0xbf,0x89,0xd3,0xe6,0x91,0xd1,0x20,0x82,0x89,0xd0,0x00,0x92,0xcf,0x06,0xb1,0xa6,0xe7,0x54,0xfc,0x69,0x53,0x9f,0xae,0x89,0x78,0x92};
    mont256_from_bytes(&ctx, multiplier, multiplier58);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product58, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier59[32] = {0x7c,0xb9,0x85,0x5e,0xb4,0x15,0x37,0xd5,0x1b,0x11,0x37,0xaf,0x3f,0x3d,0xac,0x66,0xcb,0x1f,0x11,0x97,0x21,0x63,0x02,0x07,0x8f,0xb8,0xf6,0xa6,0x04,0xa9,0x04,0xe5};
    std::uint8_t product59[32]    = {0xf9,0x73,0x0a,0xbd,0x68,0x2a,0x6f,0xaa,0x36,0x22,0x6f,0x5e,0x7e,0x7b,0x58,0xcd,0x96,0x3e,0x23,0x2e,0x42,0xc6,0x04,0x0f,0x1f,0x71,0xed,0x4c,0x09,0x52,0x09,0xca};
    mont256_from_bytes(&ctx, multiplier, multiplier59);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product59, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier60[32] = {0x2f,0x54,0xde,0xa0,0x61,0x47,0xac,0x73,0x11,0xe0,0x53,0x8a,0x63,0xfd,0x97,0x2e,0x8b,0x5f,0x25,0xd3,0x8a,0x7c,0x9e,0xea,0xe2,0xec,0xc0,0xb4,0xb5,0x5f,0xc7,0x45};
    std::uint8_t product60[32]    = {0x5e,0xa9,0xbd,0x40,0xc2,0x8f,0x58,0xe6,0x23,0xc0,0xa7,0x14,0xc7,0xfb,0x2e,0x5d,0x16,0xbe,0x4b,0xa7,0x14,0xf9,0x3d,0xd5,0xc5,0xd9,0x81,0x69,0x6a,0xbf,0x8e,0x8a};
    mont256_from_bytes(&ctx, multiplier, multiplier60);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product60, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier61[32] = {0x48,0x62,0x44,0xa5,0x5e,0x2a,0x47,0xf9,0x57,0x80,0xe2,0x4b,0xdf,0xf1,0x50,0x7b,0xb6,0x75,0xaa,0xaa,0x33,0x79,0x14,0x07,0x3d,0x22,0x0b,0xe3,0xc4,0x60,0x32,0x5a};
    std::uint8_t product61[32]    = {0x90,0xc4,0x89,0x4a,0xbc,0x54,0x8f,0xf2,0xaf,0x01,0xc4,0x97,0xbf,0xe2,0xa0,0xf7,0x6c,0xeb,0x55,0x54,0x66,0xf2,0x28,0x0e,0x7a,0x44,0x17,0xc7,0x88,0xc0,0x64,0xb4};
    mont256_from_bytes(&ctx, multiplier, multiplier61);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product61, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier62[32] = {0x68,0x45,0x1f,0xfe,0x64,0x0b,0x6e,0xe8,0xe1,0x5d,0x5e,0xc3,0x14,0x7b,0x17,0x09,0x4d,0x4b,0xb8,0x07,0x95,0x5e,0xc6,0xb0,0xa2,0xaa,0xc4,0x55,0x82,0x14,0x7c,0x8a};
    std::uint8_t product62[32]    = {0xd0,0x8a,0x3f,0xfc,0xc8,0x16,0xdd,0xd1,0xc2,0xba,0xbd,0x86,0x28,0xf6,0x2e,0x12,0x9a,0x97,0x70,0x0f,0x2a,0xbd,0x8d,0x61,0x45,0x55,0x88,0xab,0x04,0x28,0xf9,0x14};
    mont256_from_bytes(&ctx, multiplier, multiplier62);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product62, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier63[32] = {0xe3,0x24,0xe3,0x7c,0x25,0x53,0xd0,0x4b,0x5f,0x55,0x32,0xe2,0x37,0xad,0xbd,0x90,0x1e,0xd2,0x7b,0x95,0x17,0x15,0xdd,0xa2,0x95,0xf5,0x93,0xa0,0xf5,0x78,0x9e,0xab};
    std::uint8_t product63[32]    = {0xc6,0x49,0xc6,0xf9,0x4a,0xa7,0xa0,0x96,0xbe,0xaa,0x65,0xc4,0x6f,0x5b,0x7b,0x20,0x3d,0xa4,0xf7,0x2b,0x2e,0x2b,0xbb,0x44,0x2b,0xeb,0x27,0x41,0xea,0xf1,0x3d,0x57};
    mont256_from_bytes(&ctx, multiplier, multiplier63);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product63, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier64[32] = {0xd1,0x9a,0x82,0xcc,0xdb,0x6d,0x68,0xbd,0x68,0x9d,0x6e,0x34,0xa6,0x53,0x24,0x6e,0x09,0x21,0x31,0xac,0x8d,0x78,0x3c,0xc0,0x58,0x40,0x1a,0x57,0xa0,0xf1,0x8a,0xfb};
    std::uint8_t product64[32]    = {0xa3,0x35,0x05,0x9a,0xb6,0xda,0xd1,0x7a,0xd1,0x3a,0xdc,0x69,0x4c,0xa6,0x48,0xdc,0x12,0x42,0x63,0x5a,0x1a,0xf0,0x79,0x7f,0xb0,0x80,0x34,0xaf,0x41,0xe3,0x15,0xf7};
    mont256_from_bytes(&ctx, multiplier, multiplier64);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product64, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier65[32] = {0x74,0x08,0x52,0xc6,0x7e,0xb9,0xf2,0x39,0x90,0x91,0xbe,0x08,0x64,0x4d,0x46,0x79,0xc6,0xf1,0xe5,0xfb,0x37,0xf6,0x78,0xa2,0x7f,0xd5,0xea,0x1b,0x70,0x59,0x74,0xda};
    std::uint8_t product65[32]    = {0xe8,0x10,0xa5,0x8c,0xfd,0x73,0xe4,0x73,0x21,0x23,0x7c,0x10,0xc8,0x9a,0x8c,0xf3,0x8d,0xe3,0xcb,0xf6,0x6f,0xec,0xf1,0x44,0xff,0xab,0xd4,0x36,0xe0,0xb2,0xe9,0xb4};
    mont256_from_bytes(&ctx, multiplier, multiplier65);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product65, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier66[32] = {0xe7,0xa6,0xfd,0x0d,0xda,0x3e,0x12,0xfe,0x98,0x64,0xd0,0x3b,0xfd,0x3b,0xb8,0xbc,0xb9,0x68,0xb0,0x6b,0x49,0x52,0xb2,0x9c,0xa3,0x4d,0x36,0x02,0x09,0x33,0xd5,0xd1};
    std::uint8_t product66[32]    = {0xcf,0x4d,0xfa,0x1c,0xb4,0x7c,0x25,0xfd,0x30,0xc9,0xa0,0x77,0xfa,0x77,0x71,0x79,0x72,0xd1,0x60,0xd7,0x92,0xa5,0x65,0x38,0x46,0x9a,0x6c,0x04,0x12,0x67,0xab,0xa3};
    mont256_from_bytes(&ctx, multiplier, multiplier66);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product66, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier67[32] = {0xc4,0x5b,0xce,0xe5,0xc3,0xb3,0x18,0x4f,0xc1,0x4f,0x2a,0xbd,0x6b,0x24,0xaa,0xb5,0x3c,0x09,0x47,0x5a,0xb7,0xb7,0x67,0x92,0x4c,0x2b,0xb8,0x9a,0xda,0x6a,0x42,0x1d};
    std::uint8_t product67[32]    = {0x88,0xb7,0x9d,0xcc,0x87,0x66,0x30,0x9f,0x82,0x9e,0x55,0x7a,0xd6,0x49,0x55,0x6a,0x78,0x12,0x8e,0xb6,0x6f,0x6e,0xcf,0x23,0x98,0x57,0x71,0x35,0xb4,0xd4,0x84,0x3b};
    mont256_from_bytes(&ctx, multiplier, multiplier67);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product67, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier68[32] = {0x67,0x67,0xdf,0x72,0xbe,0xeb,0x0f,0xc9,0x3e,0x94,0xce,0xad,0x2b,0xb1,0x05,0x21,0x7d,0xdf,0x66,0xd8,0xd8,0xf0,0xbc,0xf2,0xca,0x45,0xb2,0x2f,0x24,0xd4,0x12,0xec};
    std::uint8_t product68[32]    = {0xce,0xcf,0xbe,0xe5,0x7d,0xd6,0x1f,0x92,0x7d,0x29,0x9d,0x5a,0x57,0x62,0x0a,0x42,0xfb,0xbe,0xcd,0xb1,0xb1,0xe1,0x79,0xe5,0x94,0x8b,0x64,0x5e,0x49,0xa8,0x25,0xd8};
    mont256_from_bytes(&ctx, multiplier, multiplier68);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product68, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier69[32] = {0x16,0x53,0xdb,0x76,0x52,0xa5,0xbf,0xcc,0x4e,0x09,0xad,0xcd,0x4b,0x7a,0x32,0xed,0xc7,0x0b,0x1b,0xe0,0xc3,0xcf,0xae,0x2b,0x8d,0xe2,0x70,0x2f,0x80,0xe6,0x6d,0x42};
    std::uint8_t product69[32]    = {0x2c,0xa7,0xb6,0xec,0xa5,0x4b,0x7f,0x98,0x9c,0x13,0x5b,0x9a,0x96,0xf4,0x65,0xdb,0x8e,0x16,0x37,0xc1,0x87,0x9f,0x5c,0x57,0x1b,0xc4,0xe0,0x5f,0x01,0xcc,0xda,0x84};
    mont256_from_bytes(&ctx, multiplier, multiplier69);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product69, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier70[32] = {0x62,0x10,0x5e,0xec,0x6d,0x6e,0xfd,0x7e,0x63,0x37,0x91,0x25,0x6a,0xc2,0x03,0x91,0xdd,0x2e,0xd3,0xc6,0x9f,0xd3,0x12,0xa8,0xdd,0x6f,0x6c,0x0b,0x00,0x4b,0x82,0xc3};
    std::uint8_t product70[32]    = {0xc4,0x20,0xbd,0xd8,0xda,0xdd,0xfa,0xfc,0xc6,0x6f,0x22,0x4a,0xd5,0x84,0x07,0x23,0xba,0x5d,0xa7,0x8d,0x3f,0xa6,0x25,0x51,0xba,0xde,0xd8,0x16,0x00,0x97,0x05,0x86};
    mont256_from_bytes(&ctx, multiplier, multiplier70);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product70, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier71[32] = {0x0e,0xb2,0x21,0x34,0x42,0x0e,0xa4,0xe6,0x6c,0x3d,0xc5,0x86,0x9f,0x5d,0x59,0x0e,0x8f,0x69,0xac,0x27,0x5f,0x66,0xfb,0x5b,0x03,0x65,0x96,0x40,0x7f,0xca,0x79,0x14};
    std::uint8_t product71[32]    = {0x1d,0x64,0x42,0x68,0x84,0x1d,0x49,0xcc,0xd8,0x7b,0x8b,0x0d,0x3e,0xba,0xb2,0x1d,0x1e,0xd3,0x58,0x4e,0xbe,0xcd,0xf6,0xb6,0x06,0xcb,0x2c,0x80,0xff,0x94,0xf2,0x28};
    mont256_from_bytes(&ctx, multiplier, multiplier71);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product71, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier72[32] = {0x4a,0x13,0xf1,0x38,0xb5,0x58,0x5f,0x29,0x01,0x87,0x76,0xc4,0xdd,0xc4,0x8e,0x85,0x6e,0xe5,0x66,0x08,0x07,0x5f,0xea,0x7f,0xb6,0xc8,0x66,0x83,0xc4,0xe5,0x75,0x26};
    std::uint8_t product72[32]    = {0x94,0x27,0xe2,0x71,0x6a,0xb0,0xbe,0x52,0x03,0x0e,0xed,0x89,0xbb,0x89,0x1d,0x0a,0xdd,0xca,0xcc,0x10,0x0e,0xbf,0xd4,0xff,0x6d,0x90,0xcd,0x07,0x89,0xca,0xea,0x4c};
    mont256_from_bytes(&ctx, multiplier, multiplier72);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product72, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier73[32] = {0x30,0x74,0x44,0x06,0x39,0x85,0x85,0x48,0x7e,0x57,0x52,0x92,0x9c,0x18,0xc3,0x32,0xa5,0xfe,0x15,0x39,0x14,0xa0,0x96,0x3c,0x54,0xe0,0xfa,0x7d,0xb8,0x39,0xdf,0xbf};
    std::uint8_t product73[32]    = {0x60,0xe8,0x88,0x0c,0x73,0x0b,0x0a,0x90,0xfc,0xae,0xa5,0x25,0x38,0x31,0x86,0x65,0x4b,0xfc,0x2a,0x72,0x29,0x41,0x2c,0x78,0xa9,0xc1,0xf4,0xfb,0x70,0x73,0xbf,0x7e};
    mont256_from_bytes(&ctx, multiplier, multiplier73);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product73, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier74[32] = {0xa3,0x41,0x5c,0xc5,0xd4,0xf1,0x86,0xcd,0xb1,0xa9,0x75,0x1e,0x55,0x77,0xd8,0xd0,0x72,0x34,0xef,0xb5,0xec,0xef,0x66,0xa1,0x09,0x85,0x4b,0xed,0xa3,0xca,0xb9,0x32};
    std::uint8_t product74[32]    = {0x46,0x82,0xb9,0x8c,0xa9,0xe3,0x0d,0x9b,0x63,0x52,0xea,0x3c,0xaa,0xef,0xb1,0xa0,0xe4,0x69,0xdf,0x6c,0xd9,0xde,0xcd,0x41,0x13,0x0a,0x97,0xdb,0x47,0x95,0x72,0x65};
    mont256_from_bytes(&ctx, multiplier, multiplier74);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product74, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier75[32] = {0xf7,0xff,0xa7,0x5b,0x4f,0x4c,0x6c,0xae,0xbc,0x2f,0x3a,0x3c,0xc6,0xe3,0xd3,0xec,0x66,0x9c,0xb2,0x2a,0xed,0x25,0x4d,0x73,0x16,0xfc,0x89,0xee,0xbf,0xe6,0xa2,0xff};
    std::uint8_t product75[32]    = {0xef,0xff,0x4e,0xb7,0x9e,0x98,0xd9,0x5d,0x78,0x5e,0x74,0x79,0x8d,0xc7,0xa7,0xd8,0xcd,0x39,0x64,0x56,0xda,0x4a,0x9a,0xe5,0x2d,0xf9,0x13,0xdd,0x7f,0xcd,0x45,0xff};
    mont256_from_bytes(&ctx, multiplier, multiplier75);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product75, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier76[32] = {0x23,0xab,0x5b,0xa8,0x36,0x30,0x10,0x4f,0x0a,0x55,0x2b,0x62,0xdc,0x25,0xf3,0xf9,0x0f,0xfc,0x9c,0x8a,0x33,0xf6,0x33,0xea,0x4e,0xbb,0x6d,0xdb,0x26,0x12,0x42,0xeb};
    std::uint8_t product76[32]    = {0x47,0x56,0xb7,0x50,0x6c,0x60,0x20,0x9e,0x14,0xaa,0x56,0xc5,0xb8,0x4b,0xe7,0xf2,0x1f,0xf9,0x39,0x14,0x67,0xec,0x67,0xd4,0x9d,0x76,0xdb,0xb6,0x4c,0x24,0x85,0xd6};
    mont256_from_bytes(&ctx, multiplier, multiplier76);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product76, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier77[32] = {0x4b,0x0e,0x35,0x7e,0x7c,0x81,0x33,0xf6,0x2b,0xb2,0xa5,0x13,0xee,0xf9,0x98,0x60,0xce,0xd3,0x0a,0xf9,0xb5,0xc9,0x00,0x66,0x23,0xf2,0x9b,0x72,0xce,0xb1,0xef,0x67};
    std::uint8_t product77[32]    = {0x96,0x1c,0x6a,0xfc,0xf9,0x02,0x67,0xec,0x57,0x65,0x4a,0x27,0xdd,0xf3,0x30,0xc1,0x9d,0xa6,0x15,0xf3,0x6b,0x92,0x00,0xcc,0x47,0xe5,0x36,0xe5,0x9d,0x63,0xde,0xce};
    mont256_from_bytes(&ctx, multiplier, multiplier77);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product77, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier78[32] = {0xc1,0xdd,0xfa,0x10,0xa6,0x58,0x6b,0xb6,0xd3,0x7b,0x26,0xd2,0x37,0x3b,0x99,0xfc,0x57,0x17,0xae,0xd8,0x33,0x86,0x70,0xe5,0x31,0xe0,0x23,0xce,0x54,0x46,0x7e,0xd3};
    std::uint8_t product78[32]    = {0x83,0xbb,0xf4,0x22,0x4c,0xb0,0xd7,0x6d,0xa6,0xf6,0x4d,0xa4,0x6e,0x77,0x33,0xf8,0xae,0x2f,0x5d,0xb1,0x67,0x0c,0xe1,0xc9,0x63,0xc0,0x47,0x9c,0xa8,0x8c,0xfd,0xa7};
    mont256_from_bytes(&ctx, multiplier, multiplier78);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product78, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier79[32] = {0x52,0x7a,0x35,0xd8,0x4a,0x9c,0x4a,0x4c,0xc4,0xea,0xad,0x40,0xd9,0x69,0x5a,0xba,0xc6,0xce,0x2e,0x5d,0x28,0xc1,0x59,0x28,0x4f,0x26,0x02,0xf0,0x39,0xa3,0x5c,0xe8};
    std::uint8_t product79[32]    = {0xa4,0xf4,0x6b,0xb0,0x95,0x38,0x94,0x99,0x89,0xd5,0x5a,0x81,0xb2,0xd2,0xb5,0x75,0x8d,0x9c,0x5c,0xba,0x51,0x82,0xb2,0x50,0x9e,0x4c,0x05,0xe0,0x73,0x46,0xb9,0xd0};
    mont256_from_bytes(&ctx, multiplier, multiplier79);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product79, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier80[32] = {0x15,0x82,0x7d,0x24,0x83,0x78,0x27,0xef,0x05,0x36,0xa5,0xa2,0x68,0xaa,0x06,0x95,0x60,0xd4,0xe9,0xc8,0xb9,0x07,0xe4,0xcb,0x30,0x90,0xde,0xdb,0x8c,0x81,0x62,0x94};
    std::uint8_t product80[32]    = {0x2b,0x04,0xfa,0x49,0x06,0xf0,0x4f,0xde,0x0a,0x6d,0x4b,0x44,0xd1,0x54,0x0d,0x2a,0xc1,0xa9,0xd3,0x91,0x72,0x0f,0xc9,0x96,0x61,0x21,0xbd,0xb7,0x19,0x02,0xc5,0x28};
    mont256_from_bytes(&ctx, multiplier, multiplier80);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product80, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier81[32] = {0x70,0x97,0x0d,0x43,0xef,0x48,0x95,0x34,0xda,0x9e,0xac,0x75,0x92,0x9f,0xda,0x70,0xdc,0x15,0x5b,0x6e,0x9a,0xdd,0x41,0x20,0x65,0xe6,0x8a,0x51,0x5f,0x60,0x46,0xaa};
    std::uint8_t product81[32]    = {0xe1,0x2e,0x1a,0x87,0xde,0x91,0x2a,0x69,0xb5,0x3d,0x58,0xeb,0x25,0x3f,0xb4,0xe1,0xb8,0x2a,0xb6,0xdd,0x35,0xba,0x82,0x40,0xcb,0xcd,0x14,0xa2,0xbe,0xc0,0x8d,0x54};
    mont256_from_bytes(&ctx, multiplier, multiplier81);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product81, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier82[32] = {0xce,0x0b,0x0a,0xb5,0x0e,0x4d,0x71,0xbe,0x90,0x6c,0x31,0x52,0xa3,0xf3,0xf9,0xd1,0x8a,0x19,0x4b,0x83,0x20,0xc1,0x99,0x1a,0x2d,0x57,0x0f,0x08,0x4f,0x12,0x21,0x30};
    std::uint8_t product82[32]    = {0x9c,0x16,0x15,0x6b,0x1c,0x9a,0xe3,0x7d,0x20,0xd8,0x62,0xa5,0x47,0xe7,0xf3,0xa3,0x14,0x32,0x97,0x07,0x41,0x83,0x32,0x33,0x5a,0xae,0x1e,0x10,0x9e,0x24,0x42,0x61};
    mont256_from_bytes(&ctx, multiplier, multiplier82);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product82, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier83[32] = {0xd1,0xbc,0x99,0x73,0x9e,0x2d,0x6b,0x0d,0xee,0xae,0x2e,0x20,0xad,0xc1,0x29,0x7b,0x53,0x17,0x40,0x04,0xcb,0xfa,0x27,0x40,0x50,0x2d,0x29,0x54,0x12,0xb3,0xf0,0xa3};
    std::uint8_t product83[32]    = {0xa3,0x79,0x32,0xe8,0x3c,0x5a,0xd6,0x1b,0xdd,0x5c,0x5c,0x41,0x5b,0x82,0x52,0xf6,0xa6,0x2e,0x80,0x0a,0x97,0xf4,0x4e,0x7f,0xa0,0x5a,0x52,0xa8,0x25,0x67,0xe1,0x47};
    mont256_from_bytes(&ctx, multiplier, multiplier83);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product83, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier84[32] = {0x64,0x1c,0x95,0x81,0x8f,0x30,0x51,0xc8,0x03,0xe0,0xb0,0xdc,0x2e,0x69,0x68,0x6e,0x16,0x41,0xf2,0xca,0x27,0xed,0xc1,0x18,0x94,0xa4,0x3f,0xf4,0x1b,0x32,0x83,0xb3};
    std::uint8_t product84[32]    = {0xc8,0x39,0x2b,0x03,0x1e,0x60,0xa3,0x90,0x07,0xc1,0x61,0xb8,0x5c,0xd2,0xd0,0xdc,0x2c,0x83,0xe5,0x94,0x4f,0xdb,0x82,0x31,0x29,0x48,0x7f,0xe8,0x36,0x65,0x07,0x66};
    mont256_from_bytes(&ctx, multiplier, multiplier84);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product84, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier85[32] = {0x2d,0x6b,0x9d,0x00,0x66,0x33,0x54,0x10,0xaf,0x41,0x39,0x80,0x04,0xec,0xfc,0x20,0x51,0x86,0xf3,0x4f,0xc2,0x39,0xb6,0x84,0xef,0x4b,0x1c,0xb5,0x25,0x42,0x62,0x34};
    std::uint8_t product85[32]    = {0x5a,0xd7,0x3a,0x00,0xcc,0x66,0xa8,0x21,0x5e,0x82,0x73,0x00,0x09,0xd9,0xf8,0x40,0xa3,0x0d,0xe6,0x9f,0x84,0x73,0x6d,0x09,0xde,0x96,0x39,0x6a,0x4a,0x84,0xc4,0x68};
    mont256_from_bytes(&ctx, multiplier, multiplier85);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product85, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier86[32] = {0xbc,0xfd,0x6c,0x1d,0x6c,0xe1,0x22,0xb7,0xc6,0x81,0xa4,0x01,0x93,0x3b,0xb5,0x76,0x5f,0xe2,0xbc,0xc9,0xc0,0xd5,0x96,0x13,0x3d,0xb1,0x8f,0x83,0x37,0x6c,0x12,0xe0};
    std::uint8_t product86[32]    = {0x79,0xfa,0xd8,0x3b,0xd9,0xc2,0x45,0x6f,0x8d,0x03,0x48,0x03,0x26,0x77,0x6a,0xec,0xbf,0xc5,0x79,0x94,0x81,0xab,0x2c,0x25,0x7b,0x63,0x1f,0x06,0x6e,0xd8,0x25,0xc1};
    mont256_from_bytes(&ctx, multiplier, multiplier86);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product86, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier87[32] = {0x75,0x0c,0x47,0xcb,0xb6,0xe4,0x0c,0x5c,0xd5,0xe9,0x7d,0xa1,0xdd,0xbb,0xeb,0x9a,0xfa,0x2e,0xfb,0x46,0xe2,0xe8,0xde,0x9a,0x0a,0x5d,0xf8,0x10,0xfd,0x07,0x1a,0xc6};
    std::uint8_t product87[32]    = {0xea,0x18,0x8f,0x97,0x6d,0xc8,0x18,0xb9,0xab,0xd2,0xfb,0x43,0xbb,0x77,0xd7,0x35,0xf4,0x5d,0xf6,0x8d,0xc5,0xd1,0xbd,0x34,0x14,0xbb,0xf0,0x21,0xfa,0x0e,0x35,0x8c};
    mont256_from_bytes(&ctx, multiplier, multiplier87);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product87, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier88[32] = {0x3a,0xf8,0x4f,0x77,0x9d,0xaa,0x00,0xd7,0x02,0xcf,0xe8,0x1b,0x51,0x3e,0xb6,0xfc,0xd9,0xc4,0x31,0x7b,0x49,0x2f,0xf5,0x63,0xe1,0x81,0x54,0xc9,0xd5,0xdc,0xe0,0x13};
    std::uint8_t product88[32]    = {0x75,0xf0,0x9e,0xef,0x3b,0x54,0x01,0xae,0x05,0x9f,0xd0,0x36,0xa2,0x7d,0x6d,0xf9,0xb3,0x88,0x62,0xf6,0x92,0x5f,0xea,0xc7,0xc3,0x02,0xa9,0x93,0xab,0xb9,0xc0,0x26};
    mont256_from_bytes(&ctx, multiplier, multiplier88);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product88, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier89[32] = {0x78,0xc9,0x9e,0x0c,0x10,0x4e,0xdd,0xd7,0x8c,0x08,0x5f,0x38,0x51,0x34,0x2f,0xf3,0x63,0x35,0xf7,0x07,0x13,0x02,0xbc,0xa9,0xc9,0xc9,0x56,0xa5,0x85,0x96,0x9a,0x79};
    std::uint8_t product89[32]    = {0xf1,0x93,0x3c,0x18,0x20,0x9d,0xbb,0xaf,0x18,0x10,0xbe,0x70,0xa2,0x68,0x5f,0xe6,0xc6,0x6b,0xee,0x0e,0x26,0x05,0x79,0x53,0x93,0x92,0xad,0x4b,0x0b,0x2d,0x34,0xf2};
    mont256_from_bytes(&ctx, multiplier, multiplier89);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product89, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier90[32] = {0x72,0x08,0x21,0xf1,0xdc,0x95,0xf2,0x21,0xf4,0xcc,0x2e,0xc6,0xcc,0x5c,0x09,0x6e,0xbe,0x09,0x3d,0x64,0xe9,0x6f,0x52,0x9a,0xac,0x4e,0xbc,0x76,0xe6,0xce,0x33,0xc8};
    std::uint8_t product90[32]    = {0xe4,0x10,0x43,0xe3,0xb9,0x2b,0xe4,0x43,0xe9,0x98,0x5d,0x8d,0x98,0xb8,0x12,0xdd,0x7c,0x12,0x7a,0xc9,0xd2,0xde,0xa5,0x35,0x58,0x9d,0x78,0xed,0xcd,0x9c,0x67,0x90};
    mont256_from_bytes(&ctx, multiplier, multiplier90);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product90, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier91[32] = {0x99,0xf8,0xdd,0x45,0xd3,0x26,0x64,0x5e,0x6c,0x69,0x4d,0x7a,0x4f,0x05,0x6b,0x60,0x0d,0x8a,0x6a,0x7c,0x2f,0xec,0xe1,0xc3,0x82,0xe4,0x5d,0x45,0xb1,0x5c,0xcd,0xc7};
    std::uint8_t product91[32]    = {0x33,0xf1,0xba,0x8c,0xa6,0x4c,0xc8,0xbc,0xd8,0xd2,0x9a,0xf4,0x9e,0x0a,0xd6,0xc0,0x1b,0x14,0xd4,0xf9,0x5f,0xd9,0xc3,0x86,0x05,0xc8,0xba,0x8b,0x62,0xb9,0x9b,0x8f};
    mont256_from_bytes(&ctx, multiplier, multiplier91);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product91, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier92[32] = {0x94,0xf8,0x52,0xc9,0x0f,0x85,0x82,0x5a,0x8b,0xc3,0xb9,0x1f,0xbf,0xb4,0x05,0x9a,0x03,0x8b,0xd1,0xa0,0x57,0x86,0xf9,0x84,0x4c,0x17,0xb8,0xe1,0xf7,0xa7,0xaf,0xf7};
    std::uint8_t product92[32]    = {0x29,0xf0,0xa5,0x93,0x1f,0x0b,0x04,0xb5,0x17,0x87,0x72,0x3f,0x7f,0x68,0x0b,0x34,0x07,0x17,0xa3,0x41,0xaf,0x0d,0xf3,0x07,0x98,0x2f,0x71,0xc3,0xef,0x4f,0x5f,0xef};
    mont256_from_bytes(&ctx, multiplier, multiplier92);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product92, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier93[32] = {0x28,0x83,0x70,0xd5,0xad,0x0f,0x5d,0xe4,0xb4,0x6d,0x68,0x7f,0x2a,0x9a,0x70,0x72,0x78,0xcc,0x37,0xff,0x24,0x8e,0x8f,0x57,0x13,0xa0,0x61,0xcd,0xe1,0xa6,0xd5,0x7b};
    std::uint8_t product93[32]    = {0x51,0x06,0xe1,0xab,0x5a,0x1e,0xbb,0xc9,0x68,0xda,0xd0,0xfe,0x55,0x34,0xe0,0xe4,0xf1,0x98,0x6f,0xfe,0x49,0x1d,0x1e,0xae,0x27,0x40,0xc3,0x9b,0xc3,0x4d,0xaa,0xf6};
    mont256_from_bytes(&ctx, multiplier, multiplier93);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product93, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier94[32] = {0x25,0xda,0xbe,0xb2,0x18,0x8c,0x2c,0x61,0x8d,0x4a,0x51,0xc5,0x9b,0x0f,0xa2,0x4f,0xe6,0x93,0x21,0x47,0xd0,0x97,0xf1,0x61,0xf7,0xfb,0x0b,0x35,0xff,0xb8,0x89,0x8f};
    std::uint8_t product94[32]    = {0x4b,0xb5,0x7d,0x64,0x31,0x18,0x58,0xc3,0x1a,0x94,0xa3,0x8b,0x36,0x1f,0x44,0x9f,0xcd,0x26,0x42,0x8f,0xa1,0x2f,0xe2,0xc3,0xef,0xf6,0x16,0x6b,0xff,0x71,0x13,0x1e};
    mont256_from_bytes(&ctx, multiplier, multiplier94);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product94, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier95[32] = {0xec,0x2c,0x90,0x70,0x0f,0x2e,0x30,0xd2,0x99,0xaf,0x06,0x24,0x3d,0x37,0x7c,0x61,0xbd,0x18,0x0d,0x52,0x85,0x97,0xe8,0x33,0x05,0x92,0x87,0x32,0xa1,0x57,0x2b,0x38};
    std::uint8_t product95[32]    = {0xd8,0x59,0x20,0xe1,0x1e,0x5c,0x61,0xa5,0x33,0x5e,0x0c,0x48,0x7a,0x6e,0xf8,0xc3,0x7a,0x30,0x1a,0xa6,0x0b,0x2f,0xd0,0x65,0x0b,0x25,0x0e,0x65,0x42,0xae,0x56,0x71};
    mont256_from_bytes(&ctx, multiplier, multiplier95);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product95, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier96[32] = {0xeb,0x5c,0xf8,0x78,0x93,0x20,0x6a,0x6b,0x62,0x66,0x2f,0xff,0x95,0x55,0x7d,0x36,0xcf,0xf8,0x89,0x87,0xb9,0x96,0x13,0xcc,0xf0,0xcb,0x87,0x3a,0x0c,0xe4,0x30,0x97};
    std::uint8_t product96[32]    = {0xd6,0xb9,0xf0,0xf2,0x26,0x40,0xd4,0xd6,0xc4,0xcc,0x5f,0xff,0x2a,0xaa,0xfa,0x6d,0x9f,0xf1,0x13,0x10,0x73,0x2c,0x27,0x98,0xe1,0x97,0x0e,0x74,0x19,0xc8,0x61,0x2f};
    mont256_from_bytes(&ctx, multiplier, multiplier96);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product96, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier97[32] = {0x41,0x8c,0x57,0x4b,0x79,0x2a,0x9b,0x3a,0xbb,0x4e,0x78,0x61,0xd2,0x9c,0x09,0xee,0x0d,0x33,0xaf,0xff,0x6f,0x08,0x0a,0x77,0x54,0x62,0x71,0x16,0x8c,0x9e,0x1e,0xfd};
    std::uint8_t product97[32]    = {0x83,0x18,0xae,0x96,0xf2,0x55,0x36,0x75,0x76,0x9c,0xf0,0xc3,0xa5,0x38,0x13,0xdc,0x1a,0x67,0x5f,0xfe,0xde,0x10,0x14,0xee,0xa8,0xc4,0xe2,0x2d,0x19,0x3c,0x3d,0xfa};
    mont256_from_bytes(&ctx, multiplier, multiplier97);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product97, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier98[32] = {0x0b,0xe9,0xbe,0xba,0x7e,0x2a,0x11,0xf8,0x87,0x94,0x15,0x73,0xd6,0x9b,0xf6,0x10,0xc2,0xce,0x82,0xa0,0x37,0x88,0x17,0xd9,0x33,0xbb,0x6f,0x5a,0x1a,0x54,0x66,0x43};
    std::uint8_t product98[32]    = {0x17,0xd3,0x7d,0x74,0xfc,0x54,0x23,0xf1,0x0f,0x28,0x2a,0xe7,0xad,0x37,0xec,0x21,0x85,0x9d,0x05,0x40,0x6f,0x10,0x2f,0xb2,0x67,0x76,0xde,0xb4,0x34,0xa8,0xcc,0x86};
    mont256_from_bytes(&ctx, multiplier, multiplier98);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product98, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }

    std::uint8_t multiplier99[32] = {0x0d,0x73,0xb6,0x1c,0xcd,0x9f,0x8b,0xaf,0x9c,0x9c,0xa5,0x8d,0x94,0xef,0xfe,0x7d,0xaf,0x12,0x84,0x90,0x62,0xca,0xb6,0x10,0x25,0x8a,0x3a,0xb6,0xaf,0xa9,0x3e,0x16};
    std::uint8_t product99[32]    = {0x1a,0xe7,0x6c,0x39,0x9b,0x3f,0x17,0x5f,0x39,0x39,0x4b,0x1b,0x29,0xdf,0xfc,0xfb,0x5e,0x25,0x09,0x20,0xc5,0x95,0x6c,0x20,0x4b,0x14,0x75,0x6d,0x5f,0x52,0x7c,0x2c};
    mont256_from_bytes(&ctx, multiplier, multiplier99);
    mont256_dbl(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product99, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_dbl");
    }
}