#include <gmlib/number/internal/mont256_common.h>
#include <gmlib/number/internal/uint256_common.h>
#include <stdexcept>
#include <cstring>

using namespace number::internal::common;

static std::uint8_t  P_data[32]      = {0xff,0xff,0xff,0xfe,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff};
static std::uint8_t  P_SUB2_data[32] = {0xff,0xff,0xff,0xfe,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfd};
static std::uint8_t  R_data[32]      = {0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01};
static std::uint8_t  R_POW2_data[32] = {0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x02,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x03};
static std::uint32_t N_              = 1;

void test_mont256_common_add()
{
    uint256_t P, P_SUB2, R, R_POW2;
    uint256_from_bytes(P, P_data);
    uint256_from_bytes(P_SUB2, P_SUB2_data);
    uint256_from_bytes(R, R_data);
    uint256_from_bytes(R_POW2, R_POW2_data);

    Mont256CTX ctx;
    ctx.P = P, ctx.P_SUB2 = P_SUB2;
    ctx.R = R, ctx.R_POW2 = R_POW2;
    ctx.N_ = N_;

    mont256_t    augend, addend, sum;
    std::uint8_t sum_data[32];

    std::uint8_t augend0[32] = {0x76,0xfb,0xb2,0x9e,0x15,0xae,0xbc,0x0f,0x7e,0xf9,0xc0,0xd0,0x02,0x7e,0xe6,0xf3,0xd1,0x7b,0x8a,0xc7,0x5c,0xd0,0x21,0xa5,0x6a,0xaf,0x4a,0xef,0xf2,0x52,0xc0,0x30};
    std::uint8_t addend0[32] = {0x36,0x57,0xfb,0x35,0xc0,0x0c,0xa6,0xd8,0xfe,0x86,0xec,0x6e,0xd7,0x2b,0xda,0x9e,0xc2,0x90,0x06,0x1f,0x54,0xce,0xa7,0x6e,0x92,0xec,0x2d,0x9c,0x28,0x6f,0xa4,0x9a};
    std::uint8_t sum0[32]    = {0xad,0x53,0xad,0xd3,0xd5,0xbb,0x62,0xe8,0x7d,0x80,0xad,0x3e,0xd9,0xaa,0xc1,0x92,0x94,0x0b,0x90,0xe6,0xb1,0x9e,0xc9,0x13,0xfd,0x9b,0x78,0x8c,0x1a,0xc2,0x64,0xca};
    mont256_from_bytes(&ctx, augend, augend0);
    mont256_from_bytes(&ctx, addend, addend0);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum0, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend1[32] = {0x3f,0x3f,0x53,0x61,0xf6,0x7e,0xd0,0x8f,0xe3,0x16,0x59,0x58,0xaf,0x47,0x12,0xc8,0x2c,0x31,0x89,0xd9,0x38,0x17,0xf9,0xba,0x36,0xb4,0xb8,0x11,0xed,0x5a,0xbe,0xd1};
    std::uint8_t addend1[32] = {0x0c,0x85,0x30,0xe4,0xaa,0xdf,0x32,0x39,0xf2,0xc6,0x5f,0x23,0xfc,0x6a,0x09,0xb9,0x46,0x3c,0x70,0x7c,0x65,0xc0,0xd1,0xd5,0x4c,0x96,0x3f,0xb6,0x0f,0x0a,0xc6,0xff};
    std::uint8_t sum1[32]    = {0x4b,0xc4,0x84,0x46,0xa1,0x5e,0x02,0xc9,0xd5,0xdc,0xb8,0x7c,0xab,0xb1,0x1c,0x81,0x72,0x6d,0xfa,0x55,0x9d,0xd8,0xcb,0x8f,0x83,0x4a,0xf7,0xc7,0xfc,0x65,0x85,0xd0};
    mont256_from_bytes(&ctx, augend, augend1);
    mont256_from_bytes(&ctx, addend, addend1);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum1, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend2[32] = {0x8f,0x26,0xc7,0x07,0xe1,0x57,0x79,0xc4,0x84,0xaf,0x0a,0x51,0x07,0x20,0x6e,0x6a,0x88,0xde,0x4e,0xaa,0x0d,0x59,0x24,0xc5,0xb0,0xc0,0x76,0x48,0x63,0x19,0x6f,0x98};
    std::uint8_t addend2[32] = {0x0e,0x82,0x18,0xce,0xdd,0x77,0x81,0xa8,0xb2,0x0d,0x46,0x54,0x32,0xda,0xa0,0x29,0xb7,0xed,0x27,0x00,0x9d,0xa3,0x18,0xce,0x75,0x89,0xe4,0x2a,0xd8,0xc5,0x21,0x00};
    std::uint8_t sum2[32]    = {0x9d,0xa8,0xdf,0xd6,0xbe,0xce,0xfb,0x6d,0x36,0xbc,0x50,0xa5,0x39,0xfb,0x0e,0x94,0x40,0xcb,0x75,0xaa,0xaa,0xfc,0x3d,0x94,0x26,0x4a,0x5a,0x73,0x3b,0xde,0x90,0x98};
    mont256_from_bytes(&ctx, augend, augend2);
    mont256_from_bytes(&ctx, addend, addend2);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum2, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend3[32] = {0xb0,0x11,0x06,0x53,0x3a,0x93,0xc5,0x08,0x84,0x0d,0x5a,0xe8,0x29,0x8c,0x10,0x36,0x94,0xfe,0x44,0xa1,0x07,0x98,0xb3,0x1d,0x9f,0x83,0x7d,0x57,0x3f,0xa4,0x01,0x55};
    std::uint8_t addend3[32] = {0x13,0x7b,0xf3,0x2a,0x8b,0x42,0x3e,0x98,0x5e,0xc7,0x95,0x20,0x57,0x1f,0x27,0x56,0x99,0xe6,0x98,0x3c,0x0d,0xd5,0x22,0x97,0x93,0xe3,0xfa,0x63,0x23,0xc3,0xf4,0x03};
    std::uint8_t sum3[32]    = {0xc3,0x8c,0xf9,0x7d,0xc5,0xd6,0x03,0xa0,0xe2,0xd4,0xf0,0x08,0x80,0xab,0x37,0x8d,0x2e,0xe4,0xdc,0xdd,0x15,0x6d,0xd5,0xb5,0x33,0x67,0x77,0xba,0x63,0x67,0xf5,0x58};
    mont256_from_bytes(&ctx, augend, augend3);
    mont256_from_bytes(&ctx, addend, addend3);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum3, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend4[32] = {0x61,0xc2,0x44,0x89,0xe9,0xec,0x70,0x22,0x22,0x2f,0x04,0xed,0x06,0x55,0xee,0xbb,0x90,0x83,0xd3,0x64,0x12,0xe4,0x75,0x81,0xd7,0xd5,0x51,0x3e,0xfd,0xb2,0x3e,0x6b};
    std::uint8_t addend4[32] = {0xe8,0x71,0x5f,0xe9,0x38,0x77,0xfe,0x1a,0x41,0x88,0xa3,0x1d,0xa3,0x9b,0xf8,0x29,0xd5,0x80,0x83,0x5e,0x9d,0x4c,0xd2,0x15,0x1b,0x90,0x1b,0x97,0x2f,0x8c,0x70,0xcf};
    std::uint8_t sum4[32]    = {0x4a,0x33,0xa4,0x74,0x22,0x64,0x6e,0x3c,0x63,0xb7,0xa8,0x0a,0xa9,0xf1,0xe6,0xe5,0x66,0x04,0x56,0xc3,0xb0,0x31,0x47,0x95,0xf3,0x65,0x6c,0xd6,0x2d,0x3e,0xaf,0x3b};
    mont256_from_bytes(&ctx, augend, augend4);
    mont256_from_bytes(&ctx, addend, addend4);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum4, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend5[32] = {0x42,0xd8,0xd4,0x0c,0xe5,0xb9,0x7e,0xff,0x64,0x42,0xa1,0x30,0xf4,0x94,0xcc,0xf9,0x1e,0xe7,0x84,0xe1,0x15,0x22,0x89,0x9c,0x63,0x8c,0xf4,0xb2,0x3d,0x60,0x32,0x7b};
    std::uint8_t addend5[32] = {0xd9,0x36,0x05,0x72,0xf8,0x42,0x2b,0x4b,0x96,0xb5,0x3f,0xab,0xda,0x8b,0x51,0xcb,0xe9,0x3f,0x19,0x81,0x21,0x17,0x84,0x79,0x0a,0x4d,0x1f,0xc3,0xd5,0x00,0x01,0xf5};
    std::uint8_t sum5[32]    = {0x1c,0x0e,0xd9,0x80,0xdd,0xfb,0xaa,0x4a,0xfa,0xf7,0xe0,0xdc,0xcf,0x20,0x1e,0xc5,0x08,0x26,0x9e,0x63,0x36,0x3a,0x0e,0x14,0x6d,0xda,0x14,0x76,0x12,0x60,0x34,0x71};
    mont256_from_bytes(&ctx, augend, augend5);
    mont256_from_bytes(&ctx, addend, addend5);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum5, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend6[32] = {0xf9,0x64,0xd8,0xe4,0xd3,0xce,0x71,0x5a,0x94,0x14,0x7c,0xe5,0xd4,0xda,0xa5,0xa3,0x86,0x74,0xb4,0x5b,0x76,0xe7,0x33,0x9e,0x6a,0x88,0x45,0x76,0xa7,0xc9,0xf3,0xe5};
    std::uint8_t addend6[32] = {0x3e,0x64,0xaa,0x3f,0x28,0x39,0x07,0x6c,0xad,0xb8,0x00,0x8a,0x0d,0xdd,0x01,0xb9,0x79,0xa5,0x7f,0x28,0x61,0x5d,0x91,0xf9,0x67,0x42,0xd4,0xb1,0x6f,0x5b,0xbf,0x4a};
    std::uint8_t sum6[32]    = {0x37,0xc9,0x83,0x24,0xfc,0x07,0x78,0xc7,0x41,0xcc,0x7d,0x6f,0xe2,0xb7,0xa7,0x5d,0x00,0x1a,0x33,0x84,0xd8,0x44,0xc5,0x96,0xd1,0xcb,0x1a,0x28,0x17,0x25,0xb3,0x30};
    mont256_from_bytes(&ctx, augend, augend6);
    mont256_from_bytes(&ctx, addend, addend6);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum6, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend7[32] = {0x7e,0xb5,0x7e,0x50,0x4a,0x42,0xbe,0x93,0xc5,0xb3,0x8b,0xae,0x60,0x9c,0xa4,0x6b,0xfc,0x53,0xfa,0xda,0x97,0xa3,0x42,0x45,0x3c,0x79,0xce,0xd5,0xb5,0xbc,0x25,0x77};
    std::uint8_t addend7[32] = {0x58,0x31,0xbc,0x9a,0x04,0x56,0xfa,0x44,0xed,0x4e,0x7c,0x0f,0x3d,0x57,0x76,0xd0,0xb3,0xa3,0x7e,0x26,0x65,0x16,0x43,0x47,0x17,0x88,0x7b,0xe8,0xe0,0x6b,0xce,0xc9};
    std::uint8_t sum7[32]    = {0xd6,0xe7,0x3a,0xea,0x4e,0x99,0xb8,0xd8,0xb3,0x02,0x07,0xbd,0x9d,0xf4,0x1b,0x3c,0xaf,0xf7,0x79,0x00,0xfc,0xb9,0x85,0x8c,0x54,0x02,0x4a,0xbe,0x96,0x27,0xf4,0x40};
    mont256_from_bytes(&ctx, augend, augend7);
    mont256_from_bytes(&ctx, addend, addend7);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum7, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend8[32] = {0xdd,0xe3,0x5e,0x68,0x6b,0x33,0x0a,0xa4,0xfa,0x21,0x61,0x6f,0xb8,0xcb,0x4b,0x4d,0x42,0x73,0xd1,0x3d,0x73,0xdb,0x16,0xc5,0x99,0xea,0x83,0x3b,0xd1,0x10,0x44,0x73};
    std::uint8_t addend8[32] = {0x2b,0xf6,0x33,0x89,0x0a,0xe4,0x7b,0xf8,0x55,0xa9,0x6d,0xaf,0xe5,0xc2,0xae,0x22,0xf4,0x6a,0xec,0x4d,0xb3,0x2b,0xe9,0x9f,0x9f,0x08,0x9b,0xde,0xae,0x7f,0x9a,0x34};
    std::uint8_t sum8[32]    = {0x09,0xd9,0x91,0xf2,0x76,0x17,0x86,0x9d,0x4f,0xca,0xcf,0x1f,0x9e,0x8d,0xf9,0x70,0x36,0xde,0xbd,0x8c,0x27,0x07,0x00,0x64,0x38,0xf3,0x1f,0x1a,0x7f,0x8f,0xde,0xa8};
    mont256_from_bytes(&ctx, augend, augend8);
    mont256_from_bytes(&ctx, addend, addend8);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum8, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend9[32] = {0xe4,0x8b,0xe5,0x55,0x44,0x43,0x70,0x23,0x68,0xa7,0xf4,0xe2,0x3b,0x76,0x27,0xd3,0x46,0x5d,0x11,0xd4,0x72,0x1b,0x0d,0xe9,0xdc,0x36,0xb1,0x7b,0x54,0x83,0xd7,0xed};
    std::uint8_t addend9[32] = {0x86,0x44,0x29,0x01,0xa2,0xb6,0x39,0xe3,0x7d,0xa5,0xc7,0x52,0x3f,0xe1,0x55,0xe2,0x8e,0x29,0xee,0xa6,0x36,0x53,0xd8,0x41,0x11,0xd3,0xef,0xbd,0x2c,0x80,0x04,0xa0};
    std::uint8_t sum9[32]    = {0x6a,0xd0,0x0e,0x57,0xe6,0xf9,0xaa,0x06,0xe6,0x4d,0xbc,0x34,0x7b,0x57,0x7d,0xb5,0xd4,0x87,0x00,0x7b,0xa8,0x6e,0xe6,0x29,0xee,0x0a,0xa1,0x38,0x81,0x03,0xdc,0x8e};
    mont256_from_bytes(&ctx, augend, augend9);
    mont256_from_bytes(&ctx, addend, addend9);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum9, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend10[32] = {0xdc,0xff,0x9b,0x0e,0x62,0x28,0xa5,0x2b,0xbd,0xcf,0x6f,0xb2,0x98,0x1a,0xa6,0x53,0x60,0x50,0x13,0xa8,0x93,0x8e,0x7e,0x07,0x10,0xb5,0x47,0x65,0x3d,0x4f,0x8a,0x76};
    std::uint8_t addend10[32] = {0xa2,0x3b,0x4b,0x65,0x99,0xe9,0xde,0x42,0x91,0xa8,0xb1,0xe1,0xc9,0xd8,0xf6,0x71,0x0d,0x9d,0xeb,0xec,0x86,0x92,0xd6,0x28,0xe3,0x97,0x4d,0x6c,0x20,0xc2,0x52,0x4f};
    std::uint8_t sum10[32]    = {0x7f,0x3a,0xe6,0x74,0xfc,0x12,0x83,0x6e,0x4f,0x78,0x21,0x94,0x61,0xf3,0x9c,0xc4,0x6d,0xed,0xff,0x96,0x1a,0x21,0x54,0x2e,0xf4,0x4c,0x94,0xd1,0x5e,0x11,0xdc,0xc6};
    mont256_from_bytes(&ctx, augend, augend10);
    mont256_from_bytes(&ctx, addend, addend10);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum10, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend11[32] = {0x18,0xe4,0x32,0x4e,0x85,0xce,0x81,0xee,0x36,0x9a,0x81,0xa5,0x9a,0xc0,0x10,0x97,0xeb,0xe2,0x38,0xe0,0x0a,0xea,0xd5,0x7f,0x49,0xc4,0xec,0x47,0xad,0x14,0x8c,0xfd};
    std::uint8_t addend11[32] = {0xc4,0x07,0x96,0x0f,0x82,0xd2,0xe6,0x56,0x4e,0xbf,0x3d,0x5f,0xfe,0xec,0x8d,0x0b,0x8b,0xb7,0x79,0xe4,0xc9,0x00,0x5a,0x92,0x30,0x21,0x4d,0x58,0x66,0x86,0x88,0x6e};
    std::uint8_t sum11[32]    = {0xdc,0xeb,0xc8,0x5e,0x08,0xa1,0x68,0x44,0x85,0x59,0xbf,0x05,0x99,0xac,0x9d,0xa3,0x77,0x99,0xb2,0xc4,0xd3,0xeb,0x30,0x11,0x79,0xe6,0x39,0xa0,0x13,0x9b,0x15,0x6b};
    mont256_from_bytes(&ctx, augend, augend11);
    mont256_from_bytes(&ctx, addend, addend11);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum11, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend12[32] = {0x2a,0x45,0x15,0x12,0x0f,0x26,0xb9,0x05,0xa9,0xdb,0x5d,0xf3,0xdf,0x18,0x5f,0xf0,0x7a,0x63,0x7b,0x74,0x79,0x30,0xf2,0x75,0xe5,0x03,0xf4,0xd0,0x7a,0x83,0x1b,0x28};
    std::uint8_t addend12[32] = {0x70,0xd4,0x9f,0xed,0xc2,0xa7,0x70,0x1a,0x80,0x81,0xd9,0xe6,0xe3,0x67,0xf4,0xe2,0xd6,0xae,0x1a,0x2d,0x7d,0x7c,0x8d,0x3a,0x54,0x96,0x9c,0xed,0xd1,0x97,0xf3,0x06};
    std::uint8_t sum12[32]    = {0x9b,0x19,0xb4,0xff,0xd1,0xce,0x29,0x20,0x2a,0x5d,0x37,0xda,0xc2,0x80,0x54,0xd3,0x51,0x11,0x95,0xa1,0xf6,0xad,0x7f,0xb0,0x39,0x9a,0x91,0xbe,0x4c,0x1b,0x0e,0x2e};
    mont256_from_bytes(&ctx, augend, augend12);
    mont256_from_bytes(&ctx, addend, addend12);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum12, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend13[32] = {0x4b,0xab,0x1b,0xd8,0x7a,0x95,0x56,0x8e,0xa9,0x14,0xa7,0xe0,0x28,0x41,0x2b,0x9f,0x1e,0x96,0x43,0x20,0x96,0x4e,0xbe,0x00,0xbe,0xb3,0x2b,0x65,0x4e,0xce,0x6f,0x5d};
    std::uint8_t addend13[32] = {0x2e,0x6c,0x82,0x28,0x24,0xc0,0x37,0x76,0x9a,0x7e,0xa3,0x62,0x7f,0x95,0xc8,0x66,0x03,0x8a,0xc5,0xc3,0xb9,0xa9,0x7a,0x4a,0xee,0x6b,0x9c,0xc9,0x6f,0x8b,0xad,0xf3};
    std::uint8_t sum13[32]    = {0x7a,0x17,0x9e,0x00,0x9f,0x55,0x8e,0x05,0x43,0x93,0x4b,0x42,0xa7,0xd6,0xf4,0x05,0x22,0x21,0x08,0xe4,0x4f,0xf8,0x38,0x4b,0xad,0x1e,0xc8,0x2e,0xbe,0x5a,0x1d,0x50};
    mont256_from_bytes(&ctx, augend, augend13);
    mont256_from_bytes(&ctx, addend, addend13);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum13, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend14[32] = {0x9e,0xd3,0x9e,0x4e,0xb3,0xe3,0x46,0x43,0x03,0xc8,0x99,0x8e,0xde,0x67,0x4b,0xcc,0x09,0x00,0x60,0x68,0x85,0xfe,0x76,0xb2,0xb1,0xe8,0x3a,0x8a,0x00,0x36,0x81,0xcd};
    std::uint8_t addend14[32] = {0x95,0x0d,0x18,0x8c,0xc5,0x92,0xb6,0x15,0xb0,0x92,0x68,0xba,0x72,0x21,0x8f,0x31,0xce,0xeb,0xb0,0x1b,0xdc,0x94,0xb7,0x0f,0x27,0x4d,0x04,0xbc,0xe6,0xdf,0x39,0x78};
    std::uint8_t sum14[32]    = {0x33,0xe0,0xb6,0xdc,0x79,0x75,0xfc,0x58,0xb4,0x5b,0x02,0x49,0x50,0x88,0xda,0xfd,0xd7,0xec,0x10,0x85,0x62,0x93,0x2d,0xc0,0xd9,0x35,0x3f,0x46,0xe7,0x15,0xbb,0x46};
    mont256_from_bytes(&ctx, augend, augend14);
    mont256_from_bytes(&ctx, addend, addend14);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum14, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend15[32] = {0x3d,0xc2,0xcb,0xc0,0x2c,0xd2,0xc0,0xf7,0x7a,0x89,0x57,0x07,0xb7,0x01,0x23,0x74,0x6d,0xe9,0x32,0xf4,0x14,0xab,0xcf,0xcc,0x48,0x88,0xfa,0xe6,0x7e,0xc2,0x5c,0x8f};
    std::uint8_t addend15[32] = {0x22,0x4b,0xbd,0x05,0xb5,0x84,0x61,0x23,0x69,0xae,0xf9,0xc3,0xc7,0x15,0x93,0x55,0x36,0x67,0x92,0x06,0x1f,0xa9,0x0c,0x98,0xfb,0x28,0x5f,0x7a,0x47,0x4d,0x87,0x8c};
    std::uint8_t sum15[32]    = {0x60,0x0e,0x88,0xc5,0xe2,0x57,0x22,0x1a,0xe4,0x38,0x50,0xcb,0x7e,0x16,0xb6,0xc9,0xa4,0x50,0xc4,0xfa,0x34,0x54,0xdc,0x65,0x43,0xb1,0x5a,0x60,0xc6,0x0f,0xe4,0x1b};
    mont256_from_bytes(&ctx, augend, augend15);
    mont256_from_bytes(&ctx, addend, addend15);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum15, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend16[32] = {0x19,0xff,0x4b,0xa7,0x9e,0xff,0x68,0xbe,0x04,0xa9,0x12,0xb1,0x52,0xa3,0xd2,0x60,0x17,0x28,0x45,0x98,0x66,0x51,0xfa,0x53,0x2a,0x25,0x02,0xd5,0x0e,0x7f,0x10,0x32};
    std::uint8_t addend16[32] = {0xc0,0xa9,0xc9,0x63,0x58,0x1c,0xb0,0xc6,0x58,0xed,0x49,0x5e,0x1b,0x82,0xfe,0x40,0xc2,0x8b,0x9e,0x2a,0x29,0xbe,0x26,0x7d,0xd2,0xc9,0x14,0x90,0xb1,0xca,0x39,0xf7};
    std::uint8_t sum16[32]    = {0xda,0xa9,0x15,0x0a,0xf7,0x1c,0x19,0x84,0x5d,0x96,0x5c,0x0f,0x6e,0x26,0xd0,0xa0,0xd9,0xb3,0xe3,0xc2,0x90,0x10,0x20,0xd0,0xfc,0xee,0x17,0x65,0xc0,0x49,0x4a,0x29};
    mont256_from_bytes(&ctx, augend, augend16);
    mont256_from_bytes(&ctx, addend, addend16);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum16, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend17[32] = {0x8f,0x3f,0x25,0xaa,0xe0,0xb1,0xd3,0x1a,0xbc,0x93,0x65,0x90,0x16,0xe5,0x76,0x59,0xf4,0xa3,0xd9,0xcf,0xae,0x2f,0x23,0x25,0x0a,0x58,0x1e,0x92,0x9e,0x3e,0x7f,0xa7};
    std::uint8_t addend17[32] = {0x12,0xe1,0x71,0xde,0x5e,0x05,0x71,0x5e,0x30,0x94,0x0c,0xf9,0xe5,0xe7,0x94,0xde,0xb3,0x64,0x14,0xf1,0x49,0x6b,0x4f,0x7f,0x2f,0xba,0xe1,0xe9,0x49,0x07,0x02,0x17};
    std::uint8_t sum17[32]    = {0xa2,0x20,0x97,0x89,0x3e,0xb7,0x44,0x78,0xed,0x27,0x72,0x89,0xfc,0xcd,0x0b,0x38,0xa8,0x07,0xee,0xc0,0xf7,0x9a,0x72,0xa4,0x3a,0x13,0x00,0x7b,0xe7,0x45,0x81,0xbe};
    mont256_from_bytes(&ctx, augend, augend17);
    mont256_from_bytes(&ctx, addend, addend17);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum17, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend18[32] = {0xc8,0xb0,0xd5,0xfe,0x01,0x5f,0xb7,0x1c,0x16,0xde,0x6b,0x41,0xf1,0xe5,0x91,0xa7,0xa9,0xb2,0x4d,0xd9,0x47,0xf3,0x94,0xec,0xb0,0xc6,0xce,0xa6,0xef,0x53,0xd8,0xcf};
    std::uint8_t addend18[32] = {0xea,0xb8,0xb9,0xa0,0xcb,0x78,0x2a,0xb2,0x44,0x94,0x85,0xe5,0x80,0x69,0xa3,0x19,0x70,0x1b,0x88,0xfe,0x08,0xe8,0x39,0xa2,0x92,0x40,0x8d,0x97,0xc5,0x33,0x5d,0x60};
    std::uint8_t sum18[32]    = {0xb3,0x69,0x8f,0x9f,0xcc,0xd7,0xe1,0xce,0x5b,0x72,0xf1,0x27,0x72,0x4f,0x34,0xc1,0x19,0xcd,0xd6,0xd8,0x50,0xdb,0xce,0x8e,0x43,0x07,0x5c,0x3e,0xb4,0x87,0x36,0x30};
    mont256_from_bytes(&ctx, augend, augend18);
    mont256_from_bytes(&ctx, addend, addend18);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum18, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend19[32] = {0x45,0x26,0xf9,0x94,0x45,0x00,0xe4,0x7f,0xb6,0xa2,0xcb,0x51,0x04,0x0c,0xd0,0x59,0xb3,0x87,0x14,0x55,0xaa,0xc8,0xa7,0x91,0x11,0xf3,0x9b,0x6a,0xaf,0xaf,0x8c,0x10};
    std::uint8_t addend19[32] = {0x3b,0x99,0xa1,0xba,0xe1,0xdf,0x81,0x74,0x70,0x0e,0xab,0xdc,0xbd,0x68,0x9e,0x98,0xa1,0xb2,0x03,0x46,0x4d,0x19,0xf6,0x01,0x1d,0xd4,0x20,0x3f,0x4f,0x84,0x5a,0x88};
    std::uint8_t sum19[32]    = {0x80,0xc0,0x9b,0x4f,0x26,0xe0,0x65,0xf4,0x26,0xb1,0x77,0x2d,0xc1,0x75,0x6e,0xf2,0x55,0x39,0x17,0x9b,0xf7,0xe2,0x9d,0x92,0x2f,0xc7,0xbb,0xa9,0xff,0x33,0xe6,0x98};
    mont256_from_bytes(&ctx, augend, augend19);
    mont256_from_bytes(&ctx, addend, addend19);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum19, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend20[32] = {0x52,0x83,0x06,0x4f,0x7b,0xb3,0xa9,0xa0,0xbf,0xfb,0xe7,0x0c,0x43,0x3c,0x11,0x66,0xea,0xd6,0x67,0xbb,0x51,0xbf,0xd3,0x88,0x30,0x11,0xfc,0x93,0xa0,0x83,0x70,0xed};
    std::uint8_t addend20[32] = {0xe9,0x0b,0x2c,0xb0,0x27,0xd2,0x1a,0xd7,0xc3,0xac,0x83,0x15,0xaf,0x83,0xee,0xf0,0xd8,0xf8,0x46,0x84,0x2f,0xfe,0x97,0xe4,0x01,0x9c,0x62,0xb8,0xb2,0x33,0xba,0xc0};
    std::uint8_t sum20[32]    = {0x3b,0x8e,0x33,0x00,0xa3,0x85,0xc4,0x78,0x83,0xa8,0x6a,0x21,0xf2,0xc0,0x00,0x57,0xc3,0xce,0xae,0x40,0x81,0xbe,0x6b,0x6b,0x31,0xae,0x5f,0x4c,0x52,0xb7,0x2b,0xae};
    mont256_from_bytes(&ctx, augend, augend20);
    mont256_from_bytes(&ctx, addend, addend20);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum20, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend21[32] = {0x8f,0xc7,0xd7,0xea,0x5d,0x9f,0xea,0x90,0x68,0xa4,0x65,0x0a,0xec,0xad,0x36,0x3f,0x75,0x35,0x19,0xd3,0xec,0x0c,0xf1,0x52,0x0b,0x76,0x0e,0x77,0x3a,0x40,0x0d,0xb6};
    std::uint8_t addend21[32] = {0x29,0x18,0xae,0x4e,0xfe,0x96,0xeb,0x4d,0x4a,0xac,0x54,0xf4,0x43,0x32,0x51,0x31,0x52,0xbf,0xac,0x66,0xd9,0x9a,0xdc,0x2d,0x99,0x0a,0xef,0xa3,0x4b,0x2d,0xea,0x64};
    std::uint8_t sum21[32]    = {0xb8,0xe0,0x86,0x39,0x5c,0x36,0xd5,0xdd,0xb3,0x50,0xb9,0xff,0x2f,0xdf,0x87,0x70,0xc7,0xf4,0xc6,0x3a,0xc5,0xa7,0xcd,0x7f,0xa4,0x80,0xfe,0x1a,0x85,0x6d,0xf8,0x1a};
    mont256_from_bytes(&ctx, augend, augend21);
    mont256_from_bytes(&ctx, addend, addend21);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum21, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend22[32] = {0x11,0x42,0x5b,0x9b,0x54,0x72,0x02,0xc8,0xf4,0xfe,0x35,0xfa,0xdf,0xac,0x66,0xcf,0xa7,0x7c,0x24,0x6a,0x81,0x8b,0x94,0x5d,0x85,0x44,0x7e,0x4d,0x9f,0xb6,0xbf,0xd3};
    std::uint8_t addend22[32] = {0x4c,0xcd,0x6f,0xa2,0xe8,0x4e,0x9a,0xc6,0x95,0xb7,0xc1,0xc8,0x73,0x07,0x4a,0x06,0xd0,0x63,0xac,0x53,0x7f,0x47,0x05,0x06,0x7c,0x8c,0x6e,0x8e,0x4b,0xa4,0x1e,0x78};
    std::uint8_t sum22[32]    = {0x5e,0x0f,0xcb,0x3e,0x3c,0xc0,0x9d,0x8f,0x8a,0xb5,0xf7,0xc3,0x52,0xb3,0xb0,0xd6,0x77,0xdf,0xd0,0xbe,0x00,0xd2,0x99,0x64,0x01,0xd0,0xec,0xdb,0xeb,0x5a,0xde,0x4b};
    mont256_from_bytes(&ctx, augend, augend22);
    mont256_from_bytes(&ctx, addend, addend22);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum22, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend23[32] = {0x4a,0x57,0xdb,0xcd,0x42,0x59,0x19,0x6a,0x3b,0xe2,0xa3,0x0e,0x6f,0xba,0x3f,0xf2,0xf2,0x43,0x28,0x1e,0xcd,0x37,0x1f,0xef,0xd8,0x69,0xf4,0x76,0x01,0x7a,0xe3,0x37};
    std::uint8_t addend23[32] = {0xa5,0xbe,0xdb,0xb3,0x27,0xf0,0xb3,0x15,0xa4,0xe8,0xde,0x8d,0xf0,0x69,0xd8,0xe2,0x0c,0x10,0x7a,0x71,0xf3,0x40,0xaa,0x96,0xfc,0xae,0xad,0x00,0x55,0x82,0x18,0x6a};
    std::uint8_t sum23[32]    = {0xf0,0x16,0xb7,0x80,0x6a,0x49,0xcc,0x7f,0xe0,0xcb,0x81,0x9c,0x60,0x24,0x18,0xd4,0xfe,0x53,0xa2,0x90,0xc0,0x77,0xca,0x86,0xd5,0x18,0xa1,0x76,0x56,0xfc,0xfb,0xa1};
    mont256_from_bytes(&ctx, augend, augend23);
    mont256_from_bytes(&ctx, addend, addend23);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum23, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend24[32] = {0x14,0x59,0xec,0xaa,0x84,0xc3,0xa8,0x81,0x7e,0x25,0xe1,0xff,0x58,0xd1,0x7a,0xa6,0x1a,0xb1,0x25,0x20,0xbe,0x52,0xfa,0x6e,0x6d,0x36,0xa4,0xed,0xb1,0xbf,0x54,0x66};
    std::uint8_t addend24[32] = {0xbd,0x4b,0x28,0x8d,0x65,0x24,0x40,0xbc,0xb6,0xb8,0x06,0x89,0x8d,0x31,0xe6,0xab,0xb2,0xc9,0xd8,0x2b,0x87,0x75,0x31,0x49,0x84,0x6a,0x6d,0xbd,0xdf,0xd7,0x0a,0xac};
    std::uint8_t sum24[32]    = {0xd1,0xa5,0x15,0x37,0xe9,0xe7,0xe9,0x3e,0x34,0xdd,0xe8,0x88,0xe6,0x03,0x61,0x51,0xcd,0x7a,0xfd,0x4c,0x45,0xc8,0x2b,0xb7,0xf1,0xa1,0x12,0xab,0x91,0x96,0x5f,0x12};
    mont256_from_bytes(&ctx, augend, augend24);
    mont256_from_bytes(&ctx, addend, addend24);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum24, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend25[32] = {0xc4,0x22,0x8b,0x67,0xc7,0x6e,0xf3,0x69,0xd6,0x8c,0x06,0x74,0x96,0x1f,0x7c,0x11,0xc5,0x69,0x32,0xb7,0xb3,0x8a,0xcb,0x06,0x8b,0x60,0x1c,0x95,0x6f,0x8d,0x8e,0xb3};
    std::uint8_t addend25[32] = {0xc1,0xc4,0x7d,0x3f,0x91,0x35,0x17,0x4f,0x00,0x23,0x87,0xe6,0x3d,0x6e,0x48,0x90,0xbb,0xff,0x30,0xaf,0x55,0x8c,0x2a,0x1a,0x20,0x49,0x9e,0xe4,0xf9,0xfb,0x64,0x67};
    std::uint8_t sum25[32]    = {0x85,0xe7,0x08,0xa8,0x58,0xa4,0x0a,0xb8,0xd6,0xaf,0x8e,0x5a,0xd3,0x8d,0xc4,0xa2,0x81,0x68,0x63,0x68,0x09,0x16,0xf5,0x1f,0xab,0xa9,0xbb,0x7a,0x69,0x88,0xf3,0x1b};
    mont256_from_bytes(&ctx, augend, augend25);
    mont256_from_bytes(&ctx, addend, addend25);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum25, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend26[32] = {0x96,0x16,0xd6,0x20,0x43,0x80,0x1e,0xd9,0x43,0x17,0x40,0xc0,0x0a,0x00,0xa2,0x0d,0x0c,0x90,0x60,0xab,0x39,0x5e,0xbe,0x1a,0x2b,0x29,0x47,0xb5,0x79,0x94,0xef,0x67};
    std::uint8_t addend26[32] = {0x04,0x11,0xbd,0x80,0x83,0x1d,0x19,0x27,0x5d,0x01,0x73,0x83,0xfa,0x96,0xf2,0x18,0xdf,0x5d,0xde,0x03,0xb3,0x35,0xda,0x5a,0xa5,0x14,0x9c,0x17,0x89,0x23,0xb3,0x8f};
    std::uint8_t sum26[32]    = {0x9a,0x28,0x93,0xa0,0xc6,0x9d,0x38,0x00,0xa0,0x18,0xb4,0x44,0x04,0x97,0x94,0x25,0xeb,0xee,0x3e,0xae,0xec,0x94,0x98,0x74,0xd0,0x3d,0xe3,0xcd,0x02,0xb8,0xa2,0xf6};
    mont256_from_bytes(&ctx, augend, augend26);
    mont256_from_bytes(&ctx, addend, addend26);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum26, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend27[32] = {0x44,0xfd,0xdf,0x85,0x39,0x2c,0xee,0x89,0xbd,0x4c,0x55,0x85,0xec,0xf4,0x08,0xe6,0xf5,0x36,0x10,0xd8,0x06,0xfe,0x0b,0xc0,0x5e,0x58,0xcb,0xb5,0x78,0x1c,0xc8,0xfb};
    std::uint8_t addend27[32] = {0xdc,0xfa,0xf2,0x4d,0x7e,0x55,0xad,0x73,0xba,0x9c,0xfc,0x6b,0x0d,0x8b,0x37,0x1f,0x28,0x3c,0x61,0xf5,0x18,0xba,0x41,0x0e,0x69,0x3f,0x47,0x21,0x32,0x3c,0x76,0xe6};
    std::uint8_t sum27[32]    = {0x21,0xf8,0xd1,0xd3,0xb7,0x82,0x9b,0xfd,0x77,0xe9,0x51,0xf0,0xfa,0x7f,0x40,0x06,0x1d,0x72,0x72,0xce,0x1f,0xb8,0x4c,0xcd,0xc7,0x98,0x12,0xd6,0xaa,0x59,0x3f,0xe2};
    mont256_from_bytes(&ctx, augend, augend27);
    mont256_from_bytes(&ctx, addend, addend27);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum27, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend28[32] = {0xa8,0x2e,0xcd,0x6a,0x91,0xa6,0xaa,0x96,0x85,0xb3,0xca,0x62,0x71,0xf0,0x52,0x23,0x9b,0xca,0x2e,0x3a,0x96,0xb4,0xc4,0x8f,0xa2,0x29,0xdd,0xcf,0x79,0x19,0xb9,0xdc};
    std::uint8_t addend28[32] = {0xe0,0x51,0x64,0x12,0xd9,0x71,0xd1,0x10,0xd4,0x28,0xff,0xd3,0xcb,0xf6,0x20,0x58,0xb8,0xaa,0xb7,0x8c,0x4f,0x94,0xdb,0x61,0x20,0xb8,0x59,0xf5,0xa1,0x42,0xce,0x96};
    std::uint8_t sum28[32]    = {0x88,0x80,0x31,0x7e,0x6b,0x18,0x7b,0xa7,0x59,0xdc,0xca,0x36,0x3d,0xe6,0x72,0x7c,0x54,0x74,0xe5,0xc7,0xe6,0x49,0x9f,0xef,0xc2,0xe2,0x37,0xc5,0x1a,0x5c,0x88,0x73};
    mont256_from_bytes(&ctx, augend, augend28);
    mont256_from_bytes(&ctx, addend, addend28);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum28, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend29[32] = {0x8b,0xc2,0x3f,0x2e,0x68,0xef,0x68,0x8e,0xc4,0x75,0x7e,0x2c,0x1b,0x9e,0x68,0x02,0x97,0x5d,0x5f,0x78,0x59,0xac,0xe7,0x26,0x0b,0xa9,0x74,0x7c,0x92,0x69,0x51,0x9a};
    std::uint8_t addend29[32] = {0x39,0xab,0xfa,0xc9,0xdc,0xb2,0xf4,0x5c,0xed,0xd3,0x10,0xcf,0x13,0x72,0x99,0xde,0x8a,0x09,0x79,0xc7,0xd4,0x4b,0x25,0x46,0x80,0x57,0x36,0x47,0x77,0x3e,0xa9,0x26};
    std::uint8_t sum29[32]    = {0xc5,0x6e,0x39,0xf8,0x45,0xa2,0x5c,0xeb,0xb2,0x48,0x8e,0xfb,0x2f,0x11,0x01,0xe1,0x21,0x66,0xd9,0x40,0x2d,0xf8,0x0c,0x6c,0x8c,0x00,0xaa,0xc4,0x09,0xa7,0xfa,0xc0};
    mont256_from_bytes(&ctx, augend, augend29);
    mont256_from_bytes(&ctx, addend, addend29);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum29, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend30[32] = {0x83,0xc5,0x3c,0x2e,0x89,0x95,0x97,0xa8,0xcc,0x20,0xb6,0x77,0xe2,0x63,0x39,0xac,0xd1,0x74,0x1b,0x05,0xb9,0xeb,0x96,0x36,0xba,0xe2,0x26,0x23,0x8c,0x38,0x20,0x30};
    std::uint8_t addend30[32] = {0x97,0xe6,0x8d,0xbb,0x3b,0x70,0xb5,0x05,0x35,0x55,0x38,0x45,0x41,0x8b,0x93,0x69,0x84,0x57,0x95,0x9c,0xe9,0xe3,0x14,0x7b,0x9e,0xd7,0xb8,0x5c,0xa8,0xf2,0x98,0x41};
    std::uint8_t sum30[32]    = {0x1b,0xab,0xc9,0xea,0xc5,0x06,0x4c,0xae,0x01,0x75,0xee,0xbd,0x23,0xee,0xcd,0x16,0x55,0xcb,0xb0,0xa3,0xa3,0xce,0xaa,0xb1,0x59,0xb9,0xde,0x80,0x35,0x2a,0xb8,0x72};
    mont256_from_bytes(&ctx, augend, augend30);
    mont256_from_bytes(&ctx, addend, addend30);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum30, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend31[32] = {0x2e,0x16,0xb3,0xf8,0x6c,0x61,0x64,0x2c,0x52,0x90,0xda,0xa9,0x89,0xec,0xb7,0xa3,0x45,0x79,0x84,0x48,0x24,0x6a,0x87,0x34,0x60,0x81,0xd0,0x64,0xf5,0x7a,0xe8,0x3e};
    std::uint8_t addend31[32] = {0x35,0xeb,0xfc,0xd1,0x31,0x1b,0x59,0xa9,0x39,0x1b,0x01,0x93,0x73,0xca,0x5d,0x76,0x23,0x32,0x19,0x33,0x0a,0xbd,0xbd,0xab,0xd4,0x7a,0xbc,0x6a,0xac,0x86,0x79,0x90};
    std::uint8_t sum31[32]    = {0x64,0x02,0xb0,0xc9,0x9d,0x7c,0xbd,0xd5,0x8b,0xab,0xdc,0x3c,0xfd,0xb7,0x15,0x19,0x68,0xab,0x9d,0x7b,0x2f,0x28,0x44,0xe0,0x34,0xfc,0x8c,0xcf,0xa2,0x01,0x61,0xce};
    mont256_from_bytes(&ctx, augend, augend31);
    mont256_from_bytes(&ctx, addend, addend31);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum31, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend32[32] = {0x15,0xc8,0x25,0x9d,0x75,0x79,0x9a,0x5f,0xf0,0xa4,0x59,0xec,0x9e,0xc4,0x7c,0xee,0xbf,0x1d,0xab,0xc7,0x9c,0xe7,0x6e,0xf8,0x72,0xde,0x4f,0x7a,0xad,0x70,0x95,0xc1};
    std::uint8_t addend32[32] = {0xb5,0x14,0xff,0xd2,0x71,0xa7,0x3b,0xfc,0xee,0x96,0x8b,0x19,0x69,0x71,0x92,0x0c,0xc0,0xa4,0x13,0x6f,0xf9,0x12,0xea,0x73,0x4f,0x7c,0xdb,0x69,0x01,0xbc,0x37,0x5d};
    std::uint8_t sum32[32]    = {0xca,0xdd,0x25,0x6f,0xe7,0x20,0xd6,0x5c,0xdf,0x3a,0xe5,0x06,0x08,0x36,0x0e,0xfb,0x7f,0xc1,0xbf,0x37,0x95,0xfa,0x59,0x6b,0xc2,0x5b,0x2a,0xe3,0xaf,0x2c,0xcd,0x1e};
    mont256_from_bytes(&ctx, augend, augend32);
    mont256_from_bytes(&ctx, addend, addend32);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum32, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend33[32] = {0x4d,0x04,0x0a,0x4a,0x3f,0xdc,0xc2,0x69,0x9d,0x7d,0xcb,0x2e,0x88,0x15,0x9e,0x54,0xc9,0xb3,0x0a,0x21,0x7a,0x96,0xb1,0xe8,0xee,0xc2,0x7a,0x6d,0xc8,0x1c,0xb8,0xf3};
    std::uint8_t addend33[32] = {0x65,0x9c,0xc6,0x63,0xc7,0xa1,0x52,0xb5,0xa8,0x65,0xc2,0x21,0xa4,0xf6,0x74,0xdb,0x03,0x36,0x2a,0x12,0xb8,0x7f,0x2e,0x7a,0xe6,0xdf,0xcb,0x30,0x8c,0x5b,0x75,0x53};
    std::uint8_t sum33[32]    = {0xb2,0xa0,0xd0,0xae,0x07,0x7e,0x15,0x1f,0x45,0xe3,0x8d,0x50,0x2d,0x0c,0x13,0x2f,0xcc,0xe9,0x34,0x34,0x33,0x15,0xe0,0x63,0xd5,0xa2,0x45,0x9e,0x54,0x78,0x2e,0x46};
    mont256_from_bytes(&ctx, augend, augend33);
    mont256_from_bytes(&ctx, addend, addend33);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum33, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend34[32] = {0xdb,0x4a,0x84,0x61,0x9c,0xe2,0xc6,0x71,0x14,0xc7,0x72,0xf1,0xc4,0xb8,0x8e,0xed,0x4f,0xce,0x71,0x70,0x35,0x14,0x68,0x3b,0xa3,0x38,0xe5,0xbb,0x0a,0x17,0xeb,0xfd};
    std::uint8_t addend34[32] = {0x84,0x7f,0x39,0x9a,0x0b,0x54,0x95,0x12,0xef,0x65,0xbe,0x17,0xe8,0x1b,0x3d,0xbc,0x6d,0x3d,0x5f,0x31,0xde,0x38,0xf6,0x31,0x78,0x05,0x10,0x22,0x85,0xcf,0xe8,0x73};
    std::uint8_t sum34[32]    = {0x5f,0xc9,0xbd,0xfc,0xa8,0x37,0x5b,0x84,0x04,0x2d,0x31,0x09,0xac,0xd3,0xcc,0xa9,0xbd,0x0b,0xd0,0xa3,0x13,0x4d,0x5e,0x6c,0x1b,0x3d,0xf5,0xdd,0x8f,0xe7,0xd4,0x71};
    mont256_from_bytes(&ctx, augend, augend34);
    mont256_from_bytes(&ctx, addend, addend34);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum34, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend35[32] = {0x44,0xe0,0xb5,0x01,0xb8,0x69,0xa9,0x27,0xc5,0x4b,0xce,0x22,0x3f,0x3a,0x34,0x2c,0xb4,0xcb,0x5a,0xd0,0xde,0x77,0x5c,0x99,0xd0,0x29,0x6a,0x39,0x2e,0x27,0x63,0x60};
    std::uint8_t addend35[32] = {0x13,0x07,0x30,0x44,0x7f,0x76,0x58,0x32,0x25,0xb2,0x2b,0x66,0x2c,0xa5,0x0b,0x32,0xd1,0x49,0x5a,0xfb,0x11,0xb6,0xff,0xac,0x53,0xe4,0x4f,0xda,0x77,0xda,0xf6,0xcf};
    std::uint8_t sum35[32]    = {0x57,0xe7,0xe5,0x46,0x37,0xe0,0x01,0x59,0xea,0xfd,0xf9,0x88,0x6b,0xdf,0x3f,0x5f,0x86,0x14,0xb5,0xcb,0xf0,0x2e,0x5c,0x46,0x24,0x0d,0xba,0x13,0xa6,0x02,0x5a,0x2f};
    mont256_from_bytes(&ctx, augend, augend35);
    mont256_from_bytes(&ctx, addend, addend35);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum35, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend36[32] = {0x49,0xb2,0x5b,0xaa,0xda,0xf2,0x32,0xd2,0x1b,0xb8,0x2a,0xd9,0xc4,0x0d,0x68,0x76,0x54,0xcd,0xaf,0x15,0x99,0x05,0xaa,0xcb,0x5e,0xb3,0x9d,0xa8,0xcd,0x07,0x85,0x6a};
    std::uint8_t addend36[32] = {0x02,0x18,0x04,0xdf,0xc2,0x98,0x76,0xc3,0x2c,0x93,0x30,0x82,0x73,0x56,0xe6,0x6f,0x03,0x30,0x4e,0x84,0x03,0xae,0x6e,0x7d,0xcd,0x5b,0xe9,0x96,0xbb,0xa7,0xc2,0x94};
    std::uint8_t sum36[32]    = {0x4b,0xca,0x60,0x8a,0x9d,0x8a,0xa9,0x95,0x48,0x4b,0x5b,0x5c,0x37,0x64,0x4e,0xe5,0x57,0xfd,0xfd,0x99,0x9c,0xb4,0x19,0x49,0x2c,0x0f,0x87,0x3f,0x88,0xaf,0x47,0xfe};
    mont256_from_bytes(&ctx, augend, augend36);
    mont256_from_bytes(&ctx, addend, addend36);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum36, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend37[32] = {0xd7,0xc8,0x02,0x57,0x1c,0x25,0xdd,0x20,0xe4,0xfb,0x6a,0x53,0x69,0x7e,0x3f,0xfc,0x47,0xcd,0xa4,0x8f,0x33,0x3f,0xb9,0x74,0x1a,0xf4,0x8b,0xbb,0x4b,0xaa,0x6a,0xe7};
    std::uint8_t addend37[32] = {0x71,0x00,0x8f,0x5f,0x0f,0x6a,0x95,0x2e,0x15,0x02,0x03,0x5b,0x20,0xc0,0xcd,0x1e,0xf7,0x3f,0x2d,0x59,0xbd,0x05,0xa4,0x86,0x2c,0xab,0x6b,0xe9,0x9f,0x6a,0x38,0x79};
    std::uint8_t sum37[32]    = {0x48,0xc8,0x91,0xb7,0x2b,0x90,0x72,0x4e,0xf9,0xfd,0x6d,0xae,0x8a,0x3f,0x0d,0x1b,0x3f,0x0c,0xd1,0xe9,0xf0,0x45,0x5d,0xf9,0x47,0x9f,0xf7,0xa4,0xeb,0x14,0xa3,0x61};
    mont256_from_bytes(&ctx, augend, augend37);
    mont256_from_bytes(&ctx, addend, addend37);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum37, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend38[32] = {0xbc,0xba,0xbd,0x85,0x5b,0x66,0x5b,0x14,0xa0,0xa1,0xec,0x74,0xd8,0x96,0x54,0x9c,0xd8,0x38,0x7d,0x50,0x83,0x09,0xe1,0x2a,0xb3,0x75,0xa3,0x6d,0x17,0x07,0x8a,0x9b};
    std::uint8_t addend38[32] = {0x53,0x0c,0x53,0x3f,0x65,0x8a,0x39,0x59,0xc6,0x8e,0x96,0x68,0x48,0x28,0x72,0x36,0x49,0xc1,0x53,0x20,0xb5,0x07,0xad,0x25,0x07,0x57,0x91,0x14,0xbd,0xf5,0x45,0xb2};
    std::uint8_t sum38[32]    = {0x0f,0xc7,0x10,0xc5,0xc0,0xf0,0x94,0x6e,0x67,0x30,0x82,0xdd,0x20,0xbe,0xc6,0xd3,0x21,0xf9,0xd0,0x72,0x38,0x11,0x8e,0x4e,0xba,0xcd,0x34,0x81,0xd4,0xfc,0xd0,0x4e};
    mont256_from_bytes(&ctx, augend, augend38);
    mont256_from_bytes(&ctx, addend, addend38);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum38, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend39[32] = {0x88,0xa2,0xac,0xbe,0x43,0xbe,0x8c,0x92,0x21,0x61,0x3f,0x47,0x1a,0x6f,0x8e,0xe1,0xd4,0x9c,0x1f,0x08,0x9f,0x78,0xfb,0x0d,0x7d,0xf7,0x8c,0xc9,0x1a,0x7e,0x94,0x9a};
    std::uint8_t addend39[32] = {0x13,0x9d,0x95,0x66,0x79,0x54,0xd3,0x55,0xef,0xce,0x5b,0x27,0xb5,0xdb,0x83,0xa7,0x5d,0x46,0x3a,0xab,0xbe,0x0e,0x82,0x71,0xfb,0xbc,0x90,0x33,0x51,0x36,0x9f,0x80};
    std::uint8_t sum39[32]    = {0x9c,0x40,0x42,0x24,0xbd,0x13,0x5f,0xe8,0x11,0x2f,0x9a,0x6e,0xd0,0x4b,0x12,0x89,0x31,0xe2,0x59,0xb4,0x5d,0x87,0x7d,0x7f,0x79,0xb4,0x1c,0xfc,0x6b,0xb5,0x34,0x1a};
    mont256_from_bytes(&ctx, augend, augend39);
    mont256_from_bytes(&ctx, addend, addend39);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum39, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend40[32] = {0xc0,0xbf,0x4a,0x35,0x54,0xec,0xf1,0x63,0xaa,0xdf,0xa8,0x72,0xb0,0x1f,0x14,0xf6,0xad,0x36,0xf7,0xca,0x09,0xd1,0x9b,0x10,0x27,0xeb,0x8c,0xe7,0x5f,0xfb,0x72,0x87};
    std::uint8_t addend40[32] = {0x7c,0x4f,0x3d,0x81,0x2e,0x3e,0x2a,0xf9,0xdd,0x36,0xb9,0x54,0xe7,0x9b,0xd9,0xfd,0x43,0x61,0x47,0xc7,0x12,0x74,0x9b,0x01,0xa2,0x7b,0x4b,0xb5,0xc1,0x25,0xa7,0x8c};
    std::uint8_t sum40[32]    = {0x3d,0x0e,0x87,0xb7,0x83,0x2b,0x1c,0x5d,0x88,0x16,0x61,0xc7,0x97,0xba,0xee,0xf3,0xf0,0x98,0x3f,0x92,0x1c,0x46,0x36,0x10,0xca,0x66,0xd8,0x9d,0x21,0x21,0x1a,0x14};
    mont256_from_bytes(&ctx, augend, augend40);
    mont256_from_bytes(&ctx, addend, addend40);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum40, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend41[32] = {0x33,0x8a,0xd8,0xe1,0x0c,0xfb,0xb8,0x05,0x3b,0x76,0x35,0x63,0x45,0x56,0xd1,0x02,0x10,0xee,0x8d,0x96,0xd9,0xc1,0xb9,0xfa,0x97,0x42,0x1e,0x70,0x4b,0x77,0x47,0x22};
    std::uint8_t addend41[32] = {0xc7,0x6e,0x2f,0xf8,0x79,0x21,0xf4,0xcc,0x0f,0x1b,0x57,0x95,0xce,0xd1,0x1b,0x38,0x23,0x9e,0x21,0x01,0x90,0x6d,0x73,0x1c,0xca,0x06,0x24,0x10,0x4d,0x2d,0x10,0x70};
    std::uint8_t sum41[32]    = {0xfa,0xf9,0x08,0xd9,0x86,0x1d,0xac,0xd1,0x4a,0x91,0x8c,0xf9,0x14,0x27,0xec,0x3a,0x34,0x8c,0xae,0x98,0x6a,0x2f,0x2d,0x17,0x61,0x48,0x42,0x80,0x98,0xa4,0x57,0x92};
    mont256_from_bytes(&ctx, augend, augend41);
    mont256_from_bytes(&ctx, addend, addend41);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum41, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend42[32] = {0xb3,0xc7,0x80,0x17,0x40,0x9d,0xb8,0x04,0x29,0x76,0x67,0xa9,0x79,0xc2,0xdb,0x49,0xa7,0xc8,0xb6,0x02,0xea,0x60,0xaa,0xa4,0xe8,0xd5,0xcd,0x6e,0xc8,0x35,0x95,0x13};
    std::uint8_t addend42[32] = {0x6f,0x61,0xbd,0x77,0x85,0x9a,0x3e,0x3a,0x90,0xb7,0xf2,0x8d,0xb6,0xc0,0x6c,0x2a,0x95,0x69,0x5e,0x94,0xcc,0xf9,0x6f,0x74,0xb4,0x3c,0x4b,0x81,0x1c,0x94,0x07,0xa6};
    std::uint8_t sum42[32]    = {0x23,0x29,0x3d,0x8f,0xc6,0x37,0xf6,0x3e,0xba,0x2e,0x5a,0x37,0x30,0x83,0x47,0x74,0x3d,0x32,0x14,0x98,0xb7,0x5a,0x1a,0x18,0x9d,0x12,0x18,0xef,0xe4,0xc9,0x9c,0xba};
    mont256_from_bytes(&ctx, augend, augend42);
    mont256_from_bytes(&ctx, addend, addend42);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum42, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend43[32] = {0xc9,0xdc,0xfd,0x4d,0xfd,0x02,0x77,0xd3,0xda,0xcb,0x03,0xda,0xe8,0xea,0x06,0x56,0x3e,0x38,0xc4,0x99,0x1e,0xa1,0xf1,0x0c,0xc4,0x80,0x77,0xb9,0x55,0x25,0xa8,0x7c};
    std::uint8_t addend43[32] = {0x0e,0x0f,0x3d,0x99,0x74,0x9b,0x7c,0x90,0xc3,0x99,0xf9,0x71,0xbb,0x79,0xc9,0xba,0xab,0x2a,0x67,0x84,0xea,0x67,0x71,0xd8,0xf9,0xa7,0xb2,0xb6,0xa6,0xeb,0x14,0xf2};
    std::uint8_t sum43[32]    = {0xd7,0xec,0x3a,0xe7,0x71,0x9d,0xf4,0x64,0x9e,0x64,0xfd,0x4c,0xa4,0x63,0xd0,0x10,0xe9,0x63,0x2c,0x1e,0x09,0x09,0x62,0xe5,0xbe,0x28,0x2a,0x6f,0xfc,0x10,0xbd,0x6e};
    mont256_from_bytes(&ctx, augend, augend43);
    mont256_from_bytes(&ctx, addend, addend43);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum43, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend44[32] = {0xd2,0xc6,0x22,0x9f,0xe7,0x5c,0x58,0x52,0x2f,0x0b,0x54,0x06,0x11,0x61,0x58,0xd3,0xac,0xe0,0xf0,0xa1,0xf2,0xeb,0x88,0xfc,0x0d,0xb4,0xb3,0x77,0x8c,0x3b,0x4a,0xdd};
    std::uint8_t addend44[32] = {0xaf,0x9f,0xb5,0x6e,0x7c,0x8e,0x0a,0xbc,0xec,0x16,0x6b,0x6b,0x29,0x59,0xcc,0x75,0x8e,0xa8,0x8f,0x6a,0x3b,0x34,0x27,0x3c,0xe6,0x26,0x92,0x13,0xf3,0x00,0x63,0x17};
    std::uint8_t sum44[32]    = {0x82,0x65,0xd8,0x0f,0x63,0xea,0x63,0x0f,0x1b,0x21,0xbf,0x71,0x3a,0xbb,0x25,0x49,0x3b,0x89,0x80,0x0d,0x2e,0x1f,0xb0,0x37,0xf3,0xdb,0x45,0x8b,0x7f,0x3b,0xad,0xf5};
    mont256_from_bytes(&ctx, augend, augend44);
    mont256_from_bytes(&ctx, addend, addend44);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum44, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend45[32] = {0xf7,0xdc,0x5f,0x61,0xdf,0x49,0x09,0x93,0x07,0xaa,0x30,0x19,0x06,0xa9,0x9d,0x1e,0x27,0x0d,0x44,0xe0,0x3f,0x8d,0x9c,0xc2,0xa0,0x4f,0xf8,0x50,0xef,0x3e,0x54,0x35};
    std::uint8_t addend45[32] = {0xd2,0x8d,0xa0,0x62,0xd3,0x59,0x1e,0x7a,0x09,0x7c,0xb6,0x23,0x77,0x9d,0xf8,0x61,0x60,0x19,0xfa,0x50,0xd9,0x53,0x9b,0x80,0x43,0x03,0x17,0xea,0x30,0x04,0x09,0xb5};
    std::uint8_t sum45[32]    = {0xca,0x69,0xff,0xc5,0xb2,0xa2,0x28,0x0d,0x11,0x26,0xe6,0x3c,0x7e,0x47,0x95,0x7f,0x87,0x27,0x3f,0x32,0x18,0xe1,0x38,0x41,0xe3,0x53,0x10,0x3b,0x1f,0x42,0x5d,0xeb};
    mont256_from_bytes(&ctx, augend, augend45);
    mont256_from_bytes(&ctx, addend, addend45);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum45, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend46[32] = {0x02,0xba,0x61,0x11,0xa0,0x72,0x41,0xa2,0x9e,0xab,0xcd,0xe3,0xc3,0xdd,0x8e,0xdb,0x66,0x8a,0x3d,0x50,0xf2,0x03,0x5e,0x4c,0x11,0x7b,0xab,0x27,0xa6,0xe8,0x43,0x03};
    std::uint8_t addend46[32] = {0x61,0x23,0x50,0x8a,0x33,0xeb,0xdf,0x77,0xe1,0x08,0x30,0xd4,0x2b,0xd1,0x61,0xa5,0x65,0xac,0xd3,0xdb,0x7d,0x67,0x72,0x18,0x2f,0xbf,0x74,0x26,0x1d,0xad,0x88,0x62};
    std::uint8_t sum46[32]    = {0x63,0xdd,0xb1,0x9b,0xd4,0x5e,0x21,0x1a,0x7f,0xb3,0xfe,0xb7,0xef,0xae,0xf0,0x80,0xcc,0x37,0x11,0x2c,0x6f,0x6a,0xd0,0x64,0x41,0x3b,0x1f,0x4d,0xc4,0x95,0xcb,0x65};
    mont256_from_bytes(&ctx, augend, augend46);
    mont256_from_bytes(&ctx, addend, addend46);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum46, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend47[32] = {0x0b,0x7d,0xfb,0xd2,0x48,0xd4,0xda,0xf0,0x06,0x87,0x3e,0xd8,0xc0,0x36,0x52,0xaa,0x33,0xb4,0x49,0x66,0x1c,0x2a,0xa8,0x44,0xa5,0x03,0x72,0x45,0x90,0xdb,0xb6,0x6a};
    std::uint8_t addend47[32] = {0x83,0x2e,0x8d,0x0b,0xa4,0x4a,0x42,0x77,0xa5,0x98,0xb0,0xaa,0xf7,0xaf,0xb7,0x07,0x3c,0xc1,0x93,0x15,0x1d,0xd4,0x03,0x15,0xe0,0x7b,0xb7,0x23,0xa6,0x41,0x4b,0xa6};
    std::uint8_t sum47[32]    = {0x8e,0xac,0x88,0xdd,0xed,0x1f,0x1d,0x67,0xac,0x1f,0xef,0x83,0xb7,0xe6,0x09,0xb1,0x70,0x75,0xdc,0x7b,0x39,0xfe,0xab,0x5a,0x85,0x7f,0x29,0x69,0x37,0x1d,0x02,0x10};
    mont256_from_bytes(&ctx, augend, augend47);
    mont256_from_bytes(&ctx, addend, addend47);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum47, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend48[32] = {0x67,0xc2,0xc1,0xf3,0xa0,0x6c,0x99,0x63,0xbf,0xf1,0x96,0xdb,0x68,0x26,0xe5,0x90,0xee,0x67,0x87,0xe6,0xdd,0xe2,0x58,0x9d,0xeb,0xe2,0x7d,0x9b,0x0b,0x9b,0xb4,0x65};
    std::uint8_t addend48[32] = {0x47,0x05,0xbd,0xa9,0x52,0xbe,0xa5,0xd0,0x61,0xaa,0x80,0xf2,0x55,0xb9,0xdb,0x90,0x1a,0x69,0x66,0x17,0x96,0xfa,0xed,0xd2,0x05,0xc1,0x8a,0xda,0xa8,0xbc,0xf8,0x4b};
    std::uint8_t sum48[32]    = {0xae,0xc8,0x7f,0x9c,0xf3,0x2b,0x3f,0x34,0x21,0x9c,0x17,0xcd,0xbd,0xe0,0xc1,0x21,0x08,0xd0,0xed,0xfe,0x74,0xdd,0x46,0x6f,0xf1,0xa4,0x08,0x75,0xb4,0x58,0xac,0xb0};
    mont256_from_bytes(&ctx, augend, augend48);
    mont256_from_bytes(&ctx, addend, addend48);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum48, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend49[32] = {0x9f,0x0b,0xd9,0x96,0x3e,0x95,0x57,0x56,0x2e,0xfe,0xa3,0x62,0xaf,0xe1,0x10,0xa2,0xd0,0x00,0xfc,0xca,0xaa,0xff,0x8f,0xad,0x88,0x38,0xa1,0xbb,0x9f,0x2f,0x53,0xa1};
    std::uint8_t addend49[32] = {0x7c,0xac,0xf5,0xa5,0xe1,0xa4,0xbf,0xf5,0x55,0x74,0x1e,0x80,0xae,0x78,0x7a,0xb8,0x55,0x5f,0xbd,0xad,0xf7,0xe3,0xb8,0x0d,0x6e,0x3e,0x53,0x3d,0x5a,0x30,0x13,0x78};
    std::uint8_t sum49[32]    = {0x1b,0xb8,0xcf,0x3d,0x20,0x3a,0x17,0x4b,0x84,0x72,0xc1,0xe3,0x5e,0x59,0x8b,0x5b,0x25,0x60,0xba,0x79,0xa2,0xe3,0x47,0xb9,0xf6,0x76,0xf4,0xf8,0xf9,0x5f,0x67,0x1a};
    mont256_from_bytes(&ctx, augend, augend49);
    mont256_from_bytes(&ctx, addend, addend49);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum49, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend50[32] = {0x09,0x87,0x42,0x33,0x4b,0xea,0x8f,0x27,0x29,0xf0,0x06,0xb1,0x86,0x0c,0xcd,0x46,0x58,0x36,0x92,0xf5,0x8f,0xed,0xc7,0x3b,0xfc,0x05,0x97,0x05,0x4f,0x2f,0x43,0x5a};
    std::uint8_t addend50[32] = {0x05,0x38,0xcc,0x79,0x89,0xda,0xfe,0x39,0xdc,0x07,0x02,0x66,0x38,0xb2,0x7f,0x94,0x4d,0xc5,0x8a,0x54,0x3b,0xe3,0x8a,0xfa,0xb9,0x14,0x2a,0xc2,0x7d,0xb4,0xc7,0xf2};
    std::uint8_t sum50[32]    = {0x0e,0xc0,0x0e,0xac,0xd5,0xc5,0x8d,0x61,0x05,0xf7,0x09,0x17,0xbe,0xbf,0x4c,0xda,0xa5,0xfc,0x1d,0x49,0xcb,0xd1,0x52,0x36,0xb5,0x19,0xc1,0xc7,0xcc,0xe4,0x0b,0x4c};
    mont256_from_bytes(&ctx, augend, augend50);
    mont256_from_bytes(&ctx, addend, addend50);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum50, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend51[32] = {0xc4,0xca,0x5a,0xa9,0x30,0x8d,0x76,0x5e,0xa7,0x37,0xf0,0x10,0x4c,0x3f,0xb1,0xc2,0xc5,0xee,0xa5,0xa4,0x08,0x80,0xcd,0x8f,0x66,0x26,0x05,0xb0,0x7d,0x94,0xa6,0x0b};
    std::uint8_t addend51[32] = {0xaa,0xd3,0x3d,0x24,0xa5,0x41,0x0c,0x2a,0x99,0xa2,0x01,0x36,0xcb,0xa8,0xdf,0x4a,0x95,0xa8,0x25,0x5d,0x82,0x6c,0x61,0x7d,0xfd,0xaa,0x95,0x31,0x37,0x22,0x6a,0x41};
    std::uint8_t sum51[32]    = {0x6f,0x9d,0x97,0xce,0xd5,0xce,0x82,0x89,0x40,0xd9,0xf1,0x47,0x17,0xe8,0x91,0x0d,0x5b,0x96,0xcb,0x02,0x8a,0xed,0x2f,0x0c,0x63,0xd0,0x9a,0xe1,0xb4,0xb7,0x10,0x4d};
    mont256_from_bytes(&ctx, augend, augend51);
    mont256_from_bytes(&ctx, addend, addend51);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum51, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend52[32] = {0x9f,0x70,0x6f,0x64,0x24,0xbc,0x5f,0x21,0x29,0x01,0x47,0x7d,0x6b,0x63,0x4f,0xb3,0x14,0xd9,0x8e,0x22,0x3b,0xf2,0xbe,0xe1,0x66,0x8b,0x86,0x5f,0xd7,0xf3,0xa1,0xc3};
    std::uint8_t addend52[32] = {0x0b,0x3c,0x87,0x5a,0xf8,0xb1,0x77,0x65,0xf0,0x24,0xb2,0xce,0x9a,0x7a,0x7c,0xa8,0xe5,0x67,0xf8,0x97,0xb3,0x40,0x61,0xe2,0x95,0xaa,0xca,0xb7,0x67,0x68,0x7a,0xef};
    std::uint8_t sum52[32]    = {0xaa,0xac,0xf6,0xbf,0x1d,0x6d,0xd6,0x87,0x19,0x25,0xfa,0x4c,0x05,0xdd,0xcc,0x5b,0xfa,0x41,0x86,0xb9,0xef,0x33,0x20,0xc3,0xfc,0x36,0x51,0x17,0x3f,0x5c,0x1c,0xb2};
    mont256_from_bytes(&ctx, augend, augend52);
    mont256_from_bytes(&ctx, addend, addend52);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum52, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend53[32] = {0x59,0x7e,0xda,0xcb,0x03,0xbc,0x5f,0xf4,0xde,0x7f,0x52,0xd1,0x40,0x34,0x92,0x07,0x8b,0x55,0xee,0xf3,0x0c,0x9c,0x7d,0xcf,0x61,0x53,0x97,0x80,0x12,0x4e,0x94,0x20};
    std::uint8_t addend53[32] = {0x2b,0x77,0xe8,0x53,0xd8,0x3c,0x01,0x9b,0x0a,0xec,0x45,0xf8,0x9a,0x8f,0x5a,0xf9,0x9f,0x22,0x29,0x99,0x71,0xc8,0xce,0x3d,0x2b,0x94,0xde,0x0d,0x35,0x0b,0x10,0x63};
    std::uint8_t sum53[32]    = {0x84,0xf6,0xc3,0x1e,0xdb,0xf8,0x61,0x8f,0xe9,0x6b,0x98,0xc9,0xda,0xc3,0xed,0x01,0x2a,0x78,0x18,0x8c,0x7e,0x65,0x4c,0x0c,0x8c,0xe8,0x75,0x8d,0x47,0x59,0xa4,0x83};
    mont256_from_bytes(&ctx, augend, augend53);
    mont256_from_bytes(&ctx, addend, addend53);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum53, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend54[32] = {0x49,0xcc,0xd4,0x6d,0xa7,0x53,0xbb,0x0b,0xa6,0x6a,0x85,0xdf,0xc5,0x03,0x8c,0x86,0xd1,0x4c,0xfb,0x70,0x35,0x8d,0xbc,0xec,0x7a,0xca,0x0f,0x41,0x08,0x81,0x27,0x96};
    std::uint8_t addend54[32] = {0xbc,0x9a,0xda,0xe2,0xc2,0x16,0x2d,0xd8,0x2a,0x7b,0x76,0xea,0xc0,0xbb,0x9f,0x98,0xc7,0x24,0x86,0x0d,0xfe,0x43,0xcf,0x85,0x4e,0xe1,0xfb,0x90,0xc7,0xf0,0x3a,0xa8};
    std::uint8_t sum54[32]    = {0x06,0x67,0xaf,0x51,0x69,0x69,0xe8,0xe3,0xd0,0xe5,0xfc,0xca,0x85,0xbf,0x2c,0x1f,0x98,0x71,0x81,0x7f,0x33,0xd1,0x8c,0x70,0xc9,0xac,0x0a,0xd1,0xd0,0x71,0x62,0x3f};
    mont256_from_bytes(&ctx, augend, augend54);
    mont256_from_bytes(&ctx, addend, addend54);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum54, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend55[32] = {0x47,0x8d,0x4f,0x7f,0x9f,0x28,0xa9,0xc2,0xca,0xab,0xaf,0xa9,0xa2,0x7a,0xde,0x33,0x15,0x31,0x56,0x9e,0xaf,0x8f,0x3d,0xd8,0x97,0xd0,0x71,0xe8,0x7d,0xb4,0xd5,0x13};
    std::uint8_t addend55[32] = {0x28,0xcb,0xd3,0xe3,0x37,0xe8,0xa8,0xf8,0x6f,0x6b,0x0f,0xfd,0x72,0xec,0x09,0x91,0x4d,0x66,0x44,0x32,0xc8,0x55,0x11,0x52,0xee,0x7d,0x47,0x64,0x30,0xcd,0x7a,0x55};
    std::uint8_t sum55[32]    = {0x70,0x59,0x23,0x62,0xd7,0x11,0x52,0xbb,0x3a,0x16,0xbf,0xa7,0x15,0x66,0xe7,0xc4,0x62,0x97,0x9a,0xd1,0x77,0xe4,0x4f,0x2b,0x86,0x4d,0xb9,0x4c,0xae,0x82,0x4f,0x68};
    mont256_from_bytes(&ctx, augend, augend55);
    mont256_from_bytes(&ctx, addend, addend55);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum55, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend56[32] = {0x14,0x84,0x5d,0xb3,0x13,0x51,0xf4,0x1f,0x9d,0xd8,0xda,0x18,0xb7,0x33,0x52,0xcd,0x36,0x6f,0x6b,0x75,0x3b,0xe6,0xfb,0x69,0xff,0xcd,0x78,0xa0,0x9f,0x3c,0x7c,0x9e};
    std::uint8_t addend56[32] = {0xee,0x8d,0xef,0x74,0xc2,0xdf,0x7d,0x03,0x61,0x86,0xe2,0x84,0x88,0xd4,0xa4,0x9c,0xc4,0xa4,0xae,0xb9,0x37,0x7f,0xb5,0x2d,0x7d,0x3c,0xa5,0xf7,0xa5,0x40,0x10,0x67};
    std::uint8_t sum56[32]    = {0x03,0x12,0x4d,0x28,0xd6,0x31,0x71,0x22,0xff,0x5f,0xbc,0x9d,0x40,0x07,0xf7,0x69,0xfb,0x14,0x1a,0x2f,0x73,0x66,0xb0,0x96,0x7d,0x0a,0x1e,0x98,0x44,0x7c,0x8d,0x06};
    mont256_from_bytes(&ctx, augend, augend56);
    mont256_from_bytes(&ctx, addend, addend56);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum56, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend57[32] = {0xee,0x77,0x6d,0xae,0x46,0xbb,0x08,0x99,0x2a,0xfe,0x57,0x7e,0x23,0x9f,0x91,0xcc,0xb4,0x17,0xe6,0x16,0x97,0x05,0xfd,0xf4,0xae,0x58,0x67,0x0b,0x29,0x96,0x7d,0x07};
    std::uint8_t addend57[32] = {0x1a,0x62,0x6e,0xc1,0xfd,0x17,0x72,0x0c,0xd5,0xd0,0x6b,0x03,0xfa,0x62,0x1d,0x6e,0xd0,0xa7,0xa8,0x20,0x16,0xda,0xe9,0xb9,0x29,0xd7,0xee,0x63,0x50,0x0f,0xc1,0x61};
    std::uint8_t sum57[32]    = {0x08,0xd9,0xdc,0x71,0x43,0xd2,0x7a,0xa6,0x00,0xce,0xc2,0x82,0x1e,0x01,0xaf,0x3b,0x84,0xbf,0x8e,0x37,0xad,0xe0,0xe7,0xac,0xd8,0x30,0x55,0x6e,0x79,0xa6,0x3e,0x69};
    mont256_from_bytes(&ctx, augend, augend57);
    mont256_from_bytes(&ctx, addend, addend57);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum57, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend58[32] = {0xc9,0xa1,0x32,0x17,0x77,0x73,0x72,0x22,0x55,0x99,0x63,0x36,0x97,0x71,0xfa,0xfa,0xf0,0x41,0x69,0xee,0x89,0x73,0xad,0x1c,0xea,0x1a,0xa0,0x28,0x7a,0x87,0x5d,0x3d};
    std::uint8_t addend58[32] = {0x8d,0x3c,0x8d,0x03,0x8d,0xdc,0xd8,0x50,0x49,0xbe,0x52,0x96,0x68,0xe4,0xbf,0x8c,0xcd,0xec,0x44,0xcd,0xd6,0x4a,0xab,0xe0,0x49,0x26,0x25,0xe6,0x2b,0x36,0xc3,0x65};
    std::uint8_t sum58[32]    = {0x56,0xdd,0xbf,0x1c,0x05,0x50,0x4a,0x72,0x9f,0x57,0xb5,0xcd,0x00,0x56,0xba,0x87,0xbe,0x2d,0xae,0xbd,0x5f,0xbe,0x58,0xfc,0x33,0x40,0xc6,0x0e,0xa5,0xbe,0x20,0xa3};
    mont256_from_bytes(&ctx, augend, augend58);
    mont256_from_bytes(&ctx, addend, addend58);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum58, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend59[32] = {0x50,0x19,0x52,0x94,0x97,0xa5,0xf8,0x7d,0x65,0xf5,0x00,0xfa,0x5a,0xeb,0xcb,0x49,0x3a,0x80,0x29,0xce,0xf9,0x27,0xcf,0xc7,0xbd,0x88,0x80,0xce,0x3c,0x43,0xa2,0xf5};
    std::uint8_t addend59[32] = {0xe6,0x63,0x41,0x44,0xb6,0xff,0xad,0x59,0xfa,0x62,0xf2,0x1d,0xa8,0x1f,0xdc,0x1b,0x91,0x79,0x87,0x62,0xc2,0xc4,0x46,0xfa,0xe1,0xdf,0xb9,0xb2,0xc7,0x19,0x24,0x9a};
    std::uint8_t sum59[32]    = {0x36,0x7c,0x93,0xda,0x4e,0xa5,0xa5,0xd7,0x60,0x57,0xf3,0x18,0x03,0x0b,0xa7,0x64,0xcb,0xf9,0xb1,0x32,0xbb,0xec,0x16,0xc1,0x9f,0x68,0x3a,0x81,0x03,0x5c,0xc7,0x90};
    mont256_from_bytes(&ctx, augend, augend59);
    mont256_from_bytes(&ctx, addend, addend59);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum59, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend60[32] = {0x53,0x8f,0x8a,0x11,0xa9,0x85,0xd0,0x5e,0x82,0x8c,0x34,0x1d,0xd9,0x63,0xce,0x70,0x4e,0x2e,0x6f,0xf1,0x40,0xfd,0xf6,0x78,0xfd,0x79,0x44,0x9a,0x75,0xa2,0x52,0x88};
    std::uint8_t addend60[32] = {0x19,0x72,0xf9,0xdb,0xfe,0x00,0xa7,0x34,0x30,0x3b,0xe6,0x72,0x28,0x33,0xb6,0x63,0x95,0x89,0xd7,0xd5,0x84,0xf8,0x59,0xec,0x5a,0x5d,0x3a,0xcc,0x81,0x2b,0x23,0xfa};
    std::uint8_t sum60[32]    = {0x6d,0x02,0x83,0xed,0xa7,0x86,0x77,0x92,0xb2,0xc8,0x1a,0x90,0x01,0x97,0x84,0xd3,0xe3,0xb8,0x47,0xc6,0xc5,0xf6,0x50,0x65,0x57,0xd6,0x7f,0x66,0xf6,0xcd,0x76,0x82};
    mont256_from_bytes(&ctx, augend, augend60);
    mont256_from_bytes(&ctx, addend, addend60);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum60, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend61[32] = {0x49,0x55,0xa7,0xb3,0x41,0xe7,0x2a,0xd7,0xde,0xa6,0xe6,0x0d,0xd5,0xdf,0x7b,0x50,0xc8,0x1c,0xc1,0xc9,0x94,0xba,0x26,0x76,0x04,0x4c,0xf0,0x08,0xc2,0xbd,0x52,0xb7};
    std::uint8_t addend61[32] = {0x12,0xba,0x87,0xb6,0x80,0x99,0x06,0x0b,0x96,0xe9,0xb1,0xb9,0x65,0x39,0x6d,0x61,0x94,0x33,0xfd,0x99,0x47,0x29,0xc1,0x6b,0xff,0x90,0x6f,0x8a,0xd6,0xf8,0x7b,0x51};
    std::uint8_t sum61[32]    = {0x5c,0x10,0x2f,0x69,0xc2,0x80,0x30,0xe3,0x75,0x90,0x97,0xc7,0x3b,0x18,0xe8,0xb2,0x5c,0x50,0xbf,0x62,0xdb,0xe3,0xe7,0xe2,0x03,0xdd,0x5f,0x93,0x99,0xb5,0xce,0x08};
    mont256_from_bytes(&ctx, augend, augend61);
    mont256_from_bytes(&ctx, addend, addend61);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum61, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend62[32] = {0x9c,0xb2,0x4b,0xf9,0xa0,0xfa,0x24,0xed,0x28,0x66,0x49,0x4b,0x6d,0x5b,0xa2,0x07,0x31,0xc3,0xad,0xfd,0xf9,0xfe,0x38,0x78,0xdc,0x2b,0xe2,0xbe,0xfe,0x02,0x8b,0x33};
    std::uint8_t addend62[32] = {0xd0,0xe4,0x66,0x83,0xf0,0xa4,0xc5,0x83,0x45,0x00,0x9c,0x18,0xd1,0x77,0x5c,0xa5,0x03,0x8c,0x1c,0xfb,0xd2,0xcd,0xad,0x4a,0xb9,0x32,0x10,0xde,0xfd,0xc9,0x32,0xc9};
    std::uint8_t sum62[32]    = {0x6d,0x96,0xb2,0x7e,0x91,0x9e,0xea,0x70,0x6d,0x66,0xe5,0x64,0x3e,0xd2,0xfe,0xac,0x35,0x4f,0xca,0xfa,0xcc,0xcb,0xe5,0xc2,0x95,0x5d,0xf3,0x9d,0xfb,0xcb,0xbd,0xfd};
    mont256_from_bytes(&ctx, augend, augend62);
    mont256_from_bytes(&ctx, addend, addend62);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum62, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend63[32] = {0x8f,0x03,0x27,0x3f,0x9e,0xbc,0xa3,0xf2,0x0d,0x18,0x2e,0xcc,0xdf,0xc2,0x83,0xb7,0xd6,0xbe,0x06,0x45,0xc9,0xfb,0xbb,0x99,0xb6,0x5b,0x8a,0x94,0x6f,0xa3,0xb4,0xa0};
    std::uint8_t addend63[32] = {0xf2,0x9a,0xf3,0x28,0x5c,0x88,0xbc,0xbe,0xd1,0xd9,0x15,0x70,0x5c,0x31,0x23,0xed,0x32,0xf9,0xb2,0x79,0x23,0xe4,0xdd,0xe8,0x38,0x12,0xfb,0xbd,0xbd,0x30,0xa8,0x02};
    std::uint8_t sum63[32]    = {0x81,0x9e,0x1a,0x68,0xfb,0x45,0x60,0xb0,0xde,0xf1,0x44,0x3d,0x3b,0xf3,0xa7,0xa5,0x09,0xb7,0xb8,0xbf,0xed,0xe0,0x99,0x80,0xee,0x6e,0x86,0x52,0x2c,0xd4,0x5c,0xa3};
    mont256_from_bytes(&ctx, augend, augend63);
    mont256_from_bytes(&ctx, addend, addend63);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum63, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend64[32] = {0x82,0xe8,0x90,0x7a,0x7e,0xdc,0xff,0xb8,0xff,0x96,0x96,0xfc,0xe0,0x26,0xdc,0x26,0xe2,0xcf,0xa1,0x69,0x0d,0xae,0xe4,0x1a,0x26,0x77,0x51,0xba,0x3c,0x48,0xff,0xe0};
    std::uint8_t addend64[32] = {0x7f,0x00,0x56,0x79,0x40,0x7c,0xfe,0x1d,0x58,0x31,0x4b,0x0f,0xfc,0x4b,0x54,0xab,0xe7,0x64,0x47,0x2a,0xca,0xf6,0xe9,0xc7,0x80,0x3a,0xde,0x2f,0x35,0x81,0xf7,0x56};
    std::uint8_t sum64[32]    = {0x01,0xe8,0xe6,0xf4,0xbf,0x59,0xfd,0xd6,0x57,0xc7,0xe2,0x0c,0xdc,0x72,0x30,0xd2,0xca,0x33,0xe8,0x94,0xd8,0xa5,0xcd,0xe0,0xa6,0xb2,0x2f,0xe9,0x71,0xca,0xf7,0x37};
    mont256_from_bytes(&ctx, augend, augend64);
    mont256_from_bytes(&ctx, addend, addend64);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum64, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend65[32] = {0x36,0x67,0x36,0x77,0x63,0x7c,0xbc,0x92,0x2d,0x56,0xef,0xa6,0x2e,0xb3,0x4b,0x9e,0x65,0x95,0xf1,0x0d,0xee,0x01,0x86,0xb0,0xc5,0xcc,0x84,0x5a,0x77,0xd4,0xf3,0xed};
    std::uint8_t addend65[32] = {0x05,0x34,0x6f,0xda,0x88,0xb3,0xdd,0x59,0x71,0xd0,0xb9,0x62,0x57,0x5a,0x1d,0x2c,0xf5,0x61,0xe4,0x86,0x21,0xf4,0x37,0x45,0xe4,0x42,0xbd,0xe6,0x50,0xd9,0xc3,0xc2};
    std::uint8_t sum65[32]    = {0x3b,0x9b,0xa6,0x51,0xec,0x30,0x99,0xeb,0x9f,0x27,0xa9,0x08,0x86,0x0d,0x68,0xcb,0x5a,0xf7,0xd5,0x94,0x0f,0xf5,0xbd,0xf6,0xaa,0x0f,0x42,0x40,0xc8,0xae,0xb7,0xaf};
    mont256_from_bytes(&ctx, augend, augend65);
    mont256_from_bytes(&ctx, addend, addend65);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum65, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend66[32] = {0xe1,0x7f,0x68,0x40,0x5b,0x7e,0x83,0x5f,0xde,0xb3,0x12,0x19,0x14,0xd5,0x47,0x6a,0x3f,0x72,0x03,0x87,0x90,0x78,0xb5,0x4d,0xc3,0x76,0xf8,0x11,0x4f,0x7b,0xa7,0x18};
    std::uint8_t addend66[32] = {0xa5,0x35,0x11,0x7f,0xa1,0xf6,0xf7,0xca,0x89,0x33,0x8f,0x8d,0x7a,0x7a,0x7c,0x6c,0x1e,0xaf,0x16,0xa9,0xa8,0x08,0x2b,0xc7,0x1c,0x71,0x3a,0x82,0x58,0xd2,0x79,0x77};
    std::uint8_t sum66[32]    = {0x86,0xb4,0x79,0xc0,0xfd,0x75,0x7b,0x2a,0x67,0xe6,0xa1,0xa6,0x8f,0x4f,0xc3,0xd6,0x5e,0x21,0x1a,0x32,0x38,0x80,0xe1,0x13,0xdf,0xe8,0x32,0x93,0xa8,0x4e,0x20,0x90};
    mont256_from_bytes(&ctx, augend, augend66);
    mont256_from_bytes(&ctx, addend, addend66);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum66, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend67[32] = {0x80,0x5c,0xe0,0xfe,0x14,0x7d,0x17,0x80,0x63,0x17,0xe9,0xdb,0xa1,0xee,0xc6,0xe1,0x9e,0x66,0x70,0x8c,0xb2,0xfc,0x48,0x07,0x0c,0x93,0x72,0x7c,0xaf,0x8e,0xfb,0x8f};
    std::uint8_t addend67[32] = {0x41,0x3c,0x43,0xdc,0xac,0x59,0x8a,0xc4,0xc6,0xd6,0x94,0x15,0xb3,0x09,0x5c,0x4f,0x2b,0xc6,0xc2,0x8b,0x76,0xf0,0xf4,0x7b,0x24,0x75,0x13,0x44,0xa1,0x5f,0x31,0x34};
    std::uint8_t sum67[32]    = {0xc1,0x99,0x24,0xda,0xc0,0xd6,0xa2,0x45,0x29,0xee,0x7d,0xf1,0x54,0xf8,0x23,0x30,0xca,0x2d,0x33,0x18,0x29,0xed,0x3c,0x82,0x31,0x08,0x85,0xc1,0x50,0xee,0x2c,0xc3};
    mont256_from_bytes(&ctx, augend, augend67);
    mont256_from_bytes(&ctx, addend, addend67);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum67, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend68[32] = {0x68,0x14,0xe5,0xf7,0x02,0xcd,0x61,0xb6,0xe6,0xd8,0xe9,0x6a,0x46,0x69,0x1e,0xf8,0xbb,0x6a,0xf0,0x17,0x7b,0xaa,0x48,0xf3,0xba,0x54,0xc5,0xae,0x3b,0xc2,0x02,0x31};
    std::uint8_t addend68[32] = {0x21,0xe2,0xeb,0xd1,0xd5,0x29,0x70,0x1f,0x2c,0xae,0xc6,0x86,0x90,0xee,0x15,0x0e,0x7d,0xab,0x1a,0x3f,0x35,0xcb,0x17,0x8e,0x29,0x64,0xd0,0xe5,0x01,0x12,0xe6,0xe1};
    std::uint8_t sum68[32]    = {0x89,0xf7,0xd1,0xc8,0xd7,0xf6,0xd1,0xd6,0x13,0x87,0xaf,0xf0,0xd7,0x57,0x34,0x07,0x39,0x16,0x0a,0x56,0xb1,0x75,0x60,0x81,0xe3,0xb9,0x96,0x93,0x3c,0xd4,0xe9,0x12};
    mont256_from_bytes(&ctx, augend, augend68);
    mont256_from_bytes(&ctx, addend, addend68);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum68, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend69[32] = {0xa1,0xbe,0xba,0xbc,0xdd,0xb4,0xff,0x10,0xd9,0x4c,0xab,0xce,0x62,0x22,0xa6,0xa2,0x02,0x9f,0xd2,0x0a,0x67,0x2e,0xaf,0xa3,0x8a,0x40,0xf2,0xeb,0x71,0xe4,0x60,0x80};
    std::uint8_t addend69[32] = {0xd8,0x76,0xc4,0xce,0x52,0x77,0x07,0x57,0x75,0xe3,0x37,0x93,0xf3,0x4c,0x4b,0xe9,0x49,0x67,0x10,0x33,0xb1,0xb9,0x7d,0xbf,0x08,0x9c,0xee,0xa7,0x28,0x42,0x00,0xa7};
    std::uint8_t sum69[32]    = {0x7a,0x35,0x7f,0x8c,0x30,0x2c,0x06,0x68,0x4f,0x2f,0xe3,0x62,0x55,0x6e,0xf2,0x8b,0x4c,0x06,0xe2,0x3f,0x18,0xe8,0x2d,0x61,0x92,0xdd,0xe1,0x92,0x9a,0x26,0x61,0x28};
    mont256_from_bytes(&ctx, augend, augend69);
    mont256_from_bytes(&ctx, addend, addend69);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum69, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend70[32] = {0x22,0xcc,0x52,0xaa,0xe2,0xd3,0x3f,0x24,0x66,0xc1,0x1e,0xba,0x46,0xa6,0x10,0xbc,0x75,0xd6,0x78,0xc8,0xc6,0x85,0xb2,0x32,0xb5,0x36,0xc6,0xd8,0x3c,0x87,0x3b,0x6d};
    std::uint8_t addend70[32] = {0xd2,0x6b,0xe8,0x3d,0xdb,0x16,0xcc,0x09,0x84,0x0b,0x6a,0xc7,0x26,0x81,0xb4,0xfb,0x6e,0x04,0x63,0x74,0xfa,0xf8,0x33,0x13,0x40,0xb3,0xab,0x2c,0xc8,0x42,0xd6,0xc4};
    std::uint8_t sum70[32]    = {0xf5,0x38,0x3a,0xe8,0xbd,0xea,0x0b,0x2d,0xea,0xcc,0x89,0x81,0x6d,0x27,0xc5,0xb7,0xe3,0xda,0xdc,0x3d,0xc1,0x7d,0xe5,0x45,0xf5,0xea,0x72,0x05,0x04,0xca,0x12,0x31};
    mont256_from_bytes(&ctx, augend, augend70);
    mont256_from_bytes(&ctx, addend, addend70);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum70, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend71[32] = {0x8e,0x0d,0xed,0xb1,0x81,0x05,0x37,0xac,0x5b,0x81,0x6d,0x15,0xf3,0x3b,0x13,0xf1,0xb1,0x24,0xd6,0x0d,0xf2,0x23,0x2a,0x5f,0x74,0x1e,0xa4,0x13,0x1a,0xc7,0x51,0xbb};
    std::uint8_t addend71[32] = {0x44,0x73,0x4a,0x90,0x0f,0x70,0xf3,0x5e,0x95,0xa4,0x1f,0xec,0x7a,0x9e,0x5a,0xa6,0x7b,0x99,0x1b,0xac,0x6b,0x64,0x0c,0xc9,0x12,0x40,0x8f,0x35,0xe5,0x90,0xf8,0x37};
    std::uint8_t sum71[32]    = {0xd2,0x81,0x38,0x41,0x90,0x76,0x2b,0x0a,0xf1,0x25,0x8d,0x02,0x6d,0xd9,0x6e,0x98,0x2c,0xbd,0xf1,0xba,0x5d,0x87,0x37,0x28,0x86,0x5f,0x33,0x49,0x00,0x58,0x49,0xf2};
    mont256_from_bytes(&ctx, augend, augend71);
    mont256_from_bytes(&ctx, addend, addend71);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum71, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend72[32] = {0x19,0xdd,0x43,0x33,0xf1,0x99,0x05,0xdd,0x9d,0x45,0x7e,0x17,0xd8,0x15,0xb3,0x9a,0xfa,0xbb,0x97,0x5a,0x3c,0x20,0xca,0x37,0xa1,0xe7,0x43,0xd6,0xe7,0x93,0xc7,0x74};
    std::uint8_t addend72[32] = {0xa2,0xce,0xf0,0xf3,0x71,0x86,0x90,0x1c,0x7c,0x08,0x90,0xd7,0x54,0x22,0xda,0xbb,0x7f,0x31,0x54,0x5e,0xa5,0x42,0xfc,0xc9,0x72,0xd5,0xca,0x39,0x01,0xb8,0x5b,0xf4};
    std::uint8_t sum72[32]    = {0xbc,0xac,0x34,0x27,0x63,0x1f,0x95,0xfa,0x19,0x4e,0x0e,0xef,0x2c,0x38,0x8e,0x56,0x79,0xec,0xeb,0xb8,0xe1,0x63,0xc7,0x01,0x14,0xbd,0x0e,0x0f,0xe9,0x4c,0x23,0x68};
    mont256_from_bytes(&ctx, augend, augend72);
    mont256_from_bytes(&ctx, addend, addend72);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum72, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend73[32] = {0xba,0xbe,0x57,0xdc,0xe5,0x7e,0x9e,0xe1,0x12,0xf6,0xf5,0xd7,0xc0,0x4b,0x54,0x5e,0x15,0xca,0x72,0xff,0x4b,0xbc,0x58,0x6b,0xe7,0x03,0xad,0xd8,0xe3,0x0d,0x63,0xc0};
    std::uint8_t addend73[32] = {0x06,0x21,0x8e,0xe9,0x97,0xed,0x0b,0xc5,0x96,0xb0,0x9c,0x8d,0x3e,0x3c,0x3d,0x2d,0x3e,0x7f,0x20,0xd7,0x3c,0xda,0xf6,0x1b,0x9f,0xec,0xd7,0x70,0x9f,0xa5,0x91,0xbf};
    std::uint8_t sum73[32]    = {0xc0,0xdf,0xe6,0xc6,0x7d,0x6b,0xaa,0xa6,0xa9,0xa7,0x92,0x64,0xfe,0x87,0x91,0x8b,0x54,0x49,0x93,0xd6,0x88,0x97,0x4e,0x87,0x86,0xf0,0x85,0x49,0x82,0xb2,0xf5,0x7f};
    mont256_from_bytes(&ctx, augend, augend73);
    mont256_from_bytes(&ctx, addend, addend73);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum73, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend74[32] = {0x36,0xbf,0x39,0x12,0xf1,0x62,0x3e,0x7e,0x6f,0xf4,0x53,0x64,0xfa,0x62,0xe6,0xe4,0x59,0xcd,0x3c,0xe2,0xce,0xe6,0x88,0x14,0x31,0x5f,0x78,0x33,0x03,0x38,0x4f,0x92};
    std::uint8_t addend74[32] = {0xb8,0xd7,0xb4,0xc6,0xc7,0xa3,0x58,0x5d,0x3f,0x2d,0xd8,0x67,0x81,0x4c,0x1d,0x8d,0x2f,0xb2,0x79,0xd8,0xe3,0x19,0x19,0x20,0xf9,0x5b,0x3c,0x80,0xb5,0xa3,0xa9,0xce};
    std::uint8_t sum74[32]    = {0xef,0x96,0xed,0xd9,0xb9,0x05,0x96,0xdb,0xaf,0x22,0x2b,0xcc,0x7b,0xaf,0x04,0x71,0x89,0x7f,0xb6,0xbb,0xb1,0xff,0xa1,0x35,0x2a,0xba,0xb4,0xb3,0xb8,0xdb,0xf9,0x60};
    mont256_from_bytes(&ctx, augend, augend74);
    mont256_from_bytes(&ctx, addend, addend74);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum74, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend75[32] = {0xdd,0xa3,0xb2,0x31,0x85,0x26,0x87,0xe4,0x5c,0x9d,0xda,0x81,0xc2,0xc7,0xfa,0x71,0x5c,0xbc,0xa4,0xcd,0xad,0x7f,0x00,0x4b,0x27,0xd8,0x77,0x87,0x64,0x5e,0xe2,0x20};
    std::uint8_t addend75[32] = {0xdc,0x6f,0x5e,0x72,0x26,0xb4,0x32,0x1d,0x00,0xfb,0x1f,0xa4,0xd0,0x2a,0x90,0x37,0x0a,0x02,0xc8,0xfb,0xae,0x48,0x7c,0x19,0x0c,0xd7,0x2b,0x50,0x9f,0x1e,0xfe,0x4a};
    std::uint8_t sum75[32]    = {0xba,0x13,0x10,0xa4,0xab,0xda,0xba,0x01,0x5d,0x98,0xfa,0x26,0x92,0xf2,0x8a,0xa8,0x66,0xbf,0x6d,0xca,0x5b,0xc7,0x7c,0x63,0x34,0xaf,0xa2,0xd8,0x03,0x7d,0xe0,0x6b};
    mont256_from_bytes(&ctx, augend, augend75);
    mont256_from_bytes(&ctx, addend, addend75);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum75, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend76[32] = {0xc5,0x0c,0xcf,0x03,0x4a,0x99,0x34,0xf0,0xe6,0xc6,0xfa,0xe2,0x85,0xdf,0x24,0x35,0x5d,0xca,0x2c,0x99,0x7b,0xe6,0xcf,0x16,0x25,0xca,0xb9,0x42,0x6b,0xf0,0x89,0xfc};
    std::uint8_t addend76[32] = {0x8b,0x8d,0x0c,0x7f,0x60,0xe6,0xfd,0x27,0x9d,0xe5,0xc8,0xfa,0x0e,0xf0,0xcf,0xaa,0x74,0x4f,0xee,0xf6,0xca,0x4f,0x26,0xc4,0xbc,0xa4,0x62,0x90,0xfc,0xcb,0xdc,0xc1};
    std::uint8_t sum76[32]    = {0x50,0x99,0xdb,0x83,0xab,0x80,0x32,0x18,0x84,0xac,0xc3,0xdc,0x94,0xcf,0xf3,0xdf,0xd2,0x1a,0x1b,0x91,0x46,0x35,0xf5,0xd9,0xe2,0x6f,0x1b,0xd3,0x68,0xbc,0x66,0xbe};
    mont256_from_bytes(&ctx, augend, augend76);
    mont256_from_bytes(&ctx, addend, addend76);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum76, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend77[32] = {0x50,0x43,0x04,0xf0,0x1f,0x23,0x75,0xb7,0x9d,0xfb,0xd9,0x3f,0xbd,0x3e,0x7f,0x63,0x8f,0x54,0xb1,0x81,0xfa,0x38,0xc9,0x52,0xe6,0xbf,0x8d,0xb8,0xc6,0x3b,0xc2,0x47};
    std::uint8_t addend77[32] = {0x80,0xbf,0x7c,0x8c,0x4f,0xc5,0x26,0x81,0x24,0x62,0x35,0x9d,0xe9,0x9d,0xcc,0xfb,0x02,0x31,0xba,0xdc,0x7b,0x68,0x3b,0xc4,0x8b,0x9e,0x7f,0x88,0xfb,0xa4,0x1e,0x0a};
    std::uint8_t sum77[32]    = {0xd1,0x02,0x81,0x7c,0x6e,0xe8,0x9c,0x38,0xc2,0x5e,0x0e,0xdd,0xa6,0xdc,0x4c,0x5e,0x91,0x86,0x6c,0x5e,0x75,0xa1,0x05,0x17,0x72,0x5e,0x0d,0x41,0xc1,0xdf,0xe0,0x51};
    mont256_from_bytes(&ctx, augend, augend77);
    mont256_from_bytes(&ctx, addend, addend77);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum77, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend78[32] = {0x0f,0xa9,0x26,0x2a,0x31,0x41,0xf7,0x41,0x25,0xce,0x9d,0x7c,0x4f,0x9a,0xb5,0x8e,0x2a,0x91,0x22,0xeb,0x51,0x87,0xe7,0x38,0x0c,0x6a,0xd2,0x2f,0xc8,0xb7,0xb7,0xf1};
    std::uint8_t addend78[32] = {0x30,0x32,0xa9,0x49,0x5b,0xa2,0xe0,0x9b,0x52,0x66,0xe9,0x63,0x62,0x78,0xe3,0xd5,0x6a,0xea,0x23,0xa4,0x77,0x22,0x12,0x3c,0xd7,0x05,0xff,0xb7,0x53,0x57,0xdf,0xa2};
    std::uint8_t sum78[32]    = {0x3f,0xdb,0xcf,0x73,0x8c,0xe4,0xd7,0xdc,0x78,0x35,0x86,0xdf,0xb2,0x13,0x99,0x63,0x95,0x7b,0x46,0x8f,0xc8,0xa9,0xf9,0x74,0xe3,0x70,0xd1,0xe7,0x1c,0x0f,0x97,0x93};
    mont256_from_bytes(&ctx, augend, augend78);
    mont256_from_bytes(&ctx, addend, addend78);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum78, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend79[32] = {0x71,0x28,0xc6,0xda,0x60,0x83,0x9c,0x8c,0xfe,0xd4,0x31,0xe0,0xa5,0xb5,0x99,0x2f,0x41,0xea,0xab,0x13,0x51,0xd7,0xe7,0x06,0xbd,0xbf,0x54,0xdf,0x7e,0x79,0xe5,0x53};
    std::uint8_t addend79[32] = {0xb6,0x8b,0x07,0x2e,0x06,0xb2,0x6d,0xbb,0x91,0x26,0x56,0x4a,0xc9,0x6f,0xd5,0xe1,0xc4,0x6f,0xe7,0x6b,0xf6,0x92,0xc8,0x05,0x35,0xc6,0x56,0xbb,0x15,0xab,0x38,0xcc};
    std::uint8_t sum79[32]    = {0x27,0xb3,0xce,0x09,0x67,0x36,0x0a,0x48,0x8f,0xfa,0x88,0x2b,0x6f,0x25,0x6f,0x11,0x06,0x5a,0x92,0x80,0x48,0x6a,0xaf,0x0a,0xf3,0x85,0xab,0x9a,0x94,0x25,0x1e,0x20};
    mont256_from_bytes(&ctx, augend, augend79);
    mont256_from_bytes(&ctx, addend, addend79);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum79, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend80[32] = {0xae,0x88,0x51,0xe9,0x0c,0xc8,0x90,0xe1,0x90,0x64,0xd1,0x5e,0xcb,0xad,0x5f,0x31,0x62,0x3d,0xf9,0xa2,0x28,0xc0,0x69,0x31,0xba,0x96,0xa3,0xdc,0xa9,0x5c,0x2f,0xd8};
    std::uint8_t addend80[32] = {0x34,0x0d,0xf9,0xfe,0x55,0x5d,0xf6,0xcd,0x19,0x9b,0xd3,0xe1,0x7f,0xaf,0x69,0xd5,0x89,0x16,0x2d,0x09,0x40,0x43,0x2d,0x7c,0x76,0x01,0x42,0x43,0x2a,0x14,0x20,0x38};
    std::uint8_t sum80[32]    = {0xe2,0x96,0x4b,0xe7,0x62,0x26,0x87,0xae,0xaa,0x00,0xa5,0x40,0x4b,0x5c,0xc9,0x06,0xeb,0x54,0x26,0xab,0x69,0x03,0x96,0xae,0x30,0x97,0xe6,0x1f,0xd3,0x70,0x50,0x10};
    mont256_from_bytes(&ctx, augend, augend80);
    mont256_from_bytes(&ctx, addend, addend80);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum80, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend81[32] = {0xfa,0xcc,0xd0,0xa8,0x7f,0xc9,0x72,0x5d,0x9e,0xc8,0xbf,0xdb,0x56,0x18,0xfa,0x6d,0xf2,0xc3,0xe2,0x00,0x61,0x58,0xc6,0xd5,0x39,0x7c,0x41,0xbf,0x59,0x3d,0x34,0xe3};
    std::uint8_t addend81[32] = {0xf3,0xac,0xff,0xbc,0x69,0xa0,0xdd,0xcc,0x24,0x25,0x6f,0x29,0xd3,0x31,0x38,0x8c,0x49,0x5b,0x4f,0x78,0x80,0x1c,0xf9,0xc0,0xbe,0x5b,0x83,0xac,0x89,0xff,0x14,0xef};
    std::uint8_t sum81[32]    = {0xee,0x79,0xd0,0x65,0xe9,0x6a,0x50,0x29,0xc2,0xee,0x2f,0x05,0x29,0x4a,0x32,0xfa,0x3c,0x1f,0x31,0x79,0xe1,0x75,0xc0,0x94,0xf7,0xd7,0xc5,0x6b,0xe3,0x3c,0x49,0xd3};
    mont256_from_bytes(&ctx, augend, augend81);
    mont256_from_bytes(&ctx, addend, addend81);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum81, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend82[32] = {0xe5,0x96,0xf8,0xa3,0x78,0xf2,0xeb,0xec,0x78,0x4a,0xbd,0xcb,0xde,0x2e,0xcb,0x4d,0x9d,0x34,0x2c,0xba,0x2b,0x4f,0x59,0x0b,0x95,0x9f,0x83,0xae,0x23,0xaa,0x8a,0x46};
    std::uint8_t addend82[32] = {0xc9,0x9a,0x36,0x33,0x0f,0xf5,0x48,0x6c,0x9b,0xf4,0x34,0x13,0xd3,0x60,0x9a,0x26,0x02,0x08,0x99,0xdc,0xb9,0xc5,0x73,0xed,0xe5,0xe3,0x58,0xd4,0xbf,0x5b,0xf9,0xec};
    std::uint8_t sum82[32]    = {0xaf,0x31,0x2e,0xd7,0x88,0xe8,0x34,0x59,0x14,0x3e,0xf1,0xdf,0xb1,0x8f,0x65,0x73,0x9f,0x3c,0xc6,0x97,0xe5,0x14,0xcc,0xf8,0x7b,0x82,0xdc,0x82,0xe3,0x06,0x84,0x33};
    mont256_from_bytes(&ctx, augend, augend82);
    mont256_from_bytes(&ctx, addend, addend82);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum82, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend83[32] = {0x0c,0x42,0x12,0x58,0x85,0xa2,0x24,0x1b,0xd1,0x2e,0x26,0xe8,0xf0,0x6e,0x32,0x82,0xab,0x26,0xf8,0xb5,0x07,0x84,0xcb,0xc4,0x06,0x2a,0x5a,0x35,0x62,0x18,0x89,0xa6};
    std::uint8_t addend83[32] = {0x27,0x35,0x35,0x8a,0x75,0xb5,0x05,0x4a,0x79,0x13,0x00,0x9a,0x62,0x46,0xc5,0xa6,0xb8,0x8e,0xef,0x45,0xf5,0xf0,0xc9,0xcf,0xca,0x97,0x67,0x29,0xd5,0x89,0x99,0xb2};
    std::uint8_t sum83[32]    = {0x33,0x77,0x47,0xe2,0xfb,0x57,0x29,0x66,0x4a,0x41,0x27,0x83,0x52,0xb4,0xf8,0x29,0x63,0xb5,0xe7,0xfa,0xfd,0x75,0x95,0x93,0xd0,0xc1,0xc1,0x5f,0x37,0xa2,0x23,0x58};
    mont256_from_bytes(&ctx, augend, augend83);
    mont256_from_bytes(&ctx, addend, addend83);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum83, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend84[32] = {0x91,0x0e,0x9f,0xc5,0x57,0x55,0x64,0xa3,0x46,0xac,0xe8,0x11,0x82,0x0f,0x8f,0x2f,0xea,0xc4,0xed,0xa7,0xfb,0xba,0x02,0x6c,0x14,0x16,0x62,0x56,0xa8,0x2c,0xd8,0x01};
    std::uint8_t addend84[32] = {0xab,0xcb,0xae,0xb5,0x5a,0x4a,0xb4,0x47,0x65,0xf0,0x7d,0xce,0xea,0xbf,0x13,0xd8,0xa6,0x52,0x8b,0x4a,0x82,0xbd,0x9e,0x1d,0xd7,0x7a,0x44,0xed,0xe4,0x88,0xf5,0x3d};
    std::uint8_t sum84[32]    = {0x3c,0xda,0x4e,0x7b,0xb1,0xa0,0x18,0xea,0xac,0x9d,0x65,0xe0,0x6c,0xce,0xa3,0x08,0x91,0x17,0x78,0xf3,0x7e,0x77,0xa0,0x88,0xeb,0x90,0xa7,0x44,0x8c,0xb5,0xcd,0x3f};
    mont256_from_bytes(&ctx, augend, augend84);
    mont256_from_bytes(&ctx, addend, addend84);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum84, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend85[32] = {0x1a,0xd7,0x8e,0x4e,0x5b,0x8c,0x91,0xb8,0x24,0x6a,0x93,0xdb,0x6d,0xe9,0x67,0x0a,0xa4,0x02,0xa8,0x1c,0xc9,0x45,0x15,0x46,0xd9,0x21,0x99,0xab,0x04,0x9f,0x34,0x57};
    std::uint8_t addend85[32] = {0x97,0xc1,0x68,0x96,0xc2,0xea,0xa1,0x11,0x3d,0x97,0x64,0xba,0xf3,0xb3,0x96,0x82,0xe9,0xe9,0xef,0x88,0xfe,0xd5,0xb8,0xdf,0x25,0xa3,0x0d,0x2c,0x17,0x7b,0x44,0xc6};
    std::uint8_t sum85[32]    = {0xb2,0x98,0xf6,0xe5,0x1e,0x77,0x32,0xc9,0x62,0x01,0xf8,0x96,0x61,0x9c,0xfd,0x8d,0x8d,0xec,0x97,0xa5,0xc8,0x1a,0xce,0x25,0xfe,0xc4,0xa6,0xd7,0x1c,0x1a,0x79,0x1d};
    mont256_from_bytes(&ctx, augend, augend85);
    mont256_from_bytes(&ctx, addend, addend85);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum85, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend86[32] = {0x3d,0xf7,0xe3,0x30,0x28,0xb9,0xeb,0x55,0xc0,0x59,0x80,0x0b,0x41,0x32,0x98,0x1f,0x8c,0x79,0xe5,0x1d,0x3d,0xd9,0x36,0xff,0x59,0x11,0x35,0xa8,0xb0,0xae,0xda,0x6c};
    std::uint8_t addend86[32] = {0xcd,0x2f,0x27,0x79,0xc8,0x34,0x5f,0x7f,0x28,0x73,0x46,0x3e,0xdc,0x02,0xdc,0x6a,0xe7,0xfc,0x9e,0x13,0xe8,0x11,0x4d,0x5b,0xde,0xe4,0xc1,0x7b,0xa1,0x50,0x0e,0x85};
    std::uint8_t sum86[32]    = {0x0b,0x27,0x0a,0xaa,0xf0,0xee,0x4a,0xd4,0xe8,0xcc,0xc6,0x4a,0x1d,0x35,0x74,0x8a,0x74,0x76,0x83,0x32,0x25,0xea,0x84,0x5a,0x37,0xf5,0xf7,0x24,0x51,0xfe,0xe8,0xf2};
    mont256_from_bytes(&ctx, augend, augend86);
    mont256_from_bytes(&ctx, addend, addend86);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum86, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend87[32] = {0x4f,0x2c,0x07,0xb5,0x9f,0x56,0xc9,0xd0,0x95,0x39,0xbe,0x3f,0x7b,0x17,0xea,0xc7,0x00,0x17,0xb5,0xc3,0x78,0x9d,0xf0,0xd1,0xec,0xc4,0xd9,0xfe,0xe7,0x39,0xed,0x6a};
    std::uint8_t addend87[32] = {0xe7,0x73,0xa9,0xcb,0xa4,0x40,0x1d,0x25,0x4f,0xef,0x1a,0xe0,0x3d,0xaf,0x97,0xac,0xfb,0x3e,0x52,0x66,0x56,0x2c,0x08,0xb7,0x22,0xb0,0xd2,0x24,0xc8,0xd3,0xbb,0x42};
    std::uint8_t sum87[32]    = {0x36,0x9f,0xb1,0x82,0x43,0x96,0xe6,0xf5,0xe5,0x28,0xd9,0x1f,0xb8,0xc7,0x82,0x73,0xfb,0x56,0x08,0x2a,0xce,0xc9,0xf9,0x88,0x0f,0x75,0xac,0x23,0xb0,0x0d,0xa8,0xad};
    mont256_from_bytes(&ctx, augend, augend87);
    mont256_from_bytes(&ctx, addend, addend87);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum87, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend88[32] = {0x91,0xd0,0x56,0xbb,0xbf,0x68,0x3a,0x28,0xe5,0x45,0xe7,0x0c,0xa7,0xaf,0x1c,0xa1,0xa0,0x8e,0xae,0x52,0x66,0x63,0xc2,0x1c,0xc5,0xe9,0x5c,0x04,0x20,0xa1,0xbd,0x93};
    std::uint8_t addend88[32] = {0xe1,0x67,0xa9,0x8f,0x9a,0xaf,0x00,0x58,0x5b,0x41,0xc4,0xb1,0x7c,0xce,0x4d,0x4b,0x3e,0x51,0x3f,0x68,0x65,0x59,0x10,0x5f,0x18,0x81,0x4e,0xf5,0x1e,0x0d,0x47,0xc3};
    std::uint8_t sum88[32]    = {0x73,0x38,0x00,0x4c,0x5a,0x17,0x3a,0x81,0x40,0x87,0xab,0xbe,0x24,0x7d,0x69,0xec,0xde,0xdf,0xed,0xbb,0xcb,0xbc,0xd2,0x7a,0xde,0x6a,0xaa,0xf9,0x3e,0xaf,0x05,0x57};
    mont256_from_bytes(&ctx, augend, augend88);
    mont256_from_bytes(&ctx, addend, addend88);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum88, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend89[32] = {0xc7,0xd5,0x47,0xf3,0xc3,0xab,0x37,0xa1,0xa6,0x05,0x19,0x3b,0x3b,0x03,0x67,0x97,0x5f,0xdc,0x5e,0xab,0x36,0xcf,0x3c,0x75,0xd3,0x5d,0x9f,0x02,0x77,0x93,0xca,0x03};
    std::uint8_t addend89[32] = {0xb5,0x1c,0x59,0x04,0x3f,0xf9,0xce,0xde,0xdc,0xd1,0xea,0x11,0x7d,0x92,0x01,0x3b,0x92,0x7c,0x7c,0x87,0xb1,0xe5,0xd9,0xbb,0xf6,0xa0,0x8c,0xcd,0x55,0x7e,0xdb,0x7a};
    std::uint8_t sum89[32]    = {0x7c,0xf1,0xa0,0xf9,0x03,0xa5,0x06,0x80,0x82,0xd7,0x03,0x4c,0xb8,0x95,0x68,0xd2,0xf2,0x58,0xdb,0x33,0xe8,0xb5,0x16,0x30,0xc9,0xfe,0x2b,0xcf,0xcd,0x12,0xa5,0x7e};
    mont256_from_bytes(&ctx, augend, augend89);
    mont256_from_bytes(&ctx, addend, addend89);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum89, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend90[32] = {0x77,0xf6,0x6b,0x3b,0x87,0x51,0x6b,0x32,0xf6,0xaf,0x6c,0x3a,0x25,0x59,0xd5,0x81,0x1f,0x66,0x54,0xff,0x8a,0xca,0xc1,0x3d,0xbe,0x38,0xef,0x60,0xb0,0x76,0x11,0xdb};
    std::uint8_t addend90[32] = {0x76,0xf4,0x36,0x74,0xc5,0x9a,0x2d,0x4b,0x93,0x34,0x2b,0xee,0x17,0xb0,0x0e,0x7a,0xb0,0x1d,0xd1,0x24,0xb3,0x12,0x2a,0x16,0x76,0xce,0x62,0x96,0x1c,0xe5,0xa5,0x87};
    std::uint8_t sum90[32]    = {0xee,0xea,0xa1,0xb0,0x4c,0xeb,0x98,0x7e,0x89,0xe3,0x98,0x28,0x3d,0x09,0xe3,0xfb,0xcf,0x84,0x26,0x24,0x3d,0xdc,0xeb,0x54,0x35,0x07,0x51,0xf6,0xcd,0x5b,0xb7,0x62};
    mont256_from_bytes(&ctx, augend, augend90);
    mont256_from_bytes(&ctx, addend, addend90);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum90, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend91[32] = {0xa4,0x8f,0x25,0xd5,0xea,0x5d,0x75,0xd6,0xbc,0x3f,0xf2,0x54,0xc6,0x38,0x4e,0x47,0x5e,0x4a,0x36,0x2e,0x30,0xc6,0xa2,0x27,0xe0,0xaa,0xa0,0x7a,0x68,0xb8,0xb2,0x5a};
    std::uint8_t addend91[32] = {0x1f,0xe1,0x60,0xb4,0xb6,0xaa,0x90,0x70,0x7b,0x3a,0xef,0x34,0x51,0x50,0xca,0xd1,0x37,0x46,0x0d,0xa9,0x1e,0x39,0x86,0x09,0x67,0xdd,0x01,0x91,0x89,0x26,0x2b,0xef};
    std::uint8_t sum91[32]    = {0xc4,0x70,0x86,0x8a,0xa1,0x08,0x06,0x47,0x37,0x7a,0xe1,0x89,0x17,0x89,0x19,0x18,0x95,0x90,0x43,0xd7,0x4f,0x00,0x28,0x31,0x48,0x87,0xa2,0x0b,0xf1,0xde,0xde,0x49};
    mont256_from_bytes(&ctx, augend, augend91);
    mont256_from_bytes(&ctx, addend, addend91);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum91, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend92[32] = {0x72,0x8d,0x5c,0x1b,0x6c,0x36,0xa5,0x41,0x63,0x1f,0xa0,0xd3,0xfb,0x13,0xd9,0x9f,0xec,0xc5,0xff,0x68,0x07,0x6e,0xb2,0xeb,0x8e,0xa1,0x11,0xac,0x41,0xcb,0x4b,0x54};
    std::uint8_t addend92[32] = {0xa0,0xda,0xf9,0x6f,0xe7,0x98,0xd0,0x3f,0xde,0x96,0x93,0xd2,0xb9,0x33,0xb7,0x5b,0x77,0x51,0xa9,0x47,0xcf,0xa6,0x25,0x41,0xc0,0xc4,0x93,0xc7,0x82,0x93,0x33,0x96};
    std::uint8_t sum92[32]    = {0x13,0x68,0x55,0x8c,0x53,0xcf,0x75,0x81,0x41,0xb6,0x34,0xa6,0xb4,0x47,0x90,0xfb,0x64,0x17,0xa8,0xb0,0xd7,0x14,0xd8,0x2c,0x4f,0x65,0xa5,0x73,0xc4,0x5e,0x7e,0xeb};
    mont256_from_bytes(&ctx, augend, augend92);
    mont256_from_bytes(&ctx, addend, addend92);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum92, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend93[32] = {0xf9,0x42,0xde,0xb8,0x9f,0xe6,0x2f,0x56,0x31,0x24,0xf6,0xdc,0x03,0xa6,0xc9,0x72,0xef,0x23,0x6e,0x66,0x02,0x61,0x7f,0xc5,0xf9,0x2d,0x51,0x3f,0xb9,0x78,0x52,0xd4};
    std::uint8_t addend93[32] = {0xd4,0x55,0x7f,0x59,0xc4,0x3c,0x39,0xd4,0xbe,0x0e,0xa1,0xcc,0x25,0x64,0xf1,0xa9,0xce,0x21,0xb4,0x75,0x1f,0x34,0x22,0xf6,0xd3,0x07,0x6d,0x27,0x13,0x96,0xf6,0xa4};
    std::uint8_t sum93[32]    = {0xcd,0x98,0x5e,0x13,0x64,0x22,0x69,0x2a,0xef,0x33,0x98,0xa8,0x29,0x0b,0xbb,0x1c,0xbd,0x45,0x22,0xdc,0x21,0x95,0xa2,0xbb,0xcc,0x34,0xbe,0x66,0xcd,0x0f,0x49,0x79};
    mont256_from_bytes(&ctx, augend, augend93);
    mont256_from_bytes(&ctx, addend, addend93);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum93, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend94[32] = {0x6e,0x0d,0x01,0xa3,0xc6,0xd4,0x5a,0xd6,0x9b,0xe1,0xd7,0xb4,0x7a,0x39,0x3d,0xb6,0x1d,0x67,0xa5,0x89,0x6a,0xe0,0x38,0x14,0x6b,0x36,0x04,0x4e,0xa5,0x4c,0xa1,0x17};
    std::uint8_t addend94[32] = {0xce,0x3f,0x1c,0x59,0x22,0xed,0xbf,0x5f,0x9b,0x40,0xdc,0xf4,0x17,0x65,0xf9,0xc9,0x9f,0xbd,0x9a,0x0e,0xa0,0xf3,0x01,0x02,0xd9,0xbb,0x45,0xde,0xb6,0x2c,0x7a,0x71};
    std::uint8_t sum94[32]    = {0x3c,0x4c,0x1d,0xfd,0xe9,0xc2,0x1a,0x36,0x37,0x22,0xb4,0xa8,0x91,0x9f,0x37,0x7f,0xbd,0x25,0x3f,0x99,0x0b,0xd3,0x39,0x16,0x44,0xf1,0x4a,0x2d,0x5b,0x79,0x1b,0x89};
    mont256_from_bytes(&ctx, augend, augend94);
    mont256_from_bytes(&ctx, addend, addend94);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum94, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend95[32] = {0x01,0x78,0x4b,0xa7,0xf8,0xe7,0xe8,0x40,0x01,0x37,0xe3,0x22,0x51,0xeb,0x7c,0xad,0xbd,0x26,0xd2,0x25,0x7b,0xd3,0x60,0xfe,0xf1,0x22,0xc1,0x1a,0x0b,0x31,0x00,0x22};
    std::uint8_t addend95[32] = {0xb2,0x22,0x43,0xf9,0xb1,0x40,0x8e,0xd5,0x29,0x43,0xcd,0x04,0x74,0x94,0x00,0x64,0xf5,0x02,0x95,0x8d,0x2c,0x80,0xce,0xf3,0xda,0x37,0x6e,0x92,0xf9,0x40,0xd7,0x65};
    std::uint8_t sum95[32]    = {0xb3,0x9a,0x8f,0xa1,0xaa,0x28,0x77,0x15,0x2a,0x7b,0xb0,0x26,0xc6,0x7f,0x7d,0x12,0xb2,0x29,0x67,0xb2,0xa8,0x54,0x2f,0xf2,0xcb,0x5a,0x2f,0xad,0x04,0x71,0xd7,0x87};
    mont256_from_bytes(&ctx, augend, augend95);
    mont256_from_bytes(&ctx, addend, addend95);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum95, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend96[32] = {0x89,0xd9,0x6c,0x81,0x29,0xc3,0x86,0x5e,0xad,0xc5,0x99,0xf2,0x78,0x52,0xc6,0x7d,0x51,0x9f,0x32,0x9e,0x1b,0x41,0x44,0xce,0x34,0x05,0x0b,0xff,0xe7,0x36,0x7c,0xe3};
    std::uint8_t addend96[32] = {0xb6,0x19,0x92,0xff,0xf7,0x28,0x71,0xb1,0xfe,0xcc,0xb4,0xcb,0x3e,0xdb,0xa9,0xa8,0x62,0x9f,0xa2,0xe6,0x8a,0x7f,0x0d,0x1d,0x87,0xe3,0x56,0xa6,0x59,0xcb,0x97,0x69};
    std::uint8_t sum96[32]    = {0x3f,0xf2,0xff,0x82,0x20,0xeb,0xf8,0x10,0xac,0x92,0x4e,0xbd,0xb7,0x2e,0x70,0x25,0xb4,0x3e,0xd5,0x85,0xa5,0xc0,0x51,0xea,0xbb,0xe8,0x62,0xa6,0x41,0x02,0x14,0x4d};
    mont256_from_bytes(&ctx, augend, augend96);
    mont256_from_bytes(&ctx, addend, addend96);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum96, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend97[32] = {0xc2,0x77,0x32,0xd0,0xf8,0x3c,0x84,0xc5,0xf6,0x45,0xe8,0x82,0xbe,0xfa,0xdb,0x29,0xcc,0xd3,0x04,0x07,0xce,0xdf,0xe0,0x9d,0x76,0xe6,0xc1,0x88,0x38,0x2a,0x78,0x33};
    std::uint8_t addend97[32] = {0x9f,0xe4,0x75,0x7c,0x43,0xac,0x42,0xe2,0xa3,0xe2,0x1d,0x51,0x24,0xf4,0x60,0x8d,0x36,0x69,0x6b,0x99,0x53,0xd1,0x53,0xe7,0x37,0x69,0x5b,0x10,0x49,0x54,0x52,0xe1};
    std::uint8_t sum97[32]    = {0x62,0x5b,0xa8,0x4e,0x3b,0xe8,0xc7,0xa8,0x9a,0x28,0x05,0xd3,0xe3,0xef,0x3b,0xb7,0x03,0x3c,0x6f,0xa2,0x22,0xb1,0x34,0x83,0xae,0x50,0x1c,0x98,0x81,0x7e,0xcb,0x15};
    mont256_from_bytes(&ctx, augend, augend97);
    mont256_from_bytes(&ctx, addend, addend97);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum97, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend98[32] = {0x4a,0x86,0x62,0xa3,0xfc,0x3b,0xba,0x98,0x54,0x67,0xa2,0x51,0xc0,0x87,0x9a,0x71,0x78,0x8f,0x5e,0x10,0xd9,0x34,0x40,0x3d,0xd9,0x70,0x62,0x75,0x1f,0xc4,0x27,0xf9};
    std::uint8_t addend98[32] = {0xfb,0xc4,0x48,0x76,0xbb,0x5b,0xd0,0x2f,0x10,0x1b,0x43,0x47,0xbb,0xd8,0x38,0xc7,0x6a,0x3a,0x28,0x9f,0x9c,0x00,0xd5,0x51,0x30,0x77,0x76,0x8e,0xe7,0x5d,0x84,0x86};
    std::uint8_t sum98[32]    = {0x46,0x4a,0xab,0x1b,0xb7,0x97,0x8a,0xc7,0x64,0x82,0xe5,0x99,0x7c,0x5f,0xd3,0x38,0xe2,0xc9,0x86,0xb1,0x75,0x35,0x15,0x8e,0x09,0xe7,0xd9,0x04,0x07,0x21,0xac,0x80};
    mont256_from_bytes(&ctx, augend, augend98);
    mont256_from_bytes(&ctx, addend, addend98);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum98, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }

    std::uint8_t augend99[32] = {0x61,0x57,0x5c,0xb4,0x15,0x1b,0x77,0xa3,0x06,0xe0,0xf6,0x70,0xb2,0x85,0x71,0xd4,0xa0,0x9c,0xe9,0x43,0xa7,0x95,0x5a,0x56,0x79,0x5d,0x7e,0x61,0x14,0xf0,0x78,0x25};
    std::uint8_t addend99[32] = {0x0e,0xf9,0x1c,0xdc,0x5e,0x8b,0xfc,0x53,0xd6,0xc2,0xd3,0x80,0xd1,0x9e,0x0d,0x54,0x87,0x99,0x87,0x09,0x9c,0x4e,0x5b,0x73,0xf4,0x09,0x67,0xf9,0xe6,0x8d,0xd4,0xc6};
    std::uint8_t sum99[32]    = {0x70,0x50,0x79,0x90,0x73,0xa7,0x73,0xf6,0xdd,0xa3,0xc9,0xf1,0x84,0x23,0x7f,0x29,0x28,0x36,0x70,0x4d,0x43,0xe3,0xb5,0xca,0x6d,0x66,0xe6,0x5a,0xfb,0x7e,0x4c,0xeb};
    mont256_from_bytes(&ctx, augend, augend99);
    mont256_from_bytes(&ctx, addend, addend99);
    mont256_add(&ctx, sum, augend, addend);
    mont256_to_bytes(&ctx, sum_data, sum);
    if (std::memcmp(sum99, sum_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_add");
    }
}