#include <gmlib/number/internal/mont256_common.h>
#include <gmlib/number/internal/uint256_common.h>
#include <stdexcept>
#include <cstring>

using namespace number::internal::common;

static std::uint8_t  P_data[32]      = {0xff,0xff,0xff,0xfe,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff};
static std::uint8_t  P_SUB2_data[32] = {0xff,0xff,0xff,0xfe,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfd};
static std::uint8_t  R_data[32]      = {0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01};
static std::uint8_t  R_POW2_data[32] = {0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x02,0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x03};
static std::uint32_t N_              = 1;

void test_mont256_common_sqr()
{
    uint256_t P, P_SUB2, R, R_POW2;
    uint256_from_bytes(P, P_data);
    uint256_from_bytes(P_SUB2, P_SUB2_data);
    uint256_from_bytes(R, R_data);
    uint256_from_bytes(R_POW2, R_POW2_data);

    Mont256CTX ctx;
    ctx.P = P, ctx.P_SUB2 = P_SUB2;
    ctx.R = R, ctx.R_POW2 = R_POW2;
    ctx.N_ = N_;

    mont256_t    multiplier, product;
    std::uint8_t product_data[32];

    std::uint8_t multiplier0[32] = {0xf6,0xf3,0x79,0x3d,0xc8,0x52,0xee,0x4b,0x88,0xf2,0x0a,0x8f,0x9b,0x2c,0xa9,0xa4,0x41,0xa5,0x3b,0x7c,0x2e,0x29,0xf6,0x95,0x76,0x41,0xdb,0x63,0x43,0xbc,0xba,0x77};
    std::uint8_t product0[32]    = {0xdc,0xd3,0x2c,0x32,0x4b,0xe1,0xaa,0xa3,0x45,0xe0,0x65,0x79,0x24,0xef,0x1b,0x06,0xf9,0x11,0xa9,0x04,0x70,0x04,0x91,0x9b,0x72,0xe7,0xad,0xaf,0x2e,0xbc,0x2b,0xad};
    mont256_from_bytes(&ctx, multiplier, multiplier0);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product0, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier1[32] = {0x09,0x29,0x37,0x70,0x64,0x44,0xf8,0x8a,0xc8,0x22,0x30,0xb8,0xbc,0x9c,0xfa,0xdd,0x8a,0x88,0x70,0x3e,0x59,0x4f,0xc1,0x06,0x46,0x3b,0x22,0xf4,0xa5,0x45,0x69,0x95};
    std::uint8_t product1[32]    = {0x60,0xfc,0x4c,0x08,0xe9,0x98,0x1d,0x7b,0x6e,0x17,0x45,0xf0,0x5a,0x72,0x2e,0xfa,0x88,0x8a,0x58,0xa5,0x46,0xa2,0x24,0xf7,0x26,0x77,0x86,0x83,0x4c,0x18,0x50,0x7b};
    mont256_from_bytes(&ctx, multiplier, multiplier1);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product1, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier2[32] = {0xdf,0x7c,0x0e,0xa2,0x32,0xe7,0x46,0x2e,0xba,0x39,0x38,0x90,0x4b,0x4b,0xd2,0xa4,0x42,0xf6,0x61,0xfd,0x57,0x4a,0xbe,0x8a,0xee,0x0d,0xab,0xe9,0x71,0xf5,0xc9,0x02};
    std::uint8_t product2[32]    = {0x7c,0x78,0x7c,0x4d,0xa2,0x00,0xf4,0xd3,0x6a,0x6b,0xfc,0x54,0xe7,0x41,0xea,0x70,0x57,0x65,0x63,0x2b,0x50,0x5d,0xbe,0x23,0x8d,0x8a,0xf2,0x44,0x5c,0x9f,0xfb,0x9c};
    mont256_from_bytes(&ctx, multiplier, multiplier2);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product2, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier3[32] = {0x58,0x20,0x6a,0x79,0x16,0x6b,0xe4,0x7a,0x57,0xa0,0xdb,0x1a,0x3c,0x31,0x46,0x9a,0x91,0x9d,0x57,0x51,0x8c,0xc0,0x34,0xb9,0xe9,0x80,0x0b,0x44,0xe8,0x3e,0x88,0x76};
    std::uint8_t product3[32]    = {0xd0,0x39,0xe3,0x27,0x84,0x85,0xa4,0x58,0xdf,0x91,0xdc,0xb1,0x26,0xc9,0x36,0x3f,0x63,0x7e,0x5f,0x71,0x19,0xd9,0x8b,0x7f,0x42,0x60,0xa3,0xed,0xe2,0x6a,0x51,0x6f};
    mont256_from_bytes(&ctx, multiplier, multiplier3);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product3, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier4[32] = {0x80,0xc7,0x63,0x4e,0xba,0xc0,0xb4,0xf0,0xa2,0x33,0xd5,0xe4,0xd6,0x48,0x1e,0x76,0x5c,0x37,0xe4,0xfc,0xf7,0x94,0x4b,0x5e,0x68,0x71,0x82,0xe3,0x72,0x2b,0xd2,0x3f};
    std::uint8_t product4[32]    = {0x74,0xe2,0x98,0x1a,0x30,0x97,0x2f,0x0b,0x3c,0x54,0x10,0x0c,0x22,0x61,0xe6,0xe7,0x11,0x95,0x3b,0x41,0x10,0x10,0x37,0x06,0x00,0x62,0x6c,0x8b,0xd5,0x18,0x0d,0x71};
    mont256_from_bytes(&ctx, multiplier, multiplier4);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product4, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier5[32] = {0x59,0x00,0x60,0x5a,0x46,0x83,0x4e,0x54,0x32,0xfe,0x9c,0x65,0x72,0x27,0x58,0x22,0x29,0x16,0x45,0x8f,0x8f,0xc7,0xe4,0x12,0x7b,0xb2,0x38,0x9b,0x3c,0xb0,0xdb,0xf9};
    std::uint8_t product5[32]    = {0x3e,0x8d,0xe8,0xf8,0x05,0x03,0x55,0x24,0x48,0x81,0xf7,0x3c,0x14,0x81,0x49,0x2a,0x56,0x30,0x11,0xbd,0x2e,0x7d,0x1d,0xfc,0x4f,0xe7,0xbb,0x73,0x27,0x9d,0xa5,0x7c};
    mont256_from_bytes(&ctx, multiplier, multiplier5);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product5, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier6[32] = {0x3b,0xb7,0x5d,0x49,0xb1,0x0a,0x51,0x72,0x6d,0x03,0x32,0x70,0x24,0x03,0xd0,0x59,0x1e,0xb8,0xbe,0xc7,0xc0,0xea,0x59,0xb9,0x2a,0x6f,0xfe,0x84,0x49,0x06,0x85,0x32};
    std::uint8_t product6[32]    = {0xdb,0xe3,0xf7,0x98,0x0e,0x05,0xea,0x2e,0x8d,0x95,0xf1,0x07,0xc5,0xed,0x30,0xb3,0x86,0x0d,0x3e,0xb7,0x22,0x66,0x89,0x1d,0x63,0x6a,0x48,0xe4,0x24,0xd4,0xc6,0xf2};
    mont256_from_bytes(&ctx, multiplier, multiplier6);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product6, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier7[32] = {0xb6,0x07,0x98,0xa6,0x6b,0xfe,0x5c,0xa5,0xde,0xd8,0x2b,0x2f,0xd1,0x14,0xc6,0x56,0x4f,0xe4,0xc5,0xed,0xa7,0x7c,0x6e,0x74,0x47,0xb2,0x7c,0xd8,0x7b,0xf7,0xf6,0x31};
    std::uint8_t product7[32]    = {0x6d,0x97,0x17,0x0c,0x36,0x49,0x9b,0x2e,0xa5,0xdb,0xbc,0x37,0xbf,0x2f,0x3d,0xbb,0x58,0x4d,0x8b,0xbb,0x10,0xa0,0x92,0xe1,0x3f,0x0b,0x08,0x73,0x8a,0x8d,0xc9,0xc9};
    mont256_from_bytes(&ctx, multiplier, multiplier7);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product7, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier8[32] = {0xda,0xb0,0xd8,0xec,0xd8,0x99,0x02,0x40,0x6a,0xc5,0xbc,0xec,0x60,0x14,0x87,0x16,0x5c,0xd0,0xac,0xa7,0xe1,0xec,0x82,0x9a,0xd6,0xe4,0x8d,0x3d,0xc2,0xa3,0x20,0x09};
    std::uint8_t product8[32]    = {0xae,0x67,0x68,0x7a,0x56,0x26,0x3f,0x4e,0x94,0xe4,0x3c,0x65,0xe1,0x9e,0x83,0xf9,0x66,0xf0,0x95,0x9e,0x64,0x83,0xe8,0x72,0x0e,0x0c,0x67,0xec,0x52,0x6b,0x44,0x41};
    mont256_from_bytes(&ctx, multiplier, multiplier8);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product8, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier9[32] = {0xb4,0xe7,0x29,0x2c,0xe1,0xbb,0x72,0xf6,0xac,0x58,0xe9,0x44,0x4d,0x8e,0x39,0x5c,0xe4,0x49,0xaa,0xfa,0xe7,0xed,0x49,0x1b,0x28,0x90,0x4b,0xd6,0xef,0x24,0x71,0x66};
    std::uint8_t product9[32]    = {0x97,0x85,0x53,0xb7,0xeb,0x84,0xa4,0x3b,0xc0,0xd9,0x73,0x0e,0xde,0xe7,0x29,0x30,0xa7,0x68,0x1f,0xf9,0x98,0x22,0x8d,0x79,0x83,0xd5,0xf1,0x50,0xe1,0x07,0xa1,0x47};
    mont256_from_bytes(&ctx, multiplier, multiplier9);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product9, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier10[32] = {0x45,0xa6,0xed,0x28,0xcd,0xf6,0xcc,0x08,0x07,0x7b,0x8b,0x7f,0xe5,0x06,0x2a,0xd3,0x5b,0xeb,0x48,0x6d,0xe2,0x27,0x97,0xee,0x1c,0x33,0x17,0xca,0xa2,0x66,0x42,0x62};
    std::uint8_t product10[32]    = {0x91,0xd3,0x93,0xd9,0x68,0xbf,0xc4,0xf1,0x5e,0x1d,0xd8,0xae,0x5c,0x3a,0x6c,0x99,0x4b,0x05,0x01,0x29,0x0d,0xe6,0x91,0x1c,0xba,0x05,0x2a,0x4e,0x3c,0x55,0x55,0x90};
    mont256_from_bytes(&ctx, multiplier, multiplier10);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product10, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier11[32] = {0xf7,0x82,0x9a,0x83,0xa9,0x84,0xbb,0x4f,0xf0,0x56,0x0e,0xed,0x51,0x1c,0x6a,0x2a,0x77,0x35,0xf9,0xb7,0x76,0xee,0xe2,0xd0,0x93,0xed,0xc1,0x38,0xe4,0x79,0x4a,0xc0};
    std::uint8_t product11[32]    = {0xf1,0x36,0x67,0x95,0x7f,0x5d,0x09,0xff,0x13,0x92,0x92,0x01,0x19,0xe9,0xf1,0x94,0x22,0xa3,0xbe,0x44,0x44,0x31,0x23,0x81,0xf7,0xe2,0xac,0x02,0x20,0x63,0x74,0x76};
    mont256_from_bytes(&ctx, multiplier, multiplier11);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product11, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier12[32] = {0x22,0x61,0x65,0x92,0x84,0x0f,0x31,0x1c,0x9f,0xb8,0x6c,0x19,0xa7,0x29,0x7f,0xe5,0x0c,0x62,0x86,0xa0,0x13,0xf3,0x83,0xcb,0x52,0x20,0x2c,0x90,0xe8,0x79,0x69,0x7d};
    std::uint8_t product12[32]    = {0xa0,0xf9,0x1a,0xe4,0x4b,0x66,0x78,0x6f,0x12,0x33,0x41,0x9b,0x0a,0x2f,0xcb,0xdf,0x05,0xd9,0x44,0x6e,0x7b,0x4d,0x68,0x70,0x61,0x60,0x53,0x49,0xfe,0xef,0xa4,0x4d};
    mont256_from_bytes(&ctx, multiplier, multiplier12);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product12, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier13[32] = {0x95,0x70,0x7f,0x2c,0x27,0x69,0x7b,0x55,0x08,0xdb,0x89,0xb1,0xea,0xa9,0x5f,0x1c,0xd2,0x33,0x37,0x91,0x71,0x8f,0x59,0xa9,0xdf,0xc3,0x48,0x4c,0x46,0xce,0x29,0xad};
    std::uint8_t product13[32]    = {0x0e,0x28,0x7e,0x6c,0xa8,0x11,0xfe,0xd2,0x72,0xbf,0xdf,0x56,0xc9,0x0e,0xe9,0x35,0x5b,0x7e,0xba,0x6b,0x9c,0x48,0xf6,0x46,0x96,0x82,0x40,0x36,0xb4,0xf2,0xb0,0x73};
    mont256_from_bytes(&ctx, multiplier, multiplier13);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product13, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier14[32] = {0x2e,0x4b,0xba,0xf4,0x1a,0x26,0xf5,0xb8,0x9d,0x9a,0x49,0xd5,0x74,0x5f,0xfe,0x14,0x3d,0x61,0x1a,0xb4,0xb7,0xba,0xcf,0x5b,0x07,0x62,0x47,0x9c,0xac,0xdc,0x56,0x0f};
    std::uint8_t product14[32]    = {0xc2,0x57,0x2d,0xe0,0x7f,0x9c,0x6e,0x81,0x93,0x58,0x53,0x6e,0x43,0x51,0xf2,0xa7,0xf4,0x49,0x3f,0x57,0xbd,0x4f,0xd4,0x3c,0x41,0xe9,0x55,0xd2,0x46,0xaa,0x53,0xb7};
    mont256_from_bytes(&ctx, multiplier, multiplier14);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product14, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier15[32] = {0x85,0x24,0x16,0x6a,0x9a,0xff,0xdd,0xbd,0xb9,0x0e,0xb0,0x15,0xc1,0xe1,0x92,0xab,0x30,0xe8,0x0a,0x40,0xf7,0x2a,0xd6,0x9f,0xa3,0x77,0x3d,0xc9,0x63,0xff,0xad,0xe2};
    std::uint8_t product15[32]    = {0x12,0x10,0x32,0x27,0xea,0x57,0x43,0xdc,0xaf,0xb0,0x3f,0xf2,0x6a,0x77,0xf4,0x16,0x00,0x80,0x62,0xcc,0x5e,0xac,0x8e,0xeb,0x31,0x56,0xe1,0x57,0xff,0x44,0xba,0x0b};
    mont256_from_bytes(&ctx, multiplier, multiplier15);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product15, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier16[32] = {0x13,0xb2,0x14,0x8b,0xb5,0x2f,0x51,0x68,0x51,0x67,0x71,0x21,0xc2,0x6e,0xea,0xdb,0xf1,0xc6,0xb3,0x75,0xfd,0x79,0x75,0x85,0xfd,0x14,0xee,0x00,0xab,0xb4,0x3e,0x01};
    std::uint8_t product16[32]    = {0x43,0xa4,0x8f,0xf7,0x7b,0xcb,0xb7,0x1b,0xb0,0x4e,0x3e,0x43,0xe8,0x01,0x9c,0x42,0xc1,0x19,0xdf,0x17,0xbe,0x73,0x3b,0x3e,0x4f,0x46,0x48,0x05,0x70,0xf7,0xbb,0x79};
    mont256_from_bytes(&ctx, multiplier, multiplier16);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product16, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier17[32] = {0x26,0xce,0xef,0x51,0x20,0xb6,0xa0,0xa4,0x8a,0x0c,0x57,0x79,0x8c,0x79,0xa1,0xb3,0xac,0x4d,0xac,0x7d,0x42,0xfc,0x8b,0x27,0x71,0x4e,0xcc,0xf5,0x4f,0x96,0xa8,0x30};
    std::uint8_t product17[32]    = {0xbc,0xfc,0x0b,0x14,0x6b,0xc0,0xc1,0x74,0xaa,0x81,0x98,0xc1,0x90,0xa0,0x9f,0x56,0x08,0x0e,0x8b,0xcb,0x8a,0x19,0xd6,0xdd,0xa9,0x6b,0xff,0x32,0xeb,0x3a,0x32,0x44};
    mont256_from_bytes(&ctx, multiplier, multiplier17);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product17, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier18[32] = {0xa6,0xd3,0xed,0x7a,0xcc,0x35,0x05,0x79,0x3f,0x84,0xf4,0x9a,0xaf,0x0c,0xfc,0x7a,0x60,0x0e,0xa3,0x7f,0xec,0x2c,0x05,0xe2,0x72,0x22,0x35,0xf5,0xcf,0xd1,0xce,0xd7};
    std::uint8_t product18[32]    = {0x51,0xdb,0xf7,0x94,0x2c,0x10,0x20,0x97,0x29,0xcc,0x2d,0x24,0xc9,0xd0,0xf9,0x7c,0x9b,0x69,0x27,0xf2,0x1a,0xfd,0xa3,0x06,0xb5,0xbd,0xe6,0x92,0xee,0xad,0x81,0x3a};
    mont256_from_bytes(&ctx, multiplier, multiplier18);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product18, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier19[32] = {0x08,0x7d,0x6f,0xfe,0xd6,0x6b,0x22,0x02,0x2c,0xb5,0x5f,0xf4,0x97,0x84,0xd6,0xdc,0x41,0x4d,0x90,0xad,0xe6,0x55,0x3f,0xf8,0x44,0xab,0xe2,0x7d,0x59,0x35,0x51,0x06};
    std::uint8_t product19[32]    = {0x0f,0x9d,0xe0,0xee,0x11,0x73,0xe0,0x9f,0x05,0xe0,0xd7,0xc5,0xef,0x0b,0x34,0x6a,0x50,0x8a,0x16,0x6b,0x6d,0xce,0xaa,0x02,0xd3,0x2f,0x14,0xee,0xf0,0xa7,0xb5,0xb3};
    mont256_from_bytes(&ctx, multiplier, multiplier19);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product19, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier20[32] = {0x17,0xa5,0x29,0x9b,0xb8,0x75,0x84,0xd3,0xae,0x73,0x8f,0xff,0xae,0x8e,0x72,0x4c,0x0c,0x24,0xe3,0x13,0xf0,0x2d,0x68,0x4d,0x71,0x2e,0x1d,0xcb,0x20,0xa6,0xf9,0x0b};
    std::uint8_t product20[32]    = {0x8c,0x02,0xbe,0x8c,0xf1,0xfc,0xbf,0xc2,0x5c,0xbe,0x58,0x40,0xb8,0xf3,0x58,0x43,0x93,0x75,0x62,0x9c,0x9c,0x80,0xee,0x30,0x17,0x45,0x8a,0xe4,0xbe,0xec,0x22,0x1c};
    mont256_from_bytes(&ctx, multiplier, multiplier20);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product20, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier21[32] = {0xfe,0x8f,0xc0,0xe5,0x7b,0x78,0xa6,0x0f,0xde,0xc5,0x9b,0x1d,0x12,0x4e,0x18,0x1d,0x3c,0xe1,0x1e,0x94,0x8d,0xdc,0x9e,0x6f,0xe1,0x81,0x7b,0x1f,0x51,0xef,0xd3,0xe0};
    std::uint8_t product21[32]    = {0x44,0x6a,0xe5,0x6a,0x2c,0xba,0xbc,0x2a,0x18,0x14,0x56,0xdd,0x5f,0x2b,0x61,0xb5,0x0c,0x62,0x16,0xeb,0xee,0xda,0x5a,0xa5,0x4b,0xe3,0x6e,0x5d,0xda,0x4f,0x89,0x82};
    mont256_from_bytes(&ctx, multiplier, multiplier21);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product21, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier22[32] = {0x8e,0xc1,0x78,0x8c,0xd3,0x3a,0x94,0xfc,0x52,0xca,0xd6,0x9f,0x65,0x66,0xea,0x22,0x9a,0xde,0xbd,0x9b,0x8d,0x9d,0x3a,0x89,0x37,0xf4,0xe7,0x79,0xe8,0x6a,0xd7,0x38};
    std::uint8_t product22[32]    = {0xfb,0x68,0x1d,0xd1,0xca,0xae,0x46,0x2e,0xa0,0xe8,0x1d,0x31,0x8c,0x35,0x68,0xb0,0x07,0xe4,0xd8,0x27,0xb9,0x96,0x13,0x98,0xab,0x41,0x0b,0xec,0x61,0xb8,0x76,0x18};
    mont256_from_bytes(&ctx, multiplier, multiplier22);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product22, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier23[32] = {0xa9,0xc9,0xfb,0xae,0x0b,0x62,0x9b,0x18,0xbd,0xa3,0xa0,0x0d,0x69,0x08,0x92,0xa8,0x38,0x5f,0x23,0x08,0x42,0xde,0x9a,0x6d,0x15,0xd0,0xc3,0xd8,0xce,0xa4,0xdf,0xad};
    std::uint8_t product23[32]    = {0x21,0x40,0xf9,0x12,0x01,0x1f,0xd4,0xa7,0x80,0x78,0xb1,0xcd,0x95,0xbc,0x03,0x79,0xc3,0xf7,0xed,0xef,0x70,0x94,0xe9,0x29,0x01,0xd8,0x79,0xaa,0xe8,0xae,0x36,0xb1};
    mont256_from_bytes(&ctx, multiplier, multiplier23);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product23, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier24[32] = {0xc0,0xb8,0x8b,0xd8,0xfe,0x87,0xdc,0xf1,0x7c,0x71,0xee,0x1a,0xa0,0x35,0x7e,0x44,0xce,0x32,0xe3,0xac,0x49,0x8d,0x22,0x07,0x65,0xe9,0xd7,0xb2,0xc6,0x00,0x70,0x1d};
    std::uint8_t product24[32]    = {0x9e,0x80,0xf0,0xbe,0xaa,0x6d,0xc7,0x73,0x8b,0x63,0x03,0x68,0x41,0x98,0x4f,0xc0,0xf6,0xcb,0x8b,0x6e,0x5c,0x84,0xdb,0x80,0x67,0x7c,0x8f,0xb9,0x66,0x6c,0x29,0x11};
    mont256_from_bytes(&ctx, multiplier, multiplier24);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product24, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier25[32] = {0xe5,0xe7,0xe0,0x13,0x45,0x90,0xe2,0x1f,0x12,0x0f,0x29,0xd4,0x27,0x88,0x3e,0xf2,0x63,0x91,0x99,0x60,0xef,0xb8,0x99,0x6a,0x31,0xb5,0xa1,0xd2,0xf4,0xea,0x8c,0x7c};
    std::uint8_t product25[32]    = {0x4d,0x4d,0x2a,0x33,0x1b,0x28,0xd7,0xf6,0x20,0x02,0x85,0x88,0xaf,0x06,0xff,0x62,0x58,0xfd,0x67,0xc4,0xda,0x2b,0xa2,0x60,0xea,0x4a,0x36,0x4c,0x9e,0xfd,0xa5,0xd7};
    mont256_from_bytes(&ctx, multiplier, multiplier25);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product25, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier26[32] = {0xbe,0x2d,0xa0,0x9d,0xbd,0x6b,0xca,0xbb,0xd3,0x31,0x80,0xd6,0x50,0x3a,0x69,0x54,0x78,0x34,0x7c,0x84,0x5b,0x21,0xd9,0x58,0xd2,0x97,0x79,0xeb,0x34,0xeb,0x3e,0x20};
    std::uint8_t product26[32]    = {0x27,0xf8,0xc4,0x96,0x0c,0xa6,0x6d,0xfc,0x8a,0x0d,0x7a,0x07,0x41,0x7c,0x6f,0x9a,0xb2,0xea,0xb9,0xb5,0xa3,0xed,0x1a,0x34,0x19,0x25,0x90,0x86,0x95,0xf7,0x84,0x2d};
    mont256_from_bytes(&ctx, multiplier, multiplier26);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product26, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier27[32] = {0x0f,0x23,0xa7,0xe3,0x4f,0xd0,0x01,0x50,0x90,0xb9,0xee,0x28,0xf7,0x62,0x41,0xf7,0x0d,0x43,0xad,0x22,0x6b,0x87,0xef,0x1d,0x83,0x37,0x1e,0xeb,0xce,0xb3,0xd8,0xf7};
    std::uint8_t product27[32]    = {0xd0,0x28,0x3c,0xa0,0x9c,0x2f,0xba,0x09,0x33,0xc4,0x3b,0xfa,0x7b,0xaf,0xea,0x3f,0x58,0x4a,0xa0,0x4c,0x47,0xf2,0x4d,0x54,0x78,0x6f,0xa0,0x6e,0x9e,0x3b,0xa5,0xd8};
    mont256_from_bytes(&ctx, multiplier, multiplier27);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product27, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier28[32] = {0x2c,0x6c,0x50,0xc3,0x7e,0x5b,0xf7,0xcb,0x7b,0xe9,0xc7,0x44,0xb7,0x12,0xb4,0x10,0x66,0x3d,0x74,0xa0,0x50,0xb9,0x8a,0x92,0x4b,0x1f,0x77,0xbc,0xa7,0xf7,0xf0,0xaf};
    std::uint8_t product28[32]    = {0x7e,0x19,0x4d,0x8e,0x49,0x92,0xf6,0xad,0x57,0xfa,0xcf,0x58,0xbb,0x9b,0x7a,0xde,0xe1,0x30,0x88,0xab,0x2a,0xaa,0x39,0x17,0xae,0x2e,0xb0,0x44,0x27,0x13,0x60,0x2d};
    mont256_from_bytes(&ctx, multiplier, multiplier28);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product28, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier29[32] = {0x72,0x2d,0xb6,0xe6,0x60,0x82,0xa0,0x51,0xd6,0x8a,0x25,0xe0,0x53,0xba,0xf7,0x83,0x7a,0x18,0x92,0x33,0x70,0xe5,0xcf,0xba,0x33,0xcb,0x1f,0xde,0x44,0x2a,0xeb,0xd5};
    std::uint8_t product29[32]    = {0x62,0x95,0x7f,0xe2,0x34,0x19,0x5b,0x94,0x43,0x59,0x66,0xdd,0x01,0x97,0x00,0x12,0x74,0x0e,0x4d,0xa5,0xd5,0x9c,0xf0,0xb0,0x69,0x88,0x55,0x7d,0x65,0x44,0x65,0xab};
    mont256_from_bytes(&ctx, multiplier, multiplier29);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product29, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier30[32] = {0x4f,0xf7,0x48,0xdd,0x22,0x2d,0x57,0xc8,0xdf,0x64,0xed,0x7e,0xc9,0xc1,0x08,0x58,0x5d,0x0b,0xdb,0x9e,0xb2,0x67,0xd7,0x0c,0x44,0x10,0xa4,0xe2,0xc0,0xb9,0x04,0xc7};
    std::uint8_t product30[32]    = {0xb8,0xfc,0x79,0x85,0x16,0x71,0xe7,0x4d,0x78,0x34,0xa4,0x07,0x90,0x4e,0xbe,0x52,0x98,0x7e,0x35,0x83,0xca,0x1a,0x6e,0xa7,0x3f,0x98,0x28,0x27,0x7f,0xcd,0x6c,0x1f};
    mont256_from_bytes(&ctx, multiplier, multiplier30);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product30, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier31[32] = {0xcf,0x6a,0x0e,0xd8,0x35,0x6d,0x1e,0x6b,0xf4,0x98,0xdd,0xf6,0xeb,0xbe,0xf6,0x8a,0x5c,0x8d,0x46,0xb4,0x0f,0x17,0x66,0x69,0x28,0x41,0x5b,0xf1,0xe9,0x3e,0xd7,0xe7};
    std::uint8_t product31[32]    = {0xe2,0x9a,0x6d,0x08,0x26,0x17,0x7d,0x70,0x2d,0x2d,0x25,0xa9,0x33,0x23,0x59,0x2d,0x2c,0xa8,0x73,0x88,0x5b,0xc9,0x44,0x05,0xaf,0x7b,0xa2,0x92,0x13,0xf8,0xce,0x84};
    mont256_from_bytes(&ctx, multiplier, multiplier31);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product31, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier32[32] = {0x4c,0x5d,0x2e,0x4a,0xd6,0xac,0x7e,0xd5,0x22,0xd1,0x7e,0x78,0x77,0x77,0x62,0xcb,0x16,0x08,0xc8,0x40,0x4c,0xb6,0x38,0x67,0x72,0x25,0x9a,0x14,0xb0,0x35,0x6d,0x81};
    std::uint8_t product32[32]    = {0x0f,0x25,0xc2,0x2c,0xc1,0x77,0xf2,0xf4,0x53,0xf9,0x34,0x57,0x8c,0xc4,0xae,0x3d,0x09,0xc2,0xf5,0xfe,0x64,0x18,0x22,0xa7,0x79,0xc7,0xb8,0x07,0xb5,0xb7,0x1c,0xda};
    mont256_from_bytes(&ctx, multiplier, multiplier32);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product32, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier33[32] = {0x8a,0x43,0x3f,0xf1,0x15,0x50,0x88,0xc2,0x26,0xdf,0x4f,0x78,0x3c,0x48,0xde,0x78,0x43,0xaa,0x97,0x8e,0x3b,0xef,0x9d,0xd9,0x54,0x56,0xe7,0x42,0xd6,0xc8,0xb8,0x3f};
    std::uint8_t product33[32]    = {0x29,0xde,0x7f,0xd3,0x14,0x34,0xa1,0xe0,0x54,0x11,0x1a,0x34,0x62,0x57,0x85,0xa8,0xd7,0x9b,0x05,0xc6,0x35,0xb4,0xab,0x4d,0x46,0x60,0x1e,0x1e,0x8b,0x70,0xd6,0xc8};
    mont256_from_bytes(&ctx, multiplier, multiplier33);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product33, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier34[32] = {0xb5,0x7d,0xf7,0xce,0x90,0xe4,0xec,0x94,0x15,0xbd,0xab,0xaf,0x13,0x91,0xe7,0xd4,0x21,0x79,0x98,0x86,0xd9,0xfb,0x43,0xb7,0x53,0x5c,0x0d,0xf1,0x83,0x5e,0x73,0xb8};
    std::uint8_t product34[32]    = {0xe9,0x28,0xc3,0x5f,0x9b,0x51,0x79,0x4b,0x0e,0x99,0x01,0x65,0x96,0x29,0x40,0x98,0x61,0x25,0xfd,0xd2,0x50,0x10,0x2e,0x0c,0xc1,0x40,0x0c,0x98,0xd6,0x39,0xbb,0xeb};
    mont256_from_bytes(&ctx, multiplier, multiplier34);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product34, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier35[32] = {0xa5,0x73,0x73,0x51,0x31,0x5b,0x51,0x06,0xfd,0xb9,0xcb,0x6b,0x99,0xf7,0xa7,0xb2,0x6b,0x43,0x7a,0x80,0x4b,0xb5,0x45,0xd5,0x51,0xe6,0x63,0x71,0x54,0xa0,0x84,0x34};
    std::uint8_t product35[32]    = {0x2a,0x02,0xaa,0x20,0xe1,0x0e,0xa8,0x20,0x99,0xe3,0x14,0xc7,0x93,0xa0,0x6d,0xd7,0xa6,0x80,0x34,0x14,0xfe,0xe1,0x5b,0xf6,0x86,0xff,0x9e,0x8e,0x4e,0x35,0x9b,0x45};
    mont256_from_bytes(&ctx, multiplier, multiplier35);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product35, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier36[32] = {0x60,0xc1,0x39,0x00,0x64,0x74,0xa4,0x1c,0x5f,0xff,0x48,0x46,0x01,0xb0,0x03,0xc7,0x42,0x83,0x25,0xf6,0xc8,0xa3,0xc4,0xed,0x8c,0x38,0x50,0x9a,0xce,0x37,0x19,0x17};
    std::uint8_t product36[32]    = {0x2b,0x23,0x63,0x77,0x23,0xa4,0xda,0x0c,0xe7,0xda,0x65,0xb9,0x5a,0xc2,0xd3,0x27,0x21,0x8c,0xad,0x0d,0x4f,0xdd,0x20,0xd5,0x4d,0xf0,0xb9,0x7b,0xca,0x8a,0x69,0xbd};
    mont256_from_bytes(&ctx, multiplier, multiplier36);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product36, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier37[32] = {0xa3,0x38,0xa3,0xdc,0xb5,0x45,0xc3,0x3f,0x37,0xd6,0x6c,0x86,0x34,0x18,0x59,0xdd,0x83,0xb3,0x41,0xb3,0x80,0xae,0xae,0xf6,0xa6,0xd6,0x51,0xf8,0x65,0x00,0xc3,0xbd};
    std::uint8_t product37[32]    = {0x08,0x9b,0xe6,0xc0,0x31,0xda,0xf1,0x6f,0xad,0x9b,0xb0,0x09,0x7f,0xfc,0xc4,0xd6,0xbf,0x65,0xd6,0x59,0x1b,0x37,0xe4,0x72,0x52,0x07,0x09,0x64,0xa2,0xb0,0x50,0x96};
    mont256_from_bytes(&ctx, multiplier, multiplier37);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product37, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier38[32] = {0x07,0x65,0x44,0xa7,0x70,0x3a,0x76,0xfa,0x18,0xc3,0x85,0x13,0x1f,0xbc,0xda,0x29,0x15,0x92,0xbb,0xc0,0x0b,0x4c,0x7d,0xc1,0x61,0xce,0x55,0xcf,0xda,0x71,0x10,0x45};
    std::uint8_t product38[32]    = {0xff,0xf7,0xcd,0xe3,0x0b,0xa4,0xa4,0xc0,0x78,0x58,0xf2,0x7c,0xbc,0x4c,0x48,0x47,0x5c,0xaa,0xa6,0x7a,0xe1,0x62,0x84,0x15,0x7b,0xdf,0x97,0x5f,0xee,0x6c,0xcd,0xa9};
    mont256_from_bytes(&ctx, multiplier, multiplier38);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product38, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier39[32] = {0x62,0xc2,0xde,0x82,0x66,0x12,0x8a,0x4a,0xfc,0xce,0xbe,0x6d,0xa9,0xe8,0x01,0xf1,0xb3,0xe2,0xab,0x90,0x72,0x15,0x8b,0x48,0x29,0x64,0xb5,0x74,0xfa,0x80,0x68,0x30};
    std::uint8_t product39[32]    = {0xb0,0xb9,0x00,0xad,0x6a,0x27,0xf9,0x22,0x0d,0xb6,0xe7,0xf1,0x41,0x0a,0xcb,0x47,0xed,0x5b,0x2c,0xa9,0x13,0x6a,0x09,0x42,0x1d,0x70,0x48,0x6a,0x3c,0x4f,0xe4,0x49};
    mont256_from_bytes(&ctx, multiplier, multiplier39);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product39, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier40[32] = {0xed,0xcb,0xcf,0xaa,0x91,0x76,0x1a,0xde,0xd1,0x62,0x4b,0x25,0xc5,0x30,0x32,0xc8,0xf2,0x43,0x3a,0xf2,0xcb,0x38,0xcd,0x62,0x2c,0x7f,0x62,0x5e,0x06,0x3b,0x9e,0x2d};
    std::uint8_t product40[32]    = {0x35,0x77,0xf3,0xeb,0xce,0x92,0x9a,0x3f,0x2e,0x94,0x09,0xc8,0xbf,0xd1,0xed,0x9a,0xbc,0x24,0x69,0xfe,0xfc,0x3e,0x96,0xfb,0xae,0xf6,0x00,0x35,0x3b,0xd0,0xbb,0x3a};
    mont256_from_bytes(&ctx, multiplier, multiplier40);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product40, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier41[32] = {0x73,0x66,0x75,0x17,0x17,0xe1,0xc2,0x63,0xab,0xd7,0x9a,0x0f,0xec,0xa8,0x2d,0x63,0x9d,0xb0,0xdf,0xa2,0xd3,0x03,0x9f,0x64,0x34,0x1b,0x74,0x03,0xe0,0x5e,0xc8,0xec};
    std::uint8_t product41[32]    = {0x85,0x8f,0x31,0x0f,0x90,0x8c,0x3e,0xbc,0xe9,0x26,0xab,0x25,0x06,0x41,0x8b,0x1f,0x68,0x58,0x6f,0x1a,0xbd,0xc7,0x3b,0xb4,0x9e,0xc8,0x62,0xeb,0xb3,0x99,0x11,0x8a};
    mont256_from_bytes(&ctx, multiplier, multiplier41);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product41, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier42[32] = {0xb8,0x98,0x91,0x1b,0x3e,0xe9,0x05,0x3b,0x76,0xe4,0xce,0x6d,0xce,0x94,0x8b,0x85,0xbb,0xec,0xc9,0xaf,0x0e,0xba,0x86,0xab,0x4c,0x66,0x96,0x64,0x93,0xf1,0x74,0x68};
    std::uint8_t product42[32]    = {0x04,0x39,0xd4,0x85,0x25,0x84,0x07,0xc4,0x26,0xf4,0x2a,0xd7,0xdf,0x77,0x80,0x76,0xed,0xe6,0x68,0x9c,0xfa,0xbb,0x45,0x42,0x75,0xb6,0x6c,0x3e,0x2a,0x01,0x98,0x05};
    mont256_from_bytes(&ctx, multiplier, multiplier42);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product42, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier43[32] = {0x16,0x43,0xca,0x37,0xc0,0xef,0x73,0x14,0xa3,0xd7,0x94,0xf6,0xcb,0x18,0x87,0x34,0xff,0xd7,0xfc,0xe4,0xb1,0x7b,0x62,0xd6,0x00,0xe8,0xaa,0x90,0xec,0xf4,0x63,0xe6};
    std::uint8_t product43[32]    = {0x9c,0x5d,0x32,0xd0,0x69,0xe2,0xc4,0x6d,0x5c,0x67,0xa1,0x3f,0x70,0x24,0x16,0x5f,0x79,0x67,0x7e,0xb3,0x05,0x2a,0xcc,0x5a,0xf8,0xcb,0xa1,0x70,0xb2,0xc8,0x72,0x5f};
    mont256_from_bytes(&ctx, multiplier, multiplier43);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product43, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier44[32] = {0x6a,0xcf,0x09,0xfe,0x56,0x7d,0x0a,0xea,0x74,0x4e,0xd2,0x16,0x6d,0x4e,0x30,0x1a,0x65,0x60,0x4b,0x0c,0x46,0xbc,0x28,0x53,0x40,0x66,0x96,0x11,0x51,0x9d,0x59,0x0a};
    std::uint8_t product44[32]    = {0x1a,0x82,0x82,0xa3,0x5e,0x6a,0xd6,0x11,0xbf,0x00,0xe3,0xb6,0x0f,0x25,0x48,0x3e,0x80,0xb6,0x35,0xcc,0xb9,0x81,0x37,0x91,0x6d,0x15,0x3b,0x19,0x98,0xce,0x23,0x9c};
    mont256_from_bytes(&ctx, multiplier, multiplier44);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product44, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier45[32] = {0xc8,0x0d,0x3a,0x33,0x4d,0xb6,0xa1,0xa7,0x0c,0x6f,0x99,0x10,0xdc,0x3a,0x74,0x95,0xb3,0xa0,0xfd,0x72,0x36,0xc1,0x52,0x6b,0x8e,0xc9,0x00,0xe4,0x60,0x6c,0xe3,0xc9};
    std::uint8_t product45[32]    = {0x4e,0xe3,0xc7,0xee,0x9d,0x2b,0x6a,0x0b,0xe8,0x66,0xe9,0xe9,0x9e,0x72,0x90,0x14,0xe5,0xd2,0xa6,0x13,0xd8,0x6a,0x92,0x72,0xee,0x4f,0xea,0x24,0x70,0xa9,0xf4,0xea};
    mont256_from_bytes(&ctx, multiplier, multiplier45);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product45, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier46[32] = {0x9f,0x50,0x7b,0x2f,0x1d,0xd1,0xbf,0x94,0x8e,0x6d,0x4c,0x6c,0xcb,0x63,0x90,0x78,0x5c,0x58,0x37,0x0a,0xf3,0x8e,0xbb,0xe5,0x5c,0x33,0x08,0xa2,0x48,0xf2,0x53,0x3e};
    std::uint8_t product46[32]    = {0xe6,0x75,0x5f,0x2d,0xf3,0xc8,0xe4,0x0b,0x0d,0x54,0xd8,0x3b,0x61,0xac,0xc5,0xf8,0x15,0x4b,0x98,0x0f,0x05,0x3e,0x66,0x68,0x56,0xf2,0x9b,0xde,0xb5,0xcb,0x7e,0x93};
    mont256_from_bytes(&ctx, multiplier, multiplier46);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product46, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier47[32] = {0x75,0x8f,0xab,0x9a,0x0d,0xfd,0x57,0x2a,0x2f,0x26,0x93,0xa8,0xcd,0x5d,0x98,0x89,0x09,0xab,0x56,0xa6,0xe2,0x72,0x1e,0xb0,0xa8,0x2c,0xd2,0x55,0x42,0x26,0xff,0x66};
    std::uint8_t product47[32]    = {0x82,0x0f,0x39,0xa4,0xc2,0xe7,0x91,0xf4,0x17,0x8c,0x98,0x1c,0xe1,0x54,0xe0,0xa6,0x79,0x89,0xab,0x0e,0xd4,0x87,0xf4,0xb7,0x34,0x16,0xc5,0x59,0xe8,0x8f,0x82,0x8b};
    mont256_from_bytes(&ctx, multiplier, multiplier47);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product47, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier48[32] = {0x3f,0xa5,0xe4,0xd0,0xc2,0x85,0xdb,0xb8,0x97,0x1f,0x3a,0xd0,0xd4,0x90,0xbe,0xe5,0x2f,0xa6,0x7b,0x85,0xb8,0x5b,0x44,0x17,0xff,0x82,0xa8,0x34,0xa4,0x08,0x37,0xae};
    std::uint8_t product48[32]    = {0x8e,0x7f,0xb6,0xf9,0x2f,0x21,0xfe,0xe0,0xd6,0xa2,0xdd,0xf3,0x41,0x0d,0xa6,0x97,0xc0,0xb7,0x19,0xbd,0x31,0xfd,0xd3,0xa6,0xb9,0x3c,0x26,0x10,0xc2,0xe9,0x0e,0x87};
    mont256_from_bytes(&ctx, multiplier, multiplier48);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product48, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier49[32] = {0x94,0xce,0x03,0x2c,0x15,0x40,0x93,0x61,0x4f,0x0d,0x8d,0xf9,0x54,0xc1,0x68,0xe7,0x0f,0x3a,0xa4,0x16,0x37,0x68,0xa1,0x37,0x04,0xeb,0xa6,0xa2,0x02,0x03,0xc4,0x45};
    std::uint8_t product49[32]    = {0x3f,0xf1,0x35,0x34,0x78,0xed,0xa6,0xab,0x9a,0x15,0xb9,0x0a,0xec,0xd8,0x89,0x84,0xa1,0x8d,0x50,0x12,0x04,0x5c,0x54,0x62,0xcd,0x06,0xf0,0x41,0xbb,0xed,0x3e,0xcc};
    mont256_from_bytes(&ctx, multiplier, multiplier49);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product49, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier50[32] = {0xd5,0x5d,0xe0,0x43,0x17,0x9f,0x2f,0x3d,0xd7,0x40,0xe4,0x10,0xdd,0x85,0xe1,0xc8,0x88,0xf9,0x76,0x22,0x11,0xbb,0x2d,0x4c,0xfc,0x1f,0x57,0x3e,0x00,0x32,0x60,0x2d};
    std::uint8_t product50[32]    = {0xdd,0xb8,0xd9,0x8b,0xac,0x7c,0x37,0x2b,0x6e,0xb9,0x13,0x5d,0x07,0xdb,0x0b,0x76,0x7d,0xca,0xe5,0x34,0xcb,0xb2,0x38,0x3f,0x2d,0x3a,0xf9,0xdb,0xe3,0x37,0x8b,0x20};
    mont256_from_bytes(&ctx, multiplier, multiplier50);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product50, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier51[32] = {0x24,0xe9,0xe1,0x90,0x40,0x1d,0x3b,0xa0,0xbe,0x75,0xe9,0xb0,0x2b,0x25,0x8e,0x1d,0x17,0xcd,0xb3,0xba,0xd5,0xcf,0xbf,0xb9,0x75,0x13,0x38,0x4c,0x3b,0x5a,0x2e,0x8b};
    std::uint8_t product51[32]    = {0x00,0x59,0xe1,0x3f,0x55,0x94,0x52,0x85,0xfc,0x0c,0x20,0x01,0xc3,0xba,0x0a,0x64,0xe4,0x92,0x59,0x20,0xcb,0x23,0xb0,0xef,0x34,0x49,0xfc,0xc7,0x34,0x3a,0x8d,0x6a};
    mont256_from_bytes(&ctx, multiplier, multiplier51);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product51, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier52[32] = {0x90,0x67,0xfa,0xd2,0x8d,0x24,0x05,0xcb,0x62,0xec,0x65,0xe5,0xcb,0x5f,0xa7,0x5e,0x6f,0x3e,0xb5,0x4e,0x53,0x39,0xe1,0xd8,0x8a,0x16,0xd0,0xb2,0xad,0x20,0xa7,0xc5};
    std::uint8_t product52[32]    = {0x6d,0x75,0x33,0xf1,0x0a,0xc8,0xf9,0x5a,0x45,0x91,0xf9,0x6c,0x5d,0x60,0x03,0xff,0x8e,0x2c,0x8e,0x98,0x5b,0x97,0xf3,0x88,0x17,0x82,0x4b,0x40,0x71,0x75,0xa6,0x18};
    mont256_from_bytes(&ctx, multiplier, multiplier52);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product52, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier53[32] = {0x8c,0x90,0xc6,0x44,0xf1,0x0b,0x2c,0x32,0x6b,0x83,0xfd,0x67,0xb7,0x2a,0xde,0x58,0xd0,0x92,0x02,0xe6,0xe2,0xd6,0x76,0xff,0x5f,0x17,0xbc,0x87,0x92,0x3f,0xac,0x08};
    std::uint8_t product53[32]    = {0xcf,0xc1,0xf7,0x50,0xff,0x51,0x5d,0xdc,0xd0,0x94,0xa3,0x22,0x17,0x2c,0xbe,0x8e,0xbc,0x7c,0x1e,0xed,0x15,0xac,0x2a,0xb0,0x6e,0x3b,0x59,0x5d,0xea,0x87,0xb2,0xc9};
    mont256_from_bytes(&ctx, multiplier, multiplier53);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product53, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier54[32] = {0x6c,0x84,0x01,0xc4,0x5d,0x59,0x9c,0x46,0xaf,0x5e,0x5f,0x03,0x5a,0x04,0x75,0x2d,0x6a,0x6e,0xd5,0x5b,0x99,0xb1,0xfd,0x4d,0xd5,0xa7,0x42,0x00,0xf5,0x98,0x32,0x98};
    std::uint8_t product54[32]    = {0x63,0x8c,0xb5,0x07,0x39,0x7a,0xde,0x42,0x97,0xd3,0x52,0xf6,0xae,0x45,0x65,0x81,0x28,0x00,0xb3,0xf9,0xf0,0xf2,0x8f,0x0c,0xf7,0x4e,0x47,0x9c,0xb9,0x9c,0xbe,0xd9};
    mont256_from_bytes(&ctx, multiplier, multiplier54);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product54, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier55[32] = {0x22,0x57,0xd9,0x81,0x57,0x20,0xcb,0x29,0xf4,0xc8,0xac,0xf4,0x98,0xe6,0xed,0xc1,0x45,0xf7,0x36,0x7c,0x15,0xcb,0x93,0xe4,0x4f,0x0b,0xd8,0xaf,0x33,0x27,0xf2,0x89};
    std::uint8_t product55[32]    = {0x46,0x0e,0xc9,0xb7,0xe6,0x51,0xc8,0xc3,0x98,0x2b,0xbb,0xcc,0xcb,0xc8,0xf4,0x2e,0xf5,0x42,0x99,0x86,0xcb,0x04,0x21,0xb5,0xb6,0x48,0x99,0x7d,0x70,0x2c,0x88,0x56};
    mont256_from_bytes(&ctx, multiplier, multiplier55);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product55, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier56[32] = {0xd3,0x83,0x12,0x6f,0xd5,0x72,0xaa,0x2d,0x42,0x77,0x29,0x17,0x70,0xb3,0xe0,0x45,0xe1,0xaa,0x3f,0x40,0x04,0xb0,0x92,0xff,0xcd,0xd6,0x5b,0x79,0xdc,0x42,0x8e,0xd6};
    std::uint8_t product56[32]    = {0x32,0x02,0x17,0x5e,0x2b,0x1e,0x0d,0x6d,0xdb,0x3c,0xc2,0xce,0xef,0xc3,0x0a,0xaa,0xa8,0xb9,0xf1,0x80,0xda,0xbf,0x72,0x6c,0x77,0xb1,0x4f,0x67,0x75,0xdb,0x6d,0x11};
    mont256_from_bytes(&ctx, multiplier, multiplier56);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product56, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier57[32] = {0x4f,0x73,0x82,0x44,0x32,0xa9,0xf8,0x37,0x38,0x77,0x5e,0x25,0x82,0xf9,0x35,0xcc,0x9e,0xf1,0x32,0x11,0x2b,0x6e,0x8a,0x7d,0x52,0xcd,0xd3,0xd2,0xea,0xa1,0x44,0xec};
    std::uint8_t product57[32]    = {0xf7,0xee,0x86,0x0b,0x44,0xa7,0x80,0x0f,0xdb,0xe7,0x3c,0xb3,0x67,0xfc,0x53,0x7d,0xad,0xd5,0xb9,0x61,0x7d,0xf1,0x08,0xbc,0x39,0x56,0xc2,0xee,0xb5,0x10,0x51,0xbf};
    mont256_from_bytes(&ctx, multiplier, multiplier57);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product57, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier58[32] = {0xa4,0x45,0x6d,0x84,0xb6,0x89,0x1f,0x1b,0x83,0x9c,0xe0,0xb3,0x4a,0xc8,0x2d,0x9a,0x9c,0xaa,0x31,0x27,0x59,0x1f,0xf5,0xa9,0xcf,0xde,0x51,0xab,0x1d,0x8b,0xb8,0xc9};
    std::uint8_t product58[32]    = {0x8a,0xd0,0x1b,0x32,0x33,0x06,0x54,0xa8,0x51,0x34,0xf6,0x74,0x57,0x3e,0xf1,0x1e,0xfa,0x36,0xad,0x7d,0x3e,0xb8,0xeb,0xe8,0xca,0xc3,0x7e,0x92,0x42,0x3f,0x00,0x6e};
    mont256_from_bytes(&ctx, multiplier, multiplier58);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product58, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier59[32] = {0xc3,0x65,0x49,0x57,0x6a,0xaf,0xa3,0xb5,0xdc,0xa1,0x73,0x2d,0x26,0xa9,0x1f,0x02,0xa3,0xdb,0x95,0xf6,0x97,0x2f,0x97,0x24,0x23,0x06,0x1b,0xc9,0x6c,0x13,0x8f,0xd9};
    std::uint8_t product59[32]    = {0xd4,0x9c,0x58,0x62,0x46,0x57,0x36,0x9b,0x2d,0x51,0x9f,0x2c,0x0f,0x20,0x9d,0xce,0xc3,0x27,0x25,0xf9,0x77,0x9e,0x74,0xd8,0x53,0x33,0xf0,0xb9,0x2f,0xcb,0xcd,0xe8};
    mont256_from_bytes(&ctx, multiplier, multiplier59);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product59, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier60[32] = {0x0e,0x12,0xc5,0xd3,0xa2,0xb7,0xc9,0xdf,0xeb,0x76,0x5e,0x66,0xa9,0xf1,0xff,0xcc,0xed,0xe2,0x1c,0xda,0xd7,0x5b,0x1a,0xce,0xf3,0x3c,0xa7,0x31,0x45,0xb2,0x47,0xc9};
    std::uint8_t product60[32]    = {0x1f,0xd7,0xa9,0x6a,0x58,0x87,0x6b,0x83,0xd3,0x2a,0xdc,0x0c,0x63,0xbd,0x16,0x67,0x6c,0x69,0x70,0x52,0x8a,0xd4,0x3c,0xe3,0x52,0x3d,0x06,0xc0,0x43,0x88,0x2c,0x74};
    mont256_from_bytes(&ctx, multiplier, multiplier60);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product60, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier61[32] = {0xb9,0xae,0xb1,0x44,0xa5,0xab,0xb2,0xf9,0x7a,0x03,0x91,0xeb,0x01,0x12,0x43,0xdc,0xe3,0x39,0xf6,0x8b,0x7b,0x0c,0xd7,0x30,0x0c,0x90,0x16,0x4c,0xe0,0x41,0x8b,0xaf};
    std::uint8_t product61[32]    = {0xcd,0x95,0xdb,0xc5,0x8b,0xfd,0x2f,0x0a,0x07,0xef,0x91,0x90,0xd9,0x2c,0xa2,0xae,0xf9,0x02,0x9f,0xaf,0xcd,0xdc,0x79,0xef,0x71,0x59,0x14,0x0f,0xcb,0x47,0xe2,0x05};
    mont256_from_bytes(&ctx, multiplier, multiplier61);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product61, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier62[32] = {0x37,0x6b,0x3d,0xc4,0x64,0xef,0x0a,0xea,0x16,0x7f,0xfd,0xab,0x5f,0x58,0x99,0x7f,0x75,0x3b,0x4a,0xaf,0x16,0x0f,0x51,0x94,0x64,0x72,0x1a,0xc4,0xf7,0xd3,0x84,0xab};
    std::uint8_t product62[32]    = {0x33,0xe1,0x2d,0x1e,0x1a,0x14,0x8d,0x1f,0x91,0x9c,0x3f,0x36,0xb0,0xc3,0x92,0xae,0xb3,0xa7,0x4a,0x9e,0x20,0x34,0xed,0xf5,0x21,0xe2,0x5b,0xc1,0xbd,0x6a,0x05,0x65};
    mont256_from_bytes(&ctx, multiplier, multiplier62);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product62, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier63[32] = {0x3c,0xa3,0x48,0xd3,0xc3,0x61,0x9e,0x7b,0xc9,0x22,0x7f,0x9d,0xe4,0x69,0xd4,0xcd,0xc6,0x10,0xf0,0x5d,0x46,0x94,0xa3,0xa0,0x62,0xd6,0xbb,0x9f,0xc3,0xe4,0xcf,0x1e};
    std::uint8_t product63[32]    = {0x8c,0xff,0x0d,0xdb,0x10,0xc6,0x26,0x09,0xe1,0x0b,0xc5,0x48,0x2e,0xc5,0x08,0x94,0xdf,0xd1,0x06,0xba,0x87,0xa2,0xd8,0x74,0x55,0xab,0xb3,0x76,0x9d,0xff,0x8a,0x57};
    mont256_from_bytes(&ctx, multiplier, multiplier63);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product63, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier64[32] = {0x31,0x76,0x1d,0x50,0x6c,0xde,0x20,0xb7,0x27,0x51,0x56,0x2c,0x55,0x7f,0xc2,0x2e,0xe1,0x22,0x54,0xae,0x71,0x3c,0x45,0x66,0x3d,0x2a,0x20,0xbf,0xd3,0xaa,0x1d,0x01};
    std::uint8_t product64[32]    = {0x59,0x12,0x82,0x4c,0x75,0xbb,0x39,0xd6,0xf9,0x98,0xba,0x10,0xa8,0x84,0x13,0xe6,0x92,0xd8,0x14,0x62,0x46,0x7e,0x0f,0x46,0xa2,0x6c,0xa0,0x33,0x24,0x02,0x22,0xe9};
    mont256_from_bytes(&ctx, multiplier, multiplier64);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product64, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier65[32] = {0x09,0xd9,0xda,0x97,0x30,0x7e,0x6b,0xd5,0xd8,0x36,0xf8,0x47,0x0d,0xc5,0xeb,0x42,0x36,0x89,0x6d,0x83,0xc2,0xae,0xa8,0x77,0x8f,0x96,0xef,0x3b,0xae,0x4f,0x7e,0x38};
    std::uint8_t product65[32]    = {0x20,0x17,0x32,0xad,0x33,0x2a,0x9d,0xd2,0x31,0xde,0x97,0xf0,0x9d,0x7f,0x92,0x94,0x22,0x5b,0x37,0x53,0xbe,0xbc,0x09,0xfa,0x33,0x4d,0xd5,0xd9,0xbb,0x4c,0x36,0x63};
    mont256_from_bytes(&ctx, multiplier, multiplier65);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product65, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier66[32] = {0x92,0x67,0x77,0x10,0x95,0x63,0x11,0x44,0x9a,0xcb,0xd2,0x85,0xf7,0xae,0xb5,0x94,0xdf,0x9f,0xa9,0x3d,0xd3,0x65,0x2d,0xc3,0xdc,0xe9,0x8f,0x29,0x91,0x54,0xf9,0xd2};
    std::uint8_t product66[32]    = {0x6e,0x72,0x06,0x2d,0x04,0x70,0x1d,0xbc,0x1a,0x1d,0x58,0x34,0x4e,0x80,0x6a,0x7b,0x8f,0xcc,0xad,0x7d,0xe7,0x2e,0x0d,0xc0,0x49,0xb9,0x34,0xce,0x0e,0x3e,0x8a,0xfe};
    mont256_from_bytes(&ctx, multiplier, multiplier66);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product66, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier67[32] = {0x3d,0xac,0x04,0x91,0x99,0xa2,0xfa,0xaf,0x6d,0x6e,0x74,0x38,0xcc,0xc4,0xab,0x4e,0x02,0x36,0xb2,0x95,0x8d,0x1c,0xad,0x17,0x98,0x44,0x94,0x06,0x2a,0x70,0x20,0x68};
    std::uint8_t product67[32]    = {0x1b,0x97,0xdd,0x57,0x42,0x76,0xc1,0x34,0xf6,0x5d,0xf6,0x2e,0x79,0xb5,0x14,0xc9,0x65,0xe0,0x82,0xfe,0x2c,0xbc,0x7d,0x79,0x71,0xd5,0x20,0x45,0xa6,0x80,0xe1,0x88};
    mont256_from_bytes(&ctx, multiplier, multiplier67);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product67, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier68[32] = {0x6a,0x49,0x02,0xb4,0x62,0x5a,0xea,0xd0,0x00,0x9a,0xa6,0xcd,0x3b,0xef,0x00,0x0e,0x30,0xc7,0x39,0xdb,0x48,0x4f,0x42,0xb2,0xb5,0x2c,0x56,0x5d,0x6b,0x8c,0xbe,0x30};
    std::uint8_t product68[32]    = {0xce,0x26,0xa4,0x12,0x2c,0x05,0x4b,0xaf,0x78,0xa1,0x7b,0xb2,0x76,0x14,0xf8,0xa5,0x23,0xf5,0x65,0xc4,0x6e,0x71,0x61,0xf5,0x85,0xdf,0xa2,0xe9,0x16,0x6d,0x4f,0x16};
    mont256_from_bytes(&ctx, multiplier, multiplier68);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product68, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier69[32] = {0x46,0x29,0xec,0x5d,0x7a,0xd5,0x41,0xcc,0xef,0x6f,0x14,0x1c,0x02,0xff,0x12,0x56,0x73,0x93,0x99,0xf6,0x97,0xac,0x33,0x93,0xe6,0xff,0x75,0xdf,0x13,0x8e,0x0a,0xc4};
    std::uint8_t product69[32]    = {0x97,0x2b,0xc6,0xd0,0x8a,0xcd,0x8f,0x50,0xe9,0x78,0x1d,0x68,0x8c,0xa7,0x09,0x29,0x7a,0xae,0xec,0x3e,0x09,0x03,0x52,0x08,0x89,0x86,0x4d,0xfa,0x98,0xad,0x1e,0xa1};
    mont256_from_bytes(&ctx, multiplier, multiplier69);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product69, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier70[32] = {0x1c,0xfa,0x2f,0xb9,0x0b,0x0e,0xae,0x46,0x4e,0x14,0x7b,0x68,0xd2,0x04,0x27,0xd4,0xe4,0x33,0x19,0x25,0xed,0x6c,0x38,0x73,0xe0,0xac,0xad,0xc2,0x72,0x36,0x55,0x6e};
    std::uint8_t product70[32]    = {0xd4,0xd2,0xe5,0x3a,0x36,0xf0,0x88,0xd5,0x82,0x54,0x7d,0x64,0xdd,0x72,0xa2,0x1b,0x1d,0x1b,0xde,0xf1,0x44,0x27,0xff,0x30,0xab,0xc5,0x0e,0xc4,0x1d,0xc2,0x62,0xe2};
    mont256_from_bytes(&ctx, multiplier, multiplier70);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product70, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier71[32] = {0xe0,0x7a,0xac,0x69,0xb0,0xe8,0x9f,0xea,0x01,0xf6,0x44,0xef,0x4e,0x65,0x41,0x44,0xf9,0xb1,0x12,0x77,0x14,0xe1,0xa8,0x4b,0x4c,0xee,0x08,0x4f,0x62,0xdf,0xc3,0x69};
    std::uint8_t product71[32]    = {0xba,0x35,0xff,0x5e,0xcc,0xba,0xb0,0x33,0xb8,0x35,0x9a,0xfc,0x14,0x7c,0x85,0xa8,0x2c,0x84,0xc0,0xa8,0xab,0x1c,0x8d,0xd5,0x9d,0x18,0x51,0x72,0x79,0x87,0x41,0xd6};
    mont256_from_bytes(&ctx, multiplier, multiplier71);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product71, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier72[32] = {0xc9,0x47,0x66,0xd5,0x5b,0x5b,0x92,0x72,0x65,0x9b,0x1c,0xcd,0x2c,0x31,0x30,0x8e,0x09,0x02,0x14,0xa7,0x0c,0x31,0x89,0xfe,0x01,0x5d,0x34,0xa3,0xb0,0x51,0x3e,0x8b};
    std::uint8_t product72[32]    = {0x36,0xc8,0x5a,0x04,0x43,0xa5,0x88,0xf3,0xc2,0x8c,0x64,0xa4,0x8e,0x84,0x9d,0x2e,0x85,0x1b,0x4d,0x17,0xb4,0x11,0x89,0x75,0x1b,0xb1,0x7f,0x86,0x50,0x8c,0xb2,0x78};
    mont256_from_bytes(&ctx, multiplier, multiplier72);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product72, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier73[32] = {0x43,0x6e,0x54,0xf7,0x15,0xe3,0x52,0x0a,0x60,0x77,0xb5,0x94,0xfe,0x21,0xef,0xc2,0xcf,0x55,0xe0,0xbb,0xe3,0xf7,0xb4,0xc1,0xc4,0x7e,0x02,0x09,0xe0,0xaa,0x18,0x8f};
    std::uint8_t product73[32]    = {0x74,0x83,0xd6,0x44,0x42,0xe5,0x6c,0x4f,0x04,0x1a,0x5e,0xa1,0x15,0xcd,0x79,0xdc,0xb1,0xf2,0x6b,0x10,0xb1,0xf0,0x06,0x93,0xbe,0x25,0x27,0x0e,0x86,0x7a,0x56,0xbd};
    mont256_from_bytes(&ctx, multiplier, multiplier73);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product73, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier74[32] = {0x2a,0x2e,0xb3,0x49,0x8c,0x56,0x13,0xe0,0x58,0x74,0x1f,0xe6,0x12,0x3f,0xaf,0x94,0x86,0x2b,0xbc,0x79,0x62,0x6a,0xce,0x54,0x0d,0x85,0x23,0x6e,0x30,0xdb,0x9d,0xc3};
    std::uint8_t product74[32]    = {0x4b,0x06,0xe8,0x64,0x82,0xc1,0x31,0x96,0xb0,0x2e,0xf6,0x83,0xc3,0xd8,0x94,0x63,0xf3,0x8e,0x9d,0xf1,0x75,0x3f,0xc6,0x52,0xfe,0x83,0xe0,0x66,0x39,0x39,0x4f,0xb5};
    mont256_from_bytes(&ctx, multiplier, multiplier74);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product74, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier75[32] = {0x05,0xde,0x47,0xa3,0xc9,0xc3,0x04,0x9e,0x7b,0x99,0x6e,0xe3,0xde,0x31,0x45,0xb6,0x43,0xdb,0x20,0xba,0xb4,0x74,0xa4,0x2d,0x8d,0xdf,0xbe,0x1e,0x2d,0x42,0xd2,0x87};
    std::uint8_t product75[32]    = {0xd2,0x2e,0xfa,0x93,0x41,0x4d,0xe7,0xe9,0xbe,0x81,0x6f,0x59,0xd9,0x10,0x54,0xe4,0x98,0xa6,0x6a,0x6f,0x6f,0x5e,0x01,0x92,0x3a,0x4b,0x73,0x08,0x52,0xd4,0x77,0xda};
    mont256_from_bytes(&ctx, multiplier, multiplier75);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product75, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier76[32] = {0xed,0xe7,0xdb,0xad,0xdc,0x46,0x33,0xdf,0xeb,0x08,0x09,0xfe,0xe9,0x89,0x0d,0xaa,0x97,0xf1,0x5c,0x26,0x00,0x75,0x04,0x69,0xdc,0xd8,0x8b,0x1b,0x62,0x35,0x8f,0xd5};
    std::uint8_t product76[32]    = {0x0f,0xa8,0x2a,0xdf,0xbc,0xa4,0x50,0xa1,0x89,0x13,0xfc,0x84,0xe5,0x68,0x6b,0xdd,0x41,0x41,0xe5,0x8c,0xe7,0x8a,0x5b,0x0a,0x1e,0x47,0x84,0x92,0xb2,0xb4,0xb7,0xba};
    mont256_from_bytes(&ctx, multiplier, multiplier76);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product76, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier77[32] = {0xec,0x01,0x37,0x9b,0xa1,0x34,0x2a,0x86,0xba,0x82,0x89,0xc8,0x40,0x25,0x32,0x04,0x99,0xef,0xab,0x32,0x74,0x1f,0xb6,0x49,0x8e,0x09,0x34,0x87,0xbc,0x42,0x29,0xd3};
    std::uint8_t product77[32]    = {0xaa,0x8a,0x77,0xcf,0xba,0xf7,0x49,0x49,0xab,0xbb,0x82,0x6f,0xde,0xdd,0x5f,0xa1,0x5a,0xa7,0x51,0x8e,0x0c,0xf9,0x34,0x65,0x66,0x8e,0xd9,0x7e,0xdd,0x38,0x82,0x6c};
    mont256_from_bytes(&ctx, multiplier, multiplier77);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product77, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier78[32] = {0x52,0x0e,0x53,0x48,0xdd,0xa7,0x14,0x3c,0x47,0xea,0xb6,0x7e,0x75,0x88,0x6d,0xc2,0xa0,0xd7,0x76,0x63,0x5e,0x03,0xc1,0x55,0xf8,0x3b,0x33,0x70,0xd6,0xee,0x81,0x71};
    std::uint8_t product78[32]    = {0xaa,0x88,0xe0,0x65,0x4a,0x61,0xac,0xe7,0x63,0x41,0x9c,0x1f,0xaa,0x39,0xeb,0x05,0x93,0xb4,0x41,0x3b,0xeb,0x03,0xec,0x10,0x1e,0xfd,0x6c,0xe2,0x61,0xf0,0xad,0x0b};
    mont256_from_bytes(&ctx, multiplier, multiplier78);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product78, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier79[32] = {0x79,0xb2,0x0d,0xc7,0xfe,0x15,0x5f,0xd1,0x67,0x2e,0x72,0x45,0x7b,0x21,0xc3,0xd1,0x37,0xc7,0xee,0x98,0x6d,0xab,0x17,0x79,0x90,0x9d,0x90,0x17,0x95,0x99,0x31,0x9b};
    std::uint8_t product79[32]    = {0x1c,0x4b,0x4b,0x3b,0xbf,0x57,0x09,0xb5,0x6d,0xe5,0x69,0xfc,0x37,0x2d,0x25,0x7a,0x6b,0x31,0x7e,0xa5,0xf9,0xdd,0xa4,0x85,0x47,0xd3,0xf1,0x8c,0xeb,0xdc,0x4b,0x19};
    mont256_from_bytes(&ctx, multiplier, multiplier79);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product79, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier80[32] = {0xc5,0x6b,0x14,0xe6,0x8f,0x00,0x39,0xf6,0x98,0xbd,0x73,0xb2,0x54,0x4f,0x69,0xab,0xfc,0xef,0x9b,0x44,0x98,0x9d,0x73,0x64,0x5f,0x1e,0x3d,0xcc,0x03,0x1b,0x16,0x5e};
    std::uint8_t product80[32]    = {0x90,0x2e,0x56,0x8b,0xd0,0x94,0x9f,0x7e,0xcf,0x37,0xda,0xd9,0x76,0x5a,0x01,0xd8,0x7c,0x21,0xd6,0x74,0x29,0x20,0xdc,0xbf,0x06,0x22,0x9d,0xce,0x33,0x1f,0x38,0x8b};
    mont256_from_bytes(&ctx, multiplier, multiplier80);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product80, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier81[32] = {0x37,0x3f,0xc1,0x0e,0x6b,0x8c,0x2e,0x59,0x9d,0x6b,0xe1,0xe0,0x79,0x81,0xee,0xdb,0x2b,0x48,0x43,0x1e,0x61,0xfc,0x32,0xaf,0x92,0xfb,0x9c,0xf1,0xba,0x25,0x02,0x45};
    std::uint8_t product81[32]    = {0xed,0x03,0x5d,0x93,0xd3,0x92,0xe9,0xbe,0xce,0xba,0xdf,0x88,0xb9,0x0a,0x7f,0x24,0x22,0xb9,0x97,0xcf,0xb0,0x3e,0xfe,0xc2,0x4d,0x6a,0xb4,0x70,0x0c,0xb5,0x17,0xaf};
    mont256_from_bytes(&ctx, multiplier, multiplier81);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product81, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier82[32] = {0x0c,0x49,0x1f,0x94,0x02,0xc0,0x13,0x0f,0x5b,0xfb,0x90,0xff,0x8e,0x93,0x27,0x30,0x45,0x10,0xa7,0x01,0x05,0x17,0x41,0x9d,0xc0,0xb5,0x17,0xc0,0x91,0xfc,0x12,0x47};
    std::uint8_t product82[32]    = {0x72,0xb3,0x1f,0x26,0x63,0x8c,0x0c,0x75,0x45,0x7d,0xda,0xb4,0x53,0xe6,0xcb,0x77,0x61,0x5d,0xec,0x73,0x76,0xf9,0x45,0x25,0x29,0x36,0xc7,0xeb,0xf8,0xdc,0x66,0xdb};
    mont256_from_bytes(&ctx, multiplier, multiplier82);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product82, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier83[32] = {0x69,0x0e,0x33,0x8b,0xf0,0x2b,0x24,0x86,0x1d,0x25,0x43,0x25,0x58,0xa8,0xa1,0xaa,0x88,0xcc,0x76,0xe6,0x11,0xed,0x49,0xfb,0x5f,0xf5,0xf2,0x95,0x2c,0xc5,0x84,0x57};
    std::uint8_t product83[32]    = {0xd0,0x42,0xce,0x5c,0x05,0xd1,0xc4,0xe7,0xb4,0x10,0x98,0x1c,0x1a,0x49,0xea,0xd2,0x64,0x52,0x4c,0xbd,0x30,0x25,0x14,0x35,0x36,0x6c,0xdd,0x21,0x2d,0xcc,0x92,0x51};
    mont256_from_bytes(&ctx, multiplier, multiplier83);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product83, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier84[32] = {0x26,0x5c,0xe5,0xd1,0xa7,0x47,0x3b,0x60,0x9f,0x3c,0x13,0xcd,0xec,0x46,0x5e,0xcc,0x36,0xe5,0x2c,0x93,0x8b,0x31,0xd7,0x2c,0x88,0xa7,0x88,0xc9,0xeb,0x12,0x74,0xcd};
    std::uint8_t product84[32]    = {0x0e,0x29,0xc4,0x65,0xd6,0x96,0x6b,0xdb,0x6f,0x79,0x6e,0xa2,0xd5,0x6e,0x92,0x72,0x19,0x12,0x0f,0xaf,0x1c,0x0f,0xc1,0x00,0x8f,0xad,0x61,0x9b,0xb0,0x6c,0xbd,0x68};
    mont256_from_bytes(&ctx, multiplier, multiplier84);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product84, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier85[32] = {0xf3,0x00,0xa9,0xa2,0x52,0x94,0x67,0x12,0x28,0xd2,0x68,0x76,0x3f,0x87,0xc2,0x8c,0x65,0xd0,0xef,0xb0,0xcb,0xd3,0xaf,0x38,0x4c,0x2b,0x32,0x27,0xa6,0xae,0xbe,0xf2};
    std::uint8_t product85[32]    = {0x00,0xf9,0x59,0x83,0x51,0xa9,0x2c,0x56,0x64,0x95,0x78,0xc2,0xa7,0x18,0xc8,0x9f,0x63,0xfe,0xc3,0xc4,0xa9,0xed,0xfb,0x78,0x2a,0x37,0xd7,0x2b,0x37,0x21,0x2a,0xe0};
    mont256_from_bytes(&ctx, multiplier, multiplier85);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product85, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier86[32] = {0x84,0xbe,0xe7,0xd9,0x1a,0x57,0xa2,0xf1,0x73,0x1a,0x7c,0x9b,0x68,0x81,0x9e,0x12,0xcd,0xf7,0xa7,0x9f,0x08,0x55,0x8a,0x84,0x00,0x5d,0xb1,0xba,0xa3,0x81,0xd0,0xd3};
    std::uint8_t product86[32]    = {0xef,0xf2,0xb4,0x89,0x16,0xa5,0xe7,0x26,0x21,0xc9,0x6c,0xbd,0x42,0x43,0xf7,0x14,0x48,0xbb,0x25,0xce,0x5d,0xbd,0x0d,0xd0,0x8c,0x05,0x94,0x03,0xf3,0xb2,0xdd,0xbb};
    mont256_from_bytes(&ctx, multiplier, multiplier86);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product86, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier87[32] = {0x26,0x6c,0x36,0x8e,0x2e,0x35,0x11,0xc7,0x63,0x5c,0x2b,0x74,0xc3,0xc9,0x83,0x1a,0x01,0x03,0xac,0x42,0xb9,0x71,0xdb,0x3d,0x56,0x5f,0xa7,0x5e,0x45,0x27,0x58,0x2d};
    std::uint8_t product87[32]    = {0xe4,0x7a,0x3e,0x01,0xa4,0x84,0xd6,0xf5,0x17,0x6f,0x5f,0xcc,0x4f,0x1b,0x35,0xe7,0xbb,0xb0,0x6b,0x1f,0xa5,0x09,0xf2,0x13,0xc2,0x60,0xb8,0x6d,0xf6,0x5b,0x70,0xa5};
    mont256_from_bytes(&ctx, multiplier, multiplier87);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product87, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier88[32] = {0x68,0xa0,0x03,0xf7,0x99,0x93,0x4f,0xa6,0xad,0x90,0xd3,0xcf,0xb5,0x03,0x7b,0xae,0x7c,0x5a,0xf1,0xb3,0xfd,0x67,0xec,0x5c,0x7d,0x47,0x08,0x3c,0x36,0xde,0x25,0x18};
    std::uint8_t product88[32]    = {0x6e,0x9c,0x39,0x11,0x45,0xdc,0x26,0x1f,0x19,0x6f,0xdc,0x62,0x1e,0xc1,0x10,0xc0,0x2a,0xcc,0xd9,0xfd,0xce,0xa7,0xc0,0x5c,0x11,0xa2,0xb9,0xfa,0x84,0xa7,0x82,0xdf};
    mont256_from_bytes(&ctx, multiplier, multiplier88);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product88, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier89[32] = {0x5f,0x66,0x85,0x30,0xc4,0x9f,0x01,0x5a,0x8b,0xaf,0xea,0x0f,0xf2,0x07,0x0c,0x95,0xdb,0xcc,0x83,0x3a,0x61,0xf4,0x30,0x97,0x84,0xb5,0x12,0x63,0x6b,0x47,0x09,0x02};
    std::uint8_t product89[32]    = {0x9d,0x18,0xff,0x6e,0x61,0xb8,0xcd,0xca,0x7e,0x6d,0x45,0x4f,0x71,0x79,0xa4,0xd5,0xcc,0x30,0x49,0x04,0xbe,0xec,0x1c,0x20,0x14,0xfd,0x11,0x7b,0x9a,0x14,0xf9,0x64};
    mont256_from_bytes(&ctx, multiplier, multiplier89);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product89, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier90[32] = {0xa3,0xf8,0xbf,0xd8,0x08,0x59,0xa3,0xf2,0xa8,0x4a,0x06,0x83,0xfe,0x46,0x91,0x3b,0x8d,0x91,0xcd,0xa5,0xda,0x0b,0x87,0x71,0xdc,0xaf,0x02,0xe3,0x61,0x82,0x5a,0x4e};
    std::uint8_t product90[32]    = {0x95,0xdb,0xff,0x34,0x1a,0x91,0x26,0x46,0x7e,0x7e,0xae,0x2c,0x6b,0x13,0x93,0x84,0x42,0x87,0x19,0xda,0x01,0xfd,0x3f,0xde,0x05,0xa9,0xeb,0x0e,0xfb,0x6d,0x7d,0x04};
    mont256_from_bytes(&ctx, multiplier, multiplier90);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product90, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier91[32] = {0x1f,0x19,0x98,0x8d,0xc7,0xb6,0xc1,0x0c,0xf2,0xce,0xe3,0x78,0x41,0x70,0x37,0x75,0xa6,0x4a,0xdc,0x67,0x43,0x70,0x11,0x45,0xcc,0x57,0x27,0xe8,0xb9,0xa6,0xd1,0xca};
    std::uint8_t product91[32]    = {0x52,0x66,0x19,0x02,0x3f,0xaf,0xe2,0x09,0xab,0x80,0x18,0x98,0xca,0xfd,0x86,0xee,0x84,0x58,0x38,0x19,0x70,0x96,0xd5,0x33,0x08,0x84,0x6e,0x76,0xdd,0x56,0x1b,0xb6};
    mont256_from_bytes(&ctx, multiplier, multiplier91);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product91, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier92[32] = {0x5a,0x35,0x7e,0x32,0xfa,0x71,0x06,0x00,0xbd,0x14,0xb6,0xfd,0x86,0x86,0xe0,0x84,0x42,0x6d,0xa8,0x31,0x0f,0x22,0xb7,0xc5,0x52,0x29,0xc6,0x33,0x78,0x9d,0xb4,0x99};
    std::uint8_t product92[32]    = {0x16,0x8c,0x41,0x93,0xab,0x4a,0xd4,0xb7,0x8d,0x03,0x2b,0xf1,0x39,0xbc,0xa9,0xc3,0xd4,0xd8,0x07,0x21,0x0d,0x6f,0x17,0x99,0x9d,0xfc,0xcd,0x7f,0xf4,0xfa,0x82,0x7a};
    mont256_from_bytes(&ctx, multiplier, multiplier92);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product92, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier93[32] = {0x3a,0xb9,0x00,0xa2,0x63,0xdc,0xde,0xce,0xe3,0x23,0x1d,0x15,0xe3,0x69,0x7b,0xe6,0x76,0x6c,0x58,0xd0,0x08,0xd1,0xd9,0xcd,0xa6,0xe4,0x12,0xd3,0xbd,0xf0,0x6a,0x47};
    std::uint8_t product93[32]    = {0x1d,0x35,0x74,0x40,0xb0,0xe3,0x3a,0x78,0xeb,0xe1,0x5a,0xf6,0x00,0xfe,0x16,0xc1,0xee,0x53,0x85,0xce,0x93,0xbc,0x47,0x17,0x1a,0xe3,0xab,0xd8,0x92,0x27,0xd4,0x7b};
    mont256_from_bytes(&ctx, multiplier, multiplier93);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product93, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier94[32] = {0xda,0x75,0x63,0x01,0xa0,0x08,0x52,0x62,0xd3,0x30,0xbb,0x07,0x2e,0x51,0x88,0x72,0xf8,0xd1,0x9e,0x93,0x85,0x91,0xff,0x07,0x12,0xbc,0xd2,0xc8,0xe3,0x0a,0x3a,0x23};
    std::uint8_t product94[32]    = {0x1c,0x56,0x76,0x4b,0x56,0xb4,0xf2,0x92,0x06,0xd7,0x73,0x0d,0xd4,0x15,0x88,0xa8,0xe3,0x71,0xbc,0x2c,0xd0,0x8a,0x1b,0x7c,0x70,0x32,0x75,0x33,0x2f,0x37,0x80,0x76};
    mont256_from_bytes(&ctx, multiplier, multiplier94);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product94, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier95[32] = {0x7c,0xd9,0xc4,0x51,0xc0,0x91,0xc9,0xcd,0xba,0x5a,0x21,0x8b,0x43,0xb1,0x31,0xcf,0x17,0xda,0x32,0x5d,0x42,0xbf,0x0c,0x58,0xa9,0x9c,0xe2,0xfe,0xb1,0xa5,0x99,0x8d};
    std::uint8_t product95[32]    = {0x63,0x8e,0xd3,0x1a,0xf7,0x27,0x48,0x15,0xfa,0xcb,0x90,0x22,0x85,0xe3,0xe9,0x1b,0x05,0x5d,0x9d,0x9f,0x7d,0x91,0x98,0x6a,0xe2,0xf3,0x20,0x90,0xf7,0x66,0xfe,0x4b};
    mont256_from_bytes(&ctx, multiplier, multiplier95);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product95, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier96[32] = {0x15,0xaa,0x0d,0xb3,0x7a,0x6f,0xf8,0x96,0x29,0x58,0xdc,0xcd,0x59,0x88,0x6c,0x09,0x18,0x1e,0x85,0x48,0xd2,0x9b,0xea,0xab,0xc6,0x09,0x3f,0x38,0xb4,0xe8,0x2b,0xa7};
    std::uint8_t product96[32]    = {0x86,0xf2,0x44,0x9a,0x63,0xd6,0xc1,0x9a,0xf3,0x38,0x82,0xba,0x82,0x88,0x7b,0x24,0xff,0xd5,0x8f,0x93,0x8b,0x03,0xd2,0x79,0x09,0xf3,0xa6,0x29,0xef,0x02,0xa3,0xa6};
    mont256_from_bytes(&ctx, multiplier, multiplier96);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product96, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier97[32] = {0xef,0x54,0x19,0x2d,0x87,0x9f,0x4a,0x45,0x1b,0x25,0xff,0x7d,0x3c,0x99,0xfd,0x6a,0x9c,0xfe,0xe8,0x8f,0x80,0xb2,0xc5,0xf5,0x8f,0x61,0x6b,0xe8,0xea,0xbd,0xc5,0x66};
    std::uint8_t product97[32]    = {0x6d,0xe6,0x2f,0xda,0x91,0xa2,0xee,0xd6,0x60,0x35,0x48,0x73,0x89,0x95,0x6c,0xaf,0xce,0x0a,0x17,0x35,0xd1,0x16,0xf8,0x29,0xff,0x3f,0x2d,0xcb,0x29,0x40,0xdc,0x5e};
    mont256_from_bytes(&ctx, multiplier, multiplier97);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product97, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier98[32] = {0x74,0xb0,0x7c,0x3d,0x55,0x38,0x6a,0x97,0x8a,0x92,0x10,0x22,0x61,0x6d,0x67,0x43,0x30,0x1d,0xe5,0x9a,0x1e,0x4f,0x8e,0xc9,0x1f,0x9a,0xe3,0x3c,0xde,0xd7,0xad,0xfb};
    std::uint8_t product98[32]    = {0xe8,0x35,0xc3,0x5c,0x21,0x26,0xc5,0x02,0x04,0x1a,0x34,0xa1,0x06,0xe3,0x23,0xd8,0x19,0xcf,0xcf,0xe4,0x16,0x21,0xb6,0x09,0x71,0x73,0x27,0x49,0xe5,0x44,0x15,0xd7};
    mont256_from_bytes(&ctx, multiplier, multiplier98);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product98, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }

    std::uint8_t multiplier99[32] = {0x13,0xa2,0x68,0x24,0x08,0x9a,0x55,0x57,0xea,0x53,0xdf,0xcf,0x56,0x08,0x24,0xe9,0x94,0x9c,0x04,0x77,0xe7,0xbb,0xf0,0xbf,0xf2,0xc6,0x8a,0xb8,0x79,0x0e,0x7f,0x98};
    std::uint8_t product99[32]    = {0x1b,0x40,0xd3,0x49,0xf7,0xe6,0x27,0x39,0x8d,0x03,0x94,0xaa,0xa5,0xc1,0x21,0x94,0xf7,0x96,0x15,0xa6,0x0c,0x4e,0x22,0x3c,0x85,0xe7,0xfa,0x44,0xaf,0x69,0x13,0x80};
    mont256_from_bytes(&ctx, multiplier, multiplier99);
    mont256_sqr(&ctx, product, multiplier);
    mont256_to_bytes(&ctx, product_data, product);
    if (std::memcmp(product99, product_data, 32) != 0)
    {
        throw std::runtime_error("err in common::mont256_sqr");
    }
}