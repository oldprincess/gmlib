#if defined(CPU_FLAG_MOVBE) && defined(CPU_FLAG_BMI2)
#include <gmlib/number/internal/mpz_x64.h>
#include <stdexcept>
#include <cstring>

using namespace number::internal::x64;

void test_mpz_x64_mul()
{
    uint64_t    multiplier[4], multiplicand[4], product[2][4];
    std::uint8_t product_data[64];

    static std::uint8_t multiplier0[32]   = {0x01,0x68,0xfe,0x04,0xe6,0x0c,0x4f,0xc4,0x36,0x87,0xee,0x47,0x60,0xf4,0x04,0x5e,0x30,0xc3,0xc4,0xca,0xbf,0xbc,0x39,0x67,0x93,0xe7,0x75,0xc7,0x3f,0xce,0xbd,0x87};
    static std::uint8_t multiplicand0[32] = {0xc4,0x09,0xb7,0x2c,0xab,0x71,0x04,0x3b,0xf2,0x27,0x56,0x86,0x17,0x9e,0xe1,0x89,0x9c,0x72,0x36,0xf4,0x86,0xca,0xd3,0xcb,0xce,0x5e,0xc9,0xbc,0xb9,0xcf,0xda,0x28};
    static std::uint8_t product0[64]      = {0x01,0x14,0x70,0x2e,0xfa,0xe0,0x6d,0xd6,0xbd,0x1c,0xd0,0xf4,0x64,0x30,0x21,0xb9,0x5a,0xb5,0xeb,0x99,0xd8,0xe2,0xb2,0x8a,0x95,0xcf,0x9c,0x38,0xd3,0x55,0xfe,0x6d,0xe0,0xf2,0x67,0x27,0x27,0x36,0xb1,0x12,0xcc,0x78,0x76,0x04,0xc7,0x94,0xe1,0xfe,0x5d,0x65,0xce,0x30,0xa6,0x90,0x51,0x4c,0xd7,0xe3,0x40,0xbd,0xd4,0xdb,0x93,0x18};
    mpz_from_bytes(multiplier, multiplier0, 4);
    mpz_from_bytes(multiplicand, multiplicand0, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product0, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier1[32]   = {0xb1,0x53,0xb3,0xbb,0x34,0x84,0x9f,0x5f,0x4a,0x35,0xc6,0x96,0x04,0x60,0x20,0xf9,0xb7,0xd7,0x69,0x2f,0x19,0x90,0x84,0x32,0xca,0xa3,0x58,0x7b,0x68,0x31,0xec,0x40};
    static std::uint8_t multiplicand1[32] = {0xd4,0x78,0x02,0x1e,0x5b,0x20,0x06,0xbb,0x93,0x4e,0x65,0xdd,0x46,0x07,0xce,0x1a,0x1f,0x11,0xc9,0x54,0x04,0x22,0x76,0x0e,0x9b,0x3f,0xab,0x00,0x84,0x27,0x91,0xef};
    static std::uint8_t product1[64]      = {0x93,0x2c,0x71,0x8a,0xf5,0x93,0xe8,0x82,0xb6,0x5e,0x7d,0xe2,0x41,0x92,0x9c,0x17,0xa0,0x35,0x64,0x6a,0xca,0xb6,0x49,0x10,0xc4,0x31,0x22,0x8d,0x88,0xf2,0x1a,0x1a,0xb1,0x39,0xf0,0xe7,0x4f,0x47,0xba,0x0d,0x45,0x17,0xac,0x38,0x3f,0x26,0x0c,0xfb,0xa6,0x65,0x17,0xdb,0xbd,0xb5,0x01,0x21,0x0c,0xb2,0xde,0xa6,0x8b,0x2b,0xcf,0xc0};
    mpz_from_bytes(multiplier, multiplier1, 4);
    mpz_from_bytes(multiplicand, multiplicand1, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product1, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier2[32]   = {0x99,0xfe,0xdd,0xcb,0xf3,0x96,0xd8,0x7c,0x71,0xa1,0xb2,0x5b,0x99,0x23,0x1a,0x17,0xd9,0xa8,0xe2,0x7f,0x17,0xb2,0x00,0x55,0xd4,0xcc,0x78,0xb1,0x29,0x95,0xb6,0x5d};
    static std::uint8_t multiplicand2[32] = {0x5f,0xac,0xd7,0x76,0x88,0xde,0x06,0x6b,0x3c,0x8c,0x9c,0x26,0xd3,0x5b,0x15,0x97,0x30,0x90,0x92,0x23,0x6a,0x6d,0xa4,0xc1,0x22,0x60,0x7a,0x39,0xe1,0x66,0x02,0xc5};
    static std::uint8_t product2[64]      = {0x39,0x8d,0x8d,0x28,0x0e,0x82,0x1d,0xfa,0xc4,0x8a,0xd3,0xb0,0xf4,0xdb,0x87,0x16,0x7f,0x73,0x58,0xa1,0x46,0xe7,0x50,0x32,0x4d,0x9f,0xb1,0x4e,0x66,0x35,0xd5,0x49,0x6e,0x37,0xd1,0xc2,0x7e,0x85,0xa2,0x65,0x96,0x09,0xb4,0xf5,0xeb,0x00,0xa7,0x10,0xa4,0x58,0x43,0x9b,0x39,0x81,0x44,0xff,0x7e,0x8b,0x56,0x4b,0x91,0xb0,0x0f,0x91};
    mpz_from_bytes(multiplier, multiplier2, 4);
    mpz_from_bytes(multiplicand, multiplicand2, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product2, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier3[32]   = {0x45,0x29,0x50,0x7c,0x47,0x60,0x9f,0xd2,0x56,0xed,0x4f,0x54,0xa5,0x9d,0x24,0xb7,0x70,0x73,0x20,0x6f,0xeb,0xb9,0xbd,0x30,0x3f,0x16,0x07,0xf8,0x18,0x67,0xd1,0xf8};
    static std::uint8_t multiplicand3[32] = {0x9d,0x19,0x19,0x75,0xcd,0xa4,0xd7,0xde,0xec,0xeb,0xc8,0xa5,0xaf,0x22,0x17,0xb3,0xf3,0x7e,0xfe,0x97,0xc2,0x76,0xf8,0x2d,0xd0,0x0a,0x96,0xb1,0x48,0xd8,0xbe,0x05};
    static std::uint8_t product3[64]      = {0x2a,0x71,0x1e,0x45,0xf0,0x35,0xc4,0x75,0xaa,0xd2,0xab,0x60,0xec,0x1f,0x0e,0x7e,0x7f,0x1b,0x80,0xe3,0xe9,0x39,0x77,0xba,0x57,0x43,0xa7,0x41,0x49,0xe0,0x78,0x60,0x85,0xd6,0xea,0xca,0x29,0x11,0x28,0x1b,0xe3,0x5a,0x39,0x5d,0x47,0xc5,0x87,0xee,0x29,0x8a,0xda,0x3a,0xa7,0xe2,0x45,0xad,0x7e,0x09,0x91,0x14,0x71,0x1d,0x29,0xd8};
    mpz_from_bytes(multiplier, multiplier3, 4);
    mpz_from_bytes(multiplicand, multiplicand3, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product3, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier4[32]   = {0x06,0x1e,0x75,0x02,0xe1,0x31,0x96,0x33,0x6d,0x4e,0xd0,0xe9,0x95,0x56,0xa0,0xb9,0x73,0xc8,0x7c,0xda,0x11,0xde,0xbe,0xba,0x0e,0x63,0x9c,0x8a,0xc4,0x03,0x64,0x74};
    static std::uint8_t multiplicand4[32] = {0x95,0xe2,0x4d,0x2b,0xa3,0xcc,0xfc,0x4a,0x21,0x28,0x56,0x6e,0xca,0xe7,0x56,0xbb,0x57,0xfd,0x67,0xe2,0xd7,0xc8,0x0c,0x44,0xe8,0x27,0x8b,0x1a,0xde,0xa2,0x78,0xf4};
    static std::uint8_t product4[64]      = {0x03,0x95,0x22,0xd6,0x2d,0xd6,0x7a,0x38,0x19,0xfc,0xa4,0x41,0x53,0xb2,0x52,0x59,0x70,0x7f,0x65,0xf5,0x41,0x88,0xb2,0x17,0xd8,0x94,0x6b,0x76,0xd7,0x4c,0x55,0xd3,0x03,0x51,0x6d,0xf1,0x0d,0x82,0x34,0x6c,0x56,0xcd,0xf5,0x41,0x55,0x5b,0x72,0xc9,0x50,0x8d,0xf8,0xcb,0xc3,0x0c,0xc9,0xc0,0xfb,0xac,0x6b,0x2e,0x93,0xba,0x1e,0x90};
    mpz_from_bytes(multiplier, multiplier4, 4);
    mpz_from_bytes(multiplicand, multiplicand4, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product4, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier5[32]   = {0xac,0xdb,0xe3,0x99,0x95,0xf2,0x9a,0x30,0x26,0x69,0x67,0x1f,0xf9,0x2c,0xea,0x13,0x85,0x81,0xbb,0x7e,0x4f,0xbb,0x4e,0xa2,0x86,0xef,0x42,0xdb,0xd1,0x30,0x1a,0x17};
    static std::uint8_t multiplicand5[32] = {0x73,0x35,0xa5,0xff,0x98,0x2a,0x36,0x14,0x4f,0x63,0x76,0xcd,0x7e,0x2c,0xb3,0xc0,0xb7,0xdb,0x0f,0xd5,0x58,0xba,0xb1,0xa2,0x57,0xb1,0x03,0x70,0x57,0x4b,0x5e,0xe3};
    static std::uint8_t product5[64]      = {0x4d,0xcb,0x00,0xda,0x6c,0xa0,0xc9,0xd9,0xe8,0x47,0xc3,0x56,0x35,0x0d,0x7e,0xfb,0x7f,0x06,0x6d,0xf4,0xea,0x51,0x33,0xc9,0xda,0x91,0xf3,0xe9,0x13,0x93,0xe3,0xb0,0x26,0x8a,0xb4,0x52,0x67,0x25,0x4c,0xfe,0x80,0xdf,0x29,0x85,0x0d,0x77,0x22,0xa6,0x23,0x8f,0x6e,0x81,0x03,0x28,0x77,0xc7,0xbb,0x73,0x50,0xbf,0x9c,0xf8,0x94,0x65};
    mpz_from_bytes(multiplier, multiplier5, 4);
    mpz_from_bytes(multiplicand, multiplicand5, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product5, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier6[32]   = {0x89,0x19,0x29,0x83,0x0d,0xec,0xaf,0x1b,0xfa,0x2b,0xdc,0xbf,0x5d,0x59,0x69,0xba,0x1d,0x2e,0xf7,0x32,0x9b,0xd3,0x4c,0x00,0x81,0x21,0x03,0xb8,0xdf,0x39,0x4c,0xbf};
    static std::uint8_t multiplicand6[32] = {0x01,0x6d,0x62,0x04,0x2a,0x4b,0x76,0xe1,0x66,0xb2,0xd1,0x3b,0x16,0x25,0x75,0x36,0x58,0xca,0xab,0x0a,0x4e,0x8a,0x49,0xb3,0xf0,0x82,0x11,0xfc,0xa6,0x25,0x06,0x48};
    static std::uint8_t product6[64]      = {0x00,0xc3,0xad,0x5e,0x0c,0xca,0x36,0xaf,0x76,0x8c,0xba,0x80,0xee,0x3b,0xdc,0x10,0xcd,0x84,0x8f,0xee,0xcf,0x33,0xe6,0x43,0x54,0xea,0x2f,0xa9,0xb5,0x32,0xf8,0xba,0x59,0xd9,0x26,0xa1,0xe0,0x1a,0xe9,0xab,0xaa,0xbc,0x9c,0xa0,0xd5,0x10,0x97,0x24,0x96,0xbf,0x4e,0xaf,0x96,0xd2,0x99,0xc2,0x15,0x55,0x07,0x4a,0x11,0x85,0x0f,0xb8};
    mpz_from_bytes(multiplier, multiplier6, 4);
    mpz_from_bytes(multiplicand, multiplicand6, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product6, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier7[32]   = {0x9d,0x9a,0x39,0x36,0xf4,0xba,0xee,0x7c,0x4b,0x06,0xd7,0x26,0x1e,0x9e,0xfb,0x78,0xbc,0xab,0xb8,0xcc,0x41,0xb2,0xcb,0x78,0x8d,0x63,0x56,0x16,0xfe,0xf1,0x20,0x96};
    static std::uint8_t multiplicand7[32] = {0xaa,0x6b,0x91,0xf8,0x82,0x5d,0x59,0x74,0x09,0xe6,0x8c,0xae,0xdf,0x49,0x1a,0x1b,0x5d,0x2a,0x02,0x54,0x25,0xc7,0xec,0x26,0x1b,0xdf,0x0a,0xa5,0xcf,0x07,0x45,0xb2};
    static std::uint8_t product7[64]      = {0x68,0xea,0xa3,0x51,0xc0,0x8d,0xc3,0x81,0xed,0x0d,0x8d,0xd0,0xc4,0x2d,0x21,0x44,0xc9,0x91,0x55,0x22,0x89,0xc3,0x83,0xac,0x41,0xe5,0x26,0xe6,0xba,0x13,0xe1,0xa4,0x6b,0xda,0xca,0x83,0x7f,0xa5,0xaa,0x9b,0x58,0xc4,0x7c,0xa2,0xa0,0x5d,0xb4,0x00,0x26,0xd8,0x46,0xc8,0x7b,0x86,0x2b,0xc8,0xf9,0x65,0xdd,0x53,0x6f,0x8b,0x16,0x4c};
    mpz_from_bytes(multiplier, multiplier7, 4);
    mpz_from_bytes(multiplicand, multiplicand7, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product7, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier8[32]   = {0xb3,0xa2,0x2a,0x38,0xbc,0xbc,0xb7,0x08,0xd5,0x70,0xf4,0x28,0x89,0x0e,0xe3,0x5b,0x87,0x6f,0x04,0x25,0xdc,0x84,0x50,0xa5,0x1a,0x2e,0x36,0x8a,0x07,0x3f,0x09,0x3d};
    static std::uint8_t multiplicand8[32] = {0xc1,0xb2,0x1c,0xce,0xc3,0x32,0x1f,0xf1,0x67,0x4a,0x97,0xf1,0x2a,0x39,0x15,0x44,0x88,0xfc,0x5c,0xe6,0x25,0x4e,0x60,0x2e,0xd3,0x46,0x59,0xa2,0x6d,0x02,0x4f,0xbf};
    static std::uint8_t product8[64]      = {0x87,0xea,0x3c,0xcc,0xf3,0xd1,0x61,0xc0,0xef,0x08,0xa2,0x17,0x59,0xc5,0xe4,0x75,0xbd,0x1e,0x72,0x94,0x3e,0x73,0x43,0x72,0x60,0x05,0xb8,0x86,0x88,0xd3,0xd5,0xae,0x92,0xec,0xb5,0xa1,0xa3,0x5f,0x40,0xe5,0x01,0xb5,0x1f,0x26,0x38,0x7b,0x16,0x36,0x66,0xa5,0x9e,0xb4,0x2b,0x56,0xf8,0x85,0x4b,0x41,0x3c,0x3e,0xe7,0x5b,0xb7,0x83};
    mpz_from_bytes(multiplier, multiplier8, 4);
    mpz_from_bytes(multiplicand, multiplicand8, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product8, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier9[32]   = {0xa1,0xa5,0x4c,0xf1,0x8d,0x39,0xee,0x84,0xc6,0x9d,0x4c,0xd1,0xe1,0xea,0xdf,0x96,0x13,0xd9,0x7b,0xb6,0xf5,0xb1,0x7b,0x13,0x30,0xa5,0x95,0x7a,0x0c,0xe1,0xfd,0x49};
    static std::uint8_t multiplicand9[32] = {0xf9,0xbc,0xbc,0x80,0x0e,0xe8,0x71,0xe2,0xd7,0x62,0x51,0xbb,0x10,0x86,0x1f,0x8d,0x9f,0x1d,0x45,0x07,0x99,0x54,0x07,0x6d,0xa4,0xce,0x0b,0xf8,0x00,0x40,0xca,0x5f};
    static std::uint8_t product9[64]      = {0x9d,0xb0,0xf4,0x41,0xb4,0x52,0xbb,0xf3,0x9a,0x57,0x3c,0x1d,0xca,0x28,0x0b,0x54,0x9b,0x00,0xdd,0xca,0xf8,0x36,0x56,0x29,0xf2,0x38,0x4e,0x9e,0x6e,0x6a,0xab,0xf9,0x63,0xa2,0x6f,0xb6,0x6b,0x0a,0x78,0x7a,0xb1,0x82,0x4b,0x3e,0x04,0x07,0x78,0x49,0x66,0xf2,0xd9,0xa9,0x1a,0x2c,0x01,0xe2,0xd9,0x75,0x80,0xac,0x6b,0xf8,0x98,0x17};
    mpz_from_bytes(multiplier, multiplier9, 4);
    mpz_from_bytes(multiplicand, multiplicand9, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product9, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier10[32]   = {0xb2,0x71,0x43,0x2e,0xec,0xdf,0xe1,0x9b,0xc8,0x38,0x6a,0x54,0x07,0x02,0x6c,0x18,0xdc,0x59,0x56,0x8e,0xb0,0x30,0xd1,0x85,0xc1,0xeb,0xbd,0x1e,0x7f,0xe0,0x82,0x61};
    static std::uint8_t multiplicand10[32] = {0xdf,0xa2,0xcd,0x7f,0x02,0x7c,0x01,0x83,0xf1,0x7a,0xfd,0x91,0x25,0x12,0x7f,0x12,0x6e,0xb3,0x88,0xf9,0x50,0x85,0x07,0xa0,0x56,0x36,0x3f,0x43,0x5b,0x1d,0xce,0xd5};
    static std::uint8_t product10[64]      = {0x9b,0xe2,0x24,0x6f,0x9e,0xc1,0x25,0x9b,0x94,0xd7,0xeb,0x0c,0xde,0xa0,0x66,0xa8,0x73,0xf9,0x0b,0x8e,0x33,0xa4,0x8d,0xfd,0x2a,0xee,0x34,0xd7,0xa8,0x79,0xd0,0xcc,0x04,0xf6,0x12,0x76,0xa8,0xc8,0xda,0x93,0x89,0x50,0xc0,0x1d,0x91,0xc4,0x58,0x2b,0xef,0x3f,0xf9,0xc9,0x2d,0x36,0x43,0x80,0x1d,0x8a,0x2e,0x71,0x4e,0xb3,0x88,0xb5};
    mpz_from_bytes(multiplier, multiplier10, 4);
    mpz_from_bytes(multiplicand, multiplicand10, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product10, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier11[32]   = {0x8a,0x2d,0xce,0x64,0x3a,0x73,0x6c,0x8f,0xd4,0x7d,0xb2,0xaf,0xd3,0x10,0xb7,0x2c,0xe2,0x6d,0x98,0xf2,0x4b,0xe3,0xf4,0xae,0xc3,0x34,0x00,0x60,0x2c,0xc5,0x93,0x49};
    static std::uint8_t multiplicand11[32] = {0x86,0xd5,0xaa,0x48,0x39,0xc9,0xdb,0x01,0x46,0x86,0x93,0x05,0x26,0xd4,0x78,0xe2,0xfa,0x14,0x0c,0x98,0xcc,0x7d,0x33,0x7d,0xdc,0x9c,0xb3,0x8e,0xfe,0xfe,0xa8,0x2a};
    static std::uint8_t product11[64]      = {0x48,0xc7,0x4e,0x0e,0x97,0x1e,0xce,0xfe,0xf0,0xf7,0xf1,0xa2,0xb2,0x28,0xe4,0xa9,0x86,0x6e,0x39,0x62,0x01,0x89,0xac,0xd8,0xae,0x9d,0xc2,0x2d,0x9a,0x3c,0xa8,0x82,0xe3,0x08,0xd1,0x4b,0xeb,0xbc,0xca,0xd3,0x67,0xed,0xa1,0xfc,0xf8,0xba,0xc4,0xed,0x23,0xda,0xa7,0x01,0x0a,0xb2,0x18,0x02,0x6a,0xaf,0x5e,0xd1,0x91,0x80,0x11,0xfa};
    mpz_from_bytes(multiplier, multiplier11, 4);
    mpz_from_bytes(multiplicand, multiplicand11, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product11, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier12[32]   = {0x7a,0xc5,0xa9,0x2f,0x3e,0xbd,0xfe,0xc0,0x80,0x9a,0x49,0xb1,0x92,0x9b,0xfa,0x16,0xf4,0xe5,0x41,0x4b,0xa0,0x41,0x74,0x03,0x98,0xe6,0x5b,0x12,0x49,0x47,0x31,0x8a};
    static std::uint8_t multiplicand12[32] = {0xd2,0x39,0x0d,0x3f,0x86,0xb0,0x2c,0xe8,0x4d,0x79,0x45,0x5b,0x55,0xc6,0x10,0x9b,0xd9,0x1d,0xf6,0x83,0xb5,0x33,0x10,0x49,0xb3,0x05,0xd4,0xdd,0xe0,0x6e,0xcf,0x0a};
    static std::uint8_t product12[64]      = {0x64,0xd1,0x81,0x25,0xed,0xd0,0xd0,0x14,0x25,0xbc,0x4e,0xda,0x3b,0x58,0x2b,0x61,0xa7,0x04,0x98,0x39,0xc8,0xc7,0xd9,0xe4,0x9c,0xe6,0xc5,0x9b,0xbe,0x23,0xd2,0x6b,0xf2,0x44,0xae,0x27,0x11,0x9b,0xfd,0x0b,0xdd,0xfb,0x4a,0x03,0xa1,0x3a,0x21,0x34,0x11,0x88,0x06,0xb2,0x4a,0x76,0x6d,0x4b,0x0b,0xcb,0x2c,0x09,0x77,0x22,0x85,0x64};
    mpz_from_bytes(multiplier, multiplier12, 4);
    mpz_from_bytes(multiplicand, multiplicand12, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product12, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier13[32]   = {0x16,0x97,0x55,0x36,0xb0,0x23,0xe5,0xec,0xe6,0x61,0xab,0x78,0x6c,0xc4,0xe9,0x01,0xd0,0xde,0xfe,0xf4,0x6c,0xf5,0x20,0xd6,0xdc,0xa5,0x9a,0x03,0x32,0x97,0x20,0x83};
    static std::uint8_t multiplicand13[32] = {0xa8,0x3c,0xb3,0xd3,0x17,0x7c,0xc5,0x43,0x10,0x9e,0x43,0x87,0x7c,0x38,0x7f,0x42,0xd1,0x11,0x97,0x84,0x86,0xf0,0xc2,0x6f,0x12,0x69,0xfd,0x42,0xf9,0xd9,0xc2,0x0a};
    static std::uint8_t product13[64]      = {0x0e,0xd8,0xab,0x42,0x4d,0xcb,0xeb,0xe7,0x32,0x07,0x99,0x5a,0x58,0x9b,0x95,0x72,0x90,0x12,0x33,0x91,0x32,0x37,0x94,0x74,0xcc,0x67,0x44,0x04,0x6e,0x40,0x84,0x7d,0xb3,0x2f,0x6e,0x35,0x92,0xea,0xfd,0x45,0x7a,0xb6,0xa3,0xfc,0xdc,0xee,0xa7,0xfd,0x7d,0x2c,0xb2,0x05,0x4a,0xf3,0xd3,0xab,0xb7,0xec,0x29,0xf6,0x7a,0x95,0x8b,0x1e};
    mpz_from_bytes(multiplier, multiplier13, 4);
    mpz_from_bytes(multiplicand, multiplicand13, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product13, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier14[32]   = {0xa2,0x06,0x76,0xdc,0xe8,0x1e,0x9f,0x15,0xdb,0xb1,0x4c,0x6c,0xef,0x35,0x2c,0x57,0xda,0xaa,0x96,0x37,0xc4,0x19,0xa2,0x3f,0x94,0x7d,0x27,0xda,0xea,0x1d,0x7b,0x93};
    static std::uint8_t multiplicand14[32] = {0x30,0x20,0x36,0xfc,0xcb,0xc7,0x4a,0x42,0xcc,0xb6,0x50,0xb3,0x60,0xe5,0x86,0x5f,0x47,0xfc,0x76,0x37,0x71,0x33,0x15,0x71,0xe1,0x13,0xd6,0x9f,0x9f,0x0b,0xd2,0xf5};
    static std::uint8_t product14[64]      = {0x1e,0x75,0x99,0xe5,0xa3,0x8b,0x9e,0x5a,0xa6,0xff,0xac,0xbe,0x6b,0x36,0x0b,0x28,0xa0,0x67,0xc8,0x62,0xd0,0xb4,0xf5,0xef,0xb8,0x12,0x30,0x96,0xd7,0x72,0x6b,0xb3,0xca,0x74,0xb5,0x0f,0xa7,0x94,0x56,0x27,0xc6,0x71,0x74,0x6a,0x28,0x81,0x6a,0xb6,0x1f,0xea,0x4e,0xe0,0xa3,0x15,0x31,0x24,0xe0,0xce,0xb9,0xdf,0xd9,0xe6,0xd9,0xaf};
    mpz_from_bytes(multiplier, multiplier14, 4);
    mpz_from_bytes(multiplicand, multiplicand14, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product14, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier15[32]   = {0x8c,0x88,0xb7,0x4d,0xee,0x8f,0x30,0xe8,0xfb,0x46,0xec,0x2e,0x1f,0x7d,0x09,0x02,0xc5,0x53,0xcd,0x87,0x16,0x5b,0xae,0x13,0x3c,0x59,0x99,0x72,0x41,0x36,0xf0,0xd3};
    static std::uint8_t multiplicand15[32] = {0xfe,0xd4,0x66,0xdd,0xb7,0x13,0xd7,0x09,0x64,0xac,0x1a,0xf4,0xe1,0x9b,0x4a,0x69,0xc9,0xf8,0xad,0xec,0x4e,0xa4,0x1c,0x11,0x73,0x45,0xe0,0x71,0x3d,0xe0,0xc8,0x63};
    static std::uint8_t product15[64]      = {0x8b,0xe4,0x3f,0x8f,0x4e,0xcb,0x8b,0xa9,0xf3,0xb0,0x5a,0x41,0x44,0x1d,0x63,0xb8,0xf9,0x51,0xdf,0x10,0xa4,0x0d,0x86,0x8b,0xdc,0xf0,0x9b,0xd1,0xb2,0xfb,0xf9,0x4d,0x9c,0x77,0x1d,0x56,0x58,0x4b,0x44,0xfc,0x8d,0x07,0x9e,0x85,0x3d,0x0a,0xc9,0xea,0x97,0x2e,0x6a,0x97,0xcc,0xba,0x89,0x0c,0x61,0xe2,0xae,0xba,0x24,0x03,0xf9,0x99};
    mpz_from_bytes(multiplier, multiplier15, 4);
    mpz_from_bytes(multiplicand, multiplicand15, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product15, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier16[32]   = {0xe6,0xcb,0xca,0xf7,0xe3,0x8e,0xdb,0x1e,0x66,0xaa,0xff,0xa7,0x21,0xc5,0x74,0x72,0xec,0xcf,0x93,0x94,0x14,0xe0,0x05,0x4f,0xb2,0x18,0xe2,0x13,0xed,0x19,0xab,0x5e};
    static std::uint8_t multiplicand16[32] = {0xb5,0x00,0x79,0x75,0x65,0xdb,0xc4,0x3b,0xac,0x48,0x02,0x5d,0x5f,0x80,0x85,0x9e,0xdc,0x17,0x74,0x40,0x5b,0x00,0x8b,0x4d,0xd9,0x7a,0xbe,0x99,0x3c,0xc3,0x56,0x8e};
    static std::uint8_t product16[64]      = {0xa3,0x2e,0x84,0x01,0x6d,0xcb,0x77,0x1a,0x46,0xf8,0xdb,0x01,0x95,0x64,0xa9,0x59,0xa6,0x56,0xb5,0x3c,0xeb,0xb3,0x83,0x15,0x2a,0x82,0xed,0x43,0x54,0x42,0xbb,0xf3,0x1d,0x54,0xc5,0x4e,0x5f,0x4c,0x96,0x3a,0x2e,0x5e,0xdb,0x2c,0xdd,0x33,0x68,0x4e,0x48,0x36,0xae,0x7d,0xc4,0x66,0x73,0xa0,0x20,0xd2,0xe6,0x99,0xb4,0x68,0xa2,0x24};
    mpz_from_bytes(multiplier, multiplier16, 4);
    mpz_from_bytes(multiplicand, multiplicand16, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product16, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier17[32]   = {0xd5,0x2c,0x82,0x8b,0x7b,0x23,0xbd,0x72,0x3e,0x78,0x07,0x89,0x22,0x54,0xe5,0x28,0xa1,0x7d,0x99,0x30,0xbd,0x60,0xbe,0xd6,0xc0,0xbd,0xdb,0x29,0xdd,0x4a,0xa3,0x48};
    static std::uint8_t multiplicand17[32] = {0x3a,0x1d,0x8c,0xf5,0x60,0xb6,0x1e,0x9e,0x01,0xec,0xa8,0x67,0x8d,0x71,0x28,0x8f,0x48,0x77,0x0d,0xd9,0x9a,0x24,0xe1,0x3e,0x95,0xba,0xb0,0xbf,0x07,0x72,0xd6,0x87};
    static std::uint8_t product17[64]      = {0x30,0x64,0xb0,0xff,0x0f,0x38,0x9a,0xe4,0xa4,0x9d,0x28,0x8b,0x64,0xa2,0x86,0x7b,0xa8,0x59,0xe8,0xf0,0x99,0x7a,0x9f,0x74,0x54,0xdc,0x74,0x80,0x3b,0xd0,0x10,0x42,0x92,0x2e,0xac,0x06,0xad,0x02,0xc4,0xce,0x5f,0xc9,0xb1,0x06,0x54,0x8e,0x5c,0xfb,0x3a,0x69,0x06,0xee,0xfe,0xb3,0x86,0xfb,0x0c,0x46,0x7a,0x7b,0xc4,0xea,0x4a,0xf8};
    mpz_from_bytes(multiplier, multiplier17, 4);
    mpz_from_bytes(multiplicand, multiplicand17, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product17, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier18[32]   = {0x55,0x55,0x74,0x55,0x7f,0xb8,0x58,0x89,0x8d,0xe8,0x23,0x7d,0x27,0x7b,0xc1,0x51,0x93,0x5e,0x0b,0xe8,0x2d,0x07,0x12,0xc2,0xf6,0xcc,0x37,0x72,0x75,0x07,0xe0,0x30};
    static std::uint8_t multiplicand18[32] = {0xb0,0xdb,0x97,0x6e,0x09,0x7e,0x88,0xe1,0x7f,0x01,0x3a,0x4a,0x33,0x32,0x0d,0xcf,0x61,0xc2,0x47,0x92,0x24,0xe4,0x79,0x8a,0x68,0x8b,0x0f,0x43,0xfc,0xcf,0x0f,0x33};
    static std::uint8_t product18[64]      = {0x3a,0xf3,0xf2,0x8f,0x62,0x73,0x99,0x6b,0xc0,0x7b,0xfc,0x1c,0xde,0x75,0x7c,0x64,0xd4,0x31,0x10,0xae,0x35,0x35,0x1a,0xba,0x87,0xed,0xd3,0x6d,0xc6,0x6f,0xa8,0xc4,0x74,0xc9,0x1b,0x16,0x98,0xba,0x56,0xbd,0x33,0x12,0xee,0xd9,0x7f,0xc1,0x9c,0x67,0xaf,0x4c,0x24,0xe7,0xdc,0x71,0x3f,0x0c,0xf3,0xf1,0x9f,0x46,0x4d,0x84,0x79,0x90};
    mpz_from_bytes(multiplier, multiplier18, 4);
    mpz_from_bytes(multiplicand, multiplicand18, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product18, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier19[32]   = {0x27,0xba,0x13,0x58,0xf1,0x2e,0xee,0xe5,0xca,0x71,0x87,0x84,0x1b,0xca,0xe0,0x69,0x76,0xd9,0x19,0xa5,0x86,0x20,0x23,0x8a,0xde,0x22,0x31,0x78,0x07,0x23,0x86,0x62};
    static std::uint8_t multiplicand19[32] = {0x4f,0xb2,0xc2,0x3d,0xbe,0xb0,0xf6,0xc7,0xfd,0x6b,0xe1,0x2d,0xa7,0x09,0x03,0xa1,0x6e,0x7e,0x07,0x7b,0xb4,0xa3,0xbb,0x84,0xd2,0x4b,0x5e,0xc0,0x8d,0xd7,0x3c,0xe3};
    static std::uint8_t product19[64]      = {0x0c,0x5e,0x29,0x7e,0x7d,0xdc,0xc1,0xe7,0x36,0x2f,0xa6,0x3d,0x40,0xa0,0xd7,0xb3,0x27,0x87,0x96,0x82,0xfe,0x4a,0x5b,0xa6,0x0e,0xbd,0x92,0x8c,0x78,0xd2,0x60,0x3e,0xdc,0x23,0xa5,0x29,0xc8,0x1f,0xb5,0x5e,0xfe,0x7f,0xe1,0x63,0xf3,0xb6,0x80,0xef,0xc1,0xa6,0x9c,0x63,0x02,0x82,0xbc,0xfa,0xcc,0x59,0x54,0x74,0x7e,0x4d,0x20,0xe6};
    mpz_from_bytes(multiplier, multiplier19, 4);
    mpz_from_bytes(multiplicand, multiplicand19, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product19, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier20[32]   = {0xc2,0x98,0x7d,0x27,0x8f,0x49,0xbb,0xc1,0x5c,0x1a,0x41,0x2f,0x37,0x96,0x64,0x4b,0x6f,0x35,0x97,0x31,0xc7,0x4f,0x2c,0xe4,0x34,0x58,0xde,0x14,0x60,0x6c,0xca,0x6f};
    static std::uint8_t multiplicand20[32] = {0x01,0x77,0xf3,0xb3,0x00,0x7a,0x1e,0x16,0xdd,0x9f,0x57,0xef,0x7e,0x38,0x86,0x5e,0x9e,0xaa,0x9c,0x1c,0x14,0x8c,0xcd,0xe5,0x15,0x5a,0x70,0x57,0xd2,0x0b,0x57,0xca};
    static std::uint8_t product20[64]      = {0x01,0x1d,0xc6,0x9e,0x24,0xbb,0xc8,0x39,0x1b,0x1b,0x2e,0x02,0xfd,0xfe,0x77,0x9b,0x8d,0xcb,0x3a,0xb0,0xb3,0xc3,0x43,0x31,0x0c,0x82,0xab,0xda,0x67,0x5c,0x77,0xcd,0xf4,0x13,0x13,0xb7,0x17,0xdb,0xdb,0x5e,0xd4,0xe5,0x41,0x4e,0xe7,0x60,0x06,0x35,0xfa,0x59,0x82,0x0c,0x78,0x09,0x4e,0x1b,0x67,0x20,0xe7,0x4d,0xcf,0x68,0x74,0x96};
    mpz_from_bytes(multiplier, multiplier20, 4);
    mpz_from_bytes(multiplicand, multiplicand20, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product20, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier21[32]   = {0x79,0x18,0x86,0x01,0xec,0xab,0x0e,0xa3,0x83,0x92,0xdd,0x2f,0x8b,0x46,0x65,0x70,0x83,0x88,0x5d,0x31,0xfe,0x70,0xcd,0xfe,0x14,0xcd,0xef,0x5c,0x9d,0x36,0xf3,0x24};
    static std::uint8_t multiplicand21[32] = {0x9f,0xfe,0x3d,0x6e,0x0b,0x79,0x5f,0x74,0x92,0x73,0xf3,0x07,0x01,0x46,0x11,0xd3,0xb3,0xdf,0xad,0xb2,0x5f,0x23,0xb8,0xee,0x66,0xf6,0xc9,0x10,0xe7,0x43,0xc8,0xb1};
    static std::uint8_t product21[64]      = {0x4b,0xae,0x7e,0x9f,0x0d,0xcc,0x91,0x89,0x33,0x24,0x7f,0x49,0x11,0xae,0xb1,0xdb,0xf2,0x8b,0xb5,0x92,0x1d,0x86,0xd3,0xcf,0xb4,0xbd,0x09,0xc4,0x9c,0xd0,0x4f,0x05,0x0d,0x6c,0x77,0x4b,0x22,0x82,0xd3,0x1a,0x76,0x9a,0x2f,0x8c,0xf5,0x63,0x9c,0x0b,0x80,0x60,0xa8,0x18,0x64,0x67,0xc2,0x2f,0x71,0x6b,0x0a,0xe2,0xbf,0x5e,0x3b,0xe4};
    mpz_from_bytes(multiplier, multiplier21, 4);
    mpz_from_bytes(multiplicand, multiplicand21, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product21, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier22[32]   = {0xd4,0xeb,0xcf,0x30,0x19,0xc4,0x25,0xad,0xcd,0xda,0x53,0x06,0xee,0x19,0x75,0x41,0xb6,0xee,0x0c,0x7f,0x98,0x69,0xf1,0x48,0x9c,0xea,0x93,0x96,0x36,0x02,0x13,0xde};
    static std::uint8_t multiplicand22[32] = {0x61,0x86,0xd4,0x60,0x82,0x86,0xc9,0x3e,0x1b,0x1b,0xe4,0xdc,0x84,0x31,0x9c,0xda,0xe1,0xc4,0x19,0x4f,0x3a,0xa0,0xbf,0x6a,0xfd,0xca,0x48,0x2f,0xaa,0xa7,0xae,0x87};
    static std::uint8_t product22[64]      = {0x51,0x1d,0x7d,0x93,0x39,0x82,0x30,0x58,0x5a,0x53,0xa5,0x24,0xa8,0xfc,0x82,0x10,0x3e,0x74,0x87,0xc5,0xfc,0xbb,0x13,0xba,0xa9,0x35,0x57,0x95,0x8e,0xe9,0xf4,0x10,0xcd,0x89,0xd5,0x41,0xa0,0x24,0xd0,0xcd,0x19,0x9c,0x3e,0x61,0xc6,0x75,0xf2,0xd6,0x8a,0x12,0xad,0x6f,0x51,0x58,0x99,0xf0,0xca,0x02,0x9f,0x3a,0x46,0x6b,0x5e,0x12};
    mpz_from_bytes(multiplier, multiplier22, 4);
    mpz_from_bytes(multiplicand, multiplicand22, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product22, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier23[32]   = {0x01,0x9a,0x95,0xe3,0xd0,0x7c,0x1c,0x11,0x46,0x95,0x67,0x7e,0xc4,0x17,0xf5,0x24,0xcc,0x53,0x00,0x2a,0xf3,0xce,0x69,0xbd,0xbd,0x1b,0xbd,0x25,0xb8,0x90,0x7a,0xa9};
    static std::uint8_t multiplicand23[32] = {0xd4,0x2c,0x95,0x51,0x0c,0xc2,0x3b,0x28,0xb9,0x1b,0xcc,0x50,0x0d,0x40,0x7d,0xa5,0x10,0x18,0x08,0x67,0x81,0x20,0xb0,0x37,0xdf,0xe4,0x17,0x72,0xff,0x8e,0xd7,0xab};
    static std::uint8_t product23[64]      = {0x01,0x54,0x4b,0xa1,0xe7,0x0a,0x18,0x8b,0x7b,0x4c,0x69,0xd9,0x71,0x79,0x3e,0x27,0x7b,0xb0,0xfa,0xcf,0x7e,0x44,0x59,0x91,0xfb,0xf3,0x54,0xd5,0x49,0x8e,0xd7,0x59,0x95,0xb8,0xae,0x52,0x6f,0x31,0x5c,0xbf,0x9c,0xb3,0xc7,0xd8,0xa8,0xe4,0x84,0x00,0xd2,0xeb,0xd4,0x15,0x5b,0x81,0xe6,0x91,0xbc,0x06,0x1e,0xc8,0x00,0x43,0xdd,0xe3};
    mpz_from_bytes(multiplier, multiplier23, 4);
    mpz_from_bytes(multiplicand, multiplicand23, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product23, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier24[32]   = {0xc0,0xd4,0xe7,0xf8,0x5f,0x1f,0xb9,0xad,0x94,0x6b,0xb3,0xf4,0x40,0x5c,0xee,0x1b,0xf2,0xb6,0x4d,0x6b,0x83,0xbb,0xc1,0x0e,0x6e,0x11,0xde,0x10,0x3c,0xab,0x60,0xcf};
    static std::uint8_t multiplicand24[32] = {0x1e,0xdc,0xb9,0x58,0xcd,0xb0,0xb2,0xa2,0xfd,0x2c,0xd9,0xa2,0xc6,0x40,0x6a,0x23,0x91,0x8f,0x81,0x42,0x52,0x3e,0xc7,0xe5,0xd7,0x04,0xb7,0x07,0x21,0xd7,0x9d,0xf7};
    static std::uint8_t product24[64]      = {0x17,0x3f,0x35,0xc3,0x34,0x59,0x47,0xd4,0xb6,0x4d,0xec,0x29,0x71,0x46,0x44,0xc7,0xe3,0xab,0x83,0x33,0x94,0x6e,0x84,0xe9,0xfb,0x79,0x7a,0xd1,0x4a,0xff,0x02,0xd6,0x06,0x36,0x68,0x22,0x9e,0xfa,0xa8,0xce,0x40,0xc8,0xe4,0xe5,0x7a,0x12,0x90,0xa1,0x78,0x04,0xe9,0x84,0x5f,0xfb,0xee,0x05,0x47,0x01,0xe0,0xf1,0xa0,0x92,0x5a,0xb9};
    mpz_from_bytes(multiplier, multiplier24, 4);
    mpz_from_bytes(multiplicand, multiplicand24, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product24, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier25[32]   = {0xf6,0x6f,0x95,0x90,0x0d,0x3b,0xa1,0xfa,0x68,0xa1,0x6a,0xa7,0xca,0x72,0xb6,0xe1,0xd6,0xa1,0x4c,0x44,0x99,0x18,0x10,0xef,0x74,0x63,0x09,0xe1,0xb7,0x56,0xc9,0xd0};
    static std::uint8_t multiplicand25[32] = {0x08,0x7c,0x90,0x64,0x51,0x17,0xfe,0xf4,0x35,0xd5,0x19,0xb8,0x99,0xdf,0x35,0x0b,0x28,0x94,0x84,0xe2,0x02,0x72,0xd6,0x45,0x96,0x9c,0x4c,0xb8,0x93,0x98,0x00,0x18};
    static std::uint8_t product25[64]      = {0x08,0x2b,0x65,0xb8,0x47,0xf8,0x21,0x6f,0xcf,0xaa,0xa0,0xcb,0x00,0x53,0x7b,0x0f,0xf8,0x7c,0x44,0x7c,0x82,0xf4,0x57,0x48,0x1e,0x00,0x5c,0xe7,0xd5,0x7b,0xdb,0x68,0x63,0xfc,0xb8,0x99,0x42,0x7c,0x33,0x09,0x03,0x59,0x67,0xc4,0x9c,0xb8,0x82,0x89,0xb4,0x07,0x2a,0x31,0xb3,0x12,0x84,0xc9,0xc8,0x9f,0x6c,0x13,0x73,0xa2,0xeb,0x80};
    mpz_from_bytes(multiplier, multiplier25, 4);
    mpz_from_bytes(multiplicand, multiplicand25, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product25, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier26[32]   = {0x59,0xc4,0x6d,0x0e,0xf3,0x03,0x00,0x89,0x54,0xd6,0xd4,0x0f,0x87,0x01,0x90,0x7a,0x2d,0x00,0x77,0xe1,0x54,0x39,0x73,0x61,0x0a,0xe4,0x85,0x0a,0x5a,0xf9,0xf8,0x0f};
    static std::uint8_t multiplicand26[32] = {0x8d,0x9d,0xf3,0x26,0x8d,0x18,0x86,0xe5,0x78,0xaf,0xce,0xd1,0x75,0x67,0xe7,0x94,0x66,0xf2,0x4e,0xcf,0x52,0x2f,0x70,0xdc,0x6f,0x3c,0x46,0x82,0xe1,0x2c,0xe0,0x3f};
    static std::uint8_t product26[64]      = {0x31,0xa8,0x92,0xcb,0x16,0x2a,0xda,0xcf,0xa1,0x44,0x54,0x88,0xd4,0x0d,0x51,0x51,0xbd,0xbf,0x2c,0x3d,0x53,0xb7,0x0c,0x41,0x99,0x36,0x9d,0x16,0x37,0x4c,0x35,0xcc,0x28,0x73,0x99,0x13,0x1c,0x0c,0x38,0x5e,0xf5,0xec,0x3f,0xb8,0x81,0x97,0xd3,0x77,0x01,0x78,0x2e,0x1c,0xb2,0xbd,0xdc,0xc9,0xcb,0xab,0x34,0xc0,0xee,0x25,0x2b,0xb1};
    mpz_from_bytes(multiplier, multiplier26, 4);
    mpz_from_bytes(multiplicand, multiplicand26, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product26, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier27[32]   = {0x94,0xbb,0xcc,0x50,0xbd,0x42,0x01,0xe8,0x0e,0x01,0xbe,0xfa,0xb0,0x11,0xa5,0x80,0xa1,0x2d,0x68,0x56,0x69,0x61,0x72,0xcb,0xef,0x27,0x61,0x58,0xd9,0x8b,0xeb,0x3a};
    static std::uint8_t multiplicand27[32] = {0xab,0xfb,0xbc,0xe6,0x2f,0xb7,0xcb,0x57,0x66,0xa4,0xa8,0xa8,0xe3,0x39,0x89,0xee,0x9f,0x2e,0xd2,0x1b,0x8a,0x47,0x67,0x34,0x93,0xe1,0x11,0xa1,0x7b,0xc1,0x3e,0xa7};
    static std::uint8_t product27[64]      = {0x63,0xeb,0xb3,0x5a,0xe8,0x12,0xc5,0x69,0xf5,0x84,0x62,0xce,0x9e,0x16,0xa8,0x03,0x72,0xc2,0x2f,0x17,0xdf,0xd0,0x35,0xa8,0x4b,0x06,0xa3,0x5d,0xd3,0xd4,0x51,0x02,0xe1,0x36,0x24,0xe6,0x9f,0xdd,0xa5,0xbc,0x58,0x04,0x69,0x53,0xee,0x62,0x2d,0x40,0x64,0x5c,0x79,0x76,0x76,0x6a,0x48,0x91,0xc8,0x5e,0x0b,0xa1,0x01,0xf8,0x7e,0xd6};
    mpz_from_bytes(multiplier, multiplier27, 4);
    mpz_from_bytes(multiplicand, multiplicand27, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product27, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier28[32]   = {0x12,0xf4,0x52,0x7f,0x9e,0xe9,0x42,0x06,0x41,0x42,0xde,0xb2,0x87,0x33,0x7d,0x96,0xc1,0xb9,0x2e,0xbf,0x4e,0x9b,0xd8,0x09,0xd8,0xba,0x24,0xd2,0xb9,0x76,0xa9,0xce};
    static std::uint8_t multiplicand28[32] = {0x19,0x7f,0xc3,0xeb,0x3a,0xe1,0x1c,0x6c,0x6a,0xfe,0x85,0x89,0x5d,0x26,0xe6,0xcb,0x5d,0x81,0x11,0x86,0x63,0x56,0x24,0xd1,0x4b,0x4e,0xc0,0x81,0x7d,0x9c,0xcf,0x7e};
    static std::uint8_t product28[64]      = {0x01,0xe3,0x51,0xc4,0xe9,0x4f,0x93,0xe5,0x17,0x14,0x91,0x06,0x8e,0xa0,0xe8,0xa2,0xe1,0x90,0x05,0xf9,0x46,0x50,0x39,0xeb,0x6d,0x7c,0x30,0x82,0x6c,0x87,0x8d,0xa1,0x00,0x68,0x2f,0xe6,0xc8,0x06,0xa4,0xc4,0xdc,0x1d,0x7e,0x66,0x39,0x73,0xf1,0x63,0x85,0xcf,0xf6,0xa9,0xbe,0x21,0xb8,0xde,0x0f,0x46,0x89,0xb5,0x4b,0x3d,0x25,0x64};
    mpz_from_bytes(multiplier, multiplier28, 4);
    mpz_from_bytes(multiplicand, multiplicand28, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product28, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier29[32]   = {0x01,0xad,0x37,0x8f,0x92,0xcd,0x63,0x6e,0x4d,0x4e,0x1b,0xe7,0x9b,0xd1,0x57,0x9e,0xb0,0xdf,0x62,0xe0,0x58,0xe7,0x00,0x1e,0x4f,0x89,0xb0,0x23,0x37,0x95,0x4b,0xf1};
    static std::uint8_t multiplicand29[32] = {0x91,0x12,0xfe,0xac,0x83,0x77,0x91,0x7f,0x65,0xa6,0x13,0x81,0x13,0xd6,0x4f,0x10,0xaf,0x10,0x00,0x58,0xcf,0x76,0x1a,0x3c,0x6e,0x11,0x6f,0xf5,0x2f,0x5d,0xbb,0x4c};
    static std::uint8_t product29[64]      = {0x00,0xf3,0x3c,0x51,0x38,0x9c,0xdb,0xc8,0x20,0x1e,0x93,0x34,0xc8,0x4d,0xeb,0xbf,0x65,0xcf,0x5b,0x42,0x97,0xdc,0x10,0x65,0xd7,0xa2,0x72,0x72,0x9d,0x43,0x21,0x3e,0xc3,0x8f,0xe9,0x31,0x64,0xce,0xc5,0x01,0xb4,0x3a,0x55,0x72,0x70,0x39,0x8f,0xbe,0xf5,0x66,0xf1,0xc5,0x74,0x6f,0x4e,0x4a,0x2b,0x59,0xca,0xe1,0x64,0x58,0x96,0x8c};
    mpz_from_bytes(multiplier, multiplier29, 4);
    mpz_from_bytes(multiplicand, multiplicand29, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product29, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier30[32]   = {0x82,0x40,0xbb,0xaf,0x65,0x38,0x9f,0x83,0xdf,0x5b,0xd0,0x24,0xff,0x5b,0x81,0x55,0x20,0x4d,0x05,0xc2,0xe7,0x66,0x67,0xd8,0xcf,0x92,0x53,0x06,0xde,0xed,0x34,0xf0};
    static std::uint8_t multiplicand30[32] = {0x09,0xac,0x80,0x92,0x69,0x6b,0xc3,0x7b,0x46,0xcb,0x7b,0xc0,0xef,0x80,0x3b,0xff,0xce,0xd7,0x9f,0xe8,0xab,0xc0,0xc8,0x6f,0x49,0x39,0x5b,0xb4,0xcc,0xb5,0x3e,0xb5};
    static std::uint8_t product30[64]      = {0x04,0xec,0x0b,0x82,0x20,0xcd,0x1d,0xca,0x44,0x6a,0xbf,0xfa,0x05,0x0e,0x8f,0xdd,0x08,0xf9,0x0d,0x32,0xec,0x3c,0xe3,0x6e,0xc8,0x7a,0x72,0xc3,0x72,0x21,0x3a,0x75,0x08,0xb7,0x35,0x38,0x13,0xae,0xca,0x75,0xcf,0x9c,0xb9,0xb4,0x7d,0x22,0xd0,0xb5,0x0c,0x37,0x90,0x65,0x00,0xf5,0xd8,0x3a,0xaa,0x1b,0x8a,0x7e,0xbe,0x38,0x8d,0xb0};
    mpz_from_bytes(multiplier, multiplier30, 4);
    mpz_from_bytes(multiplicand, multiplicand30, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product30, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier31[32]   = {0x64,0x52,0xdb,0xfc,0x6b,0xad,0xa1,0x8b,0x6d,0x0f,0x62,0xf4,0x22,0x84,0xf6,0xa1,0x46,0xd4,0xe0,0xc3,0xfe,0x8d,0x61,0x35,0x66,0xff,0x9b,0x81,0xf9,0xb2,0xff,0xde};
    static std::uint8_t multiplicand31[32] = {0xa1,0x7b,0xac,0x17,0xc3,0x53,0x87,0x85,0xc5,0x52,0x85,0x61,0x85,0xcf,0xfd,0x2a,0x7b,0x5a,0xd7,0xf0,0xd8,0xfb,0x22,0x87,0x86,0x08,0x5b,0xd3,0xa3,0x86,0xae,0x41};
    static std::uint8_t product31[64]      = {0x3f,0x48,0x93,0x9a,0x6d,0xcb,0x24,0x96,0x59,0xf5,0xf0,0xcb,0x47,0x63,0xd0,0x72,0xc8,0x00,0xb6,0xe6,0x4e,0x43,0x6a,0x83,0xed,0x00,0xfb,0x5e,0x80,0xc9,0xec,0x74,0xa3,0x82,0xe6,0x34,0xb9,0x75,0xf3,0xa8,0xff,0x1e,0x9f,0x52,0x6b,0x01,0xdd,0x79,0x9d,0x78,0x1a,0xe9,0xe4,0x42,0xed,0xdb,0xad,0x0b,0x4e,0x4e,0x58,0x8f,0xdb,0x5e};
    mpz_from_bytes(multiplier, multiplier31, 4);
    mpz_from_bytes(multiplicand, multiplicand31, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product31, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier32[32]   = {0x8e,0x53,0xce,0x5b,0x37,0x03,0xb3,0xb9,0x22,0x79,0x24,0x7c,0x24,0xbf,0x4f,0x13,0x0f,0xe3,0x52,0x6a,0xf7,0x45,0x3c,0x5e,0xae,0xb8,0x01,0x33,0xb1,0xd5,0xab,0x74};
    static std::uint8_t multiplicand32[32] = {0x83,0xfc,0xb5,0x34,0xf1,0xc6,0xf9,0xbe,0x39,0x42,0xc3,0x73,0x1a,0x74,0x39,0x9a,0x5a,0x5c,0x49,0x6c,0x1a,0x6f,0x60,0x77,0xc0,0xa6,0x44,0x39,0xfe,0xeb,0x8d,0xdf};
    static std::uint8_t product32[64]      = {0x49,0x61,0x61,0xd6,0x7f,0x48,0xf9,0xf8,0x30,0xcb,0x04,0x61,0x28,0xea,0xbc,0xc5,0x28,0x27,0xfd,0xa7,0x77,0xec,0x94,0x8d,0xcb,0x67,0xa8,0x37,0xff,0xf2,0x6c,0x53,0x29,0xb7,0x4f,0x48,0x45,0xa0,0xce,0x50,0xcd,0xcb,0xae,0x15,0xf9,0xbe,0xcc,0x46,0xc7,0x02,0x71,0x3f,0x21,0xee,0x74,0x9f,0x77,0x2e,0xc1,0x10,0x14,0x0b,0x3e,0x0c};
    mpz_from_bytes(multiplier, multiplier32, 4);
    mpz_from_bytes(multiplicand, multiplicand32, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product32, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier33[32]   = {0xdc,0x62,0x0d,0x6d,0x94,0x2e,0xe7,0x07,0x9f,0x89,0xba,0x6c,0xbf,0x44,0x7a,0xb9,0xc9,0xab,0xdf,0xb8,0xa8,0x2b,0x3b,0x5e,0xa4,0x97,0x49,0x15,0x1b,0xed,0xa2,0x0e};
    static std::uint8_t multiplicand33[32] = {0x95,0x1f,0x42,0x3a,0xac,0x1b,0x84,0x40,0xda,0xdb,0x8c,0x2e,0xb0,0x44,0xb1,0x0c,0x8e,0x53,0xd6,0xca,0xe0,0x4a,0x1b,0x9b,0x75,0xdf,0xc6,0xf0,0x07,0x77,0x60,0x41};
    static std::uint8_t product33[64]      = {0x80,0x5f,0xfa,0xb4,0x31,0x5b,0x1a,0x64,0x81,0xee,0x4a,0x01,0xdb,0x3c,0xee,0xe6,0x86,0x1b,0x07,0xd2,0x45,0xff,0xf8,0x0d,0x6d,0xaa,0xec,0x1d,0x44,0xba,0xc3,0xe7,0x63,0x47,0x2f,0x1e,0x43,0x11,0xd3,0x74,0xb5,0x6d,0x12,0xd6,0x06,0xae,0x6b,0xb8,0xf7,0x71,0xd5,0x24,0xc9,0x42,0x95,0x01,0x9c,0xb5,0xb4,0xd9,0xea,0x9d,0x65,0x8e};
    mpz_from_bytes(multiplier, multiplier33, 4);
    mpz_from_bytes(multiplicand, multiplicand33, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product33, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier34[32]   = {0xe8,0x3b,0x86,0x7c,0x68,0x1e,0x64,0x22,0xd8,0x8f,0x04,0xf9,0xdf,0xa7,0x3a,0x3d,0xa4,0x2b,0xa7,0x72,0x3f,0x57,0x49,0xf8,0xbc,0x14,0x03,0x09,0xb8,0x87,0xdb,0xad};
    static std::uint8_t multiplicand34[32] = {0xd5,0x5a,0xcb,0x3c,0xbb,0xeb,0x5e,0x81,0x0d,0xdf,0x89,0x9c,0x76,0x9f,0x1d,0x01,0x0e,0xab,0x16,0x91,0xe8,0x83,0x11,0x7f,0x0a,0x74,0x25,0x38,0x18,0xbb,0x3c,0xa0};
    static std::uint8_t product34[64]      = {0xc1,0x8b,0xe4,0x31,0x16,0x6f,0x0f,0x54,0xf5,0x2e,0x43,0xcb,0x14,0x2b,0x24,0x85,0xcd,0xc7,0x9d,0x40,0x5b,0xca,0x0f,0xbe,0x0b,0x16,0x47,0x08,0xdc,0xca,0xbd,0x9b,0xf0,0x81,0xc7,0x4c,0x50,0xb8,0x26,0x0a,0x71,0xd3,0x6e,0xe8,0x72,0x91,0x68,0xdb,0xf5,0x7c,0x03,0x64,0xf3,0x29,0x40,0x34,0xab,0x7a,0xc4,0x00,0xdb,0xc4,0xd8,0x20};
    mpz_from_bytes(multiplier, multiplier34, 4);
    mpz_from_bytes(multiplicand, multiplicand34, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product34, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier35[32]   = {0xcd,0x16,0x15,0x6f,0x20,0xc9,0xfc,0x0f,0xf1,0xfe,0x54,0xf9,0xde,0x3d,0x27,0x5d,0xee,0xfc,0x98,0xe3,0xcd,0x34,0x25,0x03,0x54,0x4e,0xca,0xfd,0x24,0x08,0x3c,0x50};
    static std::uint8_t multiplicand35[32] = {0x9b,0x62,0x7a,0x8a,0xf7,0xce,0x87,0x7b,0x73,0x54,0x59,0x10,0x62,0x8f,0xdb,0x94,0x6f,0xca,0x89,0xe2,0x5e,0x86,0x9d,0xd6,0xad,0xf8,0x2e,0x78,0xd0,0x0d,0x7c,0x33};
    static std::uint8_t product35[64]      = {0x7c,0x7b,0x43,0x9a,0x58,0x09,0x1f,0x75,0x17,0xfe,0xc4,0x60,0xb7,0x14,0xcb,0x13,0x34,0x5e,0xb9,0xc9,0x96,0x98,0xda,0x90,0xc3,0x53,0x69,0x33,0xe3,0x3d,0x3e,0x3f,0xbd,0xd3,0x5c,0x93,0xf0,0x0a,0xe1,0x2a,0xde,0xfd,0x77,0xc7,0x84,0x05,0x5d,0xa0,0xf9,0xba,0x54,0x81,0x3a,0xb8,0xe0,0x2c,0xce,0x59,0x38,0xce,0x3a,0xea,0xc3,0xf0};
    mpz_from_bytes(multiplier, multiplier35, 4);
    mpz_from_bytes(multiplicand, multiplicand35, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product35, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier36[32]   = {0xe2,0x78,0x4d,0xb5,0x21,0xdd,0xa8,0xd3,0xcd,0x18,0xc2,0x99,0xfa,0x19,0x2a,0x04,0x97,0x66,0x55,0xb2,0xf3,0x37,0x4c,0xa5,0xbe,0x5d,0x25,0x61,0x31,0x4f,0x8f,0xe2};
    static std::uint8_t multiplicand36[32] = {0x3d,0x29,0x24,0x16,0xcb,0x12,0x4f,0x28,0x2c,0xe7,0x90,0xda,0xc4,0x42,0xb0,0x94,0xfe,0x02,0x2d,0xe2,0x40,0x61,0x18,0x0d,0xc5,0x45,0xa4,0xb8,0x69,0x89,0x8a,0xe4};
    static std::uint8_t product36[64]      = {0x36,0x1b,0x0f,0xb5,0xaf,0xfd,0xfc,0x29,0x59,0xac,0xc2,0xa5,0xef,0x0d,0x0a,0xee,0xd1,0x59,0xc3,0x60,0x20,0xe4,0x6a,0x3c,0x9c,0x58,0x9f,0x19,0xf9,0x28,0x45,0x9e,0xb0,0xab,0xae,0x1b,0xe3,0xa1,0xad,0xc6,0x94,0xf6,0xb4,0x4b,0x5c,0x85,0x0d,0x58,0x71,0x8f,0x38,0xa8,0xc4,0x8b,0xd4,0x80,0xba,0x9e,0xe7,0x2c,0x80,0x5d,0xf9,0x48};
    mpz_from_bytes(multiplier, multiplier36, 4);
    mpz_from_bytes(multiplicand, multiplicand36, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product36, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier37[32]   = {0xf5,0x53,0xf0,0xe2,0x86,0xe7,0xe0,0x82,0x7b,0x02,0xec,0x14,0xde,0x47,0xf7,0xf7,0x17,0xec,0x0a,0xc5,0x7d,0x18,0xb1,0x36,0xe4,0xfa,0xfb,0x41,0x3e,0xf7,0x9b,0x6f};
    static std::uint8_t multiplicand37[32] = {0x2d,0x78,0x9f,0xdb,0xdd,0x8f,0x2c,0x81,0x20,0x23,0xe7,0x30,0xdd,0x09,0x14,0x1d,0xfd,0x33,0x9a,0x98,0x91,0xd2,0x84,0x56,0x0f,0x21,0x3e,0xdb,0x27,0x85,0x84,0x23};
    static std::uint8_t product37[64]      = {0x2b,0x93,0x59,0xe2,0x91,0xa4,0x6e,0x38,0xe2,0x17,0x06,0xb5,0x15,0x3f,0xb9,0xb6,0xc0,0xe1,0x79,0x3d,0x1e,0x7b,0xfa,0x9b,0x03,0x20,0xf5,0x38,0x38,0x36,0x46,0xa4,0xe1,0x37,0x63,0x7d,0x59,0x91,0xc9,0xfc,0x5f,0x7c,0x27,0x01,0x04,0xec,0x1b,0x09,0x1e,0xb5,0x2f,0x44,0x59,0x31,0x8c,0x9f,0x91,0x21,0x47,0xa9,0xf1,0xaa,0x7c,0x2d};
    mpz_from_bytes(multiplier, multiplier37, 4);
    mpz_from_bytes(multiplicand, multiplicand37, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product37, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier38[32]   = {0xf9,0xd9,0x29,0x44,0xf0,0xee,0xfc,0x88,0xf5,0x6e,0x12,0x4e,0xa2,0x15,0x57,0xa6,0xe1,0xa0,0x08,0x40,0xee,0x9c,0x87,0x25,0x5f,0x91,0x0a,0xf2,0x1a,0x26,0xfe,0x8e};
    static std::uint8_t multiplicand38[32] = {0x59,0xb5,0xc5,0x5a,0xa3,0x18,0x4f,0x0c,0x56,0x5d,0xfa,0x21,0xe6,0x5d,0xad,0xf4,0xf9,0x83,0x87,0xb2,0xbd,0x67,0x72,0x68,0xcb,0x5c,0xde,0x6d,0xca,0x74,0xcd,0xa2};
    static std::uint8_t product38[64]      = {0x57,0x8d,0xe6,0x7f,0xb7,0xc8,0xfd,0x31,0x98,0x96,0x9a,0xdc,0x80,0x15,0x26,0xa4,0x9e,0x4a,0x80,0x3b,0xcd,0xd9,0x3b,0xac,0xaf,0xd1,0x83,0xb6,0x7a,0x04,0x78,0xff,0x52,0xed,0x06,0xb5,0x62,0xd7,0x2b,0xd4,0x84,0x45,0x69,0x65,0x50,0x46,0x90,0x7e,0x20,0x2a,0x9b,0xad,0xb1,0xf0,0xc6,0xda,0xa6,0x44,0xf1,0x23,0x2a,0xdc,0xcb,0xdc};
    mpz_from_bytes(multiplier, multiplier38, 4);
    mpz_from_bytes(multiplicand, multiplicand38, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product38, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier39[32]   = {0x77,0xbd,0x0a,0x2a,0xe9,0xbf,0x2a,0xef,0x59,0xf9,0xd8,0x89,0xfe,0x25,0xcd,0xed,0x43,0x29,0xd4,0x95,0xcc,0xf9,0xf5,0x24,0x9f,0x40,0xf4,0x6c,0xff,0xc5,0xb2,0x2c};
    static std::uint8_t multiplicand39[32] = {0x80,0x35,0x63,0xe4,0xf6,0xa4,0xc3,0x5e,0x76,0x9d,0x89,0x1b,0xb8,0x9d,0x67,0xce,0xb4,0x33,0x85,0xdd,0xaa,0x26,0x84,0xf3,0x4a,0x89,0x8b,0xd1,0x4b,0x4e,0x78,0x32};
    static std::uint8_t product39[64]      = {0x3b,0xf7,0x7d,0xf1,0xc2,0x6a,0x58,0xe9,0x9a,0x26,0x09,0x3e,0xae,0x62,0x8c,0xfa,0x57,0x87,0xec,0x21,0x00,0xc7,0x6e,0x73,0xc5,0x66,0xfd,0xd9,0x2e,0x47,0x3d,0xd9,0x4f,0x70,0x22,0x3e,0x68,0x9b,0xb7,0x0e,0x80,0x6e,0xcc,0x6f,0x33,0x1a,0x04,0xf3,0x7e,0x08,0x95,0x18,0x9b,0x9d,0x2b,0x22,0x2f,0x18,0x08,0x89,0xcd,0x89,0x6c,0x98};
    mpz_from_bytes(multiplier, multiplier39, 4);
    mpz_from_bytes(multiplicand, multiplicand39, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product39, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier40[32]   = {0x87,0x24,0x22,0x31,0x88,0x0a,0x36,0x42,0xe3,0x85,0x42,0xec,0x35,0x39,0xa3,0x3d,0xa7,0xaa,0x55,0x28,0x06,0xb1,0x6e,0x1c,0x0d,0xbd,0xd6,0xdd,0x33,0x98,0x96,0x1e};
    static std::uint8_t multiplicand40[32] = {0xcb,0x9f,0x9b,0xc3,0x3f,0x51,0x3b,0x88,0x36,0x5b,0xb9,0x76,0x58,0x52,0x06,0x98,0x59,0xf5,0x84,0x97,0xb8,0x98,0x8d,0xde,0x4f,0x22,0x0a,0xa9,0xc0,0x5e,0x1c,0x7f};
    static std::uint8_t product40[64]      = {0x6b,0x7d,0xe8,0xc8,0x76,0x4a,0x66,0xbd,0xca,0x83,0xfe,0xc1,0x4e,0x51,0x92,0x06,0x57,0x1a,0xf2,0xae,0xb3,0x85,0xe7,0x39,0x33,0x47,0x5f,0xae,0xcc,0xf9,0xcb,0xcd,0xde,0x84,0xca,0x2f,0x38,0xb0,0x37,0x45,0x97,0x81,0x61,0x81,0x18,0x29,0x0f,0xb8,0xf9,0x70,0xd4,0x53,0xf6,0x81,0x3e,0xec,0x98,0x2d,0x71,0xcc,0xe8,0x21,0xc0,0xe2};
    mpz_from_bytes(multiplier, multiplier40, 4);
    mpz_from_bytes(multiplicand, multiplicand40, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product40, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier41[32]   = {0x84,0xb5,0x12,0x9d,0x9a,0x5b,0x7f,0x74,0xba,0x22,0x87,0xed,0x47,0xf0,0x8b,0x16,0xa8,0x57,0x46,0x8e,0x32,0x55,0x01,0xe4,0xaf,0xfc,0x36,0xb7,0xf6,0xd5,0xef,0x79};
    static std::uint8_t multiplicand41[32] = {0xf2,0xb5,0xe0,0x7f,0x48,0xf4,0x9b,0x0a,0x0b,0x54,0x72,0x63,0x3f,0xd6,0xf8,0x66,0x25,0xb3,0x4f,0x2d,0x2c,0xe4,0x4d,0x94,0x6c,0x41,0x12,0x12,0x3c,0xfd,0x64,0x2a};
    static std::uint8_t product41[64]      = {0x7d,0xd1,0x73,0xff,0x91,0x48,0x7e,0x9e,0x01,0x3f,0x2c,0xdd,0xaa,0xf1,0x0a,0x83,0x61,0x20,0x24,0xe1,0x3c,0x33,0x2d,0x94,0x25,0x0b,0xe5,0xe4,0x5a,0x95,0x16,0xeb,0x28,0x0d,0x61,0xbf,0x95,0xec,0xd1,0x59,0x17,0x87,0x4c,0xd7,0x3e,0x9e,0x98,0x47,0x89,0x46,0x18,0x95,0xab,0xd7,0x39,0xef,0xd6,0x04,0x44,0xaa,0x17,0x39,0x8d,0xda};
    mpz_from_bytes(multiplier, multiplier41, 4);
    mpz_from_bytes(multiplicand, multiplicand41, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product41, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier42[32]   = {0x30,0x12,0x96,0x75,0xb3,0x20,0x42,0x1c,0x8e,0xd1,0x1c,0xc2,0x56,0xf6,0x5e,0x4a,0x7f,0xd4,0x92,0x98,0x21,0x71,0x06,0xf5,0xf8,0x84,0x1c,0xbb,0xbe,0x1e,0x81,0x11};
    static std::uint8_t multiplicand42[32] = {0x48,0xf8,0xe6,0xc1,0x34,0x58,0xcf,0x8e,0xa7,0xc7,0x81,0x68,0x61,0x09,0x4a,0x62,0x0c,0x07,0xcd,0xb1,0xe8,0x9b,0xeb,0xc8,0x83,0xbc,0x79,0x90,0x36,0x9f,0x54,0xa8};
    static std::uint8_t product42[64]      = {0x0d,0xb3,0xf7,0xa7,0xd7,0x6c,0x3b,0x70,0x8c,0xdf,0x03,0x0d,0xbd,0x53,0xa8,0xca,0x96,0xf3,0xd4,0x37,0xa3,0xac,0x9b,0xab,0x35,0xeb,0xdf,0x6c,0x6d,0x94,0x28,0x33,0x78,0xa2,0x33,0x2d,0x9c,0x91,0xe2,0x91,0x67,0x4d,0xa9,0x75,0xdb,0x5d,0xe7,0x7f,0x29,0x48,0x69,0x68,0xbb,0x4f,0x10,0x45,0xba,0x7b,0x9c,0x52,0x85,0xed,0x47,0x28};
    mpz_from_bytes(multiplier, multiplier42, 4);
    mpz_from_bytes(multiplicand, multiplicand42, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product42, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier43[32]   = {0x97,0x62,0x19,0x53,0xad,0x83,0x15,0x6e,0xb4,0x2d,0x2a,0x9d,0xa0,0x83,0xa6,0xbb,0x50,0xac,0x41,0x0b,0xd0,0x54,0x95,0x01,0x65,0xad,0x17,0xed,0x0c,0xac,0x8c,0x5b};
    static std::uint8_t multiplicand43[32] = {0xc0,0xfa,0x6e,0xfd,0xa4,0x00,0xbd,0xb0,0xa9,0x6a,0x60,0xec,0xfc,0x66,0x71,0x42,0x17,0x1f,0x29,0x34,0xf0,0x7a,0x8d,0x6f,0xe5,0x3e,0x95,0x5b,0x47,0xa9,0x65,0x2f};
    static std::uint8_t product43[64]      = {0x72,0x1d,0xaa,0x6d,0xa1,0xaa,0x06,0xbc,0x42,0x7a,0x68,0xe8,0xf3,0x03,0xfd,0x6b,0x9f,0x78,0xd0,0xf0,0x1f,0xbd,0xb2,0x60,0x10,0x5d,0x26,0x7e,0x3d,0x1f,0x86,0x71,0xb7,0x65,0x4c,0x7f,0x66,0x18,0xa9,0x5b,0x68,0x59,0x44,0xeb,0x6c,0x8d,0xfa,0xe0,0x0c,0x93,0xa8,0x95,0xd6,0x20,0xe8,0xb6,0xd3,0x49,0xfe,0xb4,0x4c,0x20,0xab,0xb5};
    mpz_from_bytes(multiplier, multiplier43, 4);
    mpz_from_bytes(multiplicand, multiplicand43, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product43, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier44[32]   = {0x67,0x4c,0xa6,0x63,0x74,0xe4,0x08,0x4c,0x65,0xf8,0xea,0xff,0x95,0x0d,0xff,0x4e,0xc8,0x54,0x69,0xac,0x55,0x61,0x6c,0x5f,0xd5,0x86,0x32,0x53,0x55,0xdd,0x73,0x66};
    static std::uint8_t multiplicand44[32] = {0x1c,0xef,0x65,0x8c,0x86,0x09,0xc1,0x12,0xdb,0x2f,0xc7,0xf0,0x81,0xa3,0x77,0xc3,0x1f,0xec,0x48,0x42,0x1b,0xeb,0x6d,0x64,0x0c,0x71,0x12,0x3d,0xfe,0x3a,0x3f,0x58};
    static std::uint8_t product44[64]      = {0x0b,0xac,0xfb,0xbc,0x29,0x49,0x5c,0x00,0x4c,0x6a,0x1b,0xab,0xfe,0xdf,0x84,0x9f,0x07,0xd9,0x80,0x04,0xf9,0xe4,0x90,0x55,0x87,0xa8,0x7d,0x36,0x9e,0xe4,0x52,0x68,0x0c,0x47,0x0b,0x24,0x1a,0xe8,0x4c,0x01,0x79,0x99,0x32,0x5d,0x01,0xce,0xd7,0xcd,0xc6,0xe8,0x9a,0x28,0xeb,0x53,0x00,0xb9,0x42,0x7e,0xa6,0xc0,0x5c,0xa1,0xc5,0x10};
    mpz_from_bytes(multiplier, multiplier44, 4);
    mpz_from_bytes(multiplicand, multiplicand44, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product44, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier45[32]   = {0x31,0x0e,0xff,0x23,0xb3,0x67,0x00,0x99,0xce,0x59,0x6b,0xd1,0xff,0x5d,0xc3,0x05,0x2e,0x6f,0x96,0x02,0x68,0xc9,0x2a,0x93,0x7f,0xab,0x1b,0x5a,0x4c,0x1b,0xad,0x6c};
    static std::uint8_t multiplicand45[32] = {0xd7,0x9b,0xf7,0x7a,0x3d,0xa1,0xe0,0xdb,0xb7,0x24,0xc6,0x40,0x26,0x91,0x8b,0xfd,0x67,0x7d,0xea,0x25,0x71,0x93,0x41,0x88,0xee,0xc2,0xc8,0xce,0xb0,0xe6,0x16,0x56};
    static std::uint8_t product45[64]      = {0x29,0x51,0x7b,0xc8,0x5b,0x69,0xc2,0x4b,0x9b,0x77,0x5d,0x03,0x2e,0x89,0xe8,0xdf,0x46,0x21,0x59,0x04,0x47,0x01,0x52,0x90,0xbf,0x64,0xd7,0xb3,0x6a,0xc5,0xf1,0xca,0x06,0x5a,0x86,0x83,0x7c,0xa0,0x85,0xca,0xf4,0x76,0xa9,0x05,0x6c,0xee,0x24,0xb0,0xc1,0xbb,0x86,0xb1,0xf2,0x85,0xd4,0xc0,0xf0,0xe2,0x47,0xe0,0x01,0x3b,0x8a,0x48};
    mpz_from_bytes(multiplier, multiplier45, 4);
    mpz_from_bytes(multiplicand, multiplicand45, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product45, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier46[32]   = {0x04,0x37,0x5e,0x43,0x7a,0xd5,0x8d,0x50,0x22,0xae,0x5b,0x3f,0x8b,0xd5,0x8a,0x58,0xe3,0x4f,0x4f,0x44,0x85,0xb7,0x18,0x71,0xcf,0x7f,0x94,0x76,0x04,0x3e,0x17,0x92};
    static std::uint8_t multiplicand46[32] = {0xb2,0xe4,0x47,0x12,0x8f,0x49,0x8a,0x95,0xc6,0x0b,0x6b,0xb9,0xf2,0x19,0x7d,0xbe,0x45,0x6f,0x11,0xff,0x87,0x1f,0x74,0xd0,0x91,0x42,0xa8,0x1a,0xc9,0xea,0x49,0x45};
    static std::uint8_t product46[64]      = {0x02,0xf2,0x42,0x06,0x88,0xe7,0x5d,0xfd,0x53,0xd9,0xd9,0x5e,0x5d,0x63,0x51,0xd2,0x02,0x20,0xfc,0x43,0xc4,0xe1,0x55,0xc4,0xce,0xc6,0x02,0xe3,0xca,0x03,0x0e,0x4c,0xad,0x9e,0xaf,0xa0,0xd9,0x85,0x33,0x66,0x04,0x31,0x8b,0xad,0xec,0x5b,0xca,0xf9,0x2d,0x49,0x59,0x0d,0x4d,0x4a,0xf9,0xc7,0x9f,0x57,0x81,0x1c,0x06,0xe8,0xfc,0x5a};
    mpz_from_bytes(multiplier, multiplier46, 4);
    mpz_from_bytes(multiplicand, multiplicand46, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product46, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier47[32]   = {0x9e,0x31,0x27,0xdb,0x22,0x99,0x3f,0x64,0x6a,0xfe,0xc0,0xa3,0xe8,0x58,0x3e,0x95,0x0a,0xfb,0x52,0x05,0xab,0x2c,0x7e,0x46,0x49,0x37,0x62,0xd2,0x7a,0x33,0xa2,0xe4};
    static std::uint8_t multiplicand47[32] = {0xb0,0x08,0x85,0x4a,0xc8,0x29,0x2d,0x6d,0x54,0x68,0xff,0xb4,0x44,0xbf,0x9b,0xf6,0x68,0x4e,0x0f,0x87,0xe5,0xd8,0x90,0x09,0x18,0x07,0x9c,0x0c,0xad,0xc6,0xaf,0xe2};
    static std::uint8_t product47[64]      = {0x6c,0xc7,0x0f,0x4d,0xa6,0x3c,0xa7,0xc5,0x6b,0x26,0xbf,0x86,0xb6,0xc4,0xac,0xf9,0x52,0xa2,0xff,0x0a,0x2a,0x13,0x44,0x3e,0x75,0x79,0xac,0x7c,0x93,0xe1,0x8e,0x70,0x7a,0xf1,0x6e,0x12,0x50,0xe5,0x62,0xef,0x85,0x62,0xd1,0x05,0xb8,0xdd,0x24,0x77,0x0e,0x80,0x1d,0x1b,0x0b,0x48,0xa1,0xc0,0x30,0xbd,0x1b,0x0d,0x3e,0x47,0xa9,0x48};
    mpz_from_bytes(multiplier, multiplier47, 4);
    mpz_from_bytes(multiplicand, multiplicand47, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product47, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier48[32]   = {0x32,0xc5,0x44,0x9d,0xa5,0x28,0x6d,0x98,0xa7,0x8a,0x89,0x9c,0xb2,0x37,0x71,0x71,0x68,0x8e,0x31,0xd1,0xc6,0xda,0x21,0x39,0xf0,0xa8,0x77,0x21,0x65,0x0e,0xfe,0x5d};
    static std::uint8_t multiplicand48[32] = {0x3c,0x8d,0x62,0xaf,0x01,0xc1,0x85,0x66,0x95,0x3a,0x07,0xab,0x61,0x7e,0xaf,0x8b,0x19,0xde,0xfb,0x33,0x2f,0x87,0x35,0xaf,0x7c,0x56,0x5a,0x19,0xd1,0xeb,0x54,0xf9};
    static std::uint8_t product48[64]      = {0x0c,0x02,0x46,0x4d,0xf7,0x00,0xd8,0x63,0xb2,0x46,0x57,0xb8,0xcc,0x11,0xff,0xfc,0x40,0x3c,0xc7,0x59,0xef,0x36,0x9d,0x9a,0x88,0xaa,0x7a,0xf3,0xae,0xb6,0x8b,0xc3,0xdc,0x53,0xbc,0xbb,0x95,0x3b,0x2a,0x92,0x0d,0x63,0x6e,0x27,0x4d,0x86,0x80,0xcd,0x85,0x9a,0x3a,0x19,0x1d,0x2f,0x80,0xd5,0x9d,0x3d,0x60,0x26,0xa3,0x6a,0xec,0x75};
    mpz_from_bytes(multiplier, multiplier48, 4);
    mpz_from_bytes(multiplicand, multiplicand48, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product48, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier49[32]   = {0x07,0xb3,0x30,0xe2,0x7c,0xa4,0xff,0x6c,0x64,0x02,0xf9,0xba,0x11,0x26,0xa1,0x76,0x10,0xd2,0x6d,0x67,0xea,0x7b,0xed,0x9b,0x3a,0x2e,0xa1,0x68,0x26,0x52,0x15,0x27};
    static std::uint8_t multiplicand49[32] = {0xa0,0x2c,0x00,0x92,0x98,0xf3,0x57,0x3b,0xdc,0x04,0x1f,0x85,0x0c,0xff,0xf0,0x4e,0xa8,0x41,0x13,0x2a,0xfc,0x11,0xb9,0x67,0xa7,0xea,0x96,0x01,0xb7,0x08,0xd4,0x26};
    static std::uint8_t product49[64]      = {0x04,0xd1,0x51,0x5e,0x5d,0xa0,0x23,0xe8,0x4e,0xc2,0x5a,0xff,0xf6,0x8e,0x94,0x97,0x73,0x6b,0x1c,0x8c,0xb7,0xfd,0x04,0xc7,0x51,0xbf,0x53,0xe7,0x96,0x34,0x70,0x1e,0xf6,0x9f,0x5e,0xc8,0xf0,0x58,0xab,0x2a,0x7b,0xdc,0xde,0x16,0x7b,0x18,0x89,0x56,0x21,0x3b,0x9c,0x36,0x61,0x75,0xe4,0x70,0xc4,0x99,0x04,0x08,0x33,0xeb,0x6f,0xca};
    mpz_from_bytes(multiplier, multiplier49, 4);
    mpz_from_bytes(multiplicand, multiplicand49, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product49, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier50[32]   = {0x20,0xac,0xdf,0xd8,0x43,0x6f,0x5c,0xe8,0x31,0x15,0xf8,0x28,0xa1,0x02,0x21,0x56,0xb2,0xde,0xf7,0xeb,0xce,0x66,0x21,0xe7,0xcf,0xb0,0x50,0x3e,0x88,0x3b,0x5d,0x7a};
    static std::uint8_t multiplicand50[32] = {0xaa,0xa6,0x8b,0xaa,0xbd,0x79,0x19,0xd6,0xb9,0x83,0x97,0xf8,0x6e,0x8b,0xc6,0x11,0x8f,0x20,0x66,0x0f,0x76,0x4c,0x28,0x0f,0x23,0xae,0x1c,0x1b,0xd6,0xde,0xe5,0xb8};
    static std::uint8_t product50[64]      = {0x15,0xc8,0x0e,0x92,0x6b,0x89,0xd6,0x67,0x6f,0x9c,0x3e,0x19,0x82,0xc2,0xf3,0x25,0x80,0x70,0x9b,0x43,0x16,0x0e,0x4b,0x31,0x20,0xd3,0x30,0xae,0x21,0x4d,0xf3,0xe2,0x61,0xe9,0x57,0x3a,0x4e,0xdf,0xd2,0x8a,0x89,0x9f,0x61,0x6a,0x80,0xb8,0xb7,0x77,0xa3,0xb1,0x0e,0xcf,0x6a,0x2d,0xc7,0x25,0xee,0x05,0x94,0x4c,0x11,0x15,0x51,0xb0};
    mpz_from_bytes(multiplier, multiplier50, 4);
    mpz_from_bytes(multiplicand, multiplicand50, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product50, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier51[32]   = {0x11,0xd6,0xa3,0xce,0x57,0x09,0x89,0x74,0xe6,0x49,0xbb,0x6a,0xae,0xf6,0x22,0x31,0x89,0x63,0xf8,0x32,0x44,0x45,0x11,0x91,0xb2,0xe1,0xa7,0xdc,0x86,0x8f,0xfc,0x95};
    static std::uint8_t multiplicand51[32] = {0x77,0x89,0xb3,0x2e,0x87,0x2b,0x90,0x13,0xbd,0xb4,0x65,0x42,0x41,0x23,0xfc,0x24,0x4c,0x57,0xb5,0x04,0x03,0xbf,0x5b,0xc8,0x2d,0x93,0xea,0x91,0x4e,0xf8,0x26,0xf5};
    static std::uint8_t product51[64]      = {0x08,0x54,0x5e,0x7e,0xe6,0x67,0xf2,0x68,0xa5,0x47,0xdb,0xe0,0x31,0xa9,0xb8,0xc7,0xed,0x8d,0x19,0xd6,0x25,0x0c,0x0b,0x6f,0x38,0xdc,0x27,0xb7,0xa8,0x58,0x66,0x8d,0x73,0x88,0x76,0xc7,0x04,0x62,0x62,0xd4,0xea,0xe1,0xee,0xdb,0x55,0x33,0x56,0x17,0x59,0xd7,0x98,0x74,0x3e,0x55,0x03,0x21,0x8e,0x7f,0xde,0xdd,0x3d,0xa2,0xd8,0x99};
    mpz_from_bytes(multiplier, multiplier51, 4);
    mpz_from_bytes(multiplicand, multiplicand51, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product51, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier52[32]   = {0xb8,0x3b,0x69,0xc5,0x43,0xc8,0x1a,0x9c,0x78,0xeb,0xa0,0xce,0x04,0x2a,0x63,0x8d,0x8c,0x5b,0x6a,0xdc,0x98,0xd2,0xe3,0x37,0x3b,0x0c,0x3d,0x38,0x9c,0xa9,0xdd,0x77};
    static std::uint8_t multiplicand52[32] = {0x52,0xa9,0x11,0x00,0xff,0x16,0xa1,0x95,0x89,0x0c,0xdb,0x15,0x3a,0xad,0x8d,0xe1,0x49,0xcc,0xb9,0x8d,0xee,0x6b,0xa7,0x23,0x4e,0xe8,0x60,0x24,0xdf,0xd6,0x47,0x1e};
    static std::uint8_t product52[64]      = {0x3b,0x7c,0xb3,0x56,0xac,0x89,0x68,0xdf,0x89,0xfe,0x82,0x49,0xde,0x38,0x0e,0xb3,0x39,0x9d,0xe9,0x9f,0x06,0xa3,0xbf,0xbf,0xc1,0x44,0xcd,0x4c,0x8d,0xd0,0xbc,0x4e,0xa9,0xc9,0xec,0x39,0x4d,0x25,0x71,0x11,0x42,0x47,0xe2,0xb5,0xcb,0x12,0xa4,0x4c,0x57,0x22,0xbd,0x7a,0x7f,0x7c,0x71,0xce,0x7e,0xfc,0x92,0xbb,0x42,0xcd,0xf4,0xf2};
    mpz_from_bytes(multiplier, multiplier52, 4);
    mpz_from_bytes(multiplicand, multiplicand52, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product52, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier53[32]   = {0xb8,0x18,0x2d,0x8b,0xd9,0x31,0x59,0x29,0xfd,0xa8,0x65,0xe9,0xe3,0xca,0x93,0x0d,0xd8,0xf2,0x95,0xbf,0xf0,0x06,0xb6,0xd3,0xae,0x82,0x11,0xc8,0x17,0xce,0xa7,0xa3};
    static std::uint8_t multiplicand53[32] = {0x23,0xc1,0x99,0x65,0xd3,0xc2,0x4e,0x4e,0x83,0xaa,0x67,0xd6,0x08,0x9d,0xca,0x39,0xff,0xbe,0xc9,0x2b,0x42,0x31,0x1f,0x61,0xa2,0x0a,0x69,0x4a,0xee,0xd7,0xcc,0x5c};
    static std::uint8_t product53[64]      = {0x19,0xb6,0x86,0xc4,0x22,0x2a,0xb2,0x8c,0xc1,0x04,0x32,0xc3,0x5f,0xa8,0x74,0x4d,0x80,0xdd,0x7b,0x8d,0x57,0xcc,0x72,0x1e,0x26,0x78,0xb9,0xd9,0x07,0xd6,0x55,0x1a,0xbb,0x32,0x84,0x96,0xf9,0x30,0x38,0x70,0x1c,0xce,0x16,0x3f,0xb9,0xb6,0xa4,0x78,0x9d,0xab,0x54,0xcf,0x37,0xb2,0x0a,0x6c,0xa8,0xf4,0x45,0x67,0x8f,0xbf,0x22,0x94};
    mpz_from_bytes(multiplier, multiplier53, 4);
    mpz_from_bytes(multiplicand, multiplicand53, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product53, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier54[32]   = {0x8e,0xc7,0x0c,0x0e,0x09,0x46,0x9a,0xe9,0x54,0xcf,0x51,0x23,0x9a,0x25,0xce,0x4b,0x17,0xb6,0x62,0xbe,0x48,0x6b,0x9e,0xbe,0x70,0xab,0x0d,0x40,0xcc,0x9a,0x34,0x18};
    static std::uint8_t multiplicand54[32] = {0x26,0x53,0x84,0xc5,0x65,0xd4,0x3b,0x01,0x63,0xfd,0x33,0xf8,0xab,0xd9,0x9a,0x4d,0x5f,0x66,0x31,0x60,0x64,0xba,0xa6,0xe1,0xef,0x67,0x50,0xdd,0xec,0xca,0xa4,0xdd};
    static std::uint8_t product54[64]      = {0x15,0x60,0x20,0x5f,0xb8,0x1b,0xe5,0xf8,0x93,0x0d,0xcd,0xb0,0x16,0xff,0x0e,0xe0,0x5d,0x36,0xd1,0xd0,0x0c,0xc4,0x34,0x83,0x1c,0xd8,0x67,0x7d,0xb2,0x2f,0xbe,0xa3,0xfc,0xe4,0x8a,0x48,0x0d,0x66,0xd9,0x66,0xb8,0x67,0x89,0x15,0x1c,0xc6,0x45,0xb5,0x3e,0x3b,0xc3,0xbd,0xdf,0x60,0xf4,0x6b,0x38,0xf6,0x06,0x6e,0xa5,0x6e,0x58,0xb8};
    mpz_from_bytes(multiplier, multiplier54, 4);
    mpz_from_bytes(multiplicand, multiplicand54, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product54, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier55[32]   = {0xd6,0xa1,0x8e,0x6e,0x3b,0x33,0x95,0xe2,0xa1,0x67,0x9f,0x02,0x68,0xb2,0xba,0x13,0x41,0xce,0x09,0x80,0x07,0x44,0x9f,0xbb,0xf7,0x22,0xf8,0xf8,0x87,0x43,0x26,0xc9};
    static std::uint8_t multiplicand55[32] = {0x94,0xa6,0x89,0xad,0x3d,0x22,0x5c,0x6d,0xbe,0x9d,0xbc,0x41,0x92,0x78,0xe7,0x75,0xa6,0x83,0x54,0x87,0xfb,0x77,0x82,0x61,0x67,0x96,0xee,0xdd,0xdd,0x77,0xd2,0xa4};
    static std::uint8_t product55[64]      = {0x7c,0xa1,0x06,0x87,0xc9,0x5b,0xc2,0x2a,0x13,0xdf,0xb4,0x0c,0x76,0x8f,0x90,0xa2,0xee,0xc4,0xe1,0x0c,0xe5,0xad,0xae,0x9e,0xed,0x8b,0xab,0xe6,0x5e,0x38,0x84,0xd1,0x07,0x4d,0xc3,0x18,0x08,0x7c,0xf8,0xb4,0xc5,0x05,0x54,0x07,0xf9,0x44,0x65,0xf4,0xc2,0xb5,0xea,0x8f,0xa8,0xfd,0x9d,0xbf,0x16,0xbc,0x90,0x63,0x49,0x44,0xba,0xc4};
    mpz_from_bytes(multiplier, multiplier55, 4);
    mpz_from_bytes(multiplicand, multiplicand55, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product55, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier56[32]   = {0x58,0xbd,0x51,0x16,0x78,0x6e,0x6c,0x75,0x69,0x02,0x63,0x07,0x85,0x6f,0x88,0x9f,0x0e,0x3e,0xb2,0x2e,0xb1,0xaa,0x6d,0x1a,0xfd,0xc0,0x12,0xb5,0x1c,0x5c,0x43,0x47};
    static std::uint8_t multiplicand56[32] = {0x3b,0x01,0x8b,0x9f,0x78,0xaa,0x7a,0x5f,0x1a,0xf3,0xd2,0x5e,0x48,0x65,0xf7,0xd2,0xeb,0x44,0xac,0x4f,0x2b,0x4d,0x53,0x52,0x99,0x86,0x2a,0x1f,0x40,0x92,0x12,0x5a};
    static std::uint8_t product56[64]      = {0x14,0x74,0x2a,0xd3,0x91,0x48,0x51,0xeb,0xce,0xbf,0x5a,0x88,0x3e,0x94,0x32,0xf0,0xc8,0x6f,0x5d,0x0c,0x87,0xef,0x4a,0xd3,0xfb,0x44,0x14,0x1d,0xe9,0x06,0x6e,0x8b,0x31,0xb9,0x0b,0xf0,0x52,0xe5,0xf2,0xb4,0xda,0x61,0xde,0x2d,0x81,0xd5,0xc3,0xb8,0xd0,0x4c,0x51,0x2a,0xd9,0x37,0x86,0x60,0xe1,0x98,0x58,0xb3,0x93,0xa8,0xa4,0xf6};
    mpz_from_bytes(multiplier, multiplier56, 4);
    mpz_from_bytes(multiplicand, multiplicand56, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product56, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier57[32]   = {0x5c,0x90,0xaa,0xcc,0xde,0xed,0xf6,0x37,0x05,0x60,0xea,0x07,0x67,0x18,0x8e,0x9d,0x8a,0x95,0x86,0x66,0x92,0x8c,0xd5,0x2d,0x4f,0x30,0xd1,0x17,0xb4,0x56,0x20,0x4e};
    static std::uint8_t multiplicand57[32] = {0x20,0xd9,0xce,0x4c,0x6a,0xe1,0x3a,0x53,0xc5,0xde,0xff,0x4a,0xe0,0x0c,0xb4,0x89,0x47,0x82,0xc2,0x4b,0xf9,0x26,0x6c,0x0d,0xc9,0x24,0xef,0x66,0xbe,0xb9,0xc0,0x93};
    static std::uint8_t product57[64]      = {0x0b,0xe0,0xd6,0x92,0x6e,0x8f,0x9d,0xa8,0x43,0x99,0x42,0x4a,0x33,0xf3,0x1a,0x8e,0x5b,0x7b,0x59,0xb0,0x78,0x54,0xd7,0x20,0xcf,0xeb,0x18,0xd8,0xc5,0x32,0x09,0x58,0xfe,0x47,0xc9,0x87,0x0a,0x50,0xec,0x9c,0xa9,0x89,0x3e,0x8f,0x33,0x69,0xa9,0x73,0x3f,0x2b,0xf8,0x29,0xc1,0x6e,0xd2,0x1d,0xd3,0x44,0xc7,0x28,0x62,0x0d,0x0c,0xca};
    mpz_from_bytes(multiplier, multiplier57, 4);
    mpz_from_bytes(multiplicand, multiplicand57, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product57, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier58[32]   = {0x3b,0xfc,0x6e,0x77,0xc5,0x66,0x11,0x93,0xed,0xc1,0x10,0xef,0x91,0x82,0xdc,0x55,0xb8,0xe2,0xd1,0xac,0xf7,0x22,0xee,0xca,0x9e,0xc3,0x97,0x34,0xef,0x9f,0x32,0x51};
    static std::uint8_t multiplicand58[32] = {0x1f,0xf1,0x62,0x92,0x60,0xb1,0xe1,0x9f,0x5c,0xd4,0x87,0x86,0x1f,0x7e,0x6b,0x29,0xca,0x3f,0xaa,0xec,0x19,0x65,0xca,0xe2,0x76,0xf2,0x57,0xa2,0xe0,0x4a,0xe1,0x2a};
    static std::uint8_t product58[64]      = {0x07,0x7c,0x21,0x1d,0x6e,0x91,0x62,0xea,0x9c,0x74,0x02,0xbb,0x76,0xea,0x3e,0x3f,0xd5,0x8e,0x9b,0x8b,0x5a,0x22,0x86,0x7a,0x92,0x94,0xe4,0xa2,0xd5,0x12,0xfb,0x42,0xa7,0x89,0x77,0x18,0xec,0x27,0x42,0xf9,0x35,0x96,0xfd,0xe7,0x0d,0xd0,0x0f,0xfc,0x43,0x17,0x25,0x98,0xc2,0xf2,0x33,0xbf,0x9e,0x5e,0x43,0x97,0xa6,0xc1,0x72,0x4a};
    mpz_from_bytes(multiplier, multiplier58, 4);
    mpz_from_bytes(multiplicand, multiplicand58, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product58, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier59[32]   = {0xaa,0x4b,0x19,0xf1,0xc9,0x18,0xe5,0xfb,0x76,0x90,0xcc,0x73,0x5d,0x93,0x59,0x61,0x2e,0xae,0x9a,0xf2,0xd6,0xc0,0x23,0xab,0x9a,0x7b,0x29,0x9c,0xe6,0x59,0xbf,0xa8};
    static std::uint8_t multiplicand59[32] = {0x11,0x64,0x7a,0xfe,0xcc,0x50,0xd6,0x83,0x40,0x03,0x4e,0xb0,0x67,0xf2,0x74,0x4e,0x58,0xb3,0xd5,0x5d,0x81,0x3d,0x5e,0x9c,0x33,0x5a,0xd6,0x8e,0x19,0xd0,0x84,0x1f};
    static std::uint8_t product59[64]      = {0x0b,0x91,0xd3,0xe0,0x79,0x97,0xcb,0x91,0xcb,0xea,0x01,0xbb,0x1f,0x3a,0x16,0x9a,0x53,0x5f,0xe3,0xbb,0x8e,0xb8,0x40,0x67,0x44,0x03,0xaa,0x74,0xb1,0xba,0x16,0x99,0x84,0xdf,0x92,0xae,0x18,0xad,0x29,0x05,0x39,0x21,0xef,0x5f,0xc2,0x28,0x5a,0xcd,0x36,0x25,0xcb,0xd4,0xff,0x6b,0xed,0x43,0xfd,0x67,0x9c,0x99,0x4c,0x30,0xd5,0x58};
    mpz_from_bytes(multiplier, multiplier59, 4);
    mpz_from_bytes(multiplicand, multiplicand59, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product59, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier60[32]   = {0xac,0xce,0xd4,0x32,0x8a,0x26,0xcf,0x02,0x32,0xed,0xf5,0x8e,0x84,0xae,0x25,0x87,0x7a,0x16,0xdc,0x98,0x22,0xa1,0xf2,0xcd,0xb6,0xc3,0x00,0x4c,0x53,0x9f,0x54,0xb8};
    static std::uint8_t multiplicand60[32] = {0xaa,0x25,0x31,0xcc,0xd0,0x10,0x45,0x53,0x0e,0x11,0xaf,0xef,0x57,0x72,0x22,0xa0,0xc9,0x24,0x76,0x4a,0x78,0xa4,0x89,0xdb,0x45,0x0e,0x80,0xe7,0x4c,0x35,0x01,0x6b};
    static std::uint8_t product60[64]      = {0x72,0xda,0x74,0x6c,0x12,0xed,0x89,0xed,0x08,0xd7,0x99,0x4d,0x0b,0x51,0x4b,0xff,0x4b,0x03,0xb0,0xac,0xd3,0x0e,0x20,0x3a,0x76,0x1f,0x5e,0xd4,0x7b,0xb7,0xe5,0xa4,0x5a,0xde,0xed,0xb4,0xe3,0xaf,0xb6,0x92,0x3b,0x33,0x6d,0x38,0x6d,0x68,0xbe,0x99,0x92,0x4b,0x35,0x19,0xc6,0xd1,0xe8,0xcb,0x38,0x53,0x7b,0x65,0xbd,0x05,0x20,0xe8};
    mpz_from_bytes(multiplier, multiplier60, 4);
    mpz_from_bytes(multiplicand, multiplicand60, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product60, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier61[32]   = {0xb9,0x9a,0x37,0xf7,0x13,0x7d,0xe2,0x4e,0x6c,0xd9,0xd5,0x4e,0x17,0xe5,0x54,0xf7,0x42,0xfd,0x7e,0xe4,0x18,0xc5,0xfe,0x7c,0x27,0x11,0xf2,0xef,0x03,0x13,0xf0,0xd2};
    static std::uint8_t multiplicand61[32] = {0x67,0x72,0x46,0x45,0xf9,0xb1,0xd0,0x5f,0xf7,0xdd,0x28,0x7b,0x37,0xb8,0x1c,0x65,0x72,0x63,0x31,0x73,0x55,0x8c,0xe0,0x8f,0x78,0x48,0x6f,0x58,0x75,0x22,0xd0,0xb6};
    static std::uint8_t product61[64]      = {0x4a,0xff,0xe6,0x24,0x3b,0xc4,0xe4,0x2b,0xe6,0xb9,0x21,0xe3,0xb5,0x74,0xfd,0xc2,0x15,0xbb,0x68,0x2b,0xb1,0xb2,0x6f,0x0d,0x7f,0x99,0xc9,0xcd,0xee,0x10,0xd2,0x40,0x1b,0xf8,0x6f,0xca,0x5e,0x1b,0xee,0xe9,0x60,0x59,0x1b,0xe2,0x9c,0x1a,0x65,0xc7,0x6a,0x28,0x8c,0xd7,0x30,0xbe,0xd0,0xb6,0xbb,0xa1,0x44,0x52,0x59,0xbb,0xd5,0x4c};
    mpz_from_bytes(multiplier, multiplier61, 4);
    mpz_from_bytes(multiplicand, multiplicand61, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product61, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier62[32]   = {0xc1,0x3b,0x47,0x5c,0x26,0x35,0xf7,0x8b,0x88,0xf0,0x27,0xff,0x25,0xfb,0x45,0x19,0x54,0x06,0xa2,0xa8,0x9e,0x75,0xee,0x52,0x06,0x3f,0xa1,0xe3,0xb5,0x03,0x78,0x4a};
    static std::uint8_t multiplicand62[32] = {0xd3,0x86,0xf3,0x2f,0x74,0x74,0x61,0xe0,0x08,0x72,0x45,0x39,0x5f,0xde,0xa0,0x32,0xa4,0x68,0x0d,0x07,0x4f,0x28,0x1b,0x6d,0xa7,0x0e,0xa3,0x3e,0xbe,0xce,0x5e,0xc7};
    static std::uint8_t product62[64]      = {0x9f,0xa9,0xb8,0x67,0x64,0x3f,0xc2,0x8a,0x7a,0x23,0xbe,0xe2,0x8e,0x3c,0x53,0xb0,0x15,0xde,0x57,0x1b,0x45,0x1f,0x5e,0x3c,0xd5,0xd8,0xde,0x3b,0xe8,0x81,0x68,0xf8,0x39,0xf9,0x2a,0xa0,0x42,0x2d,0xb5,0x53,0x48,0x32,0xb8,0x33,0x74,0xc2,0x23,0x14,0x21,0xea,0x89,0xb2,0xa0,0x93,0x01,0xfb,0x64,0xf6,0xf0,0x76,0xb3,0x69,0xad,0x86};
    mpz_from_bytes(multiplier, multiplier62, 4);
    mpz_from_bytes(multiplicand, multiplicand62, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product62, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier63[32]   = {0xb5,0x90,0x51,0x6a,0xb1,0x4b,0xc1,0x47,0x2f,0x39,0x42,0x94,0x2e,0x98,0x5a,0x3f,0x7c,0x82,0xaf,0x67,0x31,0xc6,0xf6,0xaa,0x4b,0xf3,0x74,0x46,0x83,0x74,0x4b,0x1d};
    static std::uint8_t multiplicand63[32] = {0x8d,0x8a,0xe6,0x10,0x10,0xe0,0x03,0x8f,0x7c,0x20,0x27,0x1c,0x72,0xba,0x37,0x31,0x31,0x2b,0x12,0xa1,0x22,0xb8,0x5e,0xbf,0x36,0x2a,0x74,0x9d,0x7d,0x96,0x85,0x13};
    static std::uint8_t product63[64]      = {0x64,0x62,0xff,0xce,0xb5,0x4d,0x24,0x23,0xe6,0xce,0x55,0xab,0x69,0x87,0x5f,0x90,0x1b,0xb3,0xd9,0x34,0x2f,0x88,0xda,0xa0,0xe4,0xec,0xbb,0x31,0x3a,0xd4,0xcb,0x81,0x20,0x34,0x96,0xa3,0x10,0x43,0x22,0xad,0xa9,0xde,0x7b,0xd0,0x42,0x82,0x6f,0x8e,0x63,0x1d,0x0d,0x8b,0x35,0x44,0x34,0xe4,0x6f,0x18,0x47,0x21,0x58,0xa5,0xa4,0x27};
    mpz_from_bytes(multiplier, multiplier63, 4);
    mpz_from_bytes(multiplicand, multiplicand63, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product63, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier64[32]   = {0xe9,0xa1,0x7c,0xbc,0x55,0x13,0x22,0xf5,0x39,0x41,0xc1,0xfb,0xbb,0xa2,0x55,0x30,0xfa,0x2e,0x87,0xdc,0xb6,0xc3,0xc7,0x91,0xfd,0x90,0xf7,0x6c,0x81,0xc8,0xd5,0xe7};
    static std::uint8_t multiplicand64[32] = {0x21,0x15,0x91,0xcf,0xe7,0x8c,0xb0,0x02,0xcd,0xc4,0x07,0xad,0x65,0xc0,0x8f,0xf6,0x93,0xcb,0xf8,0x41,0xab,0x6b,0x9f,0x34,0x75,0x54,0x3e,0x36,0x96,0x96,0xd5,0xb4};
    static std::uint8_t product64[64]      = {0x1e,0x31,0x80,0x65,0xb6,0xf6,0x17,0x0b,0xd8,0x55,0xcc,0x9e,0x18,0x8e,0x9e,0x5c,0x19,0xac,0xf1,0x1a,0x87,0x3d,0xfb,0x05,0x49,0x97,0x67,0xe3,0xc0,0x95,0x7b,0x90,0x4e,0x50,0xa2,0x0a,0x5b,0xae,0xe8,0x79,0x69,0x78,0x29,0x8b,0x8b,0xe2,0xda,0x14,0xf1,0x25,0x05,0xe2,0x0e,0x71,0x12,0x71,0x3c,0x62,0x0a,0x04,0x0a,0x89,0x99,0x6c};
    mpz_from_bytes(multiplier, multiplier64, 4);
    mpz_from_bytes(multiplicand, multiplicand64, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product64, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier65[32]   = {0x91,0x78,0x0c,0xc4,0xf1,0x6f,0xf9,0xab,0x0a,0x05,0xe3,0x72,0x26,0x36,0xd5,0x38,0x8f,0xf5,0x79,0x72,0xc0,0x6d,0xef,0xbf,0x84,0x5f,0xd2,0x29,0xa1,0xee,0x9c,0x88};
    static std::uint8_t multiplicand65[32] = {0x38,0x7f,0x89,0xed,0x6f,0xc0,0x83,0xd6,0x08,0x6e,0x71,0x58,0x4f,0x25,0x4c,0x16,0x9f,0x91,0xc1,0x99,0x6b,0x01,0xad,0x0b,0x66,0x2e,0x1f,0xec,0x67,0xba,0x9f,0x52};
    static std::uint8_t product65[64]      = {0x20,0x1a,0xbb,0xb9,0x94,0xfd,0xef,0x2f,0xbd,0x64,0x86,0x30,0x96,0x31,0xb5,0xd4,0x81,0x2a,0xf8,0xed,0xdf,0xf6,0xaf,0x4f,0x5f,0xc4,0xe7,0x2e,0xe8,0x50,0x49,0x54,0x2b,0x88,0x9e,0x8e,0xe6,0xf0,0x40,0x17,0x74,0x2a,0x97,0xdd,0x18,0x9f,0x0e,0x09,0x8b,0x07,0x01,0x01,0xd0,0xe1,0x0f,0xd0,0xd9,0xfc,0x9a,0xa1,0x84,0x76,0x9b,0x90};
    mpz_from_bytes(multiplier, multiplier65, 4);
    mpz_from_bytes(multiplicand, multiplicand65, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product65, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier66[32]   = {0x51,0x7a,0xc6,0xfb,0x52,0xdb,0x27,0xe4,0xce,0x66,0x5f,0x3b,0xc2,0xcf,0x9d,0x07,0x22,0xdf,0xe7,0x24,0xde,0x3c,0x17,0xc6,0x85,0xe6,0x81,0x22,0x50,0xae,0x23,0xfc};
    static std::uint8_t multiplicand66[32] = {0x9a,0x02,0x8c,0xc2,0x5f,0x9a,0x03,0x4f,0x9b,0xec,0x70,0x3d,0x39,0xff,0xc7,0x7f,0xce,0x80,0xd5,0x81,0x59,0x32,0x9a,0xec,0x47,0x6a,0x46,0xb3,0xd0,0x1d,0x3a,0xb7};
    static std::uint8_t product66[64]      = {0x31,0x04,0xab,0x75,0xc0,0x18,0x4c,0x3b,0x55,0xa0,0xaa,0xe8,0xf1,0x46,0x99,0x48,0x43,0xde,0x43,0xc0,0xaa,0x0e,0xf1,0x1e,0xee,0x4d,0x33,0xda,0x7d,0x79,0xc5,0x86,0xe3,0x57,0xad,0x41,0xe3,0x02,0xe3,0xab,0x87,0xf6,0x82,0xd9,0xe4,0xdf,0x97,0x22,0x18,0xa4,0xa8,0x2f,0xe2,0x18,0x92,0xbc,0x45,0x6a,0xc7,0xf9,0xf4,0x2e,0xd1,0x24};
    mpz_from_bytes(multiplier, multiplier66, 4);
    mpz_from_bytes(multiplicand, multiplicand66, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product66, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier67[32]   = {0x82,0x53,0xc6,0x0c,0xe7,0xb1,0xcc,0xa1,0xab,0x5b,0x7c,0x49,0x75,0x26,0x44,0xc5,0x14,0x16,0x37,0xf0,0xf8,0x98,0x22,0x87,0x1e,0xeb,0x38,0x05,0x9d,0xf4,0x3a,0xe0};
    static std::uint8_t multiplicand67[32] = {0x50,0x34,0x0d,0x20,0x1e,0x38,0x6f,0x1d,0x19,0xa5,0xf1,0xc0,0x67,0x69,0x29,0x57,0x7d,0x4a,0xb9,0x0a,0x0f,0xf2,0x49,0x04,0x03,0xcc,0xdd,0x8a,0x20,0xe7,0x6f,0xbd};
    static std::uint8_t product67[64]      = {0x28,0xd4,0xad,0x96,0xdd,0xf0,0x95,0x8b,0x0d,0x66,0x65,0x8a,0x0a,0x75,0x22,0x0e,0x3b,0x0c,0x9a,0xbd,0xa3,0x19,0xc0,0xc8,0xd6,0xe7,0x30,0x3a,0xea,0xb1,0x92,0x13,0x05,0x95,0xb4,0x1f,0xce,0x51,0xee,0x19,0xb1,0x15,0xe1,0x9f,0x33,0x1d,0x4f,0xcb,0x68,0x14,0x0d,0x1d,0xde,0xeb,0xf4,0x9c,0x98,0xbd,0xf7,0x1f,0xa2,0xf6,0x97,0x60};
    mpz_from_bytes(multiplier, multiplier67, 4);
    mpz_from_bytes(multiplicand, multiplicand67, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product67, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier68[32]   = {0x03,0x1a,0xda,0x20,0x04,0x2f,0x66,0xf2,0x38,0xbd,0xc3,0xc5,0x6c,0xe4,0xb9,0xda,0xcf,0xb1,0xa5,0x57,0xab,0x79,0xac,0xd7,0xa0,0xff,0xbf,0x97,0xc9,0xc1,0x7f,0x01};
    static std::uint8_t multiplicand68[32] = {0x13,0x23,0x8d,0x31,0xd9,0xd4,0x69,0x4e,0xde,0x07,0x38,0x5e,0x47,0x1c,0x4e,0xbd,0x7c,0xa8,0xd0,0xd3,0x89,0x31,0xa1,0x60,0x64,0x67,0x00,0x8f,0xf2,0xbf,0x6e,0xb8};
    static std::uint8_t product68[64]      = {0x00,0x3b,0x6c,0x92,0x97,0x9b,0xcf,0xf6,0xb4,0x80,0x91,0xa6,0xd5,0x84,0xbd,0xa1,0x0d,0x99,0xb4,0x5f,0xff,0xf1,0xe0,0x4e,0x5f,0x14,0xd6,0xe3,0xc0,0x37,0x84,0xb0,0x83,0x10,0xc1,0xfb,0xc1,0x35,0x3c,0x4d,0xeb,0xa6,0x54,0x49,0xf9,0x8d,0xeb,0xaa,0xdc,0x9a,0xa9,0xaf,0xd4,0x29,0xcd,0xb7,0x3b,0x9a,0x50,0xc5,0xdb,0x64,0xb6,0xb8};
    mpz_from_bytes(multiplier, multiplier68, 4);
    mpz_from_bytes(multiplicand, multiplicand68, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product68, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier69[32]   = {0x08,0x84,0x87,0xc3,0x48,0x85,0x4f,0x87,0xff,0x3f,0x5c,0xcd,0xdf,0x5f,0x20,0x88,0xe4,0xe7,0xd6,0x2b,0x96,0xd3,0xe0,0x90,0x5d,0x41,0x99,0xe5,0xeb,0x23,0x6a,0xb1};
    static std::uint8_t multiplicand69[32] = {0x1f,0x66,0x9e,0xaa,0x64,0x38,0xe0,0xfd,0x8e,0xf5,0xc6,0x73,0x2e,0x3a,0xa2,0xe0,0x69,0x23,0x8b,0x04,0x9b,0x53,0x15,0x77,0xed,0x7b,0xaa,0x2a,0xa0,0x7d,0xc3,0x89};
    static std::uint8_t product69[64]      = {0x01,0x0b,0x76,0x86,0x34,0xb9,0x61,0xb1,0xf9,0x47,0xcb,0xc0,0xf0,0x6b,0x88,0xa0,0x6b,0x68,0xe2,0x3c,0x02,0xd4,0x86,0xa5,0x92,0x54,0x5c,0xfd,0x30,0x25,0x07,0x7a,0xae,0xcf,0x18,0x40,0x2e,0x31,0xe9,0xfb,0x32,0x9b,0x59,0x32,0x78,0xaf,0x85,0xa2,0xd4,0x0d,0xfc,0xa4,0x9c,0xef,0x7c,0x71,0xf1,0x43,0x7c,0x2a,0x88,0xa5,0xeb,0xb9};
    mpz_from_bytes(multiplier, multiplier69, 4);
    mpz_from_bytes(multiplicand, multiplicand69, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product69, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier70[32]   = {0xfa,0x43,0x4c,0xf7,0xb8,0x05,0x1c,0x3c,0x8a,0x0e,0xd6,0x83,0x45,0xcf,0x37,0x6c,0x54,0x3d,0x9c,0xcf,0xc2,0x41,0x44,0x16,0xf4,0xb0,0x29,0x70,0x1e,0xf6,0x47,0xf7};
    static std::uint8_t multiplicand70[32] = {0x3c,0x3b,0x8c,0xfa,0x80,0xd8,0xed,0x04,0x2e,0x40,0xd7,0x0f,0x89,0x98,0x41,0xf6,0x29,0xe5,0x2f,0xde,0x4f,0x63,0xf5,0x76,0xcc,0xff,0xfb,0xfc,0x20,0x21,0x0a,0x83};
    static std::uint8_t product70[64]      = {0x3a,0xe1,0xfd,0x5e,0x7d,0xfe,0xf5,0x51,0x64,0x49,0xd0,0xe0,0x4e,0xd6,0xa9,0xb3,0x32,0x8e,0xfa,0x06,0xea,0xde,0xec,0x8d,0xbb,0xa8,0xdd,0x26,0x80,0x13,0x9f,0x72,0x79,0x29,0x68,0xe7,0x04,0xe5,0x5a,0x1e,0xc5,0x1f,0x6f,0xe4,0xc3,0xb0,0x97,0x47,0x07,0x14,0x55,0xc8,0xd4,0xe8,0xad,0x6f,0xe9,0x1d,0x60,0x77,0x9d,0xad,0x79,0x65};
    mpz_from_bytes(multiplier, multiplier70, 4);
    mpz_from_bytes(multiplicand, multiplicand70, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product70, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier71[32]   = {0x9c,0x0c,0xf1,0x81,0x83,0xcc,0xca,0x77,0x5d,0xa9,0x90,0x19,0x08,0xa1,0xb2,0x61,0x30,0x76,0x34,0xa8,0x3d,0x71,0x15,0x56,0xb0,0x85,0xb8,0xb7,0xf2,0xe9,0x3f,0xc6};
    static std::uint8_t multiplicand71[32] = {0xde,0xa4,0x9c,0xc7,0xb2,0x1d,0x82,0xc0,0x6f,0x9e,0x28,0xfa,0x91,0x8b,0xf3,0x4c,0x22,0x0f,0xa7,0xfb,0x5f,0xc3,0x9a,0x6a,0x68,0xa6,0xec,0xf7,0xd4,0xa1,0x25,0xa2};
    static std::uint8_t product71[64]      = {0x87,0xb7,0x91,0x4a,0xa5,0x11,0xab,0xda,0xc0,0xf6,0x6a,0x2c,0xe8,0x5f,0xdb,0xdd,0x7d,0x98,0xc9,0xf8,0x8a,0x71,0x50,0x1a,0x26,0x5f,0x09,0xc3,0xac,0x4c,0x3c,0x1f,0x2f,0x79,0x1b,0xd5,0x29,0x25,0xf9,0x2b,0xdd,0x87,0x4f,0x80,0x78,0x25,0x3e,0xa4,0xa2,0x73,0xa4,0x05,0x7b,0x61,0x5f,0xfe,0xb9,0x65,0x78,0x0e,0x81,0x57,0xf9,0x4c};
    mpz_from_bytes(multiplier, multiplier71, 4);
    mpz_from_bytes(multiplicand, multiplicand71, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product71, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier72[32]   = {0x8f,0x7d,0xfa,0x4b,0x76,0x73,0xf2,0x06,0x48,0xf6,0x93,0xc4,0xb5,0xaa,0x06,0xbd,0xc6,0xb3,0x69,0x84,0x8a,0xd5,0xe0,0xd3,0x28,0xbb,0x6d,0x98,0xe5,0xd3,0x76,0x40};
    static std::uint8_t multiplicand72[32] = {0x29,0x9b,0x86,0x76,0x0d,0xcc,0xe2,0xa5,0x7c,0x2a,0xb0,0x9a,0x3e,0x78,0xc5,0xbe,0x43,0xa8,0xd0,0xb8,0x7d,0x18,0xa6,0x90,0x6b,0x59,0x6d,0x8f,0x14,0xa3,0x74,0xc5};
    static std::uint8_t product72[64]      = {0x17,0x52,0x59,0xba,0xbe,0x7a,0x65,0xe3,0x17,0x86,0xaf,0xd6,0x3d,0xf0,0xc0,0xd6,0x92,0x97,0x23,0x45,0xa1,0xed,0xf5,0x32,0xf0,0xc4,0x76,0x62,0x4b,0x48,0xba,0x07,0xd2,0xf2,0x46,0xa7,0xb9,0x2c,0xc5,0x78,0xda,0xfd,0x35,0x1f,0x1e,0x79,0xa8,0x27,0x82,0xdc,0xf1,0x82,0xb2,0x4a,0xe4,0x0e,0x46,0xeb,0xc7,0x6d,0xf8,0x0e,0xff,0x40};
    mpz_from_bytes(multiplier, multiplier72, 4);
    mpz_from_bytes(multiplicand, multiplicand72, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product72, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier73[32]   = {0x33,0x9c,0x92,0x5e,0x0d,0x65,0x77,0x35,0xdd,0x8d,0x70,0x16,0x83,0x0f,0x8b,0x1f,0x53,0xd9,0x41,0xf7,0x22,0x18,0xe1,0x2b,0xe8,0x65,0x09,0xc9,0x97,0x24,0x29,0x40};
    static std::uint8_t multiplicand73[32] = {0x44,0x08,0x9e,0x23,0xfc,0x1b,0xf1,0xfc,0xa2,0xbf,0x33,0xe4,0x9c,0xba,0x52,0xf9,0x3e,0x3f,0x55,0xa7,0xa6,0x36,0x5a,0xcd,0xfa,0xed,0x90,0x6c,0x73,0xe9,0x17,0x27};
    static std::uint8_t product73[64]      = {0x0d,0xb7,0x53,0xa7,0x72,0x11,0x30,0x57,0xd6,0xd0,0x94,0x71,0x5f,0xc3,0x5e,0x82,0xa3,0x1a,0xc9,0x6d,0x56,0xff,0xbb,0x26,0xa8,0x64,0xe5,0x9e,0x6c,0x28,0xce,0x4c,0x5b,0x33,0x1c,0xf5,0x45,0x51,0x04,0x47,0xb4,0x53,0x0f,0xde,0x03,0x32,0xce,0x64,0xb8,0xf0,0x2b,0x8a,0xd7,0xb2,0x71,0xff,0xbd,0x5a,0xcf,0xbb,0x91,0x77,0x08,0xc0};
    mpz_from_bytes(multiplier, multiplier73, 4);
    mpz_from_bytes(multiplicand, multiplicand73, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product73, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier74[32]   = {0xf4,0x31,0x56,0x3d,0x1c,0xec,0x9c,0x10,0xf3,0xc8,0x52,0xdf,0x29,0x24,0xd6,0xdf,0xaa,0x11,0x77,0x1c,0x77,0x6a,0xfa,0xc2,0x67,0x85,0x2a,0x58,0x17,0xa1,0xef,0xf9};
    static std::uint8_t multiplicand74[32] = {0x00,0xf7,0x1b,0xdc,0x78,0x7b,0xf7,0xd1,0xc9,0x41,0xd3,0xc1,0xf6,0x2b,0x68,0xca,0xc4,0x4b,0x79,0x72,0x7c,0x15,0xe2,0x3a,0xbc,0x8f,0x96,0xa8,0x56,0x4b,0x87,0x05};
    static std::uint8_t product74[64]      = {0x00,0xeb,0xb6,0x2d,0xb6,0x62,0xd7,0x61,0x2f,0x88,0xd3,0x6d,0xfb,0xb1,0x93,0x73,0xb9,0x20,0x06,0xf6,0x52,0x43,0xa8,0x69,0x73,0xae,0xae,0xfd,0x33,0x83,0x34,0x93,0x74,0x22,0xf6,0x0c,0xac,0x4b,0xd9,0xf5,0x57,0x45,0x1d,0x5d,0xbd,0x8d,0x4a,0xa9,0x0c,0x12,0xa5,0x0d,0x6f,0xc9,0x32,0x62,0x8b,0xa5,0xfc,0xa5,0xcf,0xa8,0xfe,0xdd};
    mpz_from_bytes(multiplier, multiplier74, 4);
    mpz_from_bytes(multiplicand, multiplicand74, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product74, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier75[32]   = {0x2b,0xed,0x93,0xcc,0x08,0xcf,0x06,0x78,0xfd,0x8b,0x06,0x11,0x2a,0x56,0x4b,0x92,0xc7,0xfe,0x69,0x2b,0x59,0x8b,0x07,0x1b,0xc1,0x23,0xc6,0x4b,0xb6,0x87,0xdb,0xf4};
    static std::uint8_t multiplicand75[32] = {0x82,0xc3,0x65,0x67,0x80,0x9b,0xd7,0x7b,0x32,0x4f,0xeb,0xfa,0x06,0x62,0x5d,0xb7,0x3b,0x7f,0x2c,0x36,0x5e,0xc8,0xed,0x2e,0x4e,0x1b,0x50,0x19,0x9f,0x46,0x66,0x3f};
    static std::uint8_t product75[64]      = {0x16,0x70,0x2c,0x6b,0xae,0xdb,0x55,0x44,0xc3,0x9c,0x65,0x60,0x2a,0x4c,0x42,0xfa,0x66,0x5f,0x50,0xf2,0xb2,0xad,0xa4,0xb0,0x54,0x7c,0xea,0xbe,0x7f,0x62,0xa6,0x7c,0xb2,0x00,0x81,0x4c,0x74,0x8f,0xf8,0x9e,0x66,0x7c,0xd3,0x9f,0xfa,0x1c,0xfa,0x25,0x69,0x3e,0x2b,0xfe,0xa4,0x51,0xec,0x59,0xda,0x9e,0xfc,0xf2,0xbd,0xca,0x59,0x0c};
    mpz_from_bytes(multiplier, multiplier75, 4);
    mpz_from_bytes(multiplicand, multiplicand75, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product75, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier76[32]   = {0x8c,0x7b,0x76,0xcc,0x7a,0xa7,0x46,0xd3,0x51,0x21,0x7b,0x52,0xff,0xc6,0x13,0x52,0xc1,0xc7,0x04,0x6c,0x8a,0xf1,0xc1,0xd7,0x64,0x23,0x5c,0xaa,0xf4,0xc5,0xee,0x1a};
    static std::uint8_t multiplicand76[32] = {0xd5,0xe9,0x03,0x42,0x85,0x55,0x0a,0x6f,0x8e,0x9a,0x38,0x17,0xd7,0xb9,0x0f,0xcf,0x80,0x70,0xd8,0x88,0x31,0x5b,0x9f,0xae,0x92,0xc2,0x8c,0x70,0x42,0x56,0xe0,0xe3};
    static std::uint8_t product76[64]      = {0x75,0x62,0x98,0x01,0x35,0x8c,0xa5,0xc5,0x95,0xd5,0xad,0x40,0x9b,0x8a,0xe1,0x85,0x60,0x51,0x3d,0x9f,0x46,0x4a,0x97,0x66,0xf8,0x12,0x39,0x83,0xed,0x1e,0xb1,0x3f,0x5d,0x6c,0xb8,0xe5,0xdf,0x09,0x46,0x3b,0x9f,0x01,0x77,0x31,0x03,0xac,0xe4,0x15,0x11,0x60,0x0a,0xa0,0x2e,0x1c,0x7f,0x7e,0x89,0x7c,0x67,0x04,0xec,0x94,0xe1,0x0e};
    mpz_from_bytes(multiplier, multiplier76, 4);
    mpz_from_bytes(multiplicand, multiplicand76, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product76, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier77[32]   = {0x53,0x29,0x0a,0x24,0x56,0xfe,0x58,0xad,0x80,0xa2,0x59,0x15,0xed,0xd7,0xc1,0x31,0x3d,0x42,0x6f,0xb1,0x40,0xa8,0xc5,0xc0,0xcf,0x89,0xbf,0xd8,0xf7,0xbc,0x21,0x2f};
    static std::uint8_t multiplicand77[32] = {0x28,0xec,0x1a,0x01,0xed,0xa4,0x12,0x56,0xa4,0x69,0xf3,0xa4,0x88,0x2c,0x2b,0x66,0xec,0xd2,0x56,0x72,0x26,0x19,0x9c,0x5f,0x7b,0x5f,0xc7,0x6f,0x01,0xc3,0xeb,0x0f};
    static std::uint8_t product77[64]      = {0x0d,0x4b,0x1b,0xdd,0xd2,0x7a,0xf5,0xf2,0x33,0xc5,0xca,0x29,0xed,0xc4,0x01,0xa9,0xb1,0x99,0xd5,0x32,0xa6,0xd1,0xfd,0xb4,0x71,0x3a,0xac,0x25,0x5d,0x99,0xd1,0xfa,0x5e,0x6b,0x9e,0x56,0x0e,0x61,0x99,0x40,0xaa,0x5d,0x3b,0x96,0xff,0xbd,0x6c,0x5b,0x91,0x53,0x16,0x00,0x66,0x20,0x53,0x56,0x25,0x39,0xc5,0xef,0xac,0x49,0x16,0xc1};
    mpz_from_bytes(multiplier, multiplier77, 4);
    mpz_from_bytes(multiplicand, multiplicand77, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product77, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier78[32]   = {0x31,0x0e,0x86,0xd8,0x3b,0x7d,0xa5,0xba,0x51,0xda,0xba,0xaf,0x3b,0xda,0x97,0x2b,0x47,0x4b,0x9f,0x8a,0xa3,0x72,0x03,0x9d,0xe8,0x6d,0x90,0x43,0x67,0xd0,0x8c,0x64};
    static std::uint8_t multiplicand78[32] = {0x8c,0x3b,0x2c,0x6a,0x14,0x88,0xc3,0x95,0xcb,0x06,0xad,0x29,0x41,0x84,0x0f,0x6e,0x17,0x0e,0x48,0xd3,0xfd,0x10,0x3d,0x60,0xa6,0x2e,0x45,0x73,0x99,0x3f,0x68,0x44};
    static std::uint8_t product78[64]      = {0x1a,0xdf,0x48,0x9a,0x27,0x7e,0xc4,0x14,0x9d,0xcf,0x8a,0x09,0x9f,0xc4,0x74,0x5a,0x6d,0x49,0xe0,0xd1,0x95,0xe1,0x8a,0x15,0x56,0xee,0xa9,0x65,0x44,0x2d,0x66,0x31,0xbc,0xca,0x30,0x92,0x7c,0xfe,0xda,0xac,0x26,0x1f,0xc1,0x0d,0x6d,0x16,0x10,0x58,0xc2,0x19,0xa6,0x79,0xcb,0xf7,0x1f,0xd1,0xf3,0xd5,0xe9,0x3a,0x9d,0x09,0xea,0x90};
    mpz_from_bytes(multiplier, multiplier78, 4);
    mpz_from_bytes(multiplicand, multiplicand78, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product78, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier79[32]   = {0xc1,0x7e,0xd7,0xe7,0x40,0xdf,0xfb,0x26,0x59,0x2a,0x07,0x36,0x1c,0x80,0x34,0xd9,0x70,0xf4,0x21,0x85,0xbd,0x9d,0xa0,0x66,0x3e,0x59,0x71,0xf2,0x7f,0xf6,0xf8,0xfe};
    static std::uint8_t multiplicand79[32] = {0x9a,0x77,0x36,0x97,0xc2,0x9a,0xcd,0x9a,0x11,0xc7,0xb5,0x71,0x24,0x5d,0xd9,0x77,0x61,0xbd,0xa5,0x30,0x53,0x77,0x9d,0x3c,0x24,0x50,0xbc,0x2b,0x98,0x82,0x9c,0xfe};
    static std::uint8_t product79[64]      = {0x74,0xc0,0x69,0x1a,0xef,0xf9,0x27,0x9b,0x7a,0x77,0x27,0x82,0x47,0x4d,0x33,0x14,0x58,0x27,0x4d,0xe1,0xc2,0x92,0x4f,0x90,0x3b,0x94,0x0d,0x97,0x54,0xdc,0xbd,0x84,0x0c,0xfa,0xa5,0xc5,0x0e,0x09,0x89,0x46,0x2a,0xe8,0x2b,0x8b,0x0f,0xe7,0x90,0x65,0xae,0x83,0x1b,0xee,0xc4,0x37,0x4b,0xf2,0x9c,0x04,0xce,0x80,0xb7,0xc1,0xd4,0x04};
    mpz_from_bytes(multiplier, multiplier79, 4);
    mpz_from_bytes(multiplicand, multiplicand79, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product79, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier80[32]   = {0x07,0xed,0xe9,0xc5,0x15,0x15,0x77,0x90,0x7e,0x56,0x66,0x40,0xb2,0x7e,0xd8,0x25,0x9d,0xde,0x49,0x98,0xfb,0xe8,0xe6,0xc5,0xcf,0x45,0x3c,0xa9,0x68,0x8e,0x88,0xc9};
    static std::uint8_t multiplicand80[32] = {0x40,0x7c,0x5a,0x61,0x4b,0xbe,0x52,0xc0,0x47,0xe0,0x99,0x4f,0x07,0xc4,0x8b,0x37,0xd8,0x3e,0xec,0x70,0xfb,0xc2,0x7d,0x72,0xc2,0x41,0x20,0xbf,0xf2,0x08,0x71,0xc2};
    static std::uint8_t product80[64]      = {0x01,0xff,0x54,0x7b,0x28,0x69,0x0a,0x00,0xf9,0xbb,0x3a,0xdc,0x8d,0xf7,0x9d,0xe1,0xe8,0x5d,0xa0,0xb9,0x40,0x21,0xa6,0xa5,0x2b,0x80,0xf6,0x25,0x52,0xd1,0x10,0x0a,0xc4,0xbe,0x6f,0x7c,0x63,0x24,0x4f,0xd2,0x0d,0x78,0x00,0xa4,0xb4,0x80,0x17,0x37,0x45,0x3f,0x32,0x28,0xe0,0x8c,0x2d,0xb8,0x8c,0xda,0xef,0x41,0x6e,0xac,0x61,0x52};
    mpz_from_bytes(multiplier, multiplier80, 4);
    mpz_from_bytes(multiplicand, multiplicand80, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product80, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier81[32]   = {0x0b,0xf3,0xb3,0x26,0x94,0xea,0x59,0xbd,0xcf,0x83,0x10,0x39,0x97,0x29,0xb1,0xb4,0x5c,0x61,0x1d,0x0e,0x04,0xdc,0x71,0x07,0x2d,0x3d,0x84,0xdd,0xaa,0x67,0x2e,0x71};
    static std::uint8_t multiplicand81[32] = {0x24,0x67,0x31,0xe6,0x36,0x4e,0xc7,0x71,0xec,0x6b,0x7d,0x9a,0xf0,0x5b,0xa0,0x63,0x23,0x1b,0x86,0x37,0x02,0xba,0xb9,0x2e,0x78,0xbb,0x76,0x99,0x2f,0x74,0x6d,0x7d};
    static std::uint8_t product81[64]      = {0x01,0xb3,0x16,0x92,0xe6,0x3d,0x4b,0x6d,0xed,0x50,0x6f,0x44,0x1b,0xcc,0xf4,0x8f,0x84,0x88,0xa5,0x22,0x79,0xb9,0x8a,0x2f,0xb4,0xe5,0x33,0x27,0x56,0xea,0x07,0x4c,0x1d,0x1b,0x59,0x62,0xde,0xed,0x1c,0x50,0xc2,0x20,0x1b,0x4e,0x65,0x0e,0x0b,0xd5,0x75,0x2e,0x60,0x7e,0xee,0x54,0x77,0x81,0x7a,0xf4,0x41,0x9a,0xed,0x5b,0xca,0x2d};
    mpz_from_bytes(multiplier, multiplier81, 4);
    mpz_from_bytes(multiplicand, multiplicand81, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product81, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier82[32]   = {0x25,0x5d,0x39,0x0b,0x99,0xad,0xf3,0x49,0x59,0x30,0x6d,0x9a,0x46,0x60,0x4f,0x57,0x0b,0xd0,0x61,0x74,0x69,0x6b,0xbd,0x8d,0xc3,0x61,0xb9,0x10,0xb4,0xe9,0x5b,0x7e};
    static std::uint8_t multiplicand82[32] = {0x74,0xf6,0xdd,0x60,0x72,0x69,0xb1,0x77,0x2b,0x2d,0xe9,0x94,0x59,0x1a,0xed,0xcf,0xb7,0x6a,0xa7,0x96,0xbf,0xfb,0x6f,0xd9,0xba,0x51,0x64,0x36,0x3c,0x56,0x2c,0x84};
    static std::uint8_t product82[64]      = {0x11,0x12,0x45,0xbd,0xa0,0xaf,0xd7,0xf4,0x3a,0x6c,0x98,0x18,0x1c,0x75,0x9c,0x91,0x83,0xf3,0x6a,0xb0,0x63,0x0b,0xf0,0x42,0x69,0x6a,0x28,0x33,0x3e,0xe2,0xf3,0x7b,0x20,0xa5,0xd8,0xdb,0xf8,0x0e,0xec,0x54,0x0a,0xaa,0x70,0x61,0x1e,0x75,0xa6,0xcb,0x51,0x9e,0x82,0xdd,0x1b,0x33,0x2f,0x30,0x70,0x0a,0x48,0x1f,0xa8,0x60,0xd4,0xf8};
    mpz_from_bytes(multiplier, multiplier82, 4);
    mpz_from_bytes(multiplicand, multiplicand82, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product82, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier83[32]   = {0xf1,0x10,0x21,0x09,0xff,0xd0,0xea,0x66,0xd6,0xd5,0x29,0x88,0x06,0xba,0xe6,0xda,0x3e,0x32,0x62,0x61,0xca,0x02,0x75,0xd2,0xd7,0x24,0xe2,0x26,0x7d,0xef,0xde,0x42};
    static std::uint8_t multiplicand83[32] = {0x31,0x6f,0x87,0x07,0xc4,0xb0,0x34,0x2c,0x00,0x0a,0x8d,0x0a,0x42,0xb5,0x60,0x0d,0x8b,0x8b,0x2b,0xb1,0x13,0xb8,0x0d,0x84,0x27,0x22,0xb3,0xb4,0x2f,0x6e,0xe7,0x7f};
    static std::uint8_t product83[64]      = {0x2e,0x8d,0x1b,0x78,0x0f,0x60,0x5b,0x23,0x90,0x4a,0x0f,0xb1,0x74,0xbc,0x60,0xf9,0x7e,0x0a,0xa9,0x85,0x63,0xb9,0x27,0xd1,0x05,0xf1,0xc8,0xa8,0x94,0x3a,0xc9,0x9b,0x63,0x41,0xe8,0xe9,0x86,0x9b,0x77,0xd6,0x7e,0xf8,0x08,0x72,0xf0,0xec,0x80,0x5c,0x29,0x4c,0x66,0x4a,0x7f,0x66,0x10,0xf8,0x18,0xda,0x80,0x03,0x89,0xe8,0xd0,0xbe};
    mpz_from_bytes(multiplier, multiplier83, 4);
    mpz_from_bytes(multiplicand, multiplicand83, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product83, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier84[32]   = {0x65,0x7d,0x81,0xd1,0xe5,0xc3,0x80,0x0b,0x39,0xdb,0xad,0x93,0x5e,0xa9,0x9d,0x18,0x4a,0x7d,0x42,0x65,0xcd,0x32,0x24,0xc5,0x34,0x47,0x2e,0xdc,0x8d,0xd0,0x93,0xdb};
    static std::uint8_t multiplicand84[32] = {0xe5,0x42,0xd4,0x90,0xd3,0xfe,0xcb,0x5e,0xbb,0x41,0x4c,0x9a,0x9b,0x97,0xc3,0xc2,0xb6,0xb5,0x2e,0xfb,0xde,0x04,0xbe,0x96,0x92,0x44,0x3c,0xac,0x47,0xbb,0x53,0x7f};
    static std::uint8_t product84[64]      = {0x5a,0xe3,0xc3,0xc1,0x94,0xcb,0x6b,0x6f,0x14,0x8d,0x86,0xf9,0x91,0xfb,0xe7,0x75,0x7d,0x06,0xc8,0x0f,0x79,0x54,0x7b,0x43,0xd3,0x62,0xdf,0xc8,0x71,0x4c,0xbf,0xd5,0x97,0xb5,0x05,0x07,0x4e,0x23,0x5f,0xe5,0x9e,0x04,0x28,0xa4,0xb7,0x30,0xfb,0x45,0x5e,0x45,0xb5,0xec,0xc4,0xfe,0x15,0x3e,0xc0,0xe8,0xdc,0xe6,0xb8,0x62,0x5a,0xa5};
    mpz_from_bytes(multiplier, multiplier84, 4);
    mpz_from_bytes(multiplicand, multiplicand84, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product84, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier85[32]   = {0x6b,0x3a,0x5d,0x80,0x0b,0x52,0x72,0x13,0x7b,0xa8,0xe8,0xd9,0x9b,0xa4,0x15,0x9e,0xc7,0x76,0x3a,0x91,0xf5,0x41,0x80,0x99,0x23,0xe0,0x99,0x08,0x08,0xe3,0xc3,0x6c};
    static std::uint8_t multiplicand85[32] = {0x29,0xb3,0xca,0x10,0x3d,0xdb,0xbe,0xa2,0xd5,0x28,0x0c,0xea,0x21,0x50,0xdd,0x64,0xbb,0x7d,0x35,0x9e,0x38,0x68,0xbd,0x94,0x30,0x84,0x7b,0xb3,0x95,0xac,0x29,0x81};
    static std::uint8_t product85[64]      = {0x11,0x77,0xa7,0x6b,0xbd,0xad,0xf2,0xe9,0xaa,0x70,0xe3,0xa8,0x35,0x75,0x47,0x15,0xf6,0x64,0x7e,0x5a,0x60,0x80,0x6d,0x2c,0xd6,0xbc,0xf2,0x14,0xa4,0xdf,0x8c,0x81,0xfc,0xfb,0x6c,0x87,0x97,0x7d,0x8a,0xe6,0xea,0xe2,0x75,0xb1,0xb2,0xfc,0x7b,0xf3,0x2a,0xd8,0xb6,0xa5,0x54,0x95,0x05,0x4b,0x35,0x18,0x78,0xc2,0x1d,0xa1,0xc5,0x6c};
    mpz_from_bytes(multiplier, multiplier85, 4);
    mpz_from_bytes(multiplicand, multiplicand85, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product85, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier86[32]   = {0xe2,0xfc,0x0a,0xd8,0x69,0x3c,0x12,0x51,0x7a,0x85,0x3a,0x58,0x8c,0xa1,0xae,0x91,0x94,0xd7,0xd0,0xf9,0xca,0x6c,0xcd,0x47,0x4a,0xd6,0xe4,0x46,0x21,0x4d,0x87,0x6a};
    static std::uint8_t multiplicand86[32] = {0xa6,0xe1,0x2a,0x6d,0x08,0x44,0x40,0x64,0x8d,0xd2,0xf9,0x7b,0x04,0xa9,0x42,0xd6,0xb8,0x10,0x3e,0x52,0x95,0xba,0x52,0x68,0xd2,0x9b,0x31,0x7e,0x55,0xa5,0xe0,0x53};
    static std::uint8_t product86[64]      = {0x93,0xf7,0x14,0x2b,0xe2,0xdd,0xf5,0x77,0x68,0x54,0x4b,0x06,0x94,0x19,0x2d,0x44,0x76,0xb1,0x13,0x46,0x18,0xe0,0xb0,0x24,0x75,0x48,0x65,0xf8,0x53,0xd9,0x09,0x2e,0x6d,0xc0,0xd6,0x5a,0xc3,0xd2,0x86,0x16,0x4b,0x33,0x62,0xeb,0x37,0x61,0x2b,0x1f,0xf5,0x71,0xc1,0x6d,0xf6,0xd2,0x06,0xdf,0xe1,0xed,0x84,0xfb,0x1b,0xf1,0xa7,0x5e};
    mpz_from_bytes(multiplier, multiplier86, 4);
    mpz_from_bytes(multiplicand, multiplicand86, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product86, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier87[32]   = {0x05,0xd9,0x54,0x08,0x04,0xc3,0xcb,0x3e,0xc7,0xe9,0x23,0xbb,0x93,0xf5,0xbc,0x22,0x0a,0x7e,0x2d,0xcd,0xab,0x97,0xcf,0x0c,0x7e,0x47,0x57,0xdc,0xb8,0xaa,0x19,0x00};
    static std::uint8_t multiplicand87[32] = {0x79,0xb6,0x47,0xda,0x70,0x62,0xaa,0xef,0x24,0x45,0x51,0x2a,0xf9,0xa1,0x83,0x55,0x2b,0xfd,0xe5,0xa8,0x11,0xab,0x0c,0xb5,0xbe,0x4e,0xd2,0x0f,0x0f,0x23,0xd6,0xec};
    static std::uint8_t product87[64]      = {0x02,0xc7,0xe2,0xdd,0xcb,0xe5,0x0c,0x46,0xfc,0xe7,0x36,0x50,0x38,0xc3,0xf9,0x3b,0x55,0xd4,0x71,0x7d,0xcf,0x3a,0x42,0x9d,0x3b,0xe6,0x30,0x72,0x47,0x2a,0x7f,0x08,0xeb,0x67,0x58,0xe2,0x2f,0xe5,0x9f,0x14,0xd7,0x6b,0x87,0x61,0x80,0xaa,0x9b,0x67,0x6e,0x4c,0xd5,0x30,0xe0,0x22,0x27,0xc6,0xf7,0xb0,0x2f,0x90,0xd8,0xb5,0x0c,0x00};
    mpz_from_bytes(multiplier, multiplier87, 4);
    mpz_from_bytes(multiplicand, multiplicand87, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product87, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier88[32]   = {0xf5,0x1b,0xd3,0xc5,0x93,0x50,0x60,0x91,0x3e,0x6b,0xb7,0x1b,0x6a,0xec,0x36,0xf4,0xd9,0x0d,0xf2,0xd3,0xd6,0x91,0xaf,0x8d,0x07,0xff,0x01,0xd1,0xd8,0x9f,0x8f,0xd4};
    static std::uint8_t multiplicand88[32] = {0x21,0x11,0x11,0x3a,0x01,0xe5,0xfb,0x73,0x4f,0x2b,0xdc,0xd6,0x04,0xb0,0x6b,0x93,0xba,0xca,0xf3,0xb0,0x80,0xbe,0xae,0x73,0x5e,0x20,0xee,0xb0,0x56,0xf9,0x6b,0x71};
    static std::uint8_t product88[64]      = {0x1f,0xa8,0xed,0xa3,0xeb,0x4b,0x8c,0xcd,0xbe,0x91,0x13,0xbe,0x4a,0x83,0x9e,0x19,0xb1,0x94,0x26,0x60,0x27,0x93,0x93,0x72,0x55,0x30,0x39,0x1b,0x72,0xfd,0x83,0x68,0x59,0xab,0x75,0xf2,0x44,0x31,0x41,0x37,0x30,0x9c,0x35,0x3c,0xe9,0xdb,0x42,0xb9,0xc7,0x0f,0xee,0x65,0x19,0x1a,0x97,0xe4,0x79,0x1d,0xca,0x6f,0x6c,0xc0,0x18,0x94};
    mpz_from_bytes(multiplier, multiplier88, 4);
    mpz_from_bytes(multiplicand, multiplicand88, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product88, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier89[32]   = {0x70,0x3a,0x56,0x91,0xf1,0xfa,0x1b,0x86,0xba,0x51,0x67,0xef,0x49,0x44,0xff,0xf1,0x41,0x3f,0x77,0x10,0xa1,0x83,0x10,0xc7,0x0f,0x38,0x43,0x29,0x72,0x51,0x58,0xef};
    static std::uint8_t multiplicand89[32] = {0x4e,0xc6,0x77,0xfa,0x93,0x98,0xd3,0x37,0x21,0xb2,0xef,0x72,0x00,0x9c,0x0d,0xe6,0x81,0xfc,0x5b,0xd3,0x08,0x68,0x6f,0xb5,0x82,0xd1,0x95,0x8f,0x83,0x40,0x9c,0x26};
    static std::uint8_t product89[64]      = {0x22,0x88,0xc8,0x18,0x64,0x86,0x3c,0xc7,0x5d,0x46,0x8f,0x9b,0x5f,0x59,0x75,0x9b,0xdb,0xa2,0x53,0x18,0x75,0x56,0x92,0x42,0xc0,0x43,0x54,0xaf,0x17,0x27,0x8c,0x87,0xb5,0x53,0x18,0xb3,0x1e,0x8d,0xdf,0x1a,0x46,0xe5,0x9d,0xb6,0x08,0x6f,0x29,0xe4,0xc6,0x3d,0x2e,0x04,0xb8,0xcf,0x2c,0x7f,0xb8,0x76,0x37,0x2a,0x13,0x04,0xd7,0x7a};
    mpz_from_bytes(multiplier, multiplier89, 4);
    mpz_from_bytes(multiplicand, multiplicand89, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product89, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier90[32]   = {0x70,0x3e,0x6b,0x43,0xe7,0xbf,0xfb,0x21,0x7d,0x35,0xea,0x13,0xd7,0xb6,0xb6,0x32,0x43,0xe8,0x9b,0xbc,0x94,0x6c,0x34,0x32,0x1f,0x95,0x35,0x87,0xa6,0x63,0x36,0x14};
    static std::uint8_t multiplicand90[32] = {0x20,0x67,0x71,0xdd,0x03,0xd8,0x1a,0x03,0xbc,0x7c,0x63,0x14,0x46,0xb5,0xa2,0x3d,0x9c,0xa4,0xca,0x25,0x4d,0x45,0xa5,0x6b,0xa5,0x6b,0xd0,0x3d,0x6a,0x0e,0x73,0xdc};
    static std::uint8_t product90[64]      = {0x0e,0x35,0x28,0x72,0x1a,0x35,0x4b,0xe1,0x4f,0xfd,0x03,0xd6,0xe6,0xbc,0xab,0xea,0xa4,0xa4,0xc3,0x23,0xa5,0x6e,0xf7,0xdf,0xc7,0x52,0x50,0xf9,0x09,0x73,0xdf,0x69,0xa2,0x89,0xba,0xa6,0x84,0x0a,0x0b,0x83,0x31,0xac,0xd9,0xf8,0x5b,0x27,0x2b,0x19,0x9e,0x6c,0x17,0x92,0x68,0xf3,0xd5,0xc8,0x03,0x86,0x40,0xe6,0xcb,0xa5,0x75,0x30};
    mpz_from_bytes(multiplier, multiplier90, 4);
    mpz_from_bytes(multiplicand, multiplicand90, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product90, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier91[32]   = {0x96,0x22,0xe4,0x1c,0x21,0x44,0x15,0x52,0xd0,0x5f,0xed,0xb6,0x82,0x8e,0x9f,0xbf,0xf3,0x5e,0xfd,0x09,0xb7,0x8e,0x87,0xf0,0xfe,0x27,0xfb,0x92,0xd7,0x9e,0x0f,0x47};
    static std::uint8_t multiplicand91[32] = {0x55,0x82,0x90,0xc1,0xaf,0xa0,0xbf,0xcb,0xf2,0x03,0xd3,0x34,0x2b,0x2a,0x94,0x36,0xda,0x29,0x0a,0x5f,0xd7,0xda,0x04,0x0c,0xf5,0xa4,0x33,0x3b,0xd1,0x7c,0x5f,0xee};
    static std::uint8_t product91[64]      = {0x32,0x26,0x28,0x5a,0x64,0xf2,0x6b,0xcc,0x23,0xad,0xc1,0x73,0x19,0x5b,0x23,0x24,0x8c,0x25,0x10,0x95,0x2e,0xf9,0xa8,0xa7,0xae,0xcc,0x51,0x58,0x83,0x74,0xf1,0x6e,0x82,0xed,0xe5,0x3f,0xdd,0xd2,0x37,0x78,0x40,0xbf,0x6c,0xc7,0x4d,0xd5,0x12,0x63,0x9e,0xe2,0x6f,0xc0,0x97,0x0c,0x05,0x1e,0xc7,0xa4,0x85,0xed,0x7a,0x01,0x8d,0x02};
    mpz_from_bytes(multiplier, multiplier91, 4);
    mpz_from_bytes(multiplicand, multiplicand91, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product91, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier92[32]   = {0x9a,0x9f,0x66,0x2e,0xa4,0x04,0xe1,0x68,0x7a,0xd0,0x31,0x21,0xa7,0x1a,0x6e,0x8e,0xc1,0xd3,0xf6,0x7a,0x9e,0x9a,0x97,0x4e,0x13,0xb4,0x95,0xef,0x9f,0x73,0x13,0xac};
    static std::uint8_t multiplicand92[32] = {0x72,0xd5,0xd8,0xeb,0xc0,0xee,0xfe,0xcf,0x9b,0x59,0x58,0xb8,0x6f,0xeb,0xfd,0x9d,0x3b,0xc0,0x36,0x51,0xf7,0x6f,0xe3,0xb2,0x3d,0x4c,0x97,0xcb,0x19,0xe4,0x49,0x19};
    static std::uint8_t product92[64]      = {0x45,0x5c,0x25,0x25,0xac,0xea,0xb2,0x60,0x47,0xc4,0x7d,0x8c,0x9b,0xa2,0xa7,0xbc,0xc1,0xc7,0xd8,0x79,0x17,0xe4,0xe6,0xdf,0x07,0x79,0x5f,0x6e,0x4d,0xbc,0x79,0x00,0x58,0x8a,0x02,0x88,0x42,0xca,0xd4,0xfa,0xbd,0xbb,0xcc,0x8e,0xd4,0x7e,0xe4,0x4c,0x80,0x34,0xb4,0xd5,0x18,0x82,0x69,0x3a,0x7f,0x4b,0x45,0xab,0xb4,0x08,0xf7,0xcc};
    mpz_from_bytes(multiplier, multiplier92, 4);
    mpz_from_bytes(multiplicand, multiplicand92, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product92, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier93[32]   = {0x13,0x3e,0x78,0x17,0x05,0x0a,0x14,0x80,0x94,0x43,0xef,0xc4,0x4b,0x32,0x89,0x5a,0x33,0x02,0xd7,0x36,0xc2,0x13,0x1a,0xea,0xa6,0xbb,0xbf,0x85,0x11,0x8e,0xaa,0xa0};
    static std::uint8_t multiplicand93[32] = {0x0f,0x9d,0x85,0x77,0x77,0x33,0x30,0x43,0x6d,0xde,0xb8,0x26,0x5e,0xae,0x47,0xbe,0x88,0x2b,0xdb,0x6e,0xe0,0xeb,0xbf,0xe2,0x63,0x0a,0xea,0x93,0x28,0x6d,0xdb,0x36};
    static std::uint8_t product93[64]      = {0x01,0x2c,0x80,0x61,0x6e,0xcd,0x59,0x99,0x17,0xef,0x04,0x2a,0x8c,0xc4,0x2d,0x40,0x87,0x38,0x45,0x79,0x07,0x6e,0xda,0x3f,0x14,0xd6,0xf4,0x3d,0x68,0x49,0x58,0xad,0xcc,0x73,0x17,0x29,0xa5,0x9c,0x99,0x81,0x66,0xe4,0x49,0x72,0x31,0x77,0xf3,0x87,0xd8,0xdc,0x6b,0x0b,0x46,0x00,0x36,0x43,0x25,0xfa,0x3a,0x5e,0x66,0x2e,0xdd,0xc0};
    mpz_from_bytes(multiplier, multiplier93, 4);
    mpz_from_bytes(multiplicand, multiplicand93, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product93, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier94[32]   = {0x8c,0x7b,0xec,0xc4,0xf7,0x38,0xf6,0xf7,0x03,0x2b,0x32,0x1c,0xf2,0x7d,0x72,0x35,0x28,0x3e,0xcd,0x2d,0x06,0xe3,0x3e,0x96,0xa8,0xf7,0x53,0x1c,0xca,0x59,0xdd,0xd6};
    static std::uint8_t multiplicand94[32] = {0x06,0x8f,0xac,0xb4,0x87,0xe1,0x70,0x41,0x0e,0xbf,0xa0,0x1c,0xfe,0x99,0x3b,0x23,0xf1,0x41,0x69,0xeb,0x02,0x06,0xe4,0x44,0x82,0xae,0x46,0x4c,0xff,0x2a,0xc3,0xa8};
    static std::uint8_t product94[64]      = {0x03,0x99,0xbf,0x8c,0x34,0x99,0x4f,0x94,0xba,0xaa,0xf0,0xdb,0xb8,0xe7,0x07,0x06,0x77,0xbf,0x5b,0xaa,0x48,0x32,0x83,0xfa,0x7e,0x84,0xcb,0xea,0xc6,0x20,0x99,0xcf,0x9e,0x6e,0xb5,0xe7,0x7d,0x86,0x44,0x72,0xd6,0x0d,0xff,0x0d,0xb8,0x2c,0x54,0xfe,0xb7,0x52,0x38,0xcf,0x83,0xc3,0x26,0x64,0xaf,0xb0,0x8f,0x45,0xce,0x0f,0x96,0x70};
    mpz_from_bytes(multiplier, multiplier94, 4);
    mpz_from_bytes(multiplicand, multiplicand94, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product94, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier95[32]   = {0xee,0x5e,0x9e,0x75,0x47,0x76,0xb4,0xad,0xca,0x73,0x37,0xc4,0x88,0x02,0x83,0x3e,0x33,0xeb,0xa2,0xa3,0x4d,0x0e,0x6e,0xf2,0x9f,0xf1,0x07,0x00,0x4f,0xb6,0x2c,0xba};
    static std::uint8_t multiplicand95[32] = {0xcb,0x7d,0x8c,0x1f,0x43,0x81,0xbf,0xc6,0x79,0xec,0x7f,0x74,0x98,0xf5,0x17,0x6b,0x85,0x70,0xc2,0xbf,0x31,0x3a,0xe4,0x52,0x14,0x06,0xd6,0x03,0xad,0xb5,0xa3,0x39};
    static std::uint8_t product95[64]      = {0xbd,0x79,0xee,0x53,0x39,0xe7,0xed,0x3c,0x8c,0x50,0x35,0x2b,0xfc,0x3d,0x93,0x77,0x37,0x01,0x0b,0x2e,0x5b,0xc7,0x6f,0xff,0x66,0xf0,0x94,0xf4,0xd7,0xa3,0x5b,0xbe,0x97,0x21,0xd4,0x7c,0xf4,0x6e,0x74,0x29,0xf5,0xa6,0x1d,0x6b,0x1d,0xa0,0x81,0x2e,0xbb,0x9a,0xe5,0x0b,0xd0,0xb9,0x93,0xfc,0x0a,0x18,0x3c,0x08,0x0f,0x8c,0x63,0x6a};
    mpz_from_bytes(multiplier, multiplier95, 4);
    mpz_from_bytes(multiplicand, multiplicand95, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product95, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier96[32]   = {0x95,0xa9,0x75,0x9b,0xfe,0x82,0xe8,0x79,0xc5,0x5b,0xa9,0x19,0x3b,0x8e,0x18,0xa0,0xd2,0xe2,0x88,0x7c,0x87,0x88,0xe3,0xc2,0x09,0xfc,0x46,0xfa,0xb4,0x70,0x4b,0x49};
    static std::uint8_t multiplicand96[32] = {0xb5,0x33,0xb1,0xb2,0x63,0xe6,0x36,0x5d,0xe0,0xd4,0x1a,0x19,0x1d,0xc1,0x0b,0xc5,0xef,0x16,0xf6,0xe2,0xb7,0x1e,0xca,0x6d,0x3b,0x7d,0x3d,0x55,0x16,0x6b,0x17,0xed};
    static std::uint8_t product96[64]      = {0x69,0xef,0x08,0xcc,0x2d,0x92,0x02,0x65,0x80,0xf0,0x27,0x4f,0xf0,0xde,0xf2,0xec,0x89,0x3b,0xf6,0xae,0xc8,0x14,0xb6,0xd7,0x28,0x08,0xdc,0x91,0xb5,0x25,0x9a,0xc9,0x0b,0xca,0xa3,0x36,0xa9,0xc4,0xb0,0xad,0xab,0xed,0x88,0x97,0x94,0x5e,0x28,0xd9,0x8d,0xfc,0xe8,0x24,0xf3,0x9a,0x16,0x94,0x60,0x17,0xb1,0xf3,0xe0,0x3c,0x41,0x95};
    mpz_from_bytes(multiplier, multiplier96, 4);
    mpz_from_bytes(multiplicand, multiplicand96, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product96, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier97[32]   = {0xf7,0xed,0x9f,0xaf,0x2f,0xf1,0x19,0xe2,0xb3,0xd4,0x46,0x88,0xee,0x32,0xac,0xee,0xa8,0xfd,0x63,0x84,0x9d,0x52,0xae,0xdf,0x59,0x38,0x5b,0xbd,0xe7,0xf5,0x5f,0x96};
    static std::uint8_t multiplicand97[32] = {0x15,0xe2,0xe4,0x2e,0xc4,0x90,0x4e,0xb5,0xd6,0x52,0xad,0x30,0x66,0xa8,0xc5,0xe2,0x99,0xf5,0xc2,0x0d,0x0e,0x65,0x89,0x04,0x99,0x7b,0x3f,0x5b,0x36,0x56,0x7b,0x66};
    static std::uint8_t product97[64]      = {0x15,0x32,0x3a,0xdd,0x44,0xdf,0x82,0x4c,0x3f,0xbd,0x46,0x51,0x69,0x05,0x7b,0x7b,0x25,0x1f,0x6b,0x67,0x45,0x43,0x32,0x39,0x2c,0xfc,0xe8,0x9c,0x10,0x77,0x49,0xd5,0xcb,0xa1,0x4d,0x98,0x29,0x7c,0xe8,0x60,0xa9,0xef,0x2b,0xb5,0xbc,0xa7,0x5f,0xca,0x3f,0x9b,0xdc,0x1a,0x48,0x78,0x0f,0x18,0xeb,0x13,0x5f,0x07,0x11,0x15,0x27,0xc4};
    mpz_from_bytes(multiplier, multiplier97, 4);
    mpz_from_bytes(multiplicand, multiplicand97, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product97, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier98[32]   = {0xfa,0x11,0x6e,0xab,0xa7,0x3a,0x5f,0x38,0x1b,0xe5,0x0f,0x22,0x1f,0x5e,0x4b,0x20,0x33,0xeb,0x72,0xf8,0x03,0x22,0x0b,0x9b,0xbc,0x14,0x83,0x73,0xc0,0xbf,0x76,0xc2};
    static std::uint8_t multiplicand98[32] = {0xec,0xe7,0x49,0xc7,0xd8,0xec,0xc2,0xbf,0xb4,0x76,0x7d,0x44,0x17,0x84,0x61,0xee,0xe0,0x42,0xe7,0xf1,0x22,0x6b,0x76,0xbf,0x12,0x9a,0xb6,0x41,0x5e,0xfd,0x53,0x73};
    static std::uint8_t product98[64]      = {0xe7,0x69,0xff,0xd3,0x4b,0x0f,0xab,0x41,0x9d,0x5e,0x6b,0x5f,0xf8,0x65,0x7d,0x72,0x95,0x25,0xba,0x12,0x1e,0x8b,0x06,0x3e,0x50,0xd4,0xc8,0x02,0xcc,0xac,0x4b,0xf2,0x7d,0xf4,0x4e,0x12,0x87,0x4d,0xe0,0xd3,0x91,0x8c,0xfd,0x8a,0x9e,0xd0,0xdd,0x25,0xf7,0x67,0x2d,0xd0,0x1e,0x8d,0x39,0x2b,0xb1,0xc0,0x72,0x93,0x43,0x3d,0x3f,0x26};
    mpz_from_bytes(multiplier, multiplier98, 4);
    mpz_from_bytes(multiplicand, multiplicand98, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product98, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }

    static std::uint8_t multiplier99[32]   = {0xd1,0x62,0xc2,0x42,0x1d,0xcd,0x5e,0x74,0x79,0xcd,0x27,0x0b,0x5f,0x4f,0x86,0xf7,0xd9,0x03,0x7e,0x59,0x3b,0x34,0xd2,0xa4,0xe1,0x79,0x22,0xa4,0xbe,0xe3,0x92,0xa6};
    static std::uint8_t multiplicand99[32] = {0x26,0x27,0x1e,0xbb,0xf1,0x9f,0x99,0xa7,0x21,0xd0,0x10,0xa8,0x4f,0xf9,0xb9,0x9a,0x54,0x41,0x31,0x1d,0xb9,0x06,0x31,0xf0,0x39,0xdd,0x1d,0x11,0xac,0x9f,0x2e,0x92};
    static std::uint8_t product99[64]      = {0x1f,0x34,0xa8,0x04,0xb4,0x07,0x2e,0xfc,0x22,0x35,0xa5,0xba,0x57,0xab,0x38,0xae,0x6a,0x0e,0xf2,0x91,0x9d,0x10,0xb4,0xea,0xe1,0xf3,0x85,0xad,0xa4,0x70,0x9d,0x88,0x66,0x0c,0x14,0xea,0x37,0x53,0x64,0x41,0xfa,0xe5,0x03,0xe1,0x2f,0xe8,0xa7,0x1b,0x9c,0xce,0xf7,0xbe,0x10,0xdf,0xde,0x5c,0x93,0xea,0x5d,0x27,0x5f,0x3d,0x76,0xac};
    mpz_from_bytes(multiplier, multiplier99, 4);
    mpz_from_bytes(multiplicand, multiplicand99, 4);
    mpz_mul(product[0], multiplier, multiplicand, 4);
    mpz_to_bytes(product_data + 32, product[0], 4);
    mpz_to_bytes(product_data, product[1], 4);
    if (std::memcmp(product99, product_data, 64) != 0)
    {
        throw std::runtime_error("err in x64::mpz_mul");
    }
}
#else
void test_mpz_x64_mul()
{
}
#endif