#include <gmlib/number/internal/mpz_common.h>
#include <stdexcept>
#include <cstring>

using namespace number::internal::common;

void test_mpz_common_mul()
{
    uint32_t    multiplier[8], multiplicand[8], product[2][8];
    std::uint8_t product_data[64];

    static std::uint8_t multiplier0[32]   = {0xe3,0x10,0xf9,0x86,0x91,0x05,0x6d,0x93,0xed,0xfd,0x97,0x3f,0xa9,0x9a,0x01,0x9f,0x0e,0x82,0x4b,0x1e,0xdb,0x4c,0xee,0xa8,0xfe,0x08,0xa3,0x41,0x8d,0xba,0x66,0x47};
    static std::uint8_t multiplicand0[32] = {0xe9,0x2a,0x90,0x01,0xc5,0xb7,0xff,0x94,0xf8,0x6b,0x9c,0x17,0x60,0xf6,0x19,0x81,0x29,0xdf,0x6a,0xb1,0x49,0xaa,0xde,0xa6,0x1e,0xbc,0xba,0x4f,0x0f,0x73,0x13,0xed};
    static std::uint8_t product0[64]      = {0xce,0xd0,0x33,0x9f,0x88,0xdd,0xaa,0x92,0x34,0x09,0x86,0x70,0x7b,0x5e,0x50,0x08,0x87,0x80,0x55,0x1b,0x24,0x7a,0x6a,0x25,0x43,0x9d,0xda,0xdf,0xba,0x42,0xdd,0x07,0xf4,0xa9,0xbe,0xc3,0x03,0xa1,0xf4,0x5f,0x92,0x7c,0xda,0xaa,0x77,0x2b,0x63,0x49,0x41,0x1e,0xf3,0x07,0xcc,0x79,0xef,0xdd,0x98,0xd6,0xbd,0xd8,0x26,0x0c,0xf4,0xbb};
    mpz_from_bytes(multiplier, multiplier0, 8);
    mpz_from_bytes(multiplicand, multiplicand0, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product0, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier1[32]   = {0x5f,0x81,0x7e,0x7e,0x29,0xb6,0x3f,0x71,0x8c,0xb6,0x45,0xaa,0x85,0xf1,0xc7,0x24,0x58,0xe5,0x01,0x93,0x6b,0x61,0x50,0x8a,0x79,0x1a,0x77,0xed,0x96,0x4b,0xf4,0x44};
    static std::uint8_t multiplicand1[32] = {0x83,0x22,0xf3,0x04,0xf7,0x80,0x71,0xcc,0xe8,0x65,0xc5,0x3e,0x06,0x1c,0x5a,0xaf,0xc3,0x2b,0x68,0x44,0x7d,0x13,0xf7,0x7d,0x3c,0x21,0x3e,0xb0,0x75,0x5b,0x73,0x8a};
    static std::uint8_t product1[64]      = {0x30,0xec,0x4d,0x97,0x21,0x87,0x64,0x7b,0xc1,0x35,0x3d,0xca,0xb8,0x7f,0x50,0xc8,0xc2,0x7a,0x93,0x5e,0x91,0x8c,0x84,0x97,0x5d,0x4b,0xb9,0x16,0x8a,0x9a,0x56,0x05,0xf6,0x9e,0x87,0xe9,0x14,0x1c,0x20,0xfc,0x68,0x19,0xf9,0x20,0x42,0x58,0x94,0xe2,0x24,0xc3,0xfc,0x26,0x55,0x1d,0xd0,0x40,0x89,0x6d,0xea,0xfa,0x0b,0xd8,0x38,0xa8};
    mpz_from_bytes(multiplier, multiplier1, 8);
    mpz_from_bytes(multiplicand, multiplicand1, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product1, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier2[32]   = {0x4b,0x52,0xc9,0x35,0xc7,0xe4,0x59,0xad,0x19,0x19,0x3b,0xeb,0xf6,0x82,0xe4,0x7f,0x1f,0x5b,0x49,0x43,0x34,0x4e,0x2a,0x0a,0x51,0x0b,0xe3,0xba,0xd9,0x54,0xa6,0x6c};
    static std::uint8_t multiplicand2[32] = {0xd1,0xe1,0x25,0x0f,0x10,0x5f,0xbb,0xd1,0x48,0xd8,0x1c,0xfe,0x4c,0x76,0x0a,0x2f,0x96,0x56,0x64,0xa1,0x07,0xc0,0x7b,0xed,0xda,0x9b,0x15,0x2d,0xdb,0x08,0xbe,0xbe};
    static std::uint8_t product2[64]      = {0x3d,0xc0,0xd4,0xef,0x26,0x36,0x04,0x82,0xee,0x6a,0xcf,0x1b,0x4a,0xc2,0x64,0xcf,0x7b,0x46,0xdf,0x19,0xa5,0x6d,0x4a,0xd8,0xb7,0xf0,0x2e,0x33,0x27,0xd0,0x80,0x32,0xaf,0x57,0xd9,0x87,0x05,0x83,0xab,0x32,0x7f,0x00,0x16,0x4b,0xf3,0xb4,0x35,0x32,0x3c,0x73,0xf4,0x0d,0xd5,0x2b,0x8d,0x9f,0xd0,0x86,0x03,0xf9,0xb7,0xb7,0xac,0x28};
    mpz_from_bytes(multiplier, multiplier2, 8);
    mpz_from_bytes(multiplicand, multiplicand2, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product2, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier3[32]   = {0xc5,0x14,0x2a,0xe4,0x33,0xca,0xf0,0x0a,0x4a,0x54,0x00,0x1f,0xeb,0x90,0xb0,0x4a,0x66,0xc5,0xfb,0x5d,0x38,0x8e,0x29,0x0b,0x57,0xab,0xeb,0xd8,0x83,0x21,0x90,0x53};
    static std::uint8_t multiplicand3[32] = {0xa3,0xe0,0xe6,0xb2,0x13,0xc2,0xa7,0xfb,0xc7,0xd1,0x6e,0x8f,0x9e,0xd3,0xa0,0x71,0x80,0x32,0xb6,0x59,0x7d,0x5c,0xa1,0x26,0x4a,0x1a,0x56,0xad,0xd6,0x55,0x36,0x30};
    static std::uint8_t product3[64]      = {0x7e,0x28,0xfa,0x8e,0x0a,0x6c,0xbb,0x66,0x5a,0x74,0xce,0x92,0x0e,0xd9,0x0d,0x89,0xd3,0xc7,0xb6,0xb0,0x3b,0x89,0x73,0x6b,0x72,0x27,0x46,0x19,0xa3,0xad,0xc4,0xd3,0xd0,0x57,0x04,0xde,0xad,0x8d,0x21,0xc0,0xcf,0x00,0x50,0x98,0x02,0x80,0xf7,0x67,0x97,0xe4,0x6d,0xab,0x35,0x3f,0xab,0xab,0x8b,0x15,0xe7,0x22,0xf8,0x4b,0x91,0x90};
    mpz_from_bytes(multiplier, multiplier3, 8);
    mpz_from_bytes(multiplicand, multiplicand3, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product3, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier4[32]   = {0x3d,0x60,0x88,0xdb,0x2a,0x6c,0xb6,0xac,0x70,0x18,0xc4,0xd3,0x4d,0x15,0xc1,0x7f,0xef,0x42,0x61,0x60,0x2c,0x8a,0xcc,0x22,0xc7,0x43,0xa7,0x73,0xc8,0xd6,0x22,0x9d};
    static std::uint8_t multiplicand4[32] = {0x4c,0x42,0x9e,0x0a,0x0d,0x87,0xfc,0xe9,0x72,0xe8,0xa0,0x42,0x81,0x46,0xd7,0xed,0x04,0x51,0xf6,0x5e,0x8b,0x61,0xed,0x5d,0x64,0x56,0x9f,0x01,0xd7,0xd2,0x68,0xbc};
    static std::uint8_t product4[64]      = {0x12,0x48,0xa1,0x68,0x56,0x94,0x54,0x7f,0x56,0x95,0xc5,0x6e,0xc2,0x20,0x8f,0x3f,0x37,0xf6,0x98,0xda,0x82,0xe7,0xbd,0x1c,0x87,0x57,0x83,0x85,0x5a,0xc9,0x9c,0x6e,0x2b,0x41,0x31,0xac,0x47,0xaa,0xf3,0xc8,0xc4,0x4f,0xad,0x7f,0x4b,0x77,0x84,0x9b,0x1f,0x8b,0x6b,0xa1,0x9a,0xad,0xec,0x4e,0x29,0x70,0x3e,0xf5,0xbb,0x1b,0x33,0x4c};
    mpz_from_bytes(multiplier, multiplier4, 8);
    mpz_from_bytes(multiplicand, multiplicand4, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product4, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier5[32]   = {0xda,0x37,0x2e,0x51,0x18,0x34,0xf7,0xf6,0x1b,0x90,0x36,0x00,0x47,0x23,0xc1,0xb1,0x7e,0x9a,0xa5,0x0e,0xda,0xab,0x3d,0x2f,0x2b,0x67,0xd4,0x2a,0x05,0x67,0xc3,0xf2};
    static std::uint8_t multiplicand5[32] = {0x19,0x9c,0x3d,0x5e,0x54,0x58,0x7c,0xe5,0x6e,0x6e,0xdc,0x4a,0xeb,0xc5,0x2d,0x8b,0x1d,0x55,0x82,0xa8,0xd2,0xd1,0xb9,0xa7,0x9f,0x9a,0x67,0x1a,0xeb,0xb8,0xdf,0x2d};
    static std::uint8_t product5[64]      = {0x15,0xd4,0x91,0x75,0xb2,0xf9,0xc9,0xaa,0x78,0xf2,0x31,0x50,0xc0,0x0a,0x84,0xe7,0x59,0x22,0x12,0xdc,0x0c,0xcd,0x8a,0x9c,0xc2,0x71,0xe9,0xa6,0xe1,0xb9,0x5f,0xb9,0xcf,0xea,0xa4,0x16,0x2a,0xcf,0x8a,0x6a,0xe1,0xe4,0x45,0xae,0xf7,0x28,0xea,0xf8,0x30,0x75,0xe3,0x67,0xca,0x8d,0x36,0xeb,0x9e,0x2f,0x4e,0x20,0x52,0xdd,0x3f,0x8a};
    mpz_from_bytes(multiplier, multiplier5, 8);
    mpz_from_bytes(multiplicand, multiplicand5, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product5, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier6[32]   = {0x48,0x94,0x76,0xfb,0x14,0xbd,0x70,0xa1,0xde,0xba,0x26,0xc8,0xc2,0x95,0x74,0x12,0xad,0xa3,0x00,0x64,0x43,0x9b,0x97,0x61,0x93,0xdb,0x7a,0x0d,0x04,0x5e,0x36,0x17};
    static std::uint8_t multiplicand6[32] = {0xd1,0x0b,0x38,0x96,0xf0,0x7a,0xca,0xca,0x5e,0x77,0xaa,0x75,0x68,0xef,0x3b,0x3b,0x1a,0x3a,0x1f,0x62,0xb3,0x55,0x32,0x80,0xb3,0x1b,0x09,0xc1,0x4e,0xc7,0x66,0xfd};
    static std::uint8_t product6[64]      = {0x3b,0x44,0x63,0x8f,0x5d,0xeb,0x30,0x8a,0x32,0x57,0xe0,0x9d,0x72,0x49,0xba,0x9a,0x65,0x6a,0x83,0xc8,0x7d,0x34,0x08,0xa6,0x02,0xfe,0x21,0x97,0x29,0xf5,0x3d,0xcd,0x93,0x89,0x8f,0xc7,0xb5,0xaa,0x28,0xe6,0xb8,0x5e,0x9d,0xcd,0xf4,0x1c,0x77,0x3a,0x20,0xdd,0x4b,0x9e,0x00,0x79,0xa3,0x5d,0xce,0x56,0x7e,0xa8,0xe8,0x89,0x9e,0xbb};
    mpz_from_bytes(multiplier, multiplier6, 8);
    mpz_from_bytes(multiplicand, multiplicand6, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product6, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier7[32]   = {0xad,0xb4,0x38,0x3e,0x18,0x5e,0xbd,0xe0,0xb8,0x3e,0xb3,0xf3,0xcb,0xb3,0x13,0xb0,0x88,0xc7,0xe3,0xa4,0xa2,0x67,0xec,0xc4,0x38,0x46,0xac,0xb0,0x38,0xa9,0xe6,0xd2};
    static std::uint8_t multiplicand7[32] = {0x3c,0x8a,0x74,0x1e,0xf1,0xa4,0xf3,0x5b,0x06,0x37,0x13,0x65,0xa2,0xc2,0xbc,0x55,0xbb,0xa9,0x38,0xa4,0xcd,0xf0,0x3b,0x35,0x47,0x6d,0x22,0xb4,0x71,0x45,0x96,0xbd};
    static std::uint8_t product7[64]      = {0x29,0x14,0x2f,0x1f,0x87,0xc0,0xa7,0x6b,0x20,0xd9,0x6c,0xa5,0xd0,0x00,0xa2,0x6e,0xf4,0x33,0x27,0x07,0x51,0xe9,0x35,0x6a,0xcb,0x6d,0xfb,0x56,0x25,0x78,0x4b,0x4d,0x7c,0xd6,0xff,0x65,0xa4,0xcd,0x5e,0x4b,0xba,0x35,0x67,0xfd,0x28,0x91,0x1d,0xff,0x8c,0xac,0x9f,0xd9,0x06,0xce,0x65,0x61,0x37,0x67,0x33,0xa3,0x4b,0x48,0x75,0x0a};
    mpz_from_bytes(multiplier, multiplier7, 8);
    mpz_from_bytes(multiplicand, multiplicand7, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product7, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier8[32]   = {0x32,0x89,0xe9,0x99,0x5b,0x6b,0xe0,0x04,0xdb,0x7b,0x76,0xbd,0xe7,0x3b,0x56,0x0e,0x01,0xb8,0x8a,0x97,0x76,0xda,0x26,0x39,0xd5,0x1d,0x4e,0x17,0xdb,0xf5,0xeb,0x12};
    static std::uint8_t multiplicand8[32] = {0xd2,0xb2,0xe4,0x0c,0x19,0x4c,0x32,0xb7,0xa8,0x8b,0xb3,0x9e,0x4a,0xa5,0xe3,0x1a,0x13,0x19,0x9c,0x0b,0xb6,0x93,0xca,0x7b,0x7a,0xea,0xa1,0x34,0x15,0x3d,0x3e,0xc5};
    static std::uint8_t product8[64]      = {0x29,0x98,0x72,0x89,0x71,0x22,0x1a,0x26,0xa0,0xef,0x69,0xfb,0x26,0x76,0xe7,0xaf,0xd2,0x0e,0x76,0x16,0x03,0xc8,0x2f,0xf3,0xab,0x47,0x01,0x70,0xff,0xe5,0x70,0xb6,0x46,0xec,0x61,0xb8,0xe0,0x9d,0x0f,0x73,0x14,0x82,0x11,0x07,0x10,0xee,0xd7,0x51,0x3a,0x8b,0x01,0x5e,0x20,0x11,0xe0,0x25,0x72,0x6f,0x87,0x2b,0x50,0x76,0x40,0xda};
    mpz_from_bytes(multiplier, multiplier8, 8);
    mpz_from_bytes(multiplicand, multiplicand8, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product8, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier9[32]   = {0x3c,0xdb,0x31,0x13,0xc9,0xf0,0xd8,0x34,0x64,0x25,0x0c,0x6c,0xc9,0x89,0x95,0xa0,0xa6,0x0e,0x13,0x9c,0x99,0x4b,0xab,0x87,0x64,0x22,0x03,0xb6,0x4e,0x2b,0x49,0xa2};
    static std::uint8_t multiplicand9[32] = {0x51,0x56,0x3d,0x4a,0x2e,0x14,0x86,0x44,0xcf,0x91,0x94,0x4b,0xcc,0x45,0x8d,0x43,0xc9,0x90,0x69,0xf2,0xbf,0x53,0x8f,0x32,0x0f,0x36,0x08,0xc4,0xb3,0x7f,0x0d,0xca};
    static std::uint8_t product9[64]      = {0x13,0x55,0xda,0xbb,0x9c,0x8d,0x36,0x04,0x73,0x82,0xa3,0x18,0xeb,0xdc,0x3b,0x0b,0xb5,0xc3,0x50,0xdc,0xa3,0x44,0x41,0x3f,0x49,0x9b,0x0e,0x4f,0xfa,0x66,0x78,0xf1,0xc6,0x1c,0xb0,0xc5,0x54,0x9c,0xb7,0xc0,0xc7,0x47,0x4a,0xa8,0x5e,0xb7,0xd5,0xb8,0xdb,0x17,0x4f,0x63,0xf1,0xe7,0x1e,0x7e,0x46,0xbd,0xab,0xcf,0xae,0x43,0x53,0xd4};
    mpz_from_bytes(multiplier, multiplier9, 8);
    mpz_from_bytes(multiplicand, multiplicand9, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product9, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier10[32]   = {0x78,0x7e,0x54,0x42,0x91,0x80,0xb0,0xa8,0x78,0x74,0x97,0xda,0xcd,0xd1,0xba,0x0e,0x66,0x42,0x52,0x2b,0xc4,0x7a,0xbc,0xf2,0x41,0x2f,0x72,0xa4,0x61,0xf3,0xd9,0xd9};
    static std::uint8_t multiplicand10[32] = {0xb2,0x54,0xcf,0x8d,0xe3,0x52,0xab,0x94,0x0f,0x72,0x60,0xb1,0x4c,0xfd,0x37,0x2c,0xea,0x41,0x63,0xbc,0xa2,0xba,0x3a,0xef,0x42,0x5d,0xaf,0x25,0xe8,0x02,0xca,0xbf};
    static std::uint8_t product10[64]      = {0x53,0xef,0xc1,0xba,0xdd,0xb8,0x63,0x50,0x64,0xb0,0x40,0x47,0xe2,0x6e,0xcc,0x0e,0xe6,0x93,0x74,0x7c,0x60,0xff,0x33,0x6b,0xef,0x44,0xb0,0xf9,0x71,0x50,0x81,0xdd,0x16,0x8b,0xa1,0x0b,0x78,0x9b,0x04,0x4e,0x37,0x5a,0x3c,0x3d,0x26,0xaa,0x28,0x40,0x27,0x8c,0x16,0x4b,0xa3,0x81,0x92,0x80,0xe0,0xe8,0xd2,0xa0,0xda,0x86,0xc2,0xe7};
    mpz_from_bytes(multiplier, multiplier10, 8);
    mpz_from_bytes(multiplicand, multiplicand10, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product10, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier11[32]   = {0xf5,0x9d,0x37,0x0c,0x12,0x6b,0xab,0xca,0x5f,0x7b,0x78,0x6b,0xb1,0x88,0x89,0x38,0x10,0x45,0x0b,0xbb,0x9f,0xf2,0x91,0xba,0x40,0x6c,0x30,0xab,0x24,0x63,0xe7,0xc2};
    static std::uint8_t multiplicand11[32] = {0xe3,0xa7,0x3a,0xe5,0xe0,0x3a,0xb9,0xeb,0x16,0xc8,0x48,0x9c,0x40,0x5c,0x96,0xfa,0x8a,0x13,0x8e,0x17,0xf3,0xfa,0x76,0x34,0xb5,0x59,0xd2,0x1c,0x3b,0x8c,0x65,0xc2};
    static std::uint8_t product11[64]      = {0xda,0x6a,0xd9,0xe0,0xc8,0x72,0x5f,0xb3,0x95,0xba,0x9a,0x4f,0x52,0xd6,0x55,0xf2,0xc3,0xc5,0x08,0x51,0x6f,0x8d,0x38,0xd3,0xc8,0x31,0xa1,0x06,0x17,0x87,0x4b,0xe3,0xea,0xf3,0x33,0x75,0x4a,0x3c,0xc3,0x0d,0xeb,0x70,0x3f,0x05,0x75,0x1a,0x23,0x33,0x73,0xce,0x7a,0x4a,0x2a,0x93,0x94,0x83,0x3b,0xa7,0xd1,0x51,0x72,0x3d,0x2b,0x04};
    mpz_from_bytes(multiplier, multiplier11, 8);
    mpz_from_bytes(multiplicand, multiplicand11, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product11, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier12[32]   = {0x78,0x14,0xb2,0x41,0xf6,0x08,0xc6,0xa9,0xf0,0x8d,0xe8,0x1a,0x7e,0x87,0x24,0xe9,0xd5,0xc1,0x59,0xa9,0xe0,0xa3,0x3e,0x51,0x11,0x19,0x0a,0x1c,0xc2,0x4e,0x2f,0x07};
    static std::uint8_t multiplicand12[32] = {0x47,0x9d,0x5f,0x1b,0xe6,0x05,0xd9,0x82,0x90,0x6f,0x3b,0x05,0xbf,0xc2,0x4a,0xdc,0x9c,0xa9,0x36,0xd7,0xf7,0x85,0xd7,0x28,0xcc,0xd7,0x09,0x78,0xcb,0xb1,0x27,0x34};
    static std::uint8_t product12[64]      = {0x21,0x97,0x8e,0xbe,0x61,0xea,0xf0,0x52,0xb4,0x47,0xd7,0x3a,0x86,0x2a,0x64,0xb7,0x16,0xf2,0x01,0x7a,0xd0,0x64,0x10,0x16,0x4f,0x28,0x6d,0xf2,0x28,0xd7,0x88,0xa6,0xb0,0x94,0x22,0xbd,0x0f,0x01,0xf0,0x4f,0x77,0x7f,0xf0,0x33,0xfa,0xcf,0xc1,0x59,0x3d,0xf6,0x51,0x40,0x61,0xb1,0x26,0xf1,0xfc,0xc5,0x11,0x12,0x71,0xe2,0x9e,0x6c};
    mpz_from_bytes(multiplier, multiplier12, 8);
    mpz_from_bytes(multiplicand, multiplicand12, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product12, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier13[32]   = {0x5a,0x82,0x99,0x01,0x64,0x5f,0xa7,0x1d,0x49,0x14,0xd1,0xbd,0x0c,0x6e,0x00,0x1d,0x16,0x2f,0xb7,0x30,0xb5,0x0c,0xa7,0x31,0xdc,0x2d,0x8d,0x76,0x69,0x96,0x0a,0x99};
    static std::uint8_t multiplicand13[32] = {0xa7,0xc6,0x33,0xc8,0x0e,0x79,0xdd,0x76,0xbd,0x09,0x3d,0x5a,0x70,0x6f,0xbe,0x68,0x5e,0xd5,0x0b,0x7a,0xb0,0x2f,0x53,0xdb,0x5e,0xb3,0x4d,0xa5,0x61,0x3a,0x1d,0x42};
    static std::uint8_t product13[64]      = {0x3b,0x51,0x45,0x20,0xff,0x2f,0x12,0x79,0xf2,0x9c,0x95,0x3f,0xb7,0xd8,0xcc,0x41,0x2c,0xb7,0x72,0x42,0x14,0x1c,0x59,0x26,0x04,0x1f,0x8d,0xfa,0x7f,0xb9,0x88,0x4a,0x9e,0x36,0xb3,0x8b,0xd4,0x28,0xc8,0xf8,0x9e,0xf1,0xfc,0xd1,0x26,0x8e,0xa2,0xd6,0x10,0x44,0x91,0xb7,0xfe,0x48,0x48,0x7c,0x9d,0x7a,0x82,0x1c,0x97,0x8c,0x10,0x72};
    mpz_from_bytes(multiplier, multiplier13, 8);
    mpz_from_bytes(multiplicand, multiplicand13, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product13, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier14[32]   = {0xa8,0x34,0x75,0xb5,0x83,0x00,0x28,0x99,0x52,0x10,0xf8,0xa2,0xc7,0x86,0x0c,0xfe,0xfb,0x36,0xf6,0xfc,0x55,0xb2,0xc4,0xdd,0xc1,0x5c,0x3d,0xcf,0x94,0x01,0x84,0x9b};
    static std::uint8_t multiplicand14[32] = {0xd7,0xeb,0x92,0x98,0x65,0xd4,0xf0,0x27,0x3c,0x51,0x8d,0xe3,0x5a,0xda,0xa0,0x8f,0x35,0x8b,0x2a,0xff,0xf0,0x22,0x8e,0xa9,0x3e,0xa6,0x99,0x05,0x29,0x46,0x76,0x80};
    static std::uint8_t product14[64]      = {0x8d,0xde,0xd7,0x55,0x8b,0xd4,0x67,0x66,0xf4,0xe3,0xa9,0x42,0xa2,0x7b,0xb5,0x12,0x7d,0x2d,0x01,0x1e,0x88,0x23,0x37,0xcb,0x1e,0x5b,0xc6,0xa1,0xe1,0xfb,0x15,0x41,0x8c,0x2e,0x99,0xfe,0xad,0x99,0x79,0xf4,0xee,0x73,0x93,0x65,0x0e,0x11,0x65,0x5f,0x29,0xc1,0x82,0xcd,0x54,0x10,0x6b,0x0f,0xaa,0xdd,0x86,0xb0,0xc9,0x43,0xbf,0x80};
    mpz_from_bytes(multiplier, multiplier14, 8);
    mpz_from_bytes(multiplicand, multiplicand14, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product14, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier15[32]   = {0x16,0x4c,0xb6,0x65,0x45,0x5f,0xb3,0xe0,0x44,0x1a,0xb7,0x6e,0xf2,0x10,0xc5,0x46,0x3a,0x6a,0xfb,0x52,0xde,0x8a,0x3f,0x51,0x6e,0xcf,0x7c,0x0a,0x81,0xeb,0x62,0xab};
    static std::uint8_t multiplicand15[32] = {0xee,0xd0,0x72,0x9a,0xcb,0x73,0xb3,0x96,0xab,0x5c,0xd4,0x86,0xe6,0x0e,0xb6,0x89,0xb9,0xc2,0x15,0x42,0x14,0x02,0xad,0xb2,0xb5,0x40,0x22,0xf2,0xe9,0x02,0x86,0xda};
    static std::uint8_t product15[64]      = {0x14,0xcd,0x79,0xe1,0xfd,0xdf,0x11,0x8a,0x00,0x1e,0x4f,0xde,0xba,0x84,0x68,0x05,0x21,0xec,0xe3,0x22,0xa4,0x7f,0x01,0xd0,0xa4,0x82,0x17,0x47,0x32,0xba,0x76,0xf5,0xeb,0x90,0xf7,0xf4,0xd4,0x6a,0xaf,0x56,0xf6,0xa4,0x63,0x75,0x53,0x05,0x72,0x8f,0x78,0x56,0x3f,0xc4,0xc3,0x22,0xf9,0x8f,0x25,0x4f,0x5d,0x3e,0x40,0x6d,0x87,0x9e};
    mpz_from_bytes(multiplier, multiplier15, 8);
    mpz_from_bytes(multiplicand, multiplicand15, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product15, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier16[32]   = {0x45,0x92,0x8d,0x9e,0xee,0x1c,0xbe,0x3e,0xf8,0xb2,0x1c,0x5b,0xa0,0xda,0x93,0x2b,0x44,0x13,0xc9,0x3a,0xf0,0x5f,0x7c,0x3f,0x3a,0xc1,0xd9,0x0b,0x7d,0x76,0x88,0x3b};
    static std::uint8_t multiplicand16[32] = {0xf7,0xb5,0x0c,0x74,0x5b,0x2a,0xc0,0x3f,0x39,0x42,0x4e,0x8c,0x0a,0xfe,0x4d,0x5b,0x3e,0xd0,0x6c,0x28,0x8d,0x35,0x08,0xc5,0x50,0x3d,0x86,0x1b,0x2e,0x7a,0xdf,0x06};
    static std::uint8_t product16[64]      = {0x43,0x51,0x9a,0xa4,0xf6,0xee,0x6b,0xb0,0x55,0xf9,0xd3,0x2e,0xdb,0xc9,0x6c,0x1c,0x95,0x92,0x61,0x94,0xdb,0x64,0x78,0x8a,0xda,0x53,0x6d,0xcf,0xb8,0x4d,0xa1,0xc1,0x26,0xb9,0x53,0x71,0xd6,0x91,0x84,0x8c,0x22,0x33,0x03,0x7d,0x4d,0xca,0x6c,0xb0,0x23,0xef,0x5d,0x98,0x4e,0xd8,0x58,0x25,0xe9,0x7f,0x6f,0xbf,0xb7,0x90,0x96,0x62};
    mpz_from_bytes(multiplier, multiplier16, 8);
    mpz_from_bytes(multiplicand, multiplicand16, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product16, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier17[32]   = {0x4e,0x66,0x22,0xee,0x6c,0x90,0xe2,0x21,0x4c,0x55,0xd2,0xbc,0x4d,0x79,0xa4,0x41,0xc9,0x8d,0x1a,0x03,0xb5,0x21,0x97,0xb1,0xfb,0x96,0xf2,0x6e,0x54,0x81,0xab,0x66};
    static std::uint8_t multiplicand17[32] = {0xa2,0xff,0xd9,0xfc,0xaf,0x64,0xbf,0x63,0x5b,0xe3,0x33,0xce,0x06,0x18,0x9e,0xf9,0x96,0xc0,0x69,0xfc,0xda,0x4b,0xc2,0x66,0x60,0xf4,0x1a,0xd8,0xa1,0xe2,0x88,0xd3};
    static std::uint8_t product17[64]      = {0x31,0xea,0xfc,0x99,0xa2,0x0e,0xfc,0x87,0x42,0xd2,0xe6,0x8e,0x4e,0xa9,0x4b,0xf9,0x20,0x3f,0x2e,0x60,0xaa,0x6f,0x96,0xa5,0xd8,0x37,0xf6,0x30,0xcd,0xc7,0x0e,0x8a,0xb9,0xb4,0x87,0x23,0xe4,0x01,0xfc,0x3d,0x56,0x69,0x53,0x67,0xca,0xff,0x0e,0x0d,0x3e,0xa1,0xda,0x33,0x0c,0xe5,0x23,0x42,0x0c,0xc9,0x8f,0x28,0xff,0xfa,0x75,0x12};
    mpz_from_bytes(multiplier, multiplier17, 8);
    mpz_from_bytes(multiplicand, multiplicand17, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product17, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier18[32]   = {0x92,0x07,0x02,0x47,0x7c,0x24,0xaa,0x9c,0x2b,0xa8,0x7a,0x87,0xa1,0xc3,0x81,0x71,0x83,0xa1,0xb7,0x4b,0x83,0x2d,0x1b,0xa3,0xf7,0x8c,0x5a,0x2c,0x83,0x47,0x66,0x9d};
    static std::uint8_t multiplicand18[32] = {0xa1,0x5b,0xca,0xc4,0x13,0xd8,0x7d,0x3a,0x3f,0x35,0xa3,0x14,0x9d,0xc8,0xba,0x96,0x46,0x35,0x07,0x21,0x47,0xcc,0xae,0xdc,0xc9,0x7b,0x99,0xff,0xac,0x90,0x4f,0x8a};
    static std::uint8_t product18[64]      = {0x5c,0x0a,0xc4,0x96,0x24,0xf8,0x59,0x88,0xb7,0xf3,0x89,0x6a,0x14,0x98,0xc1,0xd9,0x5b,0xc4,0x55,0x59,0xda,0xca,0xd0,0x84,0x24,0xf6,0x4f,0x31,0xbb,0xb4,0x86,0xe6,0xed,0x16,0x9a,0x9c,0x25,0x38,0x6c,0x98,0xfc,0x62,0x52,0x0e,0x77,0x1e,0xc9,0x18,0xba,0x3e,0x8d,0xb7,0xbe,0xc5,0x7f,0xe8,0x65,0x9c,0x35,0x00,0x01,0x77,0xc3,0xa2};
    mpz_from_bytes(multiplier, multiplier18, 8);
    mpz_from_bytes(multiplicand, multiplicand18, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product18, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier19[32]   = {0x99,0xf0,0xdb,0xbf,0x15,0xc1,0x0a,0x9f,0xbf,0x22,0x61,0xf5,0x80,0x7f,0xca,0xa9,0x48,0x37,0x34,0xc0,0x6f,0xb9,0xe2,0xbd,0x86,0x12,0x92,0x8a,0x2c,0x3b,0x53,0x3a};
    static std::uint8_t multiplicand19[32] = {0xcf,0x0d,0x23,0xa6,0x0e,0xb0,0xf6,0x4b,0x6a,0x1a,0xb0,0x3f,0xce,0xcf,0x57,0x9f,0x69,0xa4,0x94,0xb4,0x0e,0x22,0xab,0x2f,0xc0,0x20,0x43,0x20,0x78,0x97,0x9c,0x12};
    static std::uint8_t product19[64]      = {0x7c,0x81,0xa8,0x5a,0x74,0x5a,0x65,0xfc,0x88,0x61,0x87,0x4a,0x70,0x39,0xee,0xd8,0x3b,0x92,0x00,0xc7,0xe3,0x4c,0x47,0x06,0x64,0xfc,0x6b,0x0d,0x7e,0x0e,0x32,0x38,0x69,0x05,0x11,0x98,0xbe,0x16,0x39,0xcf,0x21,0x14,0xd2,0x59,0x82,0x4a,0x40,0x81,0xae,0xc7,0x02,0xac,0x40,0x2e,0xbf,0x00,0xe8,0x48,0xfb,0xec,0x8a,0x19,0x32,0x14};
    mpz_from_bytes(multiplier, multiplier19, 8);
    mpz_from_bytes(multiplicand, multiplicand19, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product19, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier20[32]   = {0x48,0x40,0x60,0x9f,0x73,0xd4,0x9f,0xe6,0xb5,0xee,0x04,0xb7,0x2c,0x12,0x0f,0x36,0xb0,0x86,0xb2,0x1c,0x23,0x41,0x67,0xdf,0x2d,0xd7,0xe2,0xc0,0x22,0xb5,0xbf,0xf6};
    static std::uint8_t multiplicand20[32] = {0x5d,0xd5,0xc3,0x4d,0x2c,0x9b,0x35,0xa0,0xdd,0x73,0x22,0x4c,0xaa,0x70,0xd0,0xf8,0xc6,0x62,0xe0,0x79,0xec,0xf0,0xa1,0xad,0x5f,0x8f,0x5b,0xac,0x53,0xc5,0xbc,0x5d};
    static std::uint8_t product20[64]      = {0x1a,0x7b,0xb7,0xc9,0x23,0x4d,0x01,0xe9,0x4a,0xfe,0xd1,0x98,0x9e,0x38,0xfa,0x95,0x29,0x77,0xbe,0x03,0x10,0x08,0x55,0x46,0x20,0x67,0x4a,0xa0,0x72,0xa1,0x93,0xa1,0xc1,0xdf,0x64,0xcb,0x5e,0x65,0x20,0xca,0x92,0xd4,0xdf,0xcd,0xd3,0x30,0x61,0x0b,0xa7,0x06,0xb0,0x67,0x23,0xad,0xd1,0xd2,0x6c,0xd1,0x87,0xab,0x8f,0x4d,0x64,0x5e};
    mpz_from_bytes(multiplier, multiplier20, 8);
    mpz_from_bytes(multiplicand, multiplicand20, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product20, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier21[32]   = {0x31,0x94,0x10,0x05,0xd3,0x48,0x64,0x13,0xf8,0x38,0x77,0xdc,0xff,0xec,0xb9,0x2c,0xbc,0x10,0x04,0x6c,0x85,0x2c,0x24,0x88,0x5c,0xe1,0xb1,0x60,0x6a,0x36,0x30,0x95};
    static std::uint8_t multiplicand21[32] = {0xa6,0xdc,0xcc,0xc5,0xf8,0x9b,0x77,0x39,0x9b,0x1c,0x5e,0xc8,0x7c,0xad,0xcf,0x84,0xb1,0x74,0x6a,0x71,0x91,0x76,0x31,0xab,0xd1,0xcf,0xf2,0xa7,0xd2,0x44,0x42,0xbc};
    static std::uint8_t product21[64]      = {0x20,0x50,0xc5,0x49,0xdf,0xdd,0x07,0x36,0x8e,0x3c,0x53,0xf6,0x6e,0x4d,0x51,0x4d,0xa8,0xdd,0x70,0x54,0x13,0xa2,0x57,0x7a,0x30,0xe5,0x91,0x56,0x82,0x78,0xf0,0x66,0xeb,0x77,0xc6,0x0e,0xfb,0x23,0xa3,0x6f,0x66,0xae,0x57,0x4f,0x67,0xe3,0x4c,0x4a,0xde,0x40,0xa2,0xc7,0xee,0x00,0xbd,0xd9,0x0a,0xf7,0x53,0xa2,0x19,0xe6,0x17,0x6c};
    mpz_from_bytes(multiplier, multiplier21, 8);
    mpz_from_bytes(multiplicand, multiplicand21, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product21, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier22[32]   = {0x9a,0x10,0x4f,0x9d,0x6d,0x6d,0x38,0x68,0x5f,0xb3,0xbc,0x06,0xbd,0xfa,0x5f,0x62,0x1c,0x89,0xb3,0xe6,0xb6,0xa6,0x25,0xbc,0xd5,0x5b,0xfc,0x9c,0xea,0x48,0xe2,0xcd};
    static std::uint8_t multiplicand22[32] = {0xbb,0x64,0xe9,0x44,0xd0,0x0e,0xc4,0xf7,0xbf,0xb6,0xac,0xae,0xa5,0x2e,0x25,0x83,0xb1,0xc4,0x3f,0x66,0xe6,0x1d,0x9a,0x1a,0x71,0x5a,0x09,0x3e,0x1b,0x82,0xa7,0xa0};
    static std::uint8_t product22[64]      = {0x70,0xc6,0xa4,0xe9,0x5a,0x6f,0x19,0x65,0x99,0x9d,0xd4,0xc7,0x96,0xdd,0x3c,0xd5,0x17,0xfb,0x4c,0xbd,0x14,0x48,0x7c,0xb6,0x1f,0x37,0x81,0x68,0xbc,0x89,0xdd,0x16,0x1b,0x33,0x8e,0xa9,0x83,0xd9,0xe2,0x6f,0xd2,0xff,0x8d,0x90,0xf7,0x74,0xd3,0xcd,0x51,0x5a,0x7f,0x5a,0x1c,0xa7,0x68,0x5a,0xb6,0x5f,0x0a,0x7c,0xc4,0x9b,0x7b,0x20};
    mpz_from_bytes(multiplier, multiplier22, 8);
    mpz_from_bytes(multiplicand, multiplicand22, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product22, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier23[32]   = {0xa4,0xfc,0x4d,0x09,0x4a,0xdd,0xd0,0x97,0x32,0xef,0x31,0x72,0x43,0x1d,0x3f,0x49,0xc8,0x25,0x2f,0xbc,0x47,0xb3,0x1b,0x6c,0x3f,0x00,0x4f,0xa0,0xda,0xe3,0xdc,0x35};
    static std::uint8_t multiplicand23[32] = {0x88,0xc6,0xa6,0x67,0x27,0x69,0xa1,0xee,0xe6,0x7e,0xdb,0x68,0xa7,0x44,0x03,0x72,0x3c,0xe9,0x9b,0x4c,0xed,0xbb,0x41,0xfe,0x8f,0x86,0xab,0x2b,0x8d,0xa0,0x3a,0x51};
    static std::uint8_t product23[64]      = {0x58,0x26,0x0f,0x4e,0x99,0xd3,0x47,0x3d,0x43,0x47,0xd4,0x67,0xc7,0x8a,0x93,0xde,0x5e,0x50,0x6a,0x98,0x7d,0xc1,0x26,0x27,0x1d,0x58,0x0f,0x9f,0x5d,0x48,0x8c,0x95,0x1a,0x35,0x4a,0x66,0x60,0xf5,0x5e,0xc2,0x8c,0x7c,0x6b,0x12,0xce,0xe2,0x05,0x0a,0x3f,0xe2,0x6f,0xfd,0x4d,0xa7,0x5e,0xab,0x35,0x57,0x56,0x16,0xb4,0x1c,0xae,0xc5};
    mpz_from_bytes(multiplier, multiplier23, 8);
    mpz_from_bytes(multiplicand, multiplicand23, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product23, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier24[32]   = {0x8b,0x1d,0xd7,0xd8,0xca,0x0b,0x65,0x02,0xd0,0xc7,0x2f,0x9e,0x12,0xfc,0xd5,0x40,0x1c,0xb7,0x67,0x0d,0xa9,0xaa,0xe2,0x85,0x72,0x89,0xfb,0xc2,0x25,0x15,0x17,0x9a};
    static std::uint8_t multiplicand24[32] = {0xc4,0x51,0x86,0x6e,0x2f,0xcf,0x18,0xf8,0x89,0x51,0xd5,0xec,0x1b,0x5e,0x18,0x95,0xcd,0xab,0x57,0x1f,0x82,0xc3,0xa1,0x8b,0xa2,0xd7,0xef,0xa4,0x8f,0x44,0x59,0xdb};
    static std::uint8_t product24[64]      = {0x6a,0xaf,0x26,0xc0,0xc6,0x11,0xe5,0x2e,0x16,0xa9,0xc4,0xe4,0x80,0xdf,0xf4,0xf0,0x0b,0xb6,0xe1,0xe8,0xa9,0x37,0x41,0xc2,0x43,0x00,0xb2,0x01,0xf4,0xa5,0xe9,0xf8,0x03,0x36,0xc8,0xcf,0x10,0xff,0x75,0x7c,0xf9,0x09,0x6c,0x16,0x2f,0xc8,0xbc,0x4d,0x53,0x0b,0x97,0xa8,0x56,0xeb,0x5e,0x85,0xff,0xbb,0x64,0x6b,0x59,0x27,0xba,0xbe};
    mpz_from_bytes(multiplier, multiplier24, 8);
    mpz_from_bytes(multiplicand, multiplicand24, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product24, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier25[32]   = {0xc0,0xfe,0x6b,0x2f,0x4e,0x03,0x38,0xe3,0x5e,0x94,0xc8,0x86,0x0a,0xd4,0x50,0x96,0x3a,0xe5,0xb2,0x16,0x90,0x06,0xf9,0x9d,0x26,0x06,0x45,0xd7,0xea,0x6d,0x0a,0x29};
    static std::uint8_t multiplicand25[32] = {0x74,0x2c,0xc5,0xbf,0xec,0xa9,0x63,0x1c,0x2e,0xe8,0xe6,0xd5,0x97,0xc0,0x3a,0xf4,0x96,0x94,0xfc,0x95,0xce,0x97,0xd7,0xf9,0xc3,0x80,0x78,0x3b,0xbb,0x2b,0x70,0x1c};
    static std::uint8_t product25[64]      = {0x57,0x95,0x09,0x60,0x54,0x32,0x7b,0x24,0x7d,0xe7,0xde,0x9e,0x71,0x2d,0x84,0xf1,0xc0,0xda,0x51,0xf2,0x9f,0x75,0x7e,0xcd,0x9d,0x6b,0xcc,0xd3,0x6e,0x57,0xb3,0xc1,0x95,0xfc,0x75,0x57,0xc1,0xe1,0xa2,0x7e,0x3f,0x3a,0x2b,0xc7,0x99,0x6b,0xfe,0x65,0x2c,0x1c,0x2d,0x9d,0x31,0x9f,0xea,0xae,0xce,0x24,0xb0,0x5d,0x00,0x42,0x0c,0x7c};
    mpz_from_bytes(multiplier, multiplier25, 8);
    mpz_from_bytes(multiplicand, multiplicand25, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product25, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier26[32]   = {0x25,0x2e,0x54,0xd8,0xc0,0x1c,0x8b,0x8e,0x66,0x35,0xc7,0x22,0x64,0xc7,0x09,0x1c,0x1a,0x35,0x13,0xe4,0x63,0xaf,0x84,0x9a,0xc1,0xf4,0xf6,0x6f,0x4a,0xc4,0x28,0x6d};
    static std::uint8_t multiplicand26[32] = {0xd5,0x0f,0x46,0xa7,0xee,0x8d,0x7a,0x07,0xb3,0xf4,0x71,0x89,0x8f,0x3b,0x20,0xa0,0x97,0x1d,0xdd,0x19,0x24,0x79,0x4a,0xc8,0xd1,0xcc,0x85,0x2c,0xf4,0x70,0x28,0x12};
    static std::uint8_t product26[64]      = {0x1e,0xf1,0xc4,0x92,0x5f,0x9d,0x3e,0xd6,0x39,0xfd,0x92,0x99,0xa1,0x1b,0x66,0xfb,0xe5,0xa2,0x47,0x76,0x4b,0x13,0x73,0x79,0x08,0x50,0x26,0x75,0x58,0x9d,0xde,0x7b,0xd0,0xa3,0xe4,0x97,0xe5,0x36,0x2f,0x59,0x77,0x7e,0x68,0x71,0xd3,0x8d,0x8d,0x6e,0xd6,0xa2,0x65,0x2d,0x56,0xf1,0xd4,0xaf,0xc4,0x41,0xf7,0x97,0x7b,0xcb,0xdf,0xaa};
    mpz_from_bytes(multiplier, multiplier26, 8);
    mpz_from_bytes(multiplicand, multiplicand26, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product26, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier27[32]   = {0x6e,0x6c,0xc3,0x65,0xfc,0x36,0xe0,0x19,0x64,0x48,0xb3,0x96,0xf8,0x7f,0x18,0xbd,0xcb,0xae,0xc9,0x58,0xda,0xce,0x24,0xb5,0x1e,0x07,0x44,0x6c,0xa7,0x65,0x92,0xb4};
    static std::uint8_t multiplicand27[32] = {0xf8,0x06,0xb3,0xe0,0x7e,0x4f,0x22,0x17,0x62,0x27,0x45,0x1d,0x7b,0x7e,0xd8,0x49,0xf9,0x88,0x4e,0xcc,0xc7,0x64,0x2e,0x42,0x85,0xb8,0x94,0x30,0x77,0x23,0x23,0x19};
    static std::uint8_t product27[64]      = {0x6a,0xfc,0x41,0x6e,0x43,0x00,0x05,0x69,0xef,0x20,0x23,0x18,0x7c,0xaf,0xe9,0x9e,0x36,0x53,0x13,0xbb,0xca,0x30,0x84,0xaf,0x49,0x9d,0x8c,0xdf,0xc0,0xac,0xa9,0xdb,0x29,0xe3,0x86,0xdf,0x2b,0xe0,0xb3,0x77,0x92,0x46,0x5d,0x70,0x41,0x7e,0x65,0xf3,0xe5,0x1b,0xc2,0x2c,0xdb,0xb6,0xba,0x5e,0xda,0xf7,0x35,0x53,0xf6,0x95,0xef,0x94};
    mpz_from_bytes(multiplier, multiplier27, 8);
    mpz_from_bytes(multiplicand, multiplicand27, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product27, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier28[32]   = {0x39,0xc2,0x31,0x59,0x03,0xce,0xd9,0x1b,0xbd,0x55,0x1d,0x82,0xaa,0xf4,0x0b,0x85,0x83,0x09,0xf6,0x25,0xee,0xb3,0xc4,0x72,0x7c,0x66,0x49,0x4b,0x85,0x6a,0xbe,0x76};
    static std::uint8_t multiplicand28[32] = {0xaf,0x92,0xf6,0xcb,0x74,0xc2,0x99,0x9a,0xcd,0x60,0xe4,0x47,0xec,0x9b,0xcc,0x0f,0x71,0x45,0x94,0x24,0xb9,0x87,0x95,0xfb,0xe9,0x61,0x0f,0x29,0x83,0x8a,0xe5,0x39};
    static std::uint8_t product28[64]      = {0x27,0x9c,0xe8,0x2a,0x81,0x1f,0x23,0xce,0x49,0xba,0xd8,0x72,0x0e,0xdb,0xb9,0x47,0x54,0x0c,0x44,0xb9,0xf6,0x1b,0xe1,0xad,0x2b,0xf3,0xcf,0x0c,0x2c,0x2b,0x78,0xed,0xf4,0xfc,0x2a,0xe4,0x29,0x4c,0x23,0xde,0xe2,0xa4,0x27,0xd7,0xf5,0xa9,0x70,0x51,0x36,0x05,0x1f,0xb7,0x83,0x96,0xd7,0xd1,0x8a,0x49,0xd6,0x10,0x3e,0xbf,0xf6,0x46};
    mpz_from_bytes(multiplier, multiplier28, 8);
    mpz_from_bytes(multiplicand, multiplicand28, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product28, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier29[32]   = {0x27,0x79,0xee,0xb7,0x8d,0xe4,0x30,0x94,0x3d,0x11,0xa3,0x4d,0xf4,0x4c,0x16,0x7e,0x07,0x52,0x73,0xb9,0xd2,0xb9,0xed,0xb9,0x4a,0xd2,0x16,0xdc,0xe7,0xcc,0x8c,0x42};
    static std::uint8_t multiplicand29[32] = {0xf8,0x96,0xc8,0x26,0x13,0xdc,0x84,0x19,0x5d,0x7e,0x3d,0xb1,0xcd,0x5d,0x9d,0x69,0xf8,0x49,0x68,0xcc,0xc0,0xd9,0x4c,0xb6,0x1a,0x3a,0xd0,0xc0,0xff,0x32,0x24,0xf1};
    static std::uint8_t product29[64]      = {0x26,0x55,0x5f,0x90,0xd2,0xab,0x16,0xbc,0xf5,0x87,0x7c,0x4a,0xf6,0x8a,0x90,0x74,0x3a,0x5a,0x45,0xd3,0xb7,0x98,0x52,0x68,0xd6,0x08,0x89,0x18,0xb5,0xf5,0xc1,0x94,0x07,0xa5,0xf7,0x85,0x18,0xb1,0x76,0xbf,0x19,0xc2,0x25,0x9a,0x7e,0x26,0x15,0x8d,0x58,0x50,0xe1,0x65,0xdc,0xeb,0xf7,0x4a,0x03,0x5b,0x6d,0xb8,0x1e,0x2d,0x52,0x22};
    mpz_from_bytes(multiplier, multiplier29, 8);
    mpz_from_bytes(multiplicand, multiplicand29, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product29, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier30[32]   = {0xca,0xf4,0x57,0xf1,0x51,0x29,0x7f,0xdb,0xaa,0x53,0xfc,0x6b,0x41,0xef,0xc5,0xd2,0xd2,0x5c,0xab,0x5b,0xf3,0xce,0x8f,0xeb,0xf0,0xc0,0xb0,0xbe,0xc1,0x57,0x6d,0x1a};
    static std::uint8_t multiplicand30[32] = {0xda,0xa4,0x1e,0xc8,0x6f,0x8e,0x49,0x1d,0x0f,0x08,0x12,0xbc,0xf5,0x56,0x01,0xe9,0xb0,0x59,0xea,0x42,0x72,0x8c,0x53,0x41,0x8d,0xc0,0xec,0x61,0xb7,0x41,0x17,0xe1};
    static std::uint8_t product30[64]      = {0xad,0x56,0x2f,0xd3,0x5f,0x59,0x11,0x22,0x5d,0xe4,0xc5,0xe9,0x05,0x55,0xc2,0x8c,0xbb,0xdf,0x78,0x77,0x25,0x54,0x09,0x42,0xaa,0x0a,0x65,0x16,0x79,0xce,0x95,0x24,0xcb,0xfb,0x4f,0x49,0xb7,0xc4,0xab,0xb3,0x6c,0x3a,0x83,0x45,0x04,0x4d,0xf3,0x06,0xeb,0xed,0x73,0x7a,0x34,0xc7,0xad,0x0c,0x26,0x15,0x60,0x11,0x12,0x3e,0x39,0xda};
    mpz_from_bytes(multiplier, multiplier30, 8);
    mpz_from_bytes(multiplicand, multiplicand30, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product30, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier31[32]   = {0xf6,0xa3,0xdc,0x63,0xfa,0x50,0xf0,0x1b,0x9a,0x67,0x25,0x86,0x94,0x56,0xcf,0xea,0xb7,0x44,0x55,0x6f,0x00,0x78,0xf0,0x1b,0x3c,0xbb,0xb1,0x28,0xd5,0xb8,0x2f,0x2c};
    static std::uint8_t multiplicand31[32] = {0x77,0x5b,0x6e,0xcc,0xf6,0x8f,0x42,0x16,0x99,0xeb,0x95,0xe9,0xb6,0x17,0xf7,0x50,0x3e,0x10,0x84,0x50,0x83,0x6f,0xe2,0xa3,0xf9,0x7b,0x92,0x38,0xbb,0x52,0x17,0x77};
    static std::uint8_t product31[64]      = {0x72,0xfe,0x42,0x71,0xb1,0xb7,0xaa,0x98,0xa1,0xd5,0x40,0x15,0xe2,0xfd,0x73,0x82,0xcd,0x05,0x99,0xd1,0x31,0x99,0x4c,0xf9,0x9d,0xbd,0xba,0x0a,0x35,0x8e,0x37,0x00,0x5f,0x43,0xb5,0xd5,0x1d,0x60,0xb9,0xe3,0xd4,0x5e,0x96,0x52,0xba,0xc0,0x16,0xb5,0x26,0x7f,0x2c,0x48,0xb4,0x76,0x5e,0xdb,0xec,0xb1,0x6e,0x43,0x24,0xf2,0xe1,0x74};
    mpz_from_bytes(multiplier, multiplier31, 8);
    mpz_from_bytes(multiplicand, multiplicand31, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product31, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier32[32]   = {0x86,0x3a,0x29,0x34,0xf0,0xa2,0xf5,0x3a,0xe0,0x61,0xfa,0x14,0x6e,0xf0,0xb9,0x66,0x48,0xdc,0xb3,0xb3,0x9c,0x1a,0x86,0x5a,0x69,0xb2,0x92,0x26,0xb2,0x0b,0xd5,0x10};
    static std::uint8_t multiplicand32[32] = {0xaf,0xbf,0x09,0x6d,0x76,0xe2,0x15,0x83,0x4b,0x29,0x18,0xb3,0xec,0x01,0x93,0x59,0xa6,0x91,0xea,0x77,0x84,0x8a,0xd2,0x2e,0x70,0x89,0xdb,0xd4,0x4d,0xa3,0x74,0x1c};
    static std::uint8_t product32[64]      = {0x5c,0x25,0xec,0x81,0x5f,0x8a,0xb0,0xd6,0xca,0x86,0x70,0x13,0x91,0xc0,0x98,0x3c,0x6c,0x53,0x0e,0x33,0x0d,0xc7,0x5d,0x10,0x9a,0xfe,0x5b,0x28,0x7a,0x86,0xe0,0x4a,0x8f,0x39,0x04,0x13,0xac,0x0f,0x86,0x64,0x2e,0x59,0x8f,0x1b,0x45,0xff,0x75,0xc2,0xaf,0x5d,0x75,0x29,0x12,0x2d,0xad,0x38,0xc2,0x93,0x92,0xc7,0x4f,0x06,0x8d,0xc0};
    mpz_from_bytes(multiplier, multiplier32, 8);
    mpz_from_bytes(multiplicand, multiplicand32, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product32, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier33[32]   = {0x76,0xa9,0x20,0x1d,0x91,0xb9,0x94,0xf3,0x3a,0xd2,0xbf,0x7f,0xc2,0x84,0x81,0xf7,0x69,0xb0,0xa4,0x52,0x29,0x37,0x5b,0xe2,0x87,0x84,0x0d,0xa0,0xab,0x16,0xc5,0xfe};
    static std::uint8_t multiplicand33[32] = {0xec,0x85,0x2c,0xb7,0x81,0xb5,0xe7,0x04,0x2d,0x3e,0x62,0x7d,0x7e,0x79,0x4e,0xf2,0x89,0x27,0x8e,0x61,0x7e,0x84,0xcf,0x24,0x88,0xfd,0xa4,0xbe,0x28,0xb8,0x27,0x2a};
    static std::uint8_t product33[64]      = {0x6d,0xa1,0xa4,0x33,0x12,0x3e,0x5e,0xc0,0xd4,0xc9,0x80,0x7e,0x0a,0x74,0x0a,0x7d,0x00,0x4a,0x52,0x4a,0x90,0xd6,0x32,0xc1,0xdf,0x37,0xda,0xd1,0x23,0x6e,0xcb,0xe0,0x72,0x98,0x5f,0x81,0x93,0x30,0xa2,0x4b,0xa0,0x22,0x4a,0xa7,0x2c,0x78,0x5d,0xc7,0xe4,0x1d,0x50,0xf6,0x35,0xc1,0x12,0x1c,0x6d,0xb7,0xe8,0x3e,0x88,0x76,0x2d,0xac};
    mpz_from_bytes(multiplier, multiplier33, 8);
    mpz_from_bytes(multiplicand, multiplicand33, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product33, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier34[32]   = {0x37,0x60,0x6d,0xbb,0x7c,0x03,0xed,0xfd,0x72,0x9d,0x5a,0x30,0xf0,0x26,0x13,0xbd,0xfe,0x5b,0xfa,0x09,0x68,0x37,0x07,0x5d,0x92,0x2a,0x3f,0x46,0xe0,0xa2,0xb9,0xe1};
    static std::uint8_t multiplicand34[32] = {0xd0,0x59,0x22,0x56,0x55,0x79,0x1a,0x51,0x3f,0xa8,0xfd,0xd0,0xae,0x45,0xa5,0xb7,0xa6,0x80,0xb2,0x2a,0xd6,0xae,0x40,0xc4,0x2b,0xbd,0x95,0xc1,0x44,0xa4,0x12,0xc2};
    static std::uint8_t product34[64]      = {0x2d,0x11,0xa1,0x1b,0xf6,0x66,0x48,0xe4,0x55,0x62,0x46,0x55,0x63,0x49,0x17,0x3a,0x2c,0x5f,0x36,0x80,0xb6,0xb0,0xa6,0xd1,0xb0,0x0b,0xe8,0xaa,0x15,0x53,0xbb,0x01,0x73,0xb9,0x24,0xa4,0x76,0x35,0x93,0xab,0x4c,0x69,0x46,0x35,0x78,0x66,0xf3,0x29,0x37,0xf5,0x5c,0x6c,0xea,0xb6,0xb7,0xdd,0x30,0x85,0x28,0xc1,0x84,0x86,0xae,0x82};
    mpz_from_bytes(multiplier, multiplier34, 8);
    mpz_from_bytes(multiplicand, multiplicand34, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product34, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier35[32]   = {0xcd,0x5f,0x07,0xf2,0x92,0x05,0xd0,0x6f,0x2c,0x89,0xa1,0x88,0x0d,0x11,0x69,0x9b,0x1d,0x42,0xfe,0xa5,0xcb,0x3a,0xf3,0x6e,0x2d,0x0b,0x07,0x8d,0xbf,0x7c,0x78,0x40};
    static std::uint8_t multiplicand35[32] = {0xaa,0x9c,0x1a,0xf6,0x83,0xba,0x81,0xfb,0xa2,0x7f,0xd1,0xb8,0x3f,0xf1,0xf4,0x86,0x79,0xe9,0x0c,0x4c,0x39,0xbe,0x06,0xe6,0x16,0x2d,0x7f,0x4f,0x80,0x21,0xb6,0x3f};
    static std::uint8_t product35[64]      = {0x88,0xde,0x56,0xd1,0x56,0x96,0x5e,0x45,0x68,0x95,0xe4,0x34,0xd3,0x60,0x18,0xd5,0xc7,0x61,0xca,0x6b,0x89,0xc8,0x4d,0xbb,0xe2,0x04,0x08,0xaa,0x4a,0x96,0xc5,0x9e,0xa6,0xe5,0x2b,0xba,0xea,0xcd,0xfe,0xb6,0x36,0x30,0x37,0x70,0xcc,0x3c,0x46,0xcb,0x0b,0x78,0x7e,0x86,0xb9,0xf7,0x19,0xc9,0x40,0x6a,0x68,0xf0,0x1d,0x5f,0x17,0xc0};
    mpz_from_bytes(multiplier, multiplier35, 8);
    mpz_from_bytes(multiplicand, multiplicand35, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product35, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier36[32]   = {0xfa,0x51,0x19,0x2d,0x69,0xb7,0xb0,0xee,0xa7,0x4c,0xab,0xfa,0xd5,0x1b,0x3f,0x5c,0xd7,0x5d,0xaf,0x8f,0x41,0xd3,0xc1,0x14,0x2e,0x1c,0x19,0x80,0xde,0x73,0x65,0xef};
    static std::uint8_t multiplicand36[32] = {0xec,0xbb,0x15,0xbf,0x36,0x79,0xbf,0x06,0x56,0x4d,0xd5,0x45,0x72,0x5e,0x7d,0x44,0x17,0xed,0xc5,0x59,0x12,0x6f,0x3e,0x95,0x8d,0x3f,0xf1,0x82,0xfe,0x3c,0xdc,0x2a};
    static std::uint8_t product36[64]      = {0xe7,0x79,0xb1,0xb6,0xe0,0x78,0x39,0x45,0x60,0xf6,0x02,0xcd,0xae,0x35,0xb6,0x3c,0xcc,0x32,0xd0,0xec,0x51,0x19,0x4c,0x92,0xaf,0x0e,0xb9,0xad,0xb4,0x7e,0x26,0xe9,0x06,0x1e,0x9f,0xac,0x84,0x56,0xf6,0x10,0x63,0x78,0x34,0xbc,0xe2,0x97,0xce,0xfb,0x46,0xa9,0x4a,0x10,0x99,0x24,0x7d,0x54,0xdf,0xd2,0x52,0xdc,0xb0,0x8c,0x1d,0x36};
    mpz_from_bytes(multiplier, multiplier36, 8);
    mpz_from_bytes(multiplicand, multiplicand36, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product36, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier37[32]   = {0x21,0x76,0xd3,0x68,0xed,0x25,0x4b,0xe3,0x46,0x7d,0x5c,0xcf,0xd7,0xc4,0x76,0xfe,0xe4,0x58,0x84,0x18,0x88,0xe7,0xe8,0x65,0x0a,0x91,0x1e,0xdc,0xd2,0x93,0xbb,0x2b};
    static std::uint8_t multiplicand37[32] = {0x20,0xe4,0xf2,0x1c,0x2e,0x40,0x16,0x93,0x32,0x2a,0xde,0xab,0x86,0x18,0x39,0x4b,0xe1,0xd7,0x7c,0xa4,0x82,0xd3,0x7e,0x10,0xbd,0x67,0xce,0xed,0x65,0x2b,0x1f,0xd4};
    static std::uint8_t product37[64]      = {0x04,0x4c,0xc7,0xe7,0x69,0xfb,0xe9,0x00,0x59,0xd8,0xcf,0x3a,0xb0,0xb7,0x5f,0x19,0xab,0x60,0x4a,0xc4,0x01,0xfb,0x0c,0x75,0x81,0x8f,0xca,0x11,0x54,0x29,0x9a,0x93,0x55,0xb8,0xae,0x7f,0x40,0xa6,0x46,0x15,0x00,0xcc,0x0c,0x1a,0x2b,0x28,0x82,0xe9,0x3f,0x33,0xa0,0x8e,0x56,0x9f,0xa2,0xb2,0x81,0xc3,0xd4,0xd5,0xad,0x3a,0x34,0x9c};
    mpz_from_bytes(multiplier, multiplier37, 8);
    mpz_from_bytes(multiplicand, multiplicand37, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product37, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier38[32]   = {0x07,0x95,0xeb,0xfd,0xa9,0xec,0xa5,0x50,0x3b,0x0f,0x9d,0x67,0xc3,0xa3,0xd3,0x26,0xce,0x49,0x78,0xce,0x42,0xfa,0x4e,0x8c,0xda,0x70,0x69,0x25,0xa2,0x8c,0xc2,0xc4};
    static std::uint8_t multiplicand38[32] = {0xa1,0x34,0xd6,0x9c,0xda,0x91,0xf9,0x13,0x8d,0xd9,0xf6,0xb9,0xd8,0xd2,0x5a,0x49,0x83,0x85,0x94,0x88,0x48,0x97,0x6e,0x77,0x4d,0xba,0xbc,0xd6,0x92,0x38,0xa1,0xd3};
    static std::uint8_t product38[64]      = {0x04,0xc6,0xda,0x3a,0x70,0x80,0x30,0xea,0x7c,0x15,0xa9,0xb7,0x57,0x74,0xe3,0x26,0x91,0x11,0x94,0xfa,0x3a,0x6d,0x6e,0xf6,0x1f,0xca,0xa0,0x75,0x3c,0x74,0x93,0xe3,0xe1,0x92,0xaa,0x14,0xb2,0xad,0xba,0x5c,0x8c,0x5c,0x7b,0x81,0x59,0x5a,0xea,0xa7,0x33,0x5f,0x9d,0x69,0x0e,0x3f,0xf2,0xd2,0xea,0xd1,0xea,0xf5,0xe3,0x61,0xcb,0x8c};
    mpz_from_bytes(multiplier, multiplier38, 8);
    mpz_from_bytes(multiplicand, multiplicand38, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product38, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier39[32]   = {0x6f,0x59,0xfe,0xe3,0xed,0x31,0xb7,0x79,0x35,0x66,0xbe,0x4a,0xe7,0x42,0xf8,0x42,0x4b,0xc9,0xb6,0xe7,0x96,0xe9,0xd2,0xb0,0xc6,0x4b,0xad,0x50,0x5c,0x6b,0xd7,0x92};
    static std::uint8_t multiplicand39[32] = {0x7a,0x38,0xe1,0xe4,0x7b,0xf8,0xaf,0x96,0x6a,0x8a,0x14,0x4d,0x90,0xef,0x57,0x93,0x59,0x08,0x13,0xa8,0xe4,0x67,0x72,0xb7,0x26,0xdc,0x87,0x45,0x7d,0xb7,0x59,0xd4};
    static std::uint8_t product39[64]      = {0x35,0x29,0xa1,0x69,0xdb,0xff,0x53,0xce,0x3a,0x94,0xbb,0xf1,0xad,0x15,0xec,0xc2,0xc1,0x66,0x02,0xf9,0x66,0x7c,0xb8,0x3c,0xf5,0x50,0x7f,0x6f,0xfc,0xd7,0xcf,0xe7,0x58,0x04,0xc8,0xf4,0xa5,0xfe,0x00,0x27,0x24,0x05,0x59,0x15,0x68,0xc5,0x21,0x31,0xe7,0x9a,0xe6,0x0c,0x45,0x79,0x46,0x7e,0x5c,0xb6,0x48,0x61,0x6a,0x9e,0x46,0xe8};
    mpz_from_bytes(multiplier, multiplier39, 8);
    mpz_from_bytes(multiplicand, multiplicand39, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product39, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier40[32]   = {0xae,0xed,0xf2,0x26,0x68,0xbc,0x45,0xda,0x16,0xd3,0xcb,0xc2,0x79,0xf8,0xcd,0xf5,0xe2,0x89,0x07,0xb9,0xa7,0x09,0x7e,0xe2,0xf7,0xf4,0xa6,0xde,0xa1,0x1e,0x02,0xfc};
    static std::uint8_t multiplicand40[32] = {0x8f,0x65,0x2c,0x55,0x2f,0x08,0x7b,0xd4,0xc1,0x16,0x97,0xd2,0x3f,0x21,0x79,0x28,0x55,0x4e,0x90,0x29,0x4e,0xcc,0xfb,0x57,0x71,0xfb,0x14,0x3c,0x21,0x29,0x5b,0x7c};
    static std::uint8_t product40[64]      = {0x61,0xfc,0x0c,0x6f,0x18,0x6b,0xf9,0x8f,0xd7,0x13,0xa4,0x4d,0x34,0x1b,0x13,0x86,0xb0,0x92,0x52,0xc1,0x10,0x0c,0xf8,0x59,0x79,0xd2,0x2d,0x0b,0xe6,0x73,0x0c,0x9a,0x0a,0x97,0x8e,0xed,0x2a,0x5c,0x3d,0x48,0x82,0x35,0x7b,0x2c,0xb8,0xcb,0xc4,0x4a,0x4e,0x07,0x0a,0x17,0x4f,0xbb,0x33,0xeb,0xc2,0x97,0x06,0x5c,0xab,0xf5,0x06,0x10};
    mpz_from_bytes(multiplier, multiplier40, 8);
    mpz_from_bytes(multiplicand, multiplicand40, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product40, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier41[32]   = {0x2f,0x65,0xe4,0x24,0x56,0x42,0x7a,0x21,0x46,0xbc,0x75,0x7a,0x71,0xe0,0x1e,0x6c,0x9e,0xd7,0x6e,0xf1,0xa1,0x8f,0x39,0xde,0x93,0x47,0x04,0x56,0x3f,0x04,0xc8,0xef};
    static std::uint8_t multiplicand41[32] = {0x1c,0x45,0x6a,0x5f,0x24,0x20,0xc4,0x99,0x47,0x50,0xf8,0x01,0x15,0xca,0x40,0x58,0x5e,0x04,0xbd,0xd5,0x56,0x00,0xd2,0xdb,0x3e,0x1e,0x85,0x54,0x76,0xbb,0x97,0xe4};
    static std::uint8_t product41[64]      = {0x05,0x3b,0xff,0x1c,0x45,0x31,0x9f,0xb2,0x1c,0x63,0x54,0x8f,0x04,0x1a,0x9a,0xd3,0x92,0x1e,0xc1,0x1b,0xb9,0x0b,0x1c,0xc6,0xa5,0x0c,0xd4,0x60,0xe7,0xeb,0x83,0x6f,0x7c,0x3d,0xee,0xec,0x84,0x25,0x46,0x9d,0x7f,0xb9,0x1e,0x21,0xa9,0x98,0xd7,0xee,0x26,0xa3,0x25,0x8b,0xfa,0x02,0xdc,0xb2,0x92,0xd3,0x12,0x84,0xe3,0x5c,0xed,0xdc};
    mpz_from_bytes(multiplier, multiplier41, 8);
    mpz_from_bytes(multiplicand, multiplicand41, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product41, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier42[32]   = {0xfe,0x4f,0x10,0xcf,0x3e,0xec,0xed,0xe6,0x33,0x9f,0xa8,0x94,0xdc,0x1f,0xc7,0x2d,0x00,0xe4,0x53,0x12,0x1f,0xa7,0xd9,0x3c,0x79,0xa0,0xd6,0xf9,0xa3,0x62,0xad,0x1a};
    static std::uint8_t multiplicand42[32] = {0xfe,0xfe,0x99,0xc5,0x95,0xce,0x05,0x8d,0x7c,0x4c,0x36,0x2c,0x4c,0x99,0x8b,0xe4,0xb8,0xd8,0x13,0x1c,0x9b,0x3c,0x00,0xb2,0x5e,0x6a,0xa8,0x2a,0x80,0x25,0x5c,0x3a};
    static std::uint8_t product42[64]      = {0xfd,0x4f,0x5d,0xe1,0xd6,0xc3,0xfd,0x21,0xb6,0xe0,0x21,0x99,0xdf,0x61,0xad,0x55,0x24,0x20,0x02,0x2d,0x37,0xf9,0x37,0xe9,0xe7,0xba,0xaf,0xe7,0xab,0x3e,0x9a,0x84,0x63,0xdc,0x99,0x38,0xc5,0x80,0x50,0x1e,0xb4,0x2f,0x48,0x3d,0x7a,0x60,0xe5,0x3b,0xdc,0xac,0xf4,0xfd,0x3a,0x2e,0x49,0xd2,0x08,0x05,0xd5,0x5a,0x7f,0x52,0x8f,0xe4};
    mpz_from_bytes(multiplier, multiplier42, 8);
    mpz_from_bytes(multiplicand, multiplicand42, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product42, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier43[32]   = {0x0d,0x10,0xdd,0xf6,0x46,0x15,0xf3,0x92,0x7c,0x82,0xd7,0xb2,0xac,0x84,0x79,0x2c,0x2d,0x20,0x85,0x89,0x6b,0x31,0x32,0x6e,0x69,0x91,0xbc,0xe0,0xd5,0x51,0x8a,0x9b};
    static std::uint8_t multiplicand43[32] = {0x87,0xd8,0x5d,0x26,0x74,0x19,0x59,0x8b,0x2f,0xb7,0x21,0x75,0xd1,0xb5,0xac,0x42,0xa1,0xff,0x69,0x46,0xea,0x2c,0xf0,0xa7,0x19,0x10,0x7a,0xf0,0x36,0x0d,0x15,0x9b};
    static std::uint8_t product43[64]      = {0x06,0xee,0xf0,0x09,0x3d,0xd1,0x0f,0xc7,0x60,0x91,0xcc,0x3c,0x26,0xc6,0x56,0x22,0xfc,0x80,0x68,0x80,0x22,0x27,0xc8,0xe1,0x3b,0x45,0xed,0x11,0xbf,0xe7,0x71,0xf0,0x81,0xae,0xb5,0x65,0x56,0x85,0xc0,0xb5,0xf1,0x88,0x4e,0xb0,0x82,0x1c,0x99,0x33,0x6b,0xea,0x57,0x41,0x14,0x19,0xf0,0xf0,0x89,0x55,0xa5,0x51,0x94,0x9c,0xa2,0xd9};
    mpz_from_bytes(multiplier, multiplier43, 8);
    mpz_from_bytes(multiplicand, multiplicand43, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product43, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier44[32]   = {0x2d,0x22,0xa4,0xac,0xe1,0x28,0xf0,0x33,0xae,0x96,0xca,0x1f,0xa6,0x56,0xbf,0xf1,0x83,0x66,0x56,0x9d,0xa5,0xa9,0x1e,0x6c,0xc8,0xbd,0x16,0xb8,0x69,0x8c,0x89,0xf4};
    static std::uint8_t multiplicand44[32] = {0x4a,0xd1,0xf9,0x18,0x37,0x3b,0x1f,0x5d,0xaf,0x1c,0x63,0x72,0x3e,0x10,0xed,0x5f,0x67,0x53,0x5b,0xdb,0xb9,0xe3,0x8a,0x41,0xb5,0xa2,0xb1,0x57,0x28,0xa1,0x44,0x19};
    static std::uint8_t product44[64]      = {0x0d,0x31,0x08,0xcd,0x61,0x62,0x1c,0xf5,0xc6,0xc0,0x0b,0x32,0x24,0xe9,0xef,0xcb,0x4f,0x40,0xe7,0x1e,0xfd,0x3b,0xf1,0xde,0xb8,0x52,0xbd,0xe8,0x0d,0xde,0xe1,0x51,0x31,0xcf,0x76,0x05,0xd5,0x92,0x0e,0x4e,0x7c,0xdb,0x8e,0xe4,0xbd,0x82,0x36,0xd7,0xfa,0xbd,0x4c,0xc3,0x2a,0x14,0x99,0x7c,0xc9,0x85,0x20,0xe8,0x85,0xd2,0x48,0xd4};
    mpz_from_bytes(multiplier, multiplier44, 8);
    mpz_from_bytes(multiplicand, multiplicand44, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product44, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier45[32]   = {0x41,0x69,0x7a,0xc0,0x82,0x9a,0x64,0x2f,0xc4,0xd5,0x54,0x42,0x04,0x92,0xa9,0xd4,0x11,0xeb,0xc2,0x05,0xd7,0x15,0xc4,0xc6,0xe8,0x1e,0xbf,0xc0,0x7f,0xa0,0xc6,0x11};
    static std::uint8_t multiplicand45[32] = {0x96,0xab,0xe4,0xc3,0x69,0xba,0x9e,0x01,0xf8,0xf4,0x2f,0x3f,0xa4,0x18,0xd7,0xee,0xb8,0x00,0x5e,0x57,0x79,0xc5,0x93,0xb4,0x9d,0x78,0x51,0xef,0x48,0x47,0xfa,0xbb};
    static std::uint8_t product45[64]      = {0x26,0x7f,0xb9,0xd5,0xaa,0xcd,0x9b,0x25,0xa6,0x4b,0x6b,0xb5,0x31,0x9f,0xdf,0x53,0x34,0x4a,0x73,0x74,0xf3,0x9c,0x12,0x05,0x71,0x4d,0xb6,0x96,0x56,0x75,0x4f,0x2b,0x60,0xb7,0xb0,0x50,0x97,0x04,0xd7,0x75,0x94,0x28,0x86,0x9b,0x03,0x0d,0x24,0xa4,0xba,0x87,0xa2,0x98,0xc6,0x42,0x63,0x51,0x32,0xbc,0xf6,0x6a,0xf2,0x94,0x48,0x6b};
    mpz_from_bytes(multiplier, multiplier45, 8);
    mpz_from_bytes(multiplicand, multiplicand45, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product45, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier46[32]   = {0xd5,0xea,0x2a,0xeb,0x60,0x68,0xe4,0x8f,0x9c,0x2c,0x8d,0x29,0x4c,0x3b,0x5d,0x1e,0x7e,0x68,0x5a,0x34,0xd2,0xce,0x7d,0x28,0x86,0x06,0x37,0x54,0x27,0xc0,0xa2,0xc8};
    static std::uint8_t multiplicand46[32] = {0xa2,0x44,0x75,0x5c,0xa1,0xd6,0x02,0xc0,0x67,0xa5,0xd4,0x2d,0x5c,0x7e,0x82,0xc3,0x2d,0x4c,0xb9,0x65,0x7a,0x6c,0xfb,0x87,0x85,0xd9,0x2e,0xb8,0x6e,0xd9,0xfd,0x0c};
    static std::uint8_t product46[64]      = {0x87,0x97,0x63,0x6d,0xc6,0x88,0x15,0x30,0xb0,0x17,0xd2,0x5a,0xcf,0xf3,0x35,0x0c,0xa2,0x97,0x98,0x5f,0x0d,0xb8,0x48,0xf2,0x12,0x63,0xf9,0xbb,0x33,0xd0,0xcf,0x5d,0x46,0x89,0x71,0xf6,0x91,0x7a,0x84,0x53,0x7b,0x1c,0x7d,0x08,0x36,0x4b,0xe3,0x50,0x93,0x43,0xf0,0xf3,0x58,0x44,0xcb,0x5a,0x8f,0xa0,0x2b,0x37,0x29,0x6f,0x49,0x60};
    mpz_from_bytes(multiplier, multiplier46, 8);
    mpz_from_bytes(multiplicand, multiplicand46, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product46, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier47[32]   = {0x1d,0x49,0x2e,0xb9,0xb1,0x01,0xce,0x25,0x25,0x2b,0x03,0x99,0x7b,0xd1,0x4e,0x57,0x65,0xe5,0x08,0xf2,0x8c,0x7c,0xf4,0x67,0x6f,0xae,0xef,0x6e,0x76,0x35,0xfe,0x57};
    static std::uint8_t multiplicand47[32] = {0x93,0x28,0x64,0x9c,0xae,0x0f,0x58,0xf1,0xc5,0x93,0x89,0x4b,0x0e,0xa6,0xaf,0x9a,0xf9,0xa8,0x1b,0x88,0x71,0xfd,0xc1,0x80,0x0d,0x76,0xca,0x43,0x8b,0x4a,0x87,0x49};
    static std::uint8_t product47[64]      = {0x10,0xd5,0xa4,0xc6,0x70,0x6a,0x33,0x2c,0xdf,0x85,0x3f,0x81,0x34,0xa9,0x18,0x31,0xef,0x97,0x08,0x90,0xd8,0xec,0x34,0xfd,0xa9,0x01,0x8e,0xc1,0xc7,0x39,0xc2,0x72,0xa0,0x2b,0x83,0x4b,0xdd,0x55,0xe6,0x77,0xb1,0x5a,0x36,0x0b,0x50,0x32,0x42,0xda,0x87,0x3f,0xce,0x42,0x93,0x69,0x52,0x73,0x7b,0x2f,0x3a,0x4f,0xf0,0xab,0x67,0xcf};
    mpz_from_bytes(multiplier, multiplier47, 8);
    mpz_from_bytes(multiplicand, multiplicand47, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product47, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier48[32]   = {0xb2,0xed,0x00,0xdc,0x80,0x8a,0xeb,0x05,0x42,0x2a,0x60,0x57,0x6b,0x3d,0xbd,0xc0,0x18,0x66,0x5d,0x88,0x3a,0x56,0xc0,0x8c,0x2e,0xd4,0xe7,0x70,0xf2,0x01,0x08,0x8b};
    static std::uint8_t multiplicand48[32] = {0x24,0xe2,0x68,0x47,0x65,0x9a,0xac,0xc7,0xd8,0xcf,0x3b,0xf3,0x6a,0xa8,0x14,0xa2,0xf7,0x3c,0x4d,0xcc,0xf0,0x66,0x14,0x3b,0xcd,0xdb,0x80,0x5c,0x2d,0x12,0x87,0x46};
    static std::uint8_t product48[64]      = {0x19,0xc7,0x92,0x3b,0xf3,0xd5,0x71,0xbc,0xbb,0xa8,0x74,0xa0,0x1e,0xc5,0xbb,0xea,0x7d,0xad,0x1e,0x54,0x2d,0x15,0xd4,0x55,0xc3,0xc4,0xc0,0xc3,0x36,0x76,0xbd,0x47,0xd1,0xe4,0xf4,0xd8,0xeb,0xce,0xf4,0xe8,0xc4,0xc2,0x5c,0x6c,0x5e,0x1f,0xf7,0x92,0x4b,0x05,0xc7,0x58,0x2b,0x48,0x9f,0x08,0x4f,0x4c,0x9d,0x07,0xc0,0x8f,0xa3,0x02};
    mpz_from_bytes(multiplier, multiplier48, 8);
    mpz_from_bytes(multiplicand, multiplicand48, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product48, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier49[32]   = {0xb8,0x59,0x8b,0x45,0x6f,0x3a,0xcf,0x75,0x94,0x5b,0x09,0x97,0x2c,0x09,0x36,0x53,0xf9,0x0f,0xd9,0xa4,0x28,0x24,0xdf,0xe8,0x5b,0x1f,0x0d,0xc1,0x14,0x10,0x8b,0x3a};
    static std::uint8_t multiplicand49[32] = {0x89,0x2e,0xfc,0x99,0x95,0xdf,0xfd,0x4c,0xc0,0xae,0x41,0x56,0x9c,0x7a,0x3a,0x4d,0x57,0x31,0x1e,0xc4,0xf0,0xba,0x2c,0xea,0xce,0x69,0x94,0xa0,0xbf,0x74,0x55,0x5f};
    static std::uint8_t product49[64]      = {0x62,0xc9,0xc1,0x85,0xed,0x8a,0x76,0x0c,0x11,0x15,0xd6,0xaf,0x0a,0x94,0x1a,0x7e,0x98,0xf1,0x44,0x1e,0x81,0x79,0xa1,0xbd,0x10,0xba,0x83,0x7a,0x54,0x53,0x0e,0xdf,0xf2,0xa8,0xa3,0xa8,0x36,0xd6,0xb6,0xf2,0x22,0x16,0x8e,0x36,0x89,0x74,0x59,0x23,0x4b,0x86,0xd8,0x9a,0x96,0x30,0xb0,0xec,0x4b,0x2b,0x31,0xef,0x4c,0xa5,0xec,0x86};
    mpz_from_bytes(multiplier, multiplier49, 8);
    mpz_from_bytes(multiplicand, multiplicand49, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product49, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier50[32]   = {0xa6,0x88,0xf8,0xa6,0xcc,0x5d,0xc8,0xab,0x78,0x7a,0x66,0x8e,0x56,0x8a,0xb3,0x40,0xa6,0x62,0xf9,0x27,0xea,0xf1,0xdc,0xf9,0x3b,0x0a,0x70,0x14,0x7d,0x48,0x0e,0x10};
    static std::uint8_t multiplicand50[32] = {0xad,0x7e,0xbc,0x03,0x88,0xa0,0xbc,0x74,0x90,0x51,0xd8,0x1e,0x1d,0x66,0x12,0x3f,0xf5,0x37,0xdb,0xfa,0x1d,0xd1,0x3f,0x1e,0xf7,0x36,0xeb,0xbc,0x17,0x15,0xb8,0x93};
    static std::uint8_t product50[64]      = {0x70,0xdd,0x01,0xc1,0xfd,0x4a,0xb3,0x1a,0x58,0xa6,0x4a,0xb6,0x9d,0x08,0x70,0xed,0x35,0xe3,0xb0,0x2d,0xcc,0xe1,0x3a,0x85,0xd3,0x70,0xce,0xb5,0x6d,0x0b,0xb0,0x62,0xee,0x1e,0x92,0x7a,0x0b,0x85,0x1c,0xdb,0xb8,0x9a,0x7d,0x53,0x4a,0x98,0x87,0x70,0xf9,0xdb,0x64,0x53,0x53,0x2c,0x74,0x2a,0xfd,0xaf,0xd9,0xbc,0x51,0xcb,0x93,0x30};
    mpz_from_bytes(multiplier, multiplier50, 8);
    mpz_from_bytes(multiplicand, multiplicand50, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product50, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier51[32]   = {0x45,0xc0,0x81,0x80,0x54,0x16,0x09,0xcb,0xed,0x38,0x0c,0x47,0xef,0x1f,0x7b,0x08,0xf0,0xda,0x26,0x1f,0xcf,0x62,0x1f,0xf9,0xd8,0x9d,0x29,0xb0,0x7a,0xb3,0xf7,0x13};
    static std::uint8_t multiplicand51[32] = {0xea,0x57,0x32,0x3a,0xc3,0x9e,0x73,0x01,0x71,0x75,0x0f,0x80,0x8c,0x01,0x56,0x74,0xfa,0x97,0x2e,0xf8,0xd4,0x5b,0x48,0xb5,0xbc,0x82,0x52,0x9b,0x1a,0x14,0x58,0xaa};
    static std::uint8_t product51[64]      = {0x3f,0xd9,0xb8,0x7a,0xeb,0xad,0xee,0xbb,0xa2,0x22,0x9a,0x83,0x5c,0xe9,0xb0,0x15,0xd7,0xa2,0x29,0x73,0x73,0x04,0x52,0x60,0xb0,0x15,0x3f,0x01,0x77,0x5a,0x04,0x67,0x92,0x12,0x0c,0xff,0x1e,0xe5,0xd8,0xa5,0xb9,0x1b,0x5a,0x52,0x7b,0xf4,0xfa,0xa9,0xab,0x41,0xc0,0xae,0x84,0x65,0x47,0x4f,0x68,0xb2,0xe5,0x07,0x93,0xec,0x9a,0x9e};
    mpz_from_bytes(multiplier, multiplier51, 8);
    mpz_from_bytes(multiplicand, multiplicand51, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product51, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier52[32]   = {0x1d,0x0d,0x19,0xde,0x0d,0x86,0x35,0x2e,0x48,0x03,0x29,0x8e,0xa7,0xf1,0x19,0xa5,0x37,0xa0,0x7c,0x28,0x4f,0xdc,0x10,0xa1,0x9a,0x65,0xe4,0x01,0x26,0x1c,0x1b,0x0a};
    static std::uint8_t multiplicand52[32] = {0x8b,0xf5,0xb5,0x22,0x0f,0x31,0xeb,0x7b,0x5f,0xa4,0xce,0x91,0xd8,0xd1,0x37,0x19,0x1d,0xc7,0xc5,0xc3,0xdc,0xb5,0xbd,0x9a,0x3d,0x13,0x7d,0xc0,0xce,0x51,0xca,0xcf};
    static std::uint8_t product52[64]      = {0x0f,0xe1,0xff,0x23,0x73,0x9b,0xae,0x1d,0xb3,0x01,0xb3,0xfe,0xaf,0x01,0x9e,0xdf,0xe0,0x62,0x1f,0xd4,0x41,0x66,0x1c,0x5a,0x5d,0xdb,0x7d,0xd2,0x8c,0x22,0xd0,0xf4,0xfa,0xdf,0x63,0x8c,0x70,0xac,0x4a,0x18,0xb8,0x79,0xea,0x1e,0xce,0xd6,0x34,0xf8,0x87,0xe2,0x11,0xa8,0xa7,0x4b,0x8b,0x3a,0x01,0x5a,0x1b,0x26,0x98,0x39,0xc1,0x16};
    mpz_from_bytes(multiplier, multiplier52, 8);
    mpz_from_bytes(multiplicand, multiplicand52, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product52, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier53[32]   = {0xe2,0xb8,0x2d,0x3d,0xd8,0x8b,0x07,0xd0,0xc7,0x03,0x88,0x69,0x9f,0xaf,0xb5,0x96,0xee,0xb6,0x05,0xed,0xb0,0x6a,0xfd,0x3e,0xa3,0xef,0x09,0x8a,0x5c,0xfb,0x96,0x7e};
    static std::uint8_t multiplicand53[32] = {0xc0,0xa8,0x52,0xbb,0xc6,0x79,0x38,0x91,0x33,0x8b,0x94,0x41,0xba,0x79,0xf7,0x15,0x14,0x4c,0xdb,0x3e,0x6e,0xb5,0x82,0x87,0x50,0x6c,0xf6,0x3e,0x68,0x9f,0xf6,0xfe};
    static std::uint8_t product53[64]      = {0xaa,0x9f,0x34,0x11,0x5d,0xcb,0x0a,0xc7,0x85,0xe9,0x2d,0x5a,0x0d,0x34,0x4b,0x73,0xd7,0xff,0x8e,0xcd,0x5e,0x25,0xfb,0x9d,0xa8,0x74,0xe4,0xaf,0x06,0x23,0xb4,0xef,0xc5,0xb6,0x9c,0xeb,0x90,0xb4,0x53,0x0d,0xbe,0x44,0xe2,0x8f,0x1a,0x46,0xf1,0x31,0x40,0x46,0x15,0x75,0x96,0xad,0xd9,0x7e,0xa1,0xbf,0xe8,0x8b,0xac,0x7e,0x65,0x04};
    mpz_from_bytes(multiplier, multiplier53, 8);
    mpz_from_bytes(multiplicand, multiplicand53, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product53, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier54[32]   = {0xfb,0x74,0x8a,0x6f,0x6b,0xde,0x17,0xf1,0x77,0xa7,0x33,0xee,0x4d,0xbf,0x54,0xe9,0xf6,0x33,0x33,0xc0,0x3c,0x3a,0xd3,0x7b,0xf1,0x13,0x1f,0x09,0xb2,0x64,0xa6,0x3e};
    static std::uint8_t multiplicand54[32] = {0x86,0x30,0xaa,0x4a,0x2b,0x49,0xeb,0xcd,0x08,0x23,0xf2,0x4d,0xd1,0x26,0xc7,0x1d,0xbb,0x7e,0x79,0xfd,0x8a,0x8a,0x94,0xf4,0xc8,0x0d,0x21,0x23,0x5e,0x78,0x12,0x16};
    static std::uint8_t product54[64]      = {0x83,0xce,0xcd,0x94,0x85,0x7d,0xab,0x1d,0x1c,0x4b,0x60,0xa5,0xbe,0xef,0xe9,0xee,0x93,0xc7,0x8e,0x58,0xb2,0xfc,0x33,0x2b,0x69,0xd8,0x72,0x62,0x5b,0xde,0xde,0xc4,0xe9,0x3a,0xb1,0xf3,0xd8,0x66,0xaa,0xc1,0x2c,0xe3,0x5a,0xec,0x89,0x8d,0xec,0x1d,0xc3,0x53,0x13,0xbe,0xc9,0x7b,0x64,0x5d,0x6a,0x36,0xa6,0x13,0x19,0x66,0xa5,0x54};
    mpz_from_bytes(multiplier, multiplier54, 8);
    mpz_from_bytes(multiplicand, multiplicand54, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product54, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier55[32]   = {0x02,0x5b,0x1f,0x5e,0x73,0x8f,0x0c,0x6d,0x2e,0xe5,0x6a,0x31,0x42,0xc3,0x78,0x8b,0xaa,0x2b,0x66,0xad,0x07,0xfd,0x67,0x93,0x7e,0x28,0x68,0x64,0xe9,0x47,0x4d,0x0d};
    static std::uint8_t multiplicand55[32] = {0xd2,0xdf,0x85,0x5d,0x86,0x68,0x67,0x04,0x3a,0x54,0x4d,0xa6,0xa7,0x17,0xc6,0x54,0xfe,0x1c,0xf7,0x10,0x06,0xb6,0x69,0x38,0x8b,0x36,0xc6,0xf8,0xf1,0x2c,0x2c,0xbb};
    static std::uint8_t product55[64]      = {0x01,0xf0,0xce,0x56,0x01,0xb5,0x21,0x89,0x92,0x71,0x04,0x4a,0x54,0x8f,0xac,0x54,0xcf,0x7a,0x17,0x40,0x0a,0xb5,0xb1,0x0e,0x4c,0x6b,0xab,0xf3,0x02,0x45,0x8d,0x6c,0x0e,0x7a,0xbf,0xf6,0xc2,0x72,0x51,0x3b,0xf9,0x69,0x28,0xa4,0xe0,0xa2,0x02,0xf6,0x6b,0xe7,0xbd,0x8e,0xae,0x4d,0x05,0x8c,0x7c,0xd2,0x84,0x31,0x23,0x8f,0x84,0x7f};
    mpz_from_bytes(multiplier, multiplier55, 8);
    mpz_from_bytes(multiplicand, multiplicand55, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product55, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier56[32]   = {0x16,0x50,0xf4,0xa3,0xd1,0x2a,0x77,0x19,0x89,0xf3,0x60,0x2c,0x8b,0xaa,0x62,0x66,0x5b,0xec,0x1b,0x5c,0xe9,0xd9,0x79,0x89,0xcb,0xac,0x55,0x24,0x01,0x4d,0xa0,0xfd};
    static std::uint8_t multiplicand56[32] = {0x6e,0x70,0x66,0xcb,0xfb,0xe9,0xb4,0x05,0xd7,0x05,0x1c,0xf7,0xab,0x64,0x53,0x1e,0x92,0x29,0x9b,0xe8,0xd4,0x03,0xa3,0x4f,0x4d,0x18,0x30,0xfb,0xf6,0xd7,0xe7,0x1b};
    static std::uint8_t product56[64]      = {0x09,0xa0,0x95,0x7f,0x75,0x2c,0xc4,0x3b,0x92,0x17,0xf4,0x46,0xc3,0x8e,0x51,0x2a,0xd4,0x0f,0x4c,0xf6,0x19,0xc7,0xac,0x6e,0xd9,0x17,0xd6,0xbb,0x42,0x0e,0xeb,0xb2,0x3a,0x9e,0xd4,0x74,0x46,0x44,0xee,0xd0,0xab,0xef,0x9a,0x0f,0xd9,0xde,0x16,0x43,0x8e,0xc5,0x9c,0xc1,0x70,0x2c,0x48,0x2f,0x1c,0x82,0x70,0xed,0x81,0xef,0x45,0xaf};
    mpz_from_bytes(multiplier, multiplier56, 8);
    mpz_from_bytes(multiplicand, multiplicand56, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product56, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier57[32]   = {0x28,0xa7,0x0a,0x17,0x17,0x06,0xc5,0x0d,0x53,0x92,0x24,0x71,0xb6,0x0f,0x01,0xb6,0x1b,0x34,0x71,0x14,0x9b,0x75,0x06,0x31,0x3d,0xb9,0x3d,0xda,0x85,0x2e,0xce,0xc3};
    static std::uint8_t multiplicand57[32] = {0xc1,0x94,0xa5,0x02,0xb2,0x0e,0x94,0xbd,0xff,0xf1,0xaa,0x70,0x27,0x01,0x0c,0x81,0x52,0xb5,0x35,0x76,0xef,0xf3,0x09,0xa6,0xd0,0x08,0x14,0x92,0x57,0xad,0xc9,0xd8};
    static std::uint8_t product57[64]      = {0x1e,0xbd,0x89,0x61,0x54,0xca,0xd6,0x43,0xdb,0xd7,0x26,0x0a,0xd5,0x07,0x4a,0xe7,0xe4,0xc3,0x8f,0x88,0xa1,0x34,0x7c,0x68,0x69,0x35,0xa1,0xe3,0x45,0x70,0x69,0xf4,0x80,0xa1,0xcc,0x08,0xc0,0x9b,0xf2,0x9e,0x32,0x59,0xba,0x69,0x71,0xde,0x30,0x07,0x8a,0x02,0xd1,0x4e,0x71,0x17,0x05,0x25,0x18,0xbc,0xd3,0x0e,0x1e,0x9c,0x8f,0x88};
    mpz_from_bytes(multiplier, multiplier57, 8);
    mpz_from_bytes(multiplicand, multiplicand57, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product57, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier58[32]   = {0x76,0x66,0x00,0x5b,0x79,0xba,0x22,0x13,0x88,0x54,0x2b,0x5e,0xb3,0x9f,0xac,0x22,0xe3,0x2f,0xa1,0x67,0x82,0x0d,0x96,0x13,0x14,0x13,0x29,0x06,0x91,0x48,0x7a,0x00};
    static std::uint8_t multiplicand58[32] = {0x47,0xa7,0x5b,0x2c,0x28,0x74,0x44,0x56,0xae,0xdd,0x99,0x7a,0xc2,0x0d,0x37,0xbd,0xf4,0xa1,0xd6,0xa1,0x16,0x03,0x74,0xf5,0xcf,0xf6,0x64,0x0c,0x76,0x5a,0xa5,0x62};
    static std::uint8_t product58[64]      = {0x21,0x23,0xb0,0xce,0x48,0xcd,0x51,0xbf,0x5f,0x5c,0x8d,0xc3,0xf4,0x7c,0xfd,0x24,0x42,0x2e,0x80,0x01,0xd5,0xeb,0x90,0xb1,0xab,0xf2,0xfe,0x6a,0x1e,0xd7,0x63,0xf4,0x81,0xe6,0x25,0x11,0x74,0x01,0xc2,0x39,0x21,0x4c,0x55,0x57,0x12,0x95,0x20,0x87,0xc9,0x7a,0xa7,0x2b,0x91,0x3e,0x18,0x3d,0xd7,0x1b,0x23,0xde,0x38,0x60,0xb4,0x00};
    mpz_from_bytes(multiplier, multiplier58, 8);
    mpz_from_bytes(multiplicand, multiplicand58, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product58, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier59[32]   = {0xd0,0xa2,0xfd,0xab,0xef,0x63,0x05,0x5f,0xdd,0x91,0x2f,0x70,0x4f,0xf8,0x7b,0x1e,0x7a,0xbc,0x2a,0xba,0x1c,0x1c,0xef,0x31,0x5e,0x21,0x46,0xba,0x15,0x40,0xf0,0xe1};
    static std::uint8_t multiplicand59[32] = {0xc0,0xcc,0xe1,0xfd,0xdc,0xce,0x89,0xf3,0x57,0xde,0x8d,0x69,0x0b,0x97,0x02,0x29,0xe8,0xc7,0x80,0x5e,0xdd,0xa0,0x3a,0x00,0xe4,0xa1,0x01,0x00,0x8b,0x11,0xba,0x95};
    static std::uint8_t product59[64]      = {0x9d,0x21,0x38,0x51,0x3e,0x8a,0x3c,0xd7,0x39,0x4f,0x51,0x2a,0x56,0x8b,0x35,0xaa,0x81,0xec,0xa1,0xc7,0xd3,0xc7,0x6c,0xd4,0xac,0x9d,0x86,0xbd,0x21,0xe9,0x66,0x1d,0x66,0x68,0x5e,0x2a,0x43,0x38,0xf0,0x74,0x79,0xf5,0xb8,0xb4,0x50,0xca,0xc3,0xe5,0x5c,0xdd,0x25,0xcb,0xea,0x73,0x50,0x31,0xd5,0x18,0xea,0xd9,0xb7,0xc0,0xac,0xf5};
    mpz_from_bytes(multiplier, multiplier59, 8);
    mpz_from_bytes(multiplicand, multiplicand59, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product59, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier60[32]   = {0xa4,0xca,0x89,0x80,0xb7,0x70,0x6a,0x8d,0xce,0x30,0xf6,0xf4,0xe1,0x11,0x57,0xb6,0x34,0xe0,0xab,0x10,0xd4,0x36,0x80,0x08,0xe9,0x87,0xbf,0x9f,0x0e,0x79,0x69,0x38};
    static std::uint8_t multiplicand60[32] = {0x50,0xfa,0xcc,0x0d,0x22,0xa7,0x46,0x8c,0xbe,0x95,0x20,0x0e,0xb4,0x31,0x95,0x78,0x01,0x64,0x69,0x99,0xa3,0x23,0x7d,0x14,0x8c,0xf8,0xe1,0x60,0x28,0x23,0x87,0x07};
    static std::uint8_t product60[64]      = {0x34,0x20,0xbc,0x1c,0x5b,0x30,0x66,0x98,0x0a,0xe8,0x60,0x1b,0xed,0x94,0x15,0xf2,0xeb,0xb2,0x7e,0x28,0xdc,0x3c,0xb9,0x0b,0x5c,0x7e,0x5d,0x98,0x62,0x84,0x67,0xb2,0x43,0xfd,0x4b,0x26,0xb6,0x90,0x56,0x96,0xac,0x64,0x02,0x85,0x08,0x54,0xaa,0x55,0x18,0xda,0x2b,0x46,0x65,0x8e,0xf9,0xcb,0xb7,0x06,0xbe,0x05,0x8e,0x76,0x68,0x88};
    mpz_from_bytes(multiplier, multiplier60, 8);
    mpz_from_bytes(multiplicand, multiplicand60, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product60, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier61[32]   = {0x2c,0xe4,0x32,0x40,0xcb,0x37,0xd7,0x59,0x9b,0x18,0x01,0xe9,0xa8,0x09,0x66,0x26,0x5f,0xa0,0xdd,0x6c,0xc2,0x1a,0x63,0xfb,0xc4,0x5d,0xfc,0x48,0x3c,0x08,0x16,0x13};
    static std::uint8_t multiplicand61[32] = {0xf0,0xbb,0x00,0xd2,0xd1,0x3a,0xa9,0x6e,0x7a,0x7f,0xfb,0x87,0xfb,0x5a,0xf1,0xf3,0x3c,0x61,0x52,0x94,0x9f,0xb4,0x90,0x1e,0x2e,0xa4,0xb3,0x45,0x37,0xaa,0xe3,0x5f};
    static std::uint8_t product61[64]      = {0x2a,0x36,0xb9,0xf2,0x6b,0xba,0x9b,0x45,0x50,0xf5,0xa4,0x8f,0x32,0xa9,0xb1,0xdd,0x3e,0x95,0x84,0xe1,0x12,0xa8,0x73,0xe0,0x1c,0xcb,0x15,0x89,0x7f,0x6a,0xf4,0xe3,0x6b,0x6c,0x35,0x10,0xd7,0xaf,0xab,0x44,0xfc,0x06,0xaf,0x4e,0xd0,0xde,0x10,0x55,0xd6,0x80,0x1f,0xcc,0x10,0x58,0xa1,0xfb,0xa6,0x3b,0x82,0x45,0x30,0x31,0x0a,0x0d};
    mpz_from_bytes(multiplier, multiplier61, 8);
    mpz_from_bytes(multiplicand, multiplicand61, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product61, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier62[32]   = {0x81,0xcb,0xbd,0xa9,0x9e,0x97,0x2a,0x33,0x5c,0x4b,0xdb,0xf2,0x46,0xb0,0x89,0x9c,0xe2,0x0e,0x2c,0xb2,0x28,0x11,0xf6,0x00,0x0d,0x41,0xbb,0xa8,0x9c,0xdd,0xa4,0x9a};
    static std::uint8_t multiplicand62[32] = {0x80,0x43,0xd0,0x7f,0x0a,0xc5,0x98,0x03,0xd2,0x23,0xd2,0x67,0x0a,0x25,0xe0,0x49,0xd3,0x79,0x5a,0x92,0x19,0x86,0x1c,0xe7,0xaf,0x69,0xbc,0x8f,0xa3,0xa7,0x7e,0xbe};
    static std::uint8_t product62[64]      = {0x41,0x08,0x40,0xdd,0x66,0x53,0x22,0xee,0xb5,0x22,0xec,0x89,0xaa,0x09,0x02,0x34,0x42,0x50,0x72,0xf1,0x09,0x28,0xe7,0x58,0x79,0xa6,0x4d,0x7a,0x36,0xa8,0x37,0xd6,0x6d,0xfb,0xad,0x6f,0xcc,0x40,0x99,0xe8,0xf9,0x62,0xbb,0x29,0x86,0x9b,0x82,0xc2,0xcf,0x80,0xcd,0x86,0xfc,0x69,0xfa,0xb4,0x25,0xdf,0xc2,0xc3,0xf1,0xf9,0xf6,0x4c};
    mpz_from_bytes(multiplier, multiplier62, 8);
    mpz_from_bytes(multiplicand, multiplicand62, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product62, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier63[32]   = {0x3d,0x73,0x83,0x14,0x70,0xc0,0x9b,0xd9,0x79,0x0c,0x08,0x2b,0x68,0xc3,0x3f,0xad,0x44,0xf8,0xe6,0x28,0xde,0x7d,0xc2,0x9a,0xd0,0xa2,0x56,0x7b,0x57,0x79,0xfc,0x07};
    static std::uint8_t multiplicand63[32] = {0xd5,0xc6,0x38,0x97,0xf7,0xbc,0xf4,0x29,0x8f,0x89,0x91,0xee,0x89,0xa5,0x1c,0xa7,0xdc,0x0c,0x9a,0xe0,0xbc,0x49,0x92,0xfc,0x56,0x76,0xb0,0x68,0x23,0x9a,0x93,0x3a};
    static std::uint8_t product63[64]      = {0x33,0x50,0xb0,0xfd,0x22,0xe6,0x0f,0x46,0x2e,0x4e,0xcb,0x7b,0xa3,0x1c,0x5b,0xe9,0xcf,0x88,0x42,0x1f,0x87,0xd3,0x13,0x72,0xfd,0xf9,0xcb,0xec,0xf6,0x17,0xf0,0x8e,0x14,0x33,0x31,0x60,0xad,0x92,0x9a,0xf0,0x54,0x8a,0x19,0xd5,0x94,0x37,0x62,0x91,0x19,0x18,0x94,0xc8,0x34,0x59,0x00,0x63,0x4b,0xa5,0xea,0xdb,0x6e,0x91,0x1e,0x96};
    mpz_from_bytes(multiplier, multiplier63, 8);
    mpz_from_bytes(multiplicand, multiplicand63, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product63, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier64[32]   = {0x8c,0x4b,0x84,0x65,0x76,0xad,0x0e,0x70,0x2e,0x68,0xfd,0x91,0xb0,0xe9,0xee,0x11,0xaf,0xb9,0x3a,0x74,0xa9,0x06,0x1a,0x14,0x3f,0x66,0x86,0x49,0x2c,0x99,0x72,0xd9};
    static std::uint8_t multiplicand64[32] = {0xbd,0x26,0xb3,0xfe,0xc4,0xed,0x15,0x2f,0x25,0x13,0x87,0x1c,0x7c,0x2e,0xda,0x46,0x14,0x6c,0xd6,0xfc,0xa4,0x89,0x50,0xfb,0xd1,0x39,0x36,0x73,0xc6,0xbe,0x4e,0x37};
    static std::uint8_t product64[64]      = {0x67,0xa8,0xf6,0x98,0xfc,0x19,0x6e,0xe3,0x00,0x8d,0xc6,0xf5,0xd2,0xde,0xb0,0x69,0x19,0x34,0x75,0x44,0xb7,0x3e,0x5b,0xb4,0xa4,0x70,0xef,0xd1,0x47,0xeb,0xa5,0x25,0xec,0x1b,0xb9,0x9a,0xae,0x4a,0x83,0x69,0x43,0xf6,0xfa,0xb4,0x93,0x34,0x8f,0xa6,0xe1,0x40,0x3a,0x2d,0x17,0xe0,0x81,0x97,0x41,0x38,0x4b,0x81,0x69,0x03,0xca,0x9f};
    mpz_from_bytes(multiplier, multiplier64, 8);
    mpz_from_bytes(multiplicand, multiplicand64, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product64, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier65[32]   = {0x30,0xda,0x27,0xda,0x38,0x48,0xf1,0x87,0x9a,0x8b,0xf9,0xa8,0xa5,0x65,0x5c,0x95,0x4e,0xda,0x46,0x26,0xd2,0xab,0x93,0x54,0x24,0x41,0xf1,0x8a,0xf1,0x88,0x9c,0x33};
    static std::uint8_t multiplicand65[32] = {0x56,0x42,0x42,0xc3,0xc5,0x2c,0xf9,0x9f,0xc2,0xec,0xf9,0xe8,0x72,0x6d,0xe0,0x93,0x21,0x33,0x5b,0x21,0xac,0xd5,0x2b,0x14,0x23,0x87,0x62,0x76,0x43,0x6c,0x25,0xd8};
    static std::uint8_t product65[64]      = {0x10,0x75,0xee,0x5f,0x2f,0x3e,0x17,0x79,0xf4,0xfc,0x28,0xc7,0x41,0x9f,0x2d,0x55,0x74,0xb4,0xb8,0xca,0x2a,0xc1,0x47,0x09,0xcf,0xd5,0x25,0x0b,0x9b,0x2a,0x2b,0x13,0x9f,0x90,0x53,0x8f,0x3a,0x2a,0x51,0x88,0xa2,0x96,0xe2,0x22,0x86,0xcd,0x87,0x34,0x70,0x8a,0x0f,0x38,0x19,0x8b,0x5e,0x28,0x5c,0x0a,0x0e,0x29,0xc8,0x5b,0x2a,0x08};
    mpz_from_bytes(multiplier, multiplier65, 8);
    mpz_from_bytes(multiplicand, multiplicand65, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product65, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier66[32]   = {0x7a,0x95,0xe4,0xd4,0xfe,0x8b,0xd1,0xa6,0x79,0x3e,0xe9,0x89,0xcb,0x96,0xef,0x19,0x77,0xc7,0xa9,0x73,0x2d,0x28,0x4b,0xaf,0x72,0x49,0x41,0x34,0x41,0xf2,0xcb,0x60};
    static std::uint8_t multiplicand66[32] = {0x56,0x9f,0x84,0xc3,0x0f,0xc4,0xd6,0x82,0xa8,0xe0,0x0c,0x39,0xf4,0xf2,0x50,0xd8,0xec,0x6c,0x28,0xb6,0x9f,0xa6,0x0c,0xd5,0x62,0x1c,0xd6,0xe2,0x43,0xd2,0x30,0xc8};
    static std::uint8_t product66[64]      = {0x29,0x7a,0xbd,0x8b,0x5f,0x85,0x3c,0xa6,0xab,0xfd,0xf5,0x50,0x53,0xf1,0x8d,0x8a,0xf7,0x41,0x96,0xd3,0x0a,0x09,0x28,0xdd,0x55,0xd2,0x56,0x31,0x54,0x30,0x2d,0xcf,0x13,0xf7,0xed,0x8e,0x5e,0x8d,0xe2,0x27,0x3f,0xb2,0x3f,0xa7,0x95,0xe1,0xe4,0x00,0x88,0x94,0x70,0x47,0xdb,0x70,0x11,0x33,0x5c,0x6f,0x2c,0x56,0x00,0x90,0xe3,0x00};
    mpz_from_bytes(multiplier, multiplier66, 8);
    mpz_from_bytes(multiplicand, multiplicand66, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product66, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier67[32]   = {0xdc,0x16,0xb9,0x11,0xbe,0xea,0xad,0xb2,0xa3,0xe2,0xb6,0xde,0xe1,0x16,0xe2,0xc3,0x69,0xf2,0x52,0x04,0xa1,0xb0,0x42,0x0b,0xbd,0x95,0x52,0xdc,0x70,0x1b,0x1b,0xbc};
    static std::uint8_t multiplicand67[32] = {0x9e,0x9d,0xcd,0x21,0x2b,0x73,0xc9,0x3a,0x98,0x3c,0x4d,0x04,0xe5,0x1b,0xfc,0xa1,0x80,0xe2,0xba,0x2e,0x45,0x58,0xff,0x24,0x8c,0x02,0x4a,0xce,0x50,0xb6,0x51,0xdd};
    static std::uint8_t product67[64]      = {0x88,0x5d,0xb0,0x83,0x2a,0x33,0x5a,0x97,0xa6,0x6d,0x41,0x1c,0xe3,0x1b,0x3c,0xa7,0xb2,0xa9,0x4e,0x8a,0x35,0x18,0x69,0x5a,0x07,0x90,0x78,0x57,0x7a,0xa8,0xbd,0x35,0x32,0x24,0x37,0x7e,0x8f,0x56,0x74,0xce,0x70,0x66,0xb1,0x2e,0xb3,0x48,0x1b,0x56,0x82,0x2c,0xa2,0x13,0xdd,0xda,0x70,0xc7,0xc8,0x2d,0x1c,0xfd,0xd2,0xd5,0x6d,0x4c};
    mpz_from_bytes(multiplier, multiplier67, 8);
    mpz_from_bytes(multiplicand, multiplicand67, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product67, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier68[32]   = {0x50,0xd0,0x8b,0x28,0x3b,0x45,0x19,0x85,0x74,0x69,0x64,0x17,0x3d,0x58,0xb6,0xa1,0x6a,0x37,0x92,0x87,0x57,0x6c,0x50,0x5c,0x97,0xa6,0x31,0x72,0x8f,0x9c,0xd0,0xe6};
    static std::uint8_t multiplicand68[32] = {0xbb,0x13,0x71,0xa3,0x1d,0xcf,0xd6,0xb1,0x19,0x5b,0x67,0x18,0x41,0x59,0x74,0xc1,0x9a,0x8d,0x6e,0x90,0x3f,0x91,0xfb,0x1c,0xbe,0xaf,0xa4,0x10,0x5e,0xab,0x94,0x70};
    static std::uint8_t product68[64]      = {0x3b,0x0e,0x79,0x00,0x42,0xe6,0x78,0xb6,0xee,0xf7,0x99,0xaf,0x80,0x49,0xdb,0x5f,0x81,0x9a,0x72,0x58,0x57,0x85,0x5c,0x39,0xc2,0x88,0xe0,0x10,0x6e,0x12,0x59,0x08,0xc3,0xbe,0x50,0x31,0xa1,0xb3,0xe9,0x59,0xd5,0xd6,0xe5,0x8f,0x85,0x6e,0x22,0xcc,0xfe,0x2a,0xde,0xcc,0xb3,0x96,0x67,0xe8,0x76,0x67,0xc5,0xf9,0x7b,0x02,0x5c,0xa0};
    mpz_from_bytes(multiplier, multiplier68, 8);
    mpz_from_bytes(multiplicand, multiplicand68, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product68, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier69[32]   = {0x1d,0x42,0xde,0xfa,0xe1,0xe4,0xf2,0x27,0xa8,0xe6,0x1e,0x26,0x98,0xb8,0xf1,0xe6,0xda,0xfd,0x79,0xd1,0x69,0x7a,0x5d,0x2d,0x38,0x8d,0xb5,0x24,0xdb,0xa9,0xbc,0xed};
    static std::uint8_t multiplicand69[32] = {0xaa,0xb9,0x03,0x54,0x96,0x61,0xc0,0xc3,0x31,0xbe,0x15,0x2c,0x46,0x9f,0x62,0x91,0x96,0x74,0xd5,0xb3,0x7c,0xf5,0x50,0x88,0xb1,0x06,0xf0,0x71,0x88,0xa4,0x29,0x22};
    static std::uint8_t product69[64]      = {0x13,0x83,0x8d,0xc7,0x31,0x0d,0xbd,0x3f,0x17,0x0f,0x11,0x33,0x5d,0x77,0x71,0x2d,0xed,0xc7,0xdb,0xbe,0x96,0xc4,0xa8,0xfd,0x36,0x07,0x15,0xe5,0xd2,0x8d,0x9f,0xb4,0x71,0x06,0x19,0x7c,0x78,0xbc,0x1f,0x47,0x29,0x92,0x24,0x34,0x79,0x21,0xaa,0xe3,0x87,0xb8,0x9b,0x09,0x35,0x54,0x93,0xca,0x36,0xbc,0x6f,0xcb,0x4b,0xa1,0x0c,0x7a};
    mpz_from_bytes(multiplier, multiplier69, 8);
    mpz_from_bytes(multiplicand, multiplicand69, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product69, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier70[32]   = {0xc8,0xd1,0x28,0x9c,0x88,0xc1,0x6c,0x9c,0xd4,0x16,0xc6,0xe0,0xb9,0xba,0xb5,0x8a,0x74,0x57,0x4f,0x0c,0xe4,0x80,0x67,0x71,0xbf,0x3b,0x1a,0x88,0x37,0x0b,0x1d,0x8e};
    static std::uint8_t multiplicand70[32] = {0x81,0x6c,0x7d,0x35,0x8d,0xad,0xe3,0xd6,0xd4,0xb8,0xb6,0x79,0xaf,0x67,0x71,0x9b,0x4c,0xa5,0xa6,0x0e,0xd1,0x41,0x1f,0xa8,0x3c,0xc5,0x1a,0xc7,0x23,0x75,0xa7,0xf5};
    static std::uint8_t product70[64]      = {0x65,0x86,0x7f,0xec,0x26,0x38,0x9b,0xf4,0x40,0xf0,0xd2,0x9b,0xc1,0x1a,0x25,0xc4,0x38,0x09,0x3b,0x29,0xc8,0xfb,0xe6,0xb5,0xcc,0x83,0x2c,0x61,0x43,0x4f,0xf2,0x31,0xa0,0x8b,0xea,0x46,0x25,0x79,0x27,0xb4,0x14,0x27,0xdf,0x7a,0xc0,0xf2,0x74,0xec,0x22,0xbf,0xad,0x8b,0x2c,0xc9,0xb1,0x64,0x42,0x91,0x52,0xc5,0xd9,0xd0,0xea,0xe6};
    mpz_from_bytes(multiplier, multiplier70, 8);
    mpz_from_bytes(multiplicand, multiplicand70, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product70, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier71[32]   = {0x15,0x04,0x41,0x16,0x3a,0xbb,0x80,0x1c,0x25,0xed,0x54,0xd9,0x50,0x57,0x6c,0xf8,0xd1,0x66,0x6f,0x60,0xf4,0x4a,0x22,0xf1,0xd0,0x73,0xb5,0x4c,0x6e,0x5b,0xdc,0xb8};
    static std::uint8_t multiplicand71[32] = {0x47,0xbf,0x57,0x07,0xa6,0x4f,0x79,0xc0,0x07,0xfd,0xda,0x15,0xd9,0x8c,0x8a,0x16,0x9c,0xe2,0xe2,0xae,0x1c,0xec,0x43,0x36,0xaf,0x58,0x1b,0x56,0xc2,0x9c,0x3f,0xbb};
    static std::uint8_t product71[64]      = {0x05,0xe3,0xe3,0x5e,0xcc,0xc3,0x70,0x80,0xfd,0xbd,0x2c,0x84,0x13,0x68,0xee,0x78,0x64,0x01,0x51,0x17,0x2e,0xec,0xef,0x68,0xcb,0x58,0xfd,0xeb,0x69,0x27,0x41,0x63,0x84,0x71,0x1b,0x90,0x27,0xea,0x3d,0x38,0xe1,0x0b,0x43,0x6f,0x9b,0xe6,0x19,0xaa,0x8b,0xc4,0xbf,0x6b,0xf4,0x8d,0x28,0x6c,0x8e,0xbb,0xa9,0x0b,0x28,0x8b,0x82,0x68};
    mpz_from_bytes(multiplier, multiplier71, 8);
    mpz_from_bytes(multiplicand, multiplicand71, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product71, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier72[32]   = {0xac,0xb8,0x4b,0x3e,0xc2,0x9d,0xac,0x88,0xff,0xb9,0xfc,0x38,0x3b,0xc7,0x20,0xd7,0x2d,0x77,0x23,0x31,0x10,0x3c,0x81,0x6b,0xe9,0x6c,0x51,0x88,0x36,0xc6,0x41,0xba};
    static std::uint8_t multiplicand72[32] = {0x3c,0x07,0x11,0x43,0xf1,0xd2,0x50,0xb1,0x30,0x52,0x86,0xc3,0x55,0x34,0x78,0x78,0x4a,0x74,0x2f,0x78,0xc9,0x14,0xd7,0x45,0x2c,0x50,0x82,0x8c,0xd4,0x42,0x8b,0x3c};
    static std::uint8_t product72[64]      = {0x28,0x7f,0xf6,0x52,0xd8,0xb6,0x87,0x8e,0x2d,0xa3,0xca,0x13,0xd0,0xe0,0xad,0xb3,0x5d,0x27,0xa8,0xfd,0x0c,0xea,0xa4,0x9c,0xf7,0x0b,0xcc,0x94,0xa7,0xbe,0x4f,0x04,0x18,0x2d,0x85,0xf4,0x35,0x17,0x7f,0x9e,0x1d,0xc2,0x58,0xcd,0xf4,0x4d,0xb1,0xbc,0x78,0x60,0x97,0x80,0x61,0x5d,0xaf,0x2b,0x7c,0x0e,0xc4,0xed,0x76,0x1b,0x65,0x98};
    mpz_from_bytes(multiplier, multiplier72, 8);
    mpz_from_bytes(multiplicand, multiplicand72, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product72, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier73[32]   = {0x99,0xc5,0x9c,0x58,0x33,0x1c,0x4e,0xa9,0x9b,0xf7,0x07,0x20,0x3a,0xb3,0xc4,0x0d,0x7e,0x87,0xb6,0x3c,0xa0,0x43,0xc9,0x7a,0x51,0x7a,0x7e,0x48,0x69,0xfd,0xf2,0x56};
    static std::uint8_t multiplicand73[32] = {0x17,0x7a,0x8a,0x20,0x0c,0x78,0x75,0x9d,0xde,0x68,0xec,0xfd,0x89,0x17,0x19,0x7e,0x18,0x8a,0x23,0xc9,0xfb,0x5d,0x0e,0x08,0x98,0x1f,0x08,0xf4,0x11,0x0c,0x36,0xf2};
    static std::uint8_t product73[64]      = {0x0e,0x1a,0x5c,0x30,0x35,0x18,0x9b,0xbd,0xef,0xc3,0xa7,0x42,0x85,0x67,0x99,0x1e,0x38,0xc2,0xcd,0xa6,0x50,0x78,0xa6,0xbf,0xe0,0x9f,0x55,0xd0,0x96,0x89,0x8f,0xd3,0x4c,0x59,0x0e,0xf0,0xd8,0xd0,0x41,0x5b,0x95,0x87,0xda,0x1c,0x96,0x1f,0xb8,0x6b,0x75,0x26,0xf4,0x0e,0xb2,0x8d,0xbb,0x99,0xf4,0xe5,0x25,0xc6,0xd5,0x35,0x39,0x4c};
    mpz_from_bytes(multiplier, multiplier73, 8);
    mpz_from_bytes(multiplicand, multiplicand73, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product73, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier74[32]   = {0x77,0x83,0x8a,0x17,0x22,0x19,0x12,0x57,0x2d,0x3e,0x8d,0x39,0xae,0x76,0x55,0x07,0x8c,0x36,0x01,0x56,0x27,0x8b,0x2a,0x9b,0xe6,0xdf,0xca,0x29,0xb0,0x76,0x97,0x01};
    static std::uint8_t multiplicand74[32] = {0x1f,0xfe,0x3b,0x49,0x58,0x52,0x6a,0x1e,0x02,0xc2,0x7e,0x16,0x6a,0xe5,0xe2,0x91,0x37,0xd7,0xf5,0xb1,0xaf,0x3f,0xcf,0xc3,0xca,0x31,0xa7,0x29,0x3c,0x10,0x84,0xb7};
    static std::uint8_t product74[64]      = {0x0e,0xef,0x9d,0xe9,0x5e,0xa6,0x44,0xb1,0xea,0x5c,0xea,0x3d,0xad,0xb9,0x4f,0x6c,0x70,0xf4,0x7e,0xad,0x57,0x68,0x9e,0xeb,0x66,0x11,0x32,0xc0,0x91,0x59,0x83,0x4f,0x52,0xa2,0x54,0x57,0x54,0x49,0xf2,0xd6,0x37,0x5f,0x3f,0xc6,0x1f,0x21,0xf9,0x40,0x3e,0x37,0x53,0x22,0xee,0xed,0x7b,0x43,0x26,0xde,0xab,0xc0,0xf6,0xb2,0x75,0xb7};
    mpz_from_bytes(multiplier, multiplier74, 8);
    mpz_from_bytes(multiplicand, multiplicand74, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product74, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier75[32]   = {0x9c,0x46,0x42,0x37,0x20,0x7e,0x9d,0x42,0x2e,0xcf,0x35,0xe1,0x14,0xcc,0x0e,0x1f,0xd0,0xa8,0xe1,0x21,0xc7,0x98,0xa0,0x23,0xec,0x53,0x1e,0xb2,0x8d,0xe3,0x7e,0x7f};
    static std::uint8_t multiplicand75[32] = {0xf2,0x09,0x8d,0x08,0xd2,0x61,0x1d,0x9b,0xda,0x5b,0xf1,0x76,0x06,0xe1,0x8a,0x3f,0xd8,0x45,0x2a,0x94,0x30,0x0a,0xb4,0x3f,0x4c,0x8b,0x87,0x77,0x2a,0x9b,0xa1,0xd9};
    static std::uint8_t product75[64]      = {0x93,0xc0,0x3f,0x28,0x85,0xbf,0x2e,0xbe,0x41,0x07,0x5b,0xdc,0xd2,0xdc,0xd2,0xb8,0x3f,0x71,0x42,0x2d,0x5f,0xbf,0x92,0x4d,0xc4,0xc6,0x0f,0x34,0xbb,0x7b,0xf4,0xdc,0x75,0x85,0x04,0xf4,0xe6,0x64,0x9d,0xab,0xde,0x48,0xa7,0x75,0x5f,0xc5,0x7b,0x91,0xb3,0x1e,0x9c,0x25,0x05,0x65,0x7e,0x97,0xc9,0x90,0x52,0x1d,0xc5,0x49,0x18,0xa7};
    mpz_from_bytes(multiplier, multiplier75, 8);
    mpz_from_bytes(multiplicand, multiplicand75, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product75, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier76[32]   = {0xa2,0x13,0x78,0xc9,0x13,0xbe,0xf3,0xea,0x6c,0x0d,0x09,0xaa,0xa1,0x42,0xb0,0x75,0x73,0x50,0xa2,0x1c,0xca,0x32,0xc9,0x0e,0x69,0x12,0x82,0x5c,0xe5,0xbe,0xd8,0x7f};
    static std::uint8_t multiplicand76[32] = {0x10,0xb1,0x16,0x17,0x88,0x74,0x8f,0xa1,0x6b,0xf5,0x7c,0xcc,0x07,0x70,0x24,0xb0,0x88,0xc3,0x35,0x7d,0xe5,0x5c,0x2a,0xf8,0x02,0x68,0xbd,0xc8,0x17,0x4e,0xca,0xf7};
    static std::uint8_t product76[64]      = {0x0a,0x91,0x54,0xff,0xa6,0xc7,0xdb,0xf5,0x1b,0x9e,0xd0,0xb0,0x90,0x71,0x51,0xb3,0x51,0x72,0x7e,0x73,0x4c,0xf4,0x64,0x1e,0x8a,0x88,0x90,0x43,0x05,0xfe,0x47,0xff,0x37,0x2b,0xb1,0x7c,0x47,0xa2,0x35,0xe0,0xd9,0x4b,0x7b,0x11,0x5b,0x17,0x2f,0x80,0xf6,0x67,0xa9,0x2d,0x70,0xc1,0xdb,0x9c,0x61,0x32,0x20,0xbb,0xa1,0xa9,0x18,0x89};
    mpz_from_bytes(multiplier, multiplier76, 8);
    mpz_from_bytes(multiplicand, multiplicand76, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product76, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier77[32]   = {0xfb,0xb0,0xcd,0xe5,0x67,0x4a,0xd8,0x8d,0x5c,0x7a,0xd5,0x96,0x38,0xeb,0x61,0xa8,0x32,0xde,0xc6,0xbe,0xff,0xbc,0x3a,0x42,0x96,0xb8,0x73,0xa1,0x82,0x59,0x97,0x4e};
    static std::uint8_t multiplicand77[32] = {0xd5,0xc4,0x18,0x91,0xc6,0xb5,0x64,0x4f,0xeb,0xc9,0xe2,0x3e,0xd5,0x78,0xb5,0xaf,0x8b,0x03,0xd7,0x68,0x13,0x7c,0x8e,0x4a,0xc0,0xd0,0xa6,0x4b,0xe2,0xc2,0x2f,0x7f};
    static std::uint8_t product77[64]      = {0xd2,0x2a,0xe6,0xd5,0x68,0x63,0x91,0xfa,0x94,0xc3,0xc5,0x4e,0x13,0x88,0xe5,0xcc,0x9a,0xed,0x4c,0xa8,0x4d,0x8b,0x60,0x5d,0xbe,0x3b,0x55,0xcb,0x4a,0x51,0xdd,0x77,0xee,0xd5,0xc4,0x6a,0xf7,0x74,0x15,0x1d,0x54,0x01,0xb1,0x5f,0xfd,0xdd,0x6b,0xdc,0xd1,0x53,0x73,0xe9,0xa8,0x34,0xe4,0x39,0x8f,0xef,0xcb,0x5f,0xa2,0x55,0x61,0xb2};
    mpz_from_bytes(multiplier, multiplier77, 8);
    mpz_from_bytes(multiplicand, multiplicand77, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product77, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier78[32]   = {0xae,0x61,0x23,0x7c,0x60,0x6c,0x71,0x99,0x62,0x33,0x6d,0xb9,0x9d,0x03,0xd0,0xbd,0xe7,0x53,0xe5,0x89,0x19,0x6a,0x79,0x02,0x19,0xbf,0xd2,0x2b,0xa9,0x57,0x72,0xd8};
    static std::uint8_t multiplicand78[32] = {0xad,0x1e,0x54,0x17,0x5c,0x22,0x5d,0x01,0xb6,0x70,0x34,0x4e,0x6e,0x79,0x15,0x07,0x2d,0xa9,0x21,0xe4,0xfe,0x70,0x8b,0xff,0x6f,0x65,0xa0,0x23,0x30,0xab,0xbb,0x8a};
    static std::uint8_t product78[64]      = {0x75,0xec,0x4d,0xa4,0xfe,0xdd,0xe6,0x4c,0x14,0x11,0x63,0x47,0x13,0xdc,0x01,0x6a,0xb9,0x7b,0xe0,0x39,0x16,0x87,0x5b,0x5f,0xe8,0x6c,0x79,0x6e,0xdb,0x18,0x42,0x8a,0xd5,0x32,0x95,0x62,0x7e,0x87,0x5d,0x9c,0xe4,0x9a,0x9c,0xf5,0xaa,0x74,0xda,0x97,0xa2,0x02,0x0b,0x7c,0xad,0x37,0x5b,0xbd,0x58,0xcb,0x66,0xb6,0x60,0x4f,0xb0,0x70};
    mpz_from_bytes(multiplier, multiplier78, 8);
    mpz_from_bytes(multiplicand, multiplicand78, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product78, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier79[32]   = {0xa4,0xf8,0x8c,0x99,0x95,0xed,0xa0,0x4e,0x32,0x3f,0xcc,0xbd,0xa3,0x23,0xd6,0x77,0x10,0xdc,0x11,0x37,0x82,0xd8,0xe0,0x30,0x4c,0x45,0xf9,0x9b,0xe4,0xb6,0x5b,0xb6};
    static std::uint8_t multiplicand79[32] = {0x7e,0xe4,0xaf,0x92,0x1e,0xa5,0x90,0x57,0x7f,0x12,0xd7,0x89,0x06,0x58,0x7c,0xfc,0x05,0x7a,0xf3,0xf8,0x22,0x34,0x10,0x41,0x20,0xc4,0x03,0x4c,0xac,0xfe,0x80,0x19};
    static std::uint8_t product79[64]      = {0x51,0xc5,0xb3,0xb4,0xe2,0x31,0x7b,0x4f,0x04,0x7c,0x22,0x22,0x2e,0x1d,0x2b,0xb8,0xe5,0x6a,0x45,0x1c,0xe5,0x08,0xbb,0xf9,0x5d,0xd4,0xed,0x17,0x98,0x39,0x8d,0xe4,0x13,0xc3,0x45,0x8a,0xfc,0xef,0xe9,0x23,0x52,0xf2,0x3f,0xe9,0xa4,0x94,0x9e,0x6c,0x32,0x78,0xa4,0x12,0x6e,0x16,0x3a,0x3d,0xd6,0x89,0x21,0x29,0xca,0x3d,0xf4,0xc6};
    mpz_from_bytes(multiplier, multiplier79, 8);
    mpz_from_bytes(multiplicand, multiplicand79, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product79, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier80[32]   = {0x2a,0xfd,0x4d,0x04,0xfc,0x96,0xe6,0xf6,0xec,0x89,0xc9,0xc0,0x52,0x4f,0x1d,0xd3,0x70,0xc9,0x37,0x3d,0x7b,0xb2,0x01,0x96,0x29,0x75,0xe9,0x8a,0xc4,0x03,0x87,0x11};
    static std::uint8_t multiplicand80[32] = {0xcc,0x86,0x42,0x1d,0x27,0x49,0x31,0x23,0xdd,0xf6,0x8d,0x93,0xbc,0x9e,0x90,0xae,0xf3,0x2b,0x00,0x3e,0xe0,0x7f,0x1a,0xf4,0xf7,0x7d,0x95,0x80,0x8c,0x89,0x19,0x69};
    static std::uint8_t product80[64]      = {0x22,0x58,0x65,0x10,0x7d,0x0a,0x5a,0xf0,0x68,0xee,0x02,0xc3,0xb6,0x8f,0x75,0xd1,0xb0,0x46,0x97,0x15,0xf7,0x21,0x98,0x95,0x4d,0x35,0x5a,0xd8,0xfd,0xaa,0xe4,0x95,0x91,0x0b,0x85,0xad,0xc3,0x2b,0x8a,0xfb,0xcd,0xce,0x9a,0xe7,0x14,0xb5,0x88,0xf4,0x45,0xe4,0x22,0xc3,0x6e,0x7a,0x19,0x2b,0xcd,0x4d,0x98,0x4f,0x51,0xbc,0x0e,0xf9};
    mpz_from_bytes(multiplier, multiplier80, 8);
    mpz_from_bytes(multiplicand, multiplicand80, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product80, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier81[32]   = {0xff,0x70,0xea,0xbc,0xf7,0x79,0x74,0xc5,0xa3,0xbc,0xdc,0xcb,0xc3,0x7e,0x44,0xcd,0xf7,0x81,0x36,0xf0,0x99,0xe6,0xe7,0x06,0x18,0x22,0x21,0x99,0xb7,0x14,0xb2,0x0d};
    static std::uint8_t multiplicand81[32] = {0x1d,0x60,0x3f,0x78,0xc9,0x83,0x35,0x8f,0x09,0x78,0x5b,0x14,0xbc,0xc1,0xac,0x32,0x78,0x14,0x53,0x49,0x1e,0x92,0x39,0xcc,0xbf,0x7d,0x78,0x99,0x98,0x2a,0x0d,0xad};
    static std::uint8_t product81[64]      = {0x1d,0x4f,0xd4,0x44,0xbe,0xaa,0xad,0xc8,0xa9,0x75,0x7a,0x76,0xef,0x06,0x6f,0x2d,0x8a,0x8d,0xa5,0x76,0x21,0xe2,0x1e,0x0e,0x1d,0x62,0x31,0x97,0x9e,0x38,0xd0,0x7c,0xc7,0x9d,0x0a,0xc5,0xd8,0x31,0x71,0xb2,0x5d,0xdd,0x0b,0x88,0x86,0x86,0x79,0x11,0x2f,0xae,0xb2,0xc8,0x55,0x73,0x67,0xe3,0x94,0xdf,0x58,0x0e,0xb4,0x28,0xfb,0xc9};
    mpz_from_bytes(multiplier, multiplier81, 8);
    mpz_from_bytes(multiplicand, multiplicand81, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product81, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier82[32]   = {0x64,0xc3,0x6b,0xcf,0xeb,0xc5,0x3a,0x04,0x8a,0xcb,0xd2,0x10,0x8f,0x89,0xb8,0x64,0x39,0xe7,0x2d,0x69,0x2e,0xb8,0xd3,0x57,0xff,0x05,0x2f,0xfd,0x2c,0x24,0x12,0x14};
    static std::uint8_t multiplicand82[32] = {0x52,0x97,0x0e,0x2b,0x2f,0x42,0xca,0xa5,0x16,0x05,0x14,0xf0,0x7d,0x5c,0x68,0xc4,0x66,0x99,0x95,0x5a,0x6d,0x0b,0x94,0x74,0xc7,0xc8,0xfa,0x0a,0x2c,0xc2,0x8e,0xee};
    static std::uint8_t product82[64]      = {0x20,0x82,0x0d,0x60,0xe0,0x7b,0xe3,0xac,0x36,0x05,0x7c,0xbb,0xf2,0x50,0xd0,0xc7,0xeb,0xb8,0xbd,0x0c,0xda,0xc2,0x27,0x2b,0x02,0x8f,0x1a,0x2d,0xfc,0xcf,0xc2,0xb6,0x5f,0x9d,0xf3,0xa1,0x35,0x23,0x4f,0xbd,0xaf,0x38,0x9c,0xef,0x92,0x30,0x0c,0x71,0x16,0x5e,0x8d,0x71,0xb5,0x66,0xd5,0xbc,0x77,0x92,0xef,0x14,0x2e,0xb7,0xe6,0x98};
    mpz_from_bytes(multiplier, multiplier82, 8);
    mpz_from_bytes(multiplicand, multiplicand82, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product82, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier83[32]   = {0x07,0xad,0x67,0x9b,0xb2,0x17,0x12,0x77,0x9d,0x7a,0x4a,0x0f,0xf5,0x9f,0xc2,0xcc,0x1c,0xfd,0x54,0x88,0x1c,0xd3,0xd2,0xbe,0xe5,0x71,0x6e,0x9a,0xc5,0x3f,0x68,0x7c};
    static std::uint8_t multiplicand83[32] = {0xdc,0x4e,0x2a,0xff,0xe5,0x74,0x47,0xa8,0x1c,0x84,0xf7,0x36,0x16,0x0e,0x27,0x46,0xa5,0x7b,0xda,0xe3,0xfe,0x24,0x52,0x07,0xca,0x7f,0x9c,0x89,0x5a,0x0d,0x36,0x3c};
    static std::uint8_t product83[64]      = {0x06,0x9b,0x5d,0x29,0x7e,0x17,0x70,0x9b,0xf5,0x08,0x8e,0x97,0x3a,0x34,0x52,0x43,0xbf,0x82,0x6e,0xae,0xcb,0x7e,0x1d,0x7d,0x44,0x95,0xf0,0x61,0xb7,0xd9,0x86,0xc5,0xb9,0xea,0xa0,0x0e,0x7b,0xda,0x76,0x36,0x46,0xd3,0xeb,0xae,0xba,0x89,0x8f,0xa5,0xce,0x8f,0x63,0x4d,0x95,0x9f,0x28,0x19,0x9b,0x3d,0x5b,0x31,0x81,0x32,0xa5,0x10};
    mpz_from_bytes(multiplier, multiplier83, 8);
    mpz_from_bytes(multiplicand, multiplicand83, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product83, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier84[32]   = {0xd3,0xc8,0x36,0x38,0x62,0x21,0x47,0x80,0x77,0x4e,0xc7,0xd0,0xf5,0xda,0xfa,0x4d,0x90,0x16,0x9d,0x31,0xed,0xfe,0x03,0x25,0x93,0x6e,0x20,0xbe,0x76,0x14,0xf2,0x5c};
    static std::uint8_t multiplicand84[32] = {0xaa,0x53,0x6c,0xe1,0xae,0x46,0x46,0xd7,0xc9,0xd3,0x7b,0xf6,0x41,0xa9,0xe2,0xe5,0xf0,0x9a,0xb6,0x10,0xab,0xa4,0xba,0x33,0x0f,0xd7,0x56,0x00,0xec,0x3c,0xbe,0x42};
    static std::uint8_t product84[64]      = {0x8c,0xe7,0xf7,0xfe,0x2f,0x75,0x93,0x6e,0x30,0x58,0x98,0x7f,0xe6,0x8d,0xd4,0x00,0xb2,0xf8,0x48,0x12,0xa9,0xda,0x17,0x13,0xad,0x24,0x88,0xd4,0xe7,0xda,0x49,0xa2,0x56,0xc3,0xd5,0x43,0xf9,0x05,0xdb,0x90,0x65,0x0c,0xdc,0x35,0xf0,0x3b,0x53,0x9a,0xe1,0x6d,0x85,0xac,0x5f,0x9e,0x48,0xe4,0xf8,0xdf,0xb1,0x13,0x9a,0xd6,0xc3,0xb8};
    mpz_from_bytes(multiplier, multiplier84, 8);
    mpz_from_bytes(multiplicand, multiplicand84, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product84, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier85[32]   = {0xd0,0x24,0x5d,0x0f,0x04,0x4a,0xa5,0x0e,0x8e,0x73,0xcf,0x39,0x4f,0x24,0xf3,0xf7,0xa1,0xf7,0xb5,0xca,0xd7,0x6d,0xd2,0x1c,0x5f,0x51,0x0e,0x04,0x2a,0x8f,0x93,0xf5};
    static std::uint8_t multiplicand85[32] = {0x02,0xe7,0xe6,0x44,0x2c,0x75,0xbb,0xa5,0x4b,0x47,0xb9,0xf4,0x95,0x50,0xb9,0x5b,0x24,0xc6,0xe4,0xc3,0x8f,0xf7,0xd1,0x3b,0xe2,0x16,0xd2,0xf6,0x6f,0x9b,0x42,0x83};
    static std::uint8_t product85[64]      = {0x02,0x5c,0xd4,0xc2,0x2f,0xff,0xa3,0xab,0x52,0x97,0x13,0xce,0xe5,0xd1,0xab,0x44,0x8b,0xfe,0x23,0x7e,0xfd,0x39,0x33,0x64,0xca,0x3c,0x44,0xa0,0xfb,0xab,0x3e,0x71,0x65,0x25,0x8a,0xe1,0xe9,0x16,0x32,0xaa,0x15,0x06,0xff,0x57,0x78,0x29,0xad,0x42,0x24,0xdf,0x1a,0x3b,0xac,0x76,0x1a,0x95,0xa5,0x76,0x6c,0x9e,0x9b,0xf4,0xe0,0x5f};
    mpz_from_bytes(multiplier, multiplier85, 8);
    mpz_from_bytes(multiplicand, multiplicand85, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product85, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier86[32]   = {0x9d,0xd4,0xa2,0x06,0xa7,0xb9,0x25,0xba,0x0f,0x2e,0xbc,0xf2,0x73,0x5b,0x4a,0x14,0xce,0x13,0x23,0x1b,0x86,0x95,0xab,0x9d,0x58,0xfc,0xb7,0xde,0x5a,0xa6,0x70,0xf1};
    static std::uint8_t multiplicand86[32] = {0xc3,0x43,0x7d,0x0f,0xec,0x59,0x49,0x28,0xee,0xea,0xf2,0xf7,0x55,0x00,0x6b,0xb5,0xbc,0xa3,0x9c,0x58,0xcc,0xf8,0xd5,0xba,0x70,0xe0,0x81,0x81,0x80,0xd6,0x85,0x50};
    static std::uint8_t product86[64]      = {0x78,0x62,0x93,0x2c,0x1d,0xc9,0xbc,0xe0,0x2a,0x30,0x60,0x46,0x43,0x6e,0x6b,0x2c,0xe8,0x4a,0x61,0xc1,0xa1,0x78,0xa8,0x22,0xaa,0x73,0x60,0x5a,0x35,0xbb,0x9f,0x00,0x99,0xb9,0x4d,0x63,0x84,0xe4,0xd2,0x93,0x9a,0xad,0xc2,0x96,0xa3,0x92,0x07,0x89,0x68,0xc2,0x89,0x35,0x1b,0x8b,0x89,0x77,0xcb,0x5b,0x54,0xa0,0xb6,0x26,0x80,0x50};
    mpz_from_bytes(multiplier, multiplier86, 8);
    mpz_from_bytes(multiplicand, multiplicand86, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product86, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier87[32]   = {0xfa,0x52,0x49,0x27,0x0c,0x03,0x3a,0x51,0x8c,0xc9,0x54,0xba,0xd0,0x69,0xf4,0x99,0x3d,0x3a,0x76,0x6c,0xa8,0xeb,0x28,0x00,0xec,0xf0,0x73,0xea,0xb4,0x73,0x81,0x77};
    static std::uint8_t multiplicand87[32] = {0x4a,0x31,0x46,0x93,0x17,0x41,0x62,0xa5,0xcf,0xba,0xa1,0x11,0xd4,0x45,0xdd,0x8c,0xc8,0x3f,0x72,0xd2,0xf2,0xb3,0xaa,0xff,0x7b,0xe5,0xcd,0x97,0x1c,0x52,0x3a,0x09};
    static std::uint8_t product87[64]      = {0x48,0x8b,0xf7,0xe7,0x9d,0xf0,0x3e,0x1b,0x3b,0x42,0x64,0x9c,0x21,0xa8,0x1b,0x79,0xc2,0x85,0xbb,0x8a,0x98,0xe4,0xa8,0x49,0x36,0x59,0x81,0x57,0xc0,0x80,0x80,0x08,0x71,0x65,0x40,0xbb,0xb0,0x3a,0x54,0xbf,0x34,0x2c,0x26,0x20,0xf2,0xa3,0x7f,0x61,0x4a,0x72,0x4e,0x3e,0x5d,0x15,0x07,0x6a,0x86,0xe2,0x57,0x7b,0xff,0x82,0x83,0x2f};
    mpz_from_bytes(multiplier, multiplier87, 8);
    mpz_from_bytes(multiplicand, multiplicand87, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product87, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier88[32]   = {0x42,0xe2,0x69,0x40,0xdf,0x8f,0x80,0x13,0x86,0xb3,0xe1,0xac,0xf1,0xdc,0x19,0x77,0xc4,0x21,0xad,0x6d,0x0e,0x26,0xb1,0x08,0x33,0xc8,0x7a,0xa5,0x2a,0xa7,0x45,0x33};
    static std::uint8_t multiplicand88[32] = {0xbe,0x0b,0xac,0xf3,0x39,0xc9,0x4e,0x4a,0xbf,0xf4,0x84,0xda,0xa2,0xe1,0x95,0x65,0x24,0x39,0x17,0x4e,0xba,0xe1,0x95,0xf9,0x8f,0xb5,0x79,0xf1,0xf2,0xce,0x20,0x71};
    static std::uint8_t product88[64]      = {0x31,0xa7,0x17,0x08,0x56,0x70,0x9c,0xaa,0x37,0x75,0x77,0x5a,0x9d,0x65,0x62,0xab,0xa8,0x08,0xf6,0xe2,0x88,0x4f,0x0f,0xc2,0x21,0x38,0x8b,0xfe,0x88,0x05,0x09,0x19,0x62,0x9f,0x68,0xd0,0x16,0x89,0xb6,0x67,0x0c,0xe2,0x2c,0x18,0x83,0x46,0xa6,0xb4,0x3d,0x93,0x64,0x26,0x7d,0xdc,0x76,0x87,0x5f,0x49,0x7a,0x43,0xa1,0x85,0xeb,0x83};
    mpz_from_bytes(multiplier, multiplier88, 8);
    mpz_from_bytes(multiplicand, multiplicand88, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product88, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier89[32]   = {0x5c,0xf7,0x3a,0x02,0x9c,0xb4,0xb3,0x84,0x3d,0xd1,0xbb,0xe4,0x10,0x32,0xbf,0x81,0xc5,0x6b,0x5b,0xcd,0xb4,0xbc,0x68,0x91,0x2f,0xb0,0x30,0xf0,0xb6,0x95,0xab,0x29};
    static std::uint8_t multiplicand89[32] = {0x8c,0xfa,0x2d,0x26,0x5f,0xa0,0x12,0x47,0x87,0xec,0x10,0xb8,0x4f,0xd6,0xca,0x3a,0xad,0x4e,0xaf,0xe0,0x8c,0x26,0xd7,0x44,0x19,0xd5,0x93,0xb2,0xa4,0x81,0x9e,0x06};
    static std::uint8_t product89[64]      = {0x33,0x32,0x0d,0x8d,0x78,0xde,0xcc,0x41,0x3d,0x1e,0x54,0xf0,0xee,0x6d,0x02,0xc0,0x1b,0xb1,0x56,0xa0,0x33,0xc3,0xe9,0xa6,0x52,0x70,0x4c,0x31,0x31,0x9a,0x5c,0xf7,0x91,0xe0,0x2c,0x22,0x5a,0xb7,0xe4,0x13,0xc0,0xa6,0x07,0x77,0xd5,0x80,0xfd,0x1c,0x71,0x0f,0xbf,0xfb,0xcd,0xf9,0xa4,0x52,0x0a,0x10,0x26,0xe8,0x2a,0xce,0x50,0xf6};
    mpz_from_bytes(multiplier, multiplier89, 8);
    mpz_from_bytes(multiplicand, multiplicand89, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product89, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier90[32]   = {0xcd,0x3a,0xe8,0xc6,0xdd,0x3e,0xf1,0xd5,0x6c,0xf7,0xe0,0x9a,0xa8,0xcf,0xc4,0xef,0x79,0xcb,0xce,0x05,0xee,0x70,0x33,0x34,0x23,0x98,0x21,0x66,0x06,0x86,0x13,0xdb};
    static std::uint8_t multiplicand90[32] = {0xf5,0x8a,0x8c,0x57,0x51,0x2e,0xa8,0x1d,0xa0,0x43,0x56,0x9b,0x9b,0x1b,0x50,0xfa,0x8e,0xb7,0xec,0x92,0x7e,0x3b,0xec,0xbd,0x2f,0x8b,0x00,0xe2,0x69,0x6b,0x71,0xd0};
    static std::uint8_t product90[64]      = {0xc4,0xd8,0x73,0x0a,0x04,0x57,0x68,0xf6,0x63,0xa1,0x37,0x94,0xc8,0x32,0xc6,0x11,0xaa,0x93,0x34,0x57,0xd1,0xfa,0x9d,0xa2,0xb9,0x67,0xf4,0x51,0x39,0xbe,0xab,0xaa,0xac,0xf9,0x05,0x69,0xac,0xa0,0x51,0x92,0xfe,0x6f,0xbe,0x31,0xc9,0x9f,0x12,0x4f,0xc3,0xda,0x92,0xa3,0x1d,0xd1,0x15,0x8e,0x9f,0xf1,0x6b,0x4b,0x9b,0x3c,0xcc,0xf0};
    mpz_from_bytes(multiplier, multiplier90, 8);
    mpz_from_bytes(multiplicand, multiplicand90, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product90, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier91[32]   = {0xae,0x5d,0xfb,0x4c,0x35,0x7b,0x6e,0x60,0xce,0x86,0x75,0x2c,0x93,0xad,0x55,0x60,0x0e,0xd7,0xe6,0x5e,0xe0,0xab,0x1c,0xb5,0x3a,0xb0,0x87,0xcf,0x92,0x0e,0x0d,0x67};
    static std::uint8_t multiplicand91[32] = {0xe9,0xa3,0x63,0x56,0x09,0x0a,0x89,0x13,0xef,0x7a,0xee,0xe7,0x06,0x02,0x47,0xd6,0x03,0x1e,0x67,0x51,0xcf,0xb1,0xbf,0x95,0x43,0x3a,0x99,0x55,0xa2,0x36,0xbf,0x41};
    static std::uint8_t product91[64]      = {0x9f,0x22,0xd3,0x38,0x50,0x1c,0xc4,0x35,0x75,0x30,0xba,0xbe,0xee,0x52,0x45,0x25,0x6e,0xb5,0x12,0x82,0xb6,0xf8,0xfd,0x53,0x51,0x93,0x01,0xc6,0xeb,0xa8,0xe1,0x6e,0xe0,0xe2,0xb6,0x0b,0xd5,0xd7,0x16,0x77,0x47,0x91,0x68,0x0c,0xdf,0x99,0xc2,0x54,0x88,0xdf,0x3c,0xb0,0x94,0xa9,0x28,0xd5,0x7f,0x5f,0x0f,0x51,0x93,0x4b,0x40,0x27};
    mpz_from_bytes(multiplier, multiplier91, 8);
    mpz_from_bytes(multiplicand, multiplicand91, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product91, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier92[32]   = {0x30,0xb3,0x21,0xb3,0xe4,0x71,0x28,0x7f,0x9c,0x52,0xf0,0x96,0x56,0x39,0xaa,0xaf,0xfb,0x27,0x79,0xe9,0x3f,0x25,0x83,0x87,0x6c,0x03,0xaa,0x8d,0x42,0x5e,0xf8,0xc1};
    static std::uint8_t multiplicand92[32] = {0x2d,0xf5,0x2c,0xcd,0x86,0x71,0xe0,0xc2,0x24,0x43,0x61,0xfd,0x28,0x69,0x1f,0x33,0x75,0x6f,0xb2,0x00,0x65,0x0a,0x11,0x26,0x45,0xef,0xb8,0xf9,0x4f,0xd1,0x95,0xc4};
    static std::uint8_t product92[64]      = {0x08,0xbe,0x20,0xe1,0xc3,0x21,0xda,0x33,0x48,0x4c,0x92,0x58,0x10,0xd7,0x13,0xc1,0xc5,0x16,0x49,0x89,0x14,0xf5,0x0a,0x49,0x55,0xe3,0x95,0x93,0x84,0xd4,0x93,0xf2,0x5c,0xd7,0x0e,0xfc,0xb9,0xa1,0x61,0x78,0x5f,0x78,0x25,0xfd,0xfa,0x0d,0x22,0xaa,0x38,0xe0,0x46,0x85,0x5e,0x3d,0x8e,0xa2,0xbc,0x3a,0xf5,0xcd,0xbc,0x0f,0xc8,0xc4};
    mpz_from_bytes(multiplier, multiplier92, 8);
    mpz_from_bytes(multiplicand, multiplicand92, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product92, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier93[32]   = {0xe9,0x5a,0x52,0xe9,0x69,0x10,0x72,0x5f,0xb9,0x9e,0x2e,0xb7,0x82,0xd1,0x21,0x74,0x73,0x0f,0x75,0x22,0xfa,0x42,0xbb,0xa5,0xb2,0x63,0xf0,0x99,0xfb,0xb4,0x6c,0x9e};
    static std::uint8_t multiplicand93[32] = {0x74,0xab,0xce,0x98,0x6d,0xbe,0xe0,0x87,0xd8,0xc3,0x80,0x19,0x96,0xe3,0x28,0x20,0x01,0xec,0xe4,0x80,0xd7,0xd8,0x4c,0x82,0xfb,0x12,0x36,0xfd,0x94,0x32,0xb4,0x23};
    static std::uint8_t product93[64]      = {0x6a,0x59,0x89,0x38,0xc5,0xe7,0x21,0xf3,0x2b,0x95,0xf4,0x7a,0xe1,0x74,0x6e,0xdf,0x1e,0x0f,0x94,0xf7,0x52,0x0c,0xd7,0x1e,0xe1,0x41,0x26,0x19,0x20,0xb6,0x29,0xe3,0x9b,0xda,0x05,0x4e,0xdb,0x9c,0x25,0xc6,0x7e,0x53,0xb4,0xf0,0xd4,0x3c,0x69,0xc1,0xa3,0x2d,0xd2,0xf3,0x93,0xdf,0xb4,0x64,0x09,0xc2,0x4e,0x36,0xd4,0xe5,0xf1,0x9a};
    mpz_from_bytes(multiplier, multiplier93, 8);
    mpz_from_bytes(multiplicand, multiplicand93, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product93, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier94[32]   = {0xcd,0xca,0x24,0x84,0xc9,0xea,0x87,0x61,0x55,0x2f,0x74,0xcc,0xdb,0xce,0x96,0xef,0xf2,0x27,0x29,0x63,0x6c,0x47,0x9e,0xc8,0xf6,0x53,0x4e,0x18,0xdf,0x2c,0x4d,0x56};
    static std::uint8_t multiplicand94[32] = {0x92,0x14,0x72,0x90,0x5b,0x2e,0xf6,0xc1,0x47,0x5b,0x58,0x40,0xa6,0xa0,0x5a,0x72,0x42,0xba,0x87,0x3e,0xaf,0xc2,0xa0,0x07,0xa2,0x1b,0x2a,0xb8,0x8e,0xe8,0x31,0xf3};
    static std::uint8_t product94[64]      = {0x75,0x6d,0xb8,0xb6,0xa4,0xcb,0xcf,0xcd,0x7b,0xe1,0x7d,0x55,0xca,0xfb,0x43,0xdd,0xf8,0x0a,0xe0,0x46,0x07,0xe6,0xe7,0x21,0x5e,0xc5,0x13,0x2e,0x0f,0x19,0xec,0x93,0x4b,0xa9,0xf7,0x1d,0xda,0x67,0x0f,0xe3,0xf1,0xb6,0xd7,0x4c,0x0d,0x37,0x01,0xeb,0x43,0x5a,0x22,0x92,0xbc,0x63,0x47,0x2c,0x95,0xf4,0x69,0x2f,0x1b,0xca,0xde,0xa2};
    mpz_from_bytes(multiplier, multiplier94, 8);
    mpz_from_bytes(multiplicand, multiplicand94, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product94, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier95[32]   = {0x5e,0xf0,0x24,0x26,0x54,0x16,0xad,0x97,0xec,0x05,0x5f,0x9d,0xdc,0x8f,0x21,0xff,0xc7,0xaa,0x90,0x53,0xf0,0x77,0x75,0x12,0x39,0x97,0x71,0x7a,0x72,0xd8,0x21,0xfd};
    static std::uint8_t multiplicand95[32] = {0x2c,0x76,0x60,0x78,0x23,0x31,0xe2,0xad,0x30,0x9d,0xa0,0x79,0x73,0x6d,0xbb,0x15,0x8b,0x58,0xad,0x74,0xc3,0x24,0xd3,0xc7,0x36,0x24,0xb3,0x63,0x3d,0xaa,0xe5,0xd1};
    static std::uint8_t product95[64]      = {0x10,0x7d,0x2c,0xad,0xdb,0x4b,0x4e,0xc2,0x6f,0x61,0x00,0x68,0x2f,0x26,0x0e,0xa6,0xb3,0xfc,0xf3,0xe2,0xfe,0x61,0xfb,0x05,0x52,0x8d,0x71,0x81,0x7c,0xcb,0xe9,0x40,0xe4,0xa9,0x7a,0x7f,0x1b,0xbd,0x01,0x22,0xe3,0x69,0x67,0x5d,0x30,0xec,0x64,0x25,0x39,0xfc,0x6b,0x2c,0x1f,0x08,0x66,0xe3,0xb4,0xc0,0xfd,0x29,0xf3,0xdd,0x10,0x8d};
    mpz_from_bytes(multiplier, multiplier95, 8);
    mpz_from_bytes(multiplicand, multiplicand95, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product95, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier96[32]   = {0xc1,0x6c,0x23,0xc1,0x64,0x23,0x7b,0x12,0x0e,0x82,0x00,0xaf,0x4f,0x0a,0x17,0xce,0xf9,0x1d,0x43,0xc2,0x16,0x11,0xc7,0xe0,0x94,0xf6,0xc7,0xcc,0x72,0x56,0x84,0x07};
    static std::uint8_t multiplicand96[32] = {0x3e,0x69,0xa5,0xa1,0xcc,0x55,0x53,0xa3,0xea,0x76,0xdd,0x70,0x8b,0xcf,0x83,0x75,0xf6,0x80,0xad,0x0f,0x1c,0x73,0xe9,0x7a,0x6b,0xa7,0x23,0x98,0xa2,0x8c,0x3f,0xec};
    static std::uint8_t product96[64]      = {0x2f,0x28,0x03,0x28,0x73,0x03,0x71,0x1e,0x96,0x2a,0x1e,0x7c,0xcf,0xc8,0x9a,0x19,0x79,0x2b,0xd3,0x03,0x59,0x84,0xd2,0xaa,0x30,0xcd,0xf6,0x12,0x35,0x7f,0xfa,0x9f,0x03,0x23,0xd8,0x90,0x06,0x7d,0x14,0x69,0xff,0x89,0xa0,0x4d,0x93,0x60,0xe5,0x48,0x24,0x00,0xd6,0xfb,0x6e,0x34,0xc8,0x11,0x77,0xd1,0x20,0xa1,0x54,0x13,0x6f,0x74};
    mpz_from_bytes(multiplier, multiplier96, 8);
    mpz_from_bytes(multiplicand, multiplicand96, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product96, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier97[32]   = {0x33,0x27,0xdd,0xfb,0x36,0xe0,0x60,0x01,0xfd,0x83,0x7e,0xb8,0x45,0x7b,0x5d,0xd7,0x75,0xad,0x1d,0x00,0xd8,0x0c,0x05,0xf0,0xe8,0x1d,0xe6,0x4d,0xcc,0x44,0x0b,0xd9};
    static std::uint8_t multiplicand97[32] = {0x3e,0x9a,0xd0,0x6c,0x44,0x95,0x47,0xb2,0x27,0x3e,0x5d,0x0a,0x58,0xa5,0xcb,0xee,0x85,0x97,0xb6,0x18,0x48,0xca,0x7d,0x59,0x58,0xb6,0x8f,0xae,0x8d,0x0a,0x9f,0x3f};
    static std::uint8_t product97[64]      = {0x0c,0x82,0x97,0x64,0x67,0x4b,0x88,0x4a,0x47,0x2d,0x90,0xaa,0x06,0x5c,0xe2,0x7d,0x89,0xfe,0xcd,0x09,0xe9,0x39,0x40,0x02,0x49,0x8a,0x15,0x1f,0x37,0x6e,0x85,0x2f,0xc5,0x9c,0x94,0x52,0x9e,0xa8,0x62,0xc0,0xc2,0x8b,0x5e,0xc6,0x72,0x1f,0xdb,0xb2,0xd3,0xad,0x62,0x1d,0x1e,0x11,0x4d,0x56,0x67,0x15,0xb8,0xb0,0x83,0x94,0xb1,0x67};
    mpz_from_bytes(multiplier, multiplier97, 8);
    mpz_from_bytes(multiplicand, multiplicand97, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product97, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier98[32]   = {0xd9,0xfc,0xcf,0x4b,0x05,0xdb,0x49,0x14,0xbc,0x52,0xf1,0x44,0xc4,0x53,0x52,0x10,0xb2,0xfe,0xfe,0x1d,0x01,0x9e,0xbf,0x1b,0xe7,0xb3,0x40,0x94,0x10,0x69,0xce,0xd9};
    static std::uint8_t multiplicand98[32] = {0xb1,0x58,0x0a,0x4e,0xe6,0x48,0x58,0x55,0x1c,0xf6,0x7a,0x81,0xc8,0xb4,0xd5,0xa0,0xbd,0x3e,0x22,0x6f,0xd8,0x82,0xde,0xbf,0xcd,0x6c,0xed,0xb3,0x2f,0x0c,0x04,0x17};
    static std::uint8_t product98[64]      = {0x97,0x02,0xc3,0x01,0x30,0x0d,0x74,0x8d,0xe4,0x39,0xf8,0x2e,0x00,0xda,0x7b,0xa3,0x0a,0x18,0x06,0xd5,0xb5,0xff,0x76,0xbe,0x7e,0x79,0xe0,0x44,0x1d,0x7a,0x9b,0xf1,0x7b,0xb0,0x07,0xc5,0x17,0xa6,0x93,0x18,0xa6,0xf4,0xbd,0x14,0x76,0x6b,0x74,0x4b,0xe1,0x74,0xf4,0x8f,0x9c,0x56,0xc4,0x4a,0x4b,0x17,0xd6,0x39,0xa9,0xe8,0xf9,0x7f};
    mpz_from_bytes(multiplier, multiplier98, 8);
    mpz_from_bytes(multiplicand, multiplicand98, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product98, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }

    static std::uint8_t multiplier99[32]   = {0xa1,0x91,0x11,0xc4,0xa7,0xdb,0x48,0x76,0x44,0xe7,0xe9,0x66,0xdc,0x9c,0xfa,0x9d,0x86,0xcd,0xa8,0xa4,0x1e,0x99,0xa5,0xe7,0xe6,0xbf,0x8f,0xea,0x29,0x96,0xb8,0x4b};
    static std::uint8_t multiplicand99[32] = {0x4d,0xe0,0x20,0x3a,0xf8,0xc2,0x03,0x0f,0x9b,0xad,0xb9,0x97,0x2d,0x66,0x01,0x12,0xc9,0x21,0xb5,0xb3,0x33,0xc1,0xf5,0xbb,0x3e,0xa3,0x03,0x09,0x29,0x01,0x9d,0x24};
    static std::uint8_t product99[64]      = {0x31,0x26,0x15,0x9f,0x0c,0xa5,0x6b,0x48,0xf1,0x8c,0xb4,0x51,0xfa,0xbe,0x2e,0x2b,0xac,0xb0,0x3b,0x15,0x63,0xe0,0x21,0xa9,0x7b,0xc7,0x36,0xbc,0xc7,0x3b,0x69,0x0e,0x28,0x2c,0xbd,0x41,0xa7,0x96,0x52,0x0b,0x1e,0x8c,0x41,0xc6,0xc4,0xa4,0x40,0xa2,0x05,0x9c,0x74,0x55,0x86,0xd1,0x51,0x06,0xba,0xfc,0x81,0x2d,0x03,0x82,0xe9,0x8c};
    mpz_from_bytes(multiplier, multiplier99, 8);
    mpz_from_bytes(multiplicand, multiplicand99, 8);
    mpz_mul(product[0], multiplier, multiplicand, 8);
    mpz_to_bytes(product_data + 32, product[0], 8);
    mpz_to_bytes(product_data, product[1], 8);
    if (std::memcmp(product99, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::mpz_mul");
    }
}