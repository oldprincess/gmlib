#include <gmlib/number/internal/uint256_common.h>
#include <stdexcept>
#include <cstring>

using namespace number::internal::common;

void test_uint256_common_mul()
{
    uint256_t    multiplier, multiplicand, product[2];
    std::uint8_t product_data[64];

    static std::uint8_t multiplier0[32]   = {0xd9,0xdd,0xc5,0xed,0x91,0xf2,0x6f,0xd5,0xd5,0xbd,0xe5,0x25,0xc9,0xb6,0x2a,0xb9,0xd1,0xfc,0x74,0xed,0xc3,0x25,0xbe,0x3d,0x1e,0xe4,0xf4,0xea,0x0d,0x3c,0xc3,0x8a};
    static std::uint8_t multiplicand0[32] = {0xf0,0xf1,0xbe,0x67,0xbd,0xd3,0x4b,0x16,0xff,0x43,0xe9,0x4c,0xdf,0x82,0x3c,0xa9,0x2d,0xe3,0xd6,0x52,0xc4,0x94,0x6a,0x56,0xe8,0x69,0xa4,0x67,0x0c,0x21,0x0a,0x0c};
    static std::uint8_t product0[64]      = {0xcd,0x0d,0xa5,0x60,0xf0,0x27,0x2f,0xcd,0x7b,0x14,0x89,0x92,0x69,0x8d,0x3c,0x04,0x38,0x92,0x6a,0x50,0x2b,0x61,0xdf,0x98,0xf6,0x44,0xc1,0xb6,0x23,0xc1,0x5e,0x79,0x02,0x69,0x6b,0x3d,0xdf,0xac,0x23,0xc4,0xe9,0x41,0xdd,0x54,0x7d,0x41,0x18,0x17,0xaf,0x61,0xe8,0xf1,0xfc,0xb2,0xd3,0x34,0x73,0x68,0x42,0x02,0xab,0x46,0x8e,0x78};
    uint256_from_bytes(multiplier, multiplier0);
    uint256_from_bytes(multiplicand, multiplicand0);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product0, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier1[32]   = {0x5d,0x19,0x48,0xb7,0x66,0x61,0x16,0xba,0x9e,0x4e,0x3b,0xdb,0x96,0x34,0x9c,0x68,0x59,0xe6,0x98,0x1a,0xd8,0x1d,0x34,0x59,0x89,0xb4,0xe4,0x4d,0x43,0x21,0xf9,0xbd};
    static std::uint8_t multiplicand1[32] = {0x0f,0xa8,0xd3,0x55,0x3d,0x91,0xec,0xaa,0xb5,0x92,0x44,0x50,0x7b,0x21,0xed,0xb3,0x72,0x0e,0x7e,0xa2,0x5a,0xd1,0x28,0xf7,0xb0,0xdb,0xf6,0x77,0x0c,0x36,0x95,0x23};
    static std::uint8_t product1[64]      = {0x05,0xb1,0xe0,0xb5,0x4e,0x13,0x46,0x0a,0x24,0xd8,0x62,0x8b,0x26,0x0a,0xea,0x6e,0x50,0x79,0x85,0xeb,0xd8,0x20,0xb7,0x47,0x47,0x80,0x98,0xdc,0x6f,0x4e,0xb1,0x0e,0x7e,0xf4,0x63,0xa9,0x62,0xe9,0xaa,0x2c,0xa4,0x22,0xe2,0x20,0xc0,0x7f,0xc3,0x7e,0x6a,0xa3,0x13,0xe5,0x75,0xa0,0x71,0xca,0x53,0x83,0xa4,0x5d,0x7d,0xde,0x25,0xd7};
    uint256_from_bytes(multiplier, multiplier1);
    uint256_from_bytes(multiplicand, multiplicand1);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product1, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier2[32]   = {0x8b,0x82,0x25,0x8d,0x80,0xdb,0x76,0xaf,0x2f,0x75,0x50,0xec,0x0b,0x96,0x1a,0x44,0x1a,0x98,0x1c,0x71,0x11,0x34,0x42,0x7c,0x39,0x1d,0x32,0xce,0xcd,0x85,0xfc,0x7a};
    static std::uint8_t multiplicand2[32] = {0xb8,0xa8,0xfd,0xfe,0x43,0xe5,0x18,0x05,0x7d,0x56,0x83,0xaf,0xf4,0x37,0x8b,0xd5,0x8c,0xd4,0x8b,0x10,0x64,0x25,0x9b,0x30,0xfd,0xd8,0xba,0xe7,0x13,0x6f,0x71,0x95};
    static std::uint8_t product2[64]      = {0x64,0xa1,0xa2,0xd0,0x88,0xb8,0x50,0x69,0x5c,0xc9,0xc0,0xea,0x17,0xdf,0xcd,0x54,0xe5,0x2d,0x72,0xff,0x1c,0x18,0xb9,0x83,0x50,0x14,0x48,0x00,0x9b,0xfe,0x62,0xa6,0xb5,0x22,0x75,0x3a,0xce,0x0e,0x02,0x18,0xa4,0xbb,0x69,0x20,0x91,0xf2,0xbb,0xc3,0x9d,0x02,0xe6,0x42,0xef,0x5a,0x98,0x51,0xe8,0x9f,0x60,0x01,0x4a,0x53,0xcd,0x02};
    uint256_from_bytes(multiplier, multiplier2);
    uint256_from_bytes(multiplicand, multiplicand2);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product2, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier3[32]   = {0x26,0x47,0xda,0x0e,0x56,0x44,0x70,0xb9,0x57,0x77,0xfc,0x20,0x70,0xcc,0xbb,0x5b,0x65,0xbb,0xc9,0x88,0xc8,0x5a,0x83,0xf0,0x8a,0xe1,0xd0,0x1c,0x90,0xc9,0xf3,0xe6};
    static std::uint8_t multiplicand3[32] = {0xab,0x03,0xa2,0x77,0xb5,0x2c,0xeb,0xe0,0x03,0x9c,0x4a,0x23,0x52,0xe7,0x1c,0xa6,0x8f,0x9a,0x84,0xbb,0xda,0x57,0x63,0xb7,0x03,0x5e,0x81,0xbf,0xe0,0xae,0x67,0x9a};
    static std::uint8_t product3[64]      = {0x19,0x92,0x89,0xca,0x80,0x45,0xae,0x25,0x9a,0xc8,0x3e,0xf3,0x09,0x1c,0x58,0x3f,0xbe,0xe8,0xc0,0x6f,0xcd,0xbf,0xe8,0x92,0x13,0x74,0x85,0x54,0x8f,0x06,0x7d,0x08,0x62,0x67,0x34,0x25,0xf1,0x8d,0x0d,0x46,0x18,0x98,0x63,0xb4,0x57,0x24,0xa7,0xb2,0x86,0xd8,0xb0,0x6a,0x99,0xee,0x9f,0xdb,0xe3,0xb5,0xac,0xb7,0x60,0xf2,0x42,0x5c};
    uint256_from_bytes(multiplier, multiplier3);
    uint256_from_bytes(multiplicand, multiplicand3);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product3, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier4[32]   = {0xad,0x44,0x0e,0x03,0x3e,0xac,0xbd,0x2a,0x9a,0x92,0x27,0xd9,0xa3,0xf5,0xc2,0xaa,0xa6,0x0d,0x4e,0xdf,0x02,0x45,0xcc,0xbf,0x17,0x33,0x3e,0x8c,0x29,0x21,0x02,0xab};
    static std::uint8_t multiplicand4[32] = {0xc8,0x51,0x84,0x29,0x7d,0x1c,0x15,0xb3,0x59,0x0f,0x9b,0x93,0x29,0x92,0xe1,0x8e,0x90,0x3a,0xfb,0x97,0x6a,0x2b,0xdb,0xf7,0x1f,0x8c,0x16,0xad,0x1e,0x91,0xf0,0x33};
    static std::uint8_t product4[64]      = {0x87,0x94,0x56,0xee,0x23,0xca,0xf0,0x40,0x54,0x69,0xd7,0xba,0x00,0x06,0x90,0x91,0xe0,0x50,0x47,0x16,0xce,0x5a,0xf5,0x66,0xef,0x43,0x2c,0xd3,0xf6,0x11,0x69,0xc8,0x70,0x08,0x99,0xb7,0xce,0x4e,0x0a,0xc8,0x02,0xb0,0x57,0xb5,0xe9,0x67,0xa5,0xdf,0x30,0x99,0xfd,0xbe,0xb0,0x4c,0xbe,0xca,0x50,0x1b,0x86,0x0c,0xb0,0xee,0xd8,0x11};
    uint256_from_bytes(multiplier, multiplier4);
    uint256_from_bytes(multiplicand, multiplicand4);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product4, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier5[32]   = {0xf5,0x24,0xfe,0x5b,0xa1,0x48,0x6b,0x6c,0xb3,0x3c,0xa7,0x90,0x51,0xe6,0x12,0xa3,0x18,0xd1,0x05,0x5e,0xd6,0x8d,0xdd,0xfc,0x2e,0xef,0xa7,0x36,0x5e,0x7d,0x45,0xc2};
    static std::uint8_t multiplicand5[32] = {0xc1,0x2d,0xab,0xda,0x3c,0xb4,0x35,0x3f,0x5e,0x10,0x6f,0xb1,0x2f,0x29,0x01,0x2c,0xce,0xa6,0x90,0xb9,0x73,0xf0,0x3b,0x05,0x0c,0xb9,0x1d,0x2f,0xec,0xba,0x40,0xe7};
    static std::uint8_t product5[64]      = {0xb8,0xfc,0x9f,0xd4,0x7c,0x3b,0xfe,0x18,0x35,0xba,0x95,0xfb,0x5a,0x2a,0x72,0xe1,0x1e,0xd1,0xbc,0x02,0x3b,0xe0,0x04,0x0d,0x35,0x5e,0xba,0x0a,0xa5,0xd7,0xba,0x29,0x6d,0x38,0x98,0x51,0xf6,0xf3,0x08,0xd1,0xec,0x89,0x55,0x6f,0x94,0x10,0x19,0x84,0x1b,0x7b,0xe4,0x63,0x40,0x10,0x78,0xd5,0xeb,0xc2,0x65,0xa0,0x1b,0x6e,0x72,0x0e};
    uint256_from_bytes(multiplier, multiplier5);
    uint256_from_bytes(multiplicand, multiplicand5);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product5, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier6[32]   = {0x14,0x73,0xbf,0x3e,0x9b,0xe0,0x5d,0xad,0xad,0xa7,0xc1,0xaf,0xe0,0x55,0xdb,0x2f,0xad,0x3b,0x22,0x90,0x9e,0xdf,0x3e,0xbb,0x5b,0x15,0x9b,0xe8,0x43,0xb0,0x45,0x27};
    static std::uint8_t multiplicand6[32] = {0x70,0x8b,0xd0,0xac,0xb8,0x98,0x6a,0x13,0x2c,0x5b,0x6e,0xc9,0x66,0xbf,0xff,0x09,0xdd,0xaf,0x13,0x0f,0xa5,0x14,0xbf,0x17,0x45,0x8b,0xa5,0x23,0x68,0xe0,0xae,0x29};
    static std::uint8_t product6[64]      = {0x08,0xfd,0xcf,0x30,0x13,0x17,0x87,0x2d,0xe2,0xaa,0xde,0x36,0x94,0x69,0x70,0x7c,0xc6,0xdc,0x79,0x50,0x47,0x4f,0x3b,0x48,0x2a,0xc8,0x5f,0x36,0x55,0x3a,0x74,0x8f,0x2d,0xda,0xb1,0xd4,0x28,0xf6,0x2e,0x8d,0x7d,0xaa,0xdc,0x30,0x99,0xf5,0x0a,0x9f,0x47,0x70,0x4c,0x0a,0xf4,0x9b,0x75,0x64,0xfa,0x01,0x43,0xde,0x00,0x5b,0x95,0x3f};
    uint256_from_bytes(multiplier, multiplier6);
    uint256_from_bytes(multiplicand, multiplicand6);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product6, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier7[32]   = {0xf3,0x29,0x1e,0xea,0xf5,0x66,0x4d,0xb8,0xe6,0xa6,0xc4,0x8c,0xa2,0xe4,0xa1,0xe9,0x75,0x4f,0xd3,0x03,0x5c,0xa3,0x3c,0x5c,0x71,0x66,0x8a,0xaf,0x1b,0x41,0xb2,0x90};
    static std::uint8_t multiplicand7[32] = {0xe9,0x92,0x77,0x9c,0x55,0xbc,0xeb,0xc3,0x77,0xd9,0x05,0xee,0xc6,0x23,0x6e,0x88,0x06,0x0a,0x30,0x07,0xc7,0x44,0x41,0x20,0xfa,0xfe,0x8b,0x1a,0x30,0xa3,0x14,0x32};
    static std::uint8_t product7[64]      = {0xdd,0xdb,0x8c,0x34,0x17,0x38,0x39,0xbc,0xd7,0x6b,0x4f,0xee,0x81,0x5e,0x31,0x14,0xfa,0xb1,0xb3,0x24,0xd1,0x7f,0x9d,0x92,0x00,0x2c,0x44,0x5c,0x1b,0x6e,0xe8,0xb0,0x7c,0xfb,0xe2,0xff,0x4e,0x18,0x58,0x24,0xca,0x92,0x55,0xc5,0xb6,0x77,0xeb,0x3d,0xec,0x09,0x08,0x48,0xdd,0x97,0xb0,0x5a,0x86,0xf7,0xc3,0x44,0x26,0x78,0x20,0x20};
    uint256_from_bytes(multiplier, multiplier7);
    uint256_from_bytes(multiplicand, multiplicand7);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product7, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier8[32]   = {0x03,0x26,0x98,0x2e,0xf3,0x66,0x0d,0x21,0xf1,0x3c,0x56,0xa0,0x87,0x4c,0xe2,0x59,0xbf,0x6b,0x85,0xa5,0x01,0x11,0xdb,0x9c,0x0d,0xf7,0x6a,0x28,0xe6,0x37,0xa9,0x6f};
    static std::uint8_t multiplicand8[32] = {0x2e,0x5c,0xbe,0x05,0x72,0x51,0x9d,0x65,0x91,0x25,0xc3,0x15,0x2b,0x49,0x68,0xc4,0x7f,0x13,0xc4,0xfb,0xbb,0xc4,0x0f,0x84,0xa3,0x12,0xc5,0xa3,0x54,0xb6,0x0a,0x16};
    static std::uint8_t product8[64]      = {0x00,0x92,0x13,0x8d,0xd6,0xb7,0xd1,0x84,0x4a,0xdf,0x9a,0x10,0x9a,0x39,0x15,0x28,0x74,0x3f,0x51,0x28,0x04,0xe8,0x2a,0xe7,0xd8,0xe0,0xf4,0x7e,0xff,0xc4,0x03,0x08,0x58,0xc5,0x4d,0x6b,0xa5,0x3e,0xf1,0xe3,0x00,0x84,0x99,0x59,0xee,0x9d,0x8f,0x3d,0xdd,0x29,0x25,0xde,0xaf,0xf0,0xa4,0xea,0xc3,0xa7,0xf4,0x59,0xd6,0x50,0xe5,0x8a};
    uint256_from_bytes(multiplier, multiplier8);
    uint256_from_bytes(multiplicand, multiplicand8);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product8, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier9[32]   = {0xcf,0x36,0x66,0x6d,0xb1,0x60,0xf3,0x4e,0x0a,0x67,0x6b,0x61,0xc0,0x23,0x71,0x1b,0x5e,0xf6,0x86,0xe9,0x5b,0xb8,0x68,0x4d,0x02,0x8b,0x2d,0xbd,0xc6,0x9b,0xd9,0xd8};
    static std::uint8_t multiplicand9[32] = {0x04,0x13,0x88,0xe6,0x62,0xa0,0xbb,0xd9,0x78,0xb8,0xd2,0x3f,0xa6,0xa7,0x15,0xf8,0x65,0xd5,0x90,0xd3,0x16,0xf5,0xec,0xad,0x08,0x00,0xcf,0x47,0x35,0xab,0x81,0x7e};
    static std::uint8_t product9[64]      = {0x03,0x4c,0xa9,0x72,0xb2,0x08,0xe8,0x0a,0xeb,0x6c,0x77,0x93,0x16,0x2d,0x33,0xb6,0x47,0xb7,0x1f,0x3d,0x57,0xb8,0x6e,0xfc,0xa5,0x0f,0xde,0x77,0xbf,0x50,0x01,0x6d,0x97,0x3d,0x60,0xe6,0x65,0xb8,0x13,0x2b,0x6d,0xbb,0x87,0x49,0xb5,0xdb,0x9e,0x97,0x4b,0x5e,0x5c,0xef,0xca,0xf2,0x00,0xa0,0x14,0xce,0x25,0x98,0x84,0xc3,0x10,0x50};
    uint256_from_bytes(multiplier, multiplier9);
    uint256_from_bytes(multiplicand, multiplicand9);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product9, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier10[32]   = {0x80,0x6e,0x91,0xa4,0x48,0xc0,0x8b,0x49,0x91,0x52,0x89,0x0c,0xb1,0xb7,0x96,0xe2,0xb9,0xba,0x86,0x9c,0xb2,0x68,0x80,0x2b,0xca,0x6b,0x00,0xde,0xaf,0xb9,0x90,0x3c};
    static std::uint8_t multiplicand10[32] = {0xaf,0x68,0x49,0xd7,0x3d,0x21,0x5c,0x3e,0x37,0xe8,0xb2,0x8d,0xa8,0xa0,0xaf,0x64,0xb0,0xc6,0x02,0x45,0xfc,0xc2,0xbd,0x3f,0x80,0x40,0xeb,0x7a,0x99,0xa2,0x00,0x4b};
    static std::uint8_t product10[64]      = {0x57,0xff,0xe7,0x85,0xfb,0x88,0x6c,0x63,0xc0,0x55,0x7b,0x74,0x78,0x1d,0xe8,0x91,0x5c,0x27,0x6a,0xfa,0xc3,0xdd,0x47,0xe8,0x7f,0x9c,0x23,0x9b,0x99,0x50,0x2f,0xe8,0x3b,0x2b,0xb8,0x92,0xd7,0xa4,0x2a,0x03,0x52,0x95,0x49,0xb9,0x42,0x5c,0x7a,0x3f,0x6f,0x4d,0xf8,0xd1,0x68,0x3f,0xee,0xc5,0x16,0x20,0x2c,0x76,0x9d,0x55,0x41,0x94};
    uint256_from_bytes(multiplier, multiplier10);
    uint256_from_bytes(multiplicand, multiplicand10);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product10, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier11[32]   = {0x3d,0x6a,0x3d,0xb3,0x0c,0x2a,0xd7,0xe5,0x8e,0x37,0xe8,0x38,0x8e,0x4e,0xbb,0x32,0xbb,0xa6,0x73,0x11,0x51,0xef,0xea,0xee,0x2a,0xef,0xac,0x70,0xa1,0x56,0x26,0x27};
    static std::uint8_t multiplicand11[32] = {0x9f,0x09,0x9a,0x44,0xf6,0xed,0xd5,0x30,0x7e,0x7d,0x3d,0xdc,0x92,0xbe,0x32,0xa1,0x39,0x44,0xa9,0xd6,0xe5,0xda,0xc2,0xaa,0x2c,0xca,0x22,0x87,0x16,0xfc,0xb1,0x42};
    static std::uint8_t product11[64]      = {0x26,0x27,0x4a,0x10,0xd4,0x6d,0x48,0x44,0x5f,0xb5,0x79,0xa1,0x92,0x63,0x68,0x14,0x2b,0x70,0xc7,0xd3,0xe8,0x52,0x40,0x3d,0x79,0x3f,0xe5,0x78,0x1b,0x5f,0x39,0x4b,0x56,0xa7,0xd7,0x2c,0x77,0x8e,0xdb,0x7d,0x46,0xf8,0xaa,0x75,0xc4,0xc8,0xd5,0xdf,0xe5,0x38,0x76,0xad,0x6d,0xa5,0xff,0x17,0x89,0x05,0xd9,0x3c,0x10,0xfa,0xcd,0x0e};
    uint256_from_bytes(multiplier, multiplier11);
    uint256_from_bytes(multiplicand, multiplicand11);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product11, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier12[32]   = {0x7a,0x76,0xcb,0x50,0x37,0xdd,0xe6,0x45,0x3a,0x07,0xb0,0xdd,0x3f,0x86,0x8a,0x86,0x9a,0x00,0xf5,0x18,0x76,0x50,0xb7,0x1c,0xf6,0x4b,0xb8,0xff,0xcf,0x55,0x76,0xfd};
    static std::uint8_t multiplicand12[32] = {0xfa,0xd8,0xf1,0x4d,0xda,0x8f,0x0b,0x90,0xed,0xd2,0x91,0x99,0xc0,0xb0,0x32,0x5d,0x71,0x6b,0xba,0xd7,0xd2,0x91,0x31,0x21,0xa3,0xef,0x50,0x55,0x88,0xe6,0x9d,0x5f};
    static std::uint8_t product12[64]      = {0x77,0xff,0xca,0x36,0xf5,0xed,0x18,0xd8,0xe9,0x4f,0x97,0x8c,0x68,0x2f,0x86,0x88,0x2b,0x2e,0x31,0x4d,0x2f,0x5a,0xb5,0x68,0x09,0x30,0xd3,0x84,0xcc,0x4e,0x49,0xb1,0x43,0x93,0x99,0xaa,0x79,0x3d,0x0e,0x19,0x93,0x27,0x3d,0x3d,0xba,0x47,0xb9,0xaa,0x57,0x80,0x3e,0xa9,0x5d,0x00,0x56,0x00,0xac,0x4a,0xc9,0x15,0xa9,0xfe,0x50,0xe3};
    uint256_from_bytes(multiplier, multiplier12);
    uint256_from_bytes(multiplicand, multiplicand12);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product12, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier13[32]   = {0xff,0x50,0x9d,0x28,0x6c,0x10,0x61,0xd4,0x30,0xa6,0x55,0x43,0x48,0x52,0x23,0x9a,0x12,0x17,0x80,0x48,0x76,0x7c,0xf9,0x15,0xe5,0x30,0xcb,0x23,0xaa,0xb2,0xfa,0x0a};
    static std::uint8_t multiplicand13[32] = {0xf6,0x18,0x87,0x80,0x54,0xb5,0xbf,0xe4,0x41,0x76,0x33,0xa5,0x91,0x6e,0xdf,0xf8,0xe3,0x6f,0x05,0x8b,0xda,0x53,0x26,0x3a,0xf3,0xe8,0x15,0x7b,0x9d,0x0a,0xd0,0x2f};
    static std::uint8_t product13[64]      = {0xf5,0x6f,0xed,0xb7,0x13,0x4c,0x7b,0xae,0xe9,0xcc,0x78,0x27,0xd5,0xe1,0xcb,0x8c,0x68,0x54,0xe9,0x0b,0x9c,0xf5,0x11,0x97,0xa3,0xbb,0xbc,0xef,0x11,0x24,0x42,0x98,0xa8,0x58,0x58,0x18,0x94,0x26,0x25,0xb3,0x3c,0x31,0xac,0x3c,0xd4,0x68,0x9d,0x4c,0x6e,0x72,0x39,0x61,0x59,0x1b,0xa4,0xab,0x51,0xa7,0xa9,0x61,0xa8,0x68,0x07,0xd6};
    uint256_from_bytes(multiplier, multiplier13);
    uint256_from_bytes(multiplicand, multiplicand13);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product13, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier14[32]   = {0x6a,0xc8,0x7f,0xe0,0xb0,0x44,0xa9,0x89,0xe0,0x52,0x53,0x43,0xd4,0x02,0x0f,0xda,0x25,0xe3,0xb1,0xe2,0x84,0xac,0x01,0x56,0x50,0x6e,0x5b,0xdc,0xc9,0x05,0xb3,0x85};
    static std::uint8_t multiplicand14[32] = {0x23,0x6f,0xd8,0x7f,0x98,0x45,0xfb,0x5b,0x5a,0xab,0xae,0x28,0x65,0xb7,0xac,0x6f,0xba,0xcd,0x90,0x46,0xdb,0xec,0xbd,0x96,0xf2,0x5c,0x2e,0x33,0x25,0xc8,0x18,0x9e};
    static std::uint8_t product14[64]      = {0x0e,0xc8,0x10,0xb9,0x8f,0x67,0x12,0xf5,0x4e,0x41,0x18,0x25,0x33,0x34,0xd5,0x42,0x17,0x15,0xdc,0xee,0xce,0x80,0x70,0xad,0x00,0x67,0x35,0x88,0xd5,0xf9,0x68,0x2d,0x25,0x27,0xe5,0x60,0xa2,0xba,0x7a,0xe3,0x2d,0x94,0xe2,0xb7,0x1c,0xd2,0xda,0x38,0x94,0xf0,0x75,0xef,0x5f,0xb1,0xb0,0x17,0xfa,0x74,0xee,0x02,0x13,0x41,0x44,0x16};
    uint256_from_bytes(multiplier, multiplier14);
    uint256_from_bytes(multiplicand, multiplicand14);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product14, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier15[32]   = {0x51,0xaf,0x32,0xf8,0xb7,0xd1,0xd3,0x94,0xc0,0x30,0xa8,0x87,0x55,0xd3,0xf9,0x47,0x99,0xf3,0x5c,0x2f,0x2f,0xaa,0x9b,0xc7,0xf0,0x8a,0x1a,0x91,0xa2,0xf3,0x9d,0xa7};
    static std::uint8_t multiplicand15[32] = {0x33,0xf2,0x14,0xe2,0xa4,0x3e,0x75,0x36,0xd8,0xeb,0xc0,0x37,0x01,0x24,0xa1,0xc7,0x95,0x9b,0xa2,0xe5,0x6b,0x4b,0xfa,0x91,0x18,0x75,0xb6,0xe5,0x45,0x3f,0xae,0x4e};
    static std::uint8_t product15[64]      = {0x10,0x93,0x25,0x6f,0xbc,0xcb,0x29,0xeb,0x91,0x22,0x30,0xe8,0x8b,0xe8,0xb1,0x14,0x23,0x29,0x80,0x6c,0x3f,0xe3,0x14,0x18,0xd2,0x78,0x34,0xb8,0x89,0x6a,0xcf,0x65,0x2f,0x05,0xaf,0xca,0x05,0xdd,0x52,0x59,0x10,0xbb,0x5a,0x41,0x16,0xa7,0x87,0x0c,0xf0,0x4d,0xca,0x7e,0x0d,0x08,0xc7,0x64,0x9e,0x39,0x98,0xf6,0x0a,0x7a,0x8a,0xe2};
    uint256_from_bytes(multiplier, multiplier15);
    uint256_from_bytes(multiplicand, multiplicand15);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product15, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier16[32]   = {0x60,0x6b,0xcc,0x31,0x3d,0x5d,0x45,0x20,0x0f,0x60,0xe3,0x79,0x9b,0x2a,0x9c,0x0d,0xe7,0x31,0x07,0xf7,0xf9,0x06,0x08,0x45,0x41,0x85,0xf1,0x57,0xf9,0xca,0xc1,0x32};
    static std::uint8_t multiplicand16[32] = {0xc0,0x70,0x70,0x23,0x8c,0xf0,0x8f,0x37,0x5e,0xa9,0x68,0xf1,0xba,0xa5,0xc3,0x60,0xff,0xe3,0xfe,0xb6,0xc2,0xcc,0xe1,0x50,0x01,0xf6,0xee,0x42,0xb6,0x03,0x57,0x86};
    static std::uint8_t product16[64]      = {0x48,0x7b,0x32,0x8a,0xd0,0xb8,0xd0,0xe5,0xe9,0x26,0x2b,0xdf,0x8e,0x3c,0x0d,0x91,0xd6,0xae,0x61,0xf2,0x07,0xf9,0x60,0x81,0xbd,0x1a,0xd1,0xf3,0x04,0x8a,0x16,0x16,0x0e,0x77,0x60,0x22,0x2e,0x17,0x25,0x07,0x2c,0x87,0x98,0xbb,0x80,0x18,0xeb,0x95,0x26,0xea,0x0f,0x5c,0x83,0xca,0x03,0xca,0xee,0xad,0x97,0x8e,0x77,0x5f,0x1e,0x2c};
    uint256_from_bytes(multiplier, multiplier16);
    uint256_from_bytes(multiplicand, multiplicand16);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product16, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier17[32]   = {0x72,0x11,0xee,0x09,0x2b,0xa7,0x72,0x97,0xac,0x29,0x3e,0xb5,0xcb,0x52,0x4a,0x03,0x55,0x75,0xef,0x74,0x71,0xee,0x0a,0x51,0x24,0xcb,0x3f,0x5d,0x59,0x30,0x35,0x70};
    static std::uint8_t multiplicand17[32] = {0xa7,0xce,0x3b,0x7c,0x0f,0xe5,0xd6,0xaa,0x40,0x18,0x0f,0x87,0xf6,0xf5,0xed,0x9d,0x9d,0x1b,0xaa,0x02,0x0d,0xaf,0x04,0xd4,0x20,0x82,0xef,0x80,0x50,0xf8,0x72,0x15};
    static std::uint8_t product17[64]      = {0x4a,0xc5,0x97,0x36,0xf0,0x7c,0x3c,0xa3,0x35,0x15,0xb4,0x6f,0x8d,0x52,0xb3,0x22,0xad,0x10,0xe1,0xb3,0xb9,0x8e,0xaa,0xbf,0x8e,0xf2,0x83,0x84,0x34,0xcf,0xf8,0x2a,0x4e,0xdd,0x14,0xe0,0x5c,0xc5,0x8e,0x3a,0x82,0x9c,0x53,0xc3,0x93,0x99,0x73,0x98,0x34,0x7e,0x66,0x68,0x85,0xe1,0x4a,0x96,0xd2,0x0f,0x83,0xc6,0x8d,0x40,0x42,0x30};
    uint256_from_bytes(multiplier, multiplier17);
    uint256_from_bytes(multiplicand, multiplicand17);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product17, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier18[32]   = {0x41,0x83,0x97,0xc5,0xb7,0xd6,0x44,0x94,0xc0,0x01,0x4d,0xa8,0x32,0xdd,0x80,0x45,0xff,0x1f,0xe6,0xb0,0x5b,0x4b,0x03,0xd2,0xef,0x55,0x20,0x00,0x78,0xf7,0xae,0x6f};
    static std::uint8_t multiplicand18[32] = {0x2e,0x19,0x64,0xff,0xeb,0xc5,0x93,0xcf,0x15,0x7b,0xec,0x12,0x1a,0xab,0xa7,0xc0,0xcd,0x5a,0x5d,0xc8,0xc8,0xae,0x8a,0xb1,0xf4,0x48,0xd4,0x4d,0x0b,0xd6,0xc7,0x3c};
    static std::uint8_t product18[64]      = {0x0b,0xcc,0x24,0xf8,0x3f,0x0b,0x3a,0x6b,0x18,0x35,0x53,0x9e,0xaa,0xa0,0xc9,0x1b,0xb5,0xb2,0xca,0xed,0x59,0x54,0xaa,0xff,0x48,0xd2,0x10,0x3a,0x25,0xfe,0x55,0xf0,0x60,0x09,0x23,0xab,0x4a,0x16,0x6f,0x14,0xe2,0x71,0xb3,0x74,0x09,0x7c,0x85,0xbb,0xe5,0x24,0xad,0x22,0x55,0x6d,0x23,0xff,0x63,0x97,0x05,0x12,0x78,0x6f,0x2b,0x04};
    uint256_from_bytes(multiplier, multiplier18);
    uint256_from_bytes(multiplicand, multiplicand18);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product18, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier19[32]   = {0x30,0xcc,0xb4,0xba,0x0d,0x30,0x88,0xb8,0x06,0x04,0x22,0xbb,0x0a,0x6d,0x26,0x4f,0x1f,0xec,0xf7,0x54,0x4c,0x31,0x6f,0xa0,0x75,0x64,0x33,0x25,0x3e,0x04,0x2a,0xd9};
    static std::uint8_t multiplicand19[32] = {0x3f,0x6f,0xee,0x58,0xa6,0x52,0x32,0x8a,0x88,0xc2,0xda,0xbf,0xdd,0x24,0x58,0x86,0x29,0x80,0xf5,0x6b,0x54,0xa1,0x73,0xc0,0x1a,0x8d,0xea,0xa5,0xcd,0x39,0xa6,0x18};
    static std::uint8_t product19[64]      = {0x0c,0x17,0xb6,0xab,0x5c,0x02,0x2a,0x4d,0x24,0xed,0x0f,0x19,0x66,0xdf,0x29,0x19,0x1d,0x02,0x67,0x04,0xaf,0x45,0xcd,0xff,0x36,0x4b,0xaf,0xf3,0xe2,0xe3,0x0d,0x66,0xaf,0x65,0x5f,0x6a,0xb9,0xa6,0x4f,0xad,0x75,0x4f,0x0d,0x41,0x90,0xb1,0x70,0xce,0xd3,0xb7,0xe4,0xfb,0x48,0xbd,0x17,0x84,0x9b,0xe2,0x0e,0xce,0xd3,0x7d,0xba,0x58};
    uint256_from_bytes(multiplier, multiplier19);
    uint256_from_bytes(multiplicand, multiplicand19);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product19, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier20[32]   = {0x9a,0x5f,0xc6,0xaf,0xeb,0xd9,0x90,0xdd,0x21,0xf6,0x67,0xa7,0x60,0x6d,0x04,0x02,0x07,0xe9,0xf8,0xd7,0xa1,0xf4,0x51,0xc5,0x3d,0x8e,0xbe,0x13,0x20,0x20,0x2d,0xbd};
    static std::uint8_t multiplicand20[32] = {0x0b,0x1b,0x6f,0xd2,0x76,0xfa,0xde,0x27,0x96,0x72,0x14,0xfb,0x83,0x54,0xb7,0xd6,0x33,0x11,0x6e,0xc2,0x39,0xec,0x84,0xdf,0x97,0xa2,0x09,0x39,0xf6,0x9e,0xcd,0xc4};
    static std::uint8_t product20[64]      = {0x06,0xb2,0xa9,0x11,0xf5,0x26,0xe9,0xd2,0xa2,0x30,0x3a,0xda,0x87,0x66,0x2f,0xf6,0x46,0x5a,0x61,0xba,0x32,0xe2,0x31,0xef,0x0f,0xa5,0x53,0xca,0xbb,0x32,0x67,0x0e,0x74,0x37,0x77,0xfd,0x58,0xaa,0x14,0xd3,0x53,0xcc,0xb7,0x57,0x8c,0x02,0x99,0xf8,0x84,0x3d,0x4d,0xf9,0xc1,0xca,0x4f,0x6b,0xd5,0x8b,0x6b,0x43,0x35,0xe9,0x5d,0xb4};
    uint256_from_bytes(multiplier, multiplier20);
    uint256_from_bytes(multiplicand, multiplicand20);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product20, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier21[32]   = {0x02,0x5f,0x19,0x9c,0x01,0xc8,0xfc,0xf7,0x94,0x71,0x61,0xc1,0x26,0xc2,0x18,0xe8,0xf9,0x93,0xee,0xc2,0xaf,0x60,0x52,0xb7,0xa3,0x08,0x09,0xd8,0xb6,0x1a,0x9a,0xed};
    static std::uint8_t multiplicand21[32] = {0xbf,0x4b,0xb7,0xb2,0x1e,0x05,0xae,0x88,0x5a,0x7f,0xf6,0xc7,0x68,0x84,0xb5,0xc7,0xc5,0x2d,0xb4,0xae,0xbf,0xf1,0x93,0x0e,0x45,0xca,0xe0,0x58,0xa8,0x33,0xc8,0xf2};
    static std::uint8_t product21[64]      = {0x01,0xc5,0xa7,0xab,0x87,0xbf,0x00,0xd8,0x6d,0xe3,0xcd,0x8a,0x4e,0xb0,0x4b,0x4d,0x04,0x93,0x82,0x4a,0x15,0x0e,0xd8,0x3e,0xc1,0x79,0x5e,0x78,0x73,0xa2,0xcf,0x55,0x78,0xed,0x40,0x42,0x21,0x5f,0x14,0xc9,0xf9,0xd4,0x61,0xb6,0x82,0x1d,0x20,0x16,0xbe,0x3b,0x14,0x70,0x31,0x3d,0xd8,0x92,0x93,0xae,0xfb,0x91,0x53,0x66,0x9c,0x0a};
    uint256_from_bytes(multiplier, multiplier21);
    uint256_from_bytes(multiplicand, multiplicand21);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product21, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier22[32]   = {0x51,0x6a,0x36,0x13,0xe2,0x97,0x82,0x9f,0xba,0xc4,0x65,0xb0,0x74,0xa8,0xea,0x69,0xff,0x43,0x3e,0x4c,0xea,0x63,0x6b,0xed,0x35,0xdb,0x16,0x73,0x68,0x37,0xf7,0xc1};
    static std::uint8_t multiplicand22[32] = {0x00,0xd5,0xfe,0xfc,0x01,0x42,0x9e,0x42,0x07,0xcd,0x83,0xf7,0xea,0xb7,0x22,0x0a,0x2e,0x26,0x76,0xd4,0x03,0x2c,0xfb,0x3a,0xef,0xc6,0x16,0x66,0xc4,0x47,0xda,0x21};
    static std::uint8_t product22[64]      = {0x00,0x44,0x0e,0x76,0x85,0x27,0x18,0x61,0xa1,0xe5,0xf2,0xff,0x97,0x8b,0xb0,0xb0,0x0b,0xc7,0x67,0x1a,0x4c,0x4c,0xbd,0x1d,0xcb,0xf4,0x0e,0x69,0x28,0x2f,0x4a,0x6d,0xa1,0x5f,0x8d,0xa2,0x0b,0xf1,0x34,0xd5,0x6f,0xcb,0x7e,0x32,0x1e,0x1f,0xc6,0x44,0xfb,0x0b,0x2c,0xf3,0x26,0x4a,0xab,0xa5,0x3c,0x06,0x39,0xbb,0x92,0xb8,0x49,0xe1};
    uint256_from_bytes(multiplier, multiplier22);
    uint256_from_bytes(multiplicand, multiplicand22);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product22, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier23[32]   = {0xca,0xfb,0x00,0x50,0xe3,0xe5,0xf1,0x23,0xff,0xf9,0x49,0x12,0xd1,0xaf,0x19,0xae,0x92,0xcc,0x3b,0x9d,0x4b,0x9f,0xd7,0xc3,0xe5,0x40,0x2e,0x3e,0xe3,0xd2,0xf8,0x9d};
    static std::uint8_t multiplicand23[32] = {0xd0,0x1b,0x2c,0xdd,0x85,0x4e,0x56,0xbc,0x81,0x08,0x6d,0x73,0x8b,0xcb,0x2a,0x5a,0xfc,0x58,0xfc,0x9d,0xdc,0x2d,0x51,0xa7,0x6a,0x58,0x4a,0x11,0xe0,0x29,0xf5,0x85};
    static std::uint8_t product23[64]      = {0xa5,0x01,0x7c,0x4d,0x8a,0x22,0x8e,0x97,0xd9,0x84,0x5e,0xd3,0xdd,0x0a,0x55,0xd3,0xe0,0xe4,0x4b,0xa0,0xbc,0x82,0x79,0x51,0xb9,0x9e,0x91,0x14,0x62,0xc6,0xd0,0x4f,0x17,0x22,0x0b,0x70,0xe4,0x93,0xb3,0xd8,0x25,0x31,0xbc,0xa1,0xa4,0x57,0xd8,0x47,0xd9,0x31,0x40,0x1b,0xef,0xf9,0x39,0xd4,0x8a,0xdd,0x31,0x75,0x75,0xae,0x6a,0x91};
    uint256_from_bytes(multiplier, multiplier23);
    uint256_from_bytes(multiplicand, multiplicand23);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product23, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier24[32]   = {0x78,0x52,0xfd,0x7c,0xfd,0x3c,0x89,0x6a,0xda,0xa7,0xa0,0x48,0xd2,0x9d,0xae,0x3f,0x6c,0xc4,0x05,0x10,0xd1,0x3e,0xc9,0xa0,0x6d,0x5f,0xd7,0xec,0xbf,0xc0,0xaf,0xe5};
    static std::uint8_t multiplicand24[32] = {0x0a,0xc5,0x49,0xab,0xb5,0x1c,0xed,0xbb,0x13,0x70,0x29,0xd4,0xc8,0x05,0x4b,0x00,0xfa,0xcb,0x99,0x25,0x27,0xb6,0xdb,0x02,0x84,0x82,0x8a,0x30,0x0f,0xee,0xeb,0xf6};
    static std::uint8_t product24[64]      = {0x05,0x0f,0xf8,0x64,0x51,0xeb,0x79,0xb1,0x31,0x8a,0x53,0x49,0x20,0x7a,0x58,0xa5,0xf8,0x52,0x77,0xda,0x4f,0x8c,0xc5,0xd1,0xbd,0x69,0x3a,0xe9,0x92,0x75,0x54,0x9e,0xd0,0xfc,0xce,0xc2,0xdb,0xed,0x10,0x97,0xd4,0xf6,0x2a,0xb4,0x96,0x52,0x1b,0x5c,0xbf,0xc9,0xf2,0x3e,0xba,0x39,0x6e,0x68,0xeb,0xe2,0xcd,0xe8,0x16,0x86,0x3d,0x0e};
    uint256_from_bytes(multiplier, multiplier24);
    uint256_from_bytes(multiplicand, multiplicand24);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product24, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier25[32]   = {0xcc,0x99,0x43,0xe4,0xa7,0x0f,0x1a,0x4c,0x4c,0x72,0x13,0xae,0xeb,0x5b,0x8e,0xd4,0xe7,0x66,0xb8,0x2d,0xd8,0xdc,0x79,0x2d,0x7a,0xbc,0x86,0xc6,0x55,0x09,0x09,0x90};
    static std::uint8_t multiplicand25[32] = {0x4d,0x2d,0xa5,0x89,0xd0,0x0b,0xff,0x25,0x98,0x84,0xb7,0xd3,0x98,0xba,0xea,0xaa,0x91,0xf5,0x1d,0x23,0xac,0xd3,0x6f,0xc4,0x52,0x28,0x12,0x03,0x3f,0xfd,0x5c,0x2a};
    static std::uint8_t product25[64]      = {0x3d,0xae,0x94,0xa9,0xa2,0x7e,0xbb,0x45,0x1e,0xac,0x17,0xcd,0x43,0x0d,0xdc,0xed,0x9d,0xb5,0x53,0xd5,0x9e,0xc7,0xb5,0x2f,0xa2,0x4d,0xd2,0xa6,0x11,0x4f,0x44,0x21,0x5f,0x7c,0x3e,0x8b,0x42,0xc7,0x3d,0x3d,0xe7,0x80,0x68,0x3d,0x2a,0x29,0x7e,0x65,0x24,0xc1,0x6a,0x3c,0xb2,0x89,0x62,0x15,0x24,0x93,0xe3,0x12,0x16,0x3b,0x51,0xa0};
    uint256_from_bytes(multiplier, multiplier25);
    uint256_from_bytes(multiplicand, multiplicand25);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product25, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier26[32]   = {0x0c,0x47,0x91,0x0c,0x49,0xaf,0xf8,0xc5,0x4a,0x95,0x71,0x79,0xd6,0x0a,0x9b,0xdc,0xdb,0x8e,0xdf,0xa7,0x41,0xb5,0xaa,0xbf,0x4b,0xdd,0xdf,0x62,0x46,0x79,0x18,0x98};
    static std::uint8_t multiplicand26[32] = {0xa9,0xf2,0xbd,0xf1,0xd8,0xe1,0xdc,0xd1,0x26,0xb7,0xdd,0x6b,0x03,0xae,0xf6,0x25,0xc8,0xeb,0x13,0x41,0x76,0xf8,0x26,0x51,0x57,0xcc,0x25,0x59,0x34,0x9f,0x29,0xab};
    static std::uint8_t product26[64]      = {0x08,0x26,0xe3,0x84,0xaa,0x1f,0xaa,0x6c,0x14,0xf8,0xac,0x35,0x2a,0xbf,0xaa,0x84,0x77,0xf9,0xf9,0x86,0xf2,0x51,0x91,0xb5,0x22,0x7b,0xed,0x1e,0x1e,0x41,0x38,0x18,0x29,0xd4,0xc8,0xa2,0x1e,0xc8,0xb4,0xfc,0x46,0x38,0x16,0x19,0x58,0x2d,0x03,0x84,0x72,0xb1,0xa4,0xbf,0xe7,0xd1,0x66,0x69,0x2c,0x1c,0xd6,0xfb,0x9e,0x3b,0xc5,0x88};
    uint256_from_bytes(multiplier, multiplier26);
    uint256_from_bytes(multiplicand, multiplicand26);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product26, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier27[32]   = {0x7b,0x18,0x28,0x2f,0xc2,0xbf,0x2a,0x1a,0x7c,0xd3,0x6b,0x51,0x7b,0x23,0x1a,0x88,0x8a,0x37,0x70,0x9e,0xb8,0xbb,0x79,0x87,0x52,0x20,0x12,0x19,0x87,0x36,0xe1,0x5a};
    static std::uint8_t multiplicand27[32] = {0x79,0x44,0xb5,0xc4,0x09,0xd8,0x7f,0xd8,0x71,0x90,0xb6,0x07,0x6b,0xda,0xc4,0x9b,0xd8,0xc7,0x38,0xa4,0x13,0x20,0x62,0xe3,0x18,0xfc,0xef,0x31,0x86,0xbc,0x7c,0x5d};
    static std::uint8_t product27[64]      = {0x3a,0x4f,0x74,0xcf,0x97,0x60,0x92,0x34,0x9c,0x3b,0xee,0xf5,0x1b,0x6d,0xc3,0x85,0x85,0xcb,0x34,0xb2,0x6b,0x46,0x1d,0x7c,0x07,0xc7,0x57,0xe7,0x2e,0x25,0xc7,0x86,0xfa,0x80,0x1c,0x4e,0x70,0xfe,0xa7,0x8b,0xad,0xca,0xc7,0x5a,0x18,0x25,0x9c,0x01,0x8c,0x33,0xe1,0xe8,0x9f,0x5b,0x9d,0x0a,0x68,0x6d,0x1f,0x41,0x4e,0x2f,0x75,0xb2};
    uint256_from_bytes(multiplier, multiplier27);
    uint256_from_bytes(multiplicand, multiplicand27);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product27, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier28[32]   = {0x0f,0x9a,0xed,0x75,0x60,0x0e,0xe5,0x4b,0xf0,0xbe,0xe4,0x94,0x86,0x40,0x08,0xf6,0xbf,0x02,0xb7,0x80,0xa7,0xb1,0x5c,0x28,0x2a,0x83,0xf7,0xe1,0x1a,0x4e,0x66,0xa6};
    static std::uint8_t multiplicand28[32] = {0x7c,0x07,0xbf,0x85,0x2c,0x07,0x3f,0x23,0x3b,0x8e,0xf0,0x13,0x57,0x07,0x08,0xdc,0x97,0x1a,0xc6,0x2c,0xc5,0x65,0xb0,0xcf,0x99,0xdc,0x26,0xd1,0x3d,0x01,0xcd,0x4d};
    static std::uint8_t product28[64]      = {0x07,0x8f,0x83,0xee,0x0e,0x13,0xda,0x05,0x03,0x78,0xc9,0xd0,0x00,0x64,0x24,0xe7,0x69,0x03,0xf4,0x48,0x37,0x26,0x53,0xd1,0x0b,0x24,0x18,0xcb,0x9e,0x76,0x44,0x59,0x5c,0x4f,0x16,0xf2,0xa5,0x87,0xfa,0x9e,0x32,0x4d,0x63,0x98,0xd3,0x65,0x2f,0x0f,0x0f,0x88,0xad,0xd9,0xa9,0x97,0xde,0x56,0x9c,0x3d,0x0b,0x0f,0xa6,0x6d,0xcd,0xee};
    uint256_from_bytes(multiplier, multiplier28);
    uint256_from_bytes(multiplicand, multiplicand28);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product28, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier29[32]   = {0x13,0x9f,0xd3,0xea,0x9c,0x39,0x00,0x4c,0x19,0xb0,0xde,0x08,0xb1,0x62,0x34,0xdb,0x98,0x82,0x68,0xd4,0x96,0x3e,0x77,0x91,0x32,0x1e,0x79,0xe5,0x63,0x57,0x32,0x61};
    static std::uint8_t multiplicand29[32] = {0x27,0x1a,0x68,0xf8,0x5e,0xd6,0x86,0x85,0xb7,0x60,0x8d,0x00,0xbe,0xdf,0x3e,0xda,0xb0,0x01,0xc7,0x8e,0xfb,0x7e,0xd0,0xe1,0x42,0x12,0x75,0xe7,0xbc,0x16,0xb1,0x9f};
    static std::uint8_t product29[64]      = {0x02,0xff,0x5f,0x90,0x3b,0xd2,0x49,0x4f,0x53,0x7b,0xd5,0x99,0x12,0x45,0x4b,0xd4,0x62,0xf4,0xb0,0x13,0xed,0xf7,0x75,0x9d,0x95,0x3d,0x0f,0xc9,0x66,0xff,0x4a,0x19,0x1d,0x76,0xdd,0x13,0x37,0x02,0xe2,0x64,0xf3,0x69,0x1c,0x68,0x8d,0x23,0x38,0xa0,0x76,0x42,0xc2,0x06,0x55,0x03,0xb9,0xbb,0x2c,0x66,0xac,0x2c,0x8d,0x53,0x5b,0x3f};
    uint256_from_bytes(multiplier, multiplier29);
    uint256_from_bytes(multiplicand, multiplicand29);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product29, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier30[32]   = {0xa6,0xb8,0x90,0x94,0xb5,0xc3,0xee,0xaf,0x0b,0xd2,0xe9,0x27,0x9e,0x20,0xbd,0xb0,0x81,0x1a,0x44,0x6c,0x77,0x2c,0xee,0xf8,0x0d,0x72,0x57,0xae,0x56,0x41,0x6b,0xa2};
    static std::uint8_t multiplicand30[32] = {0x4f,0xbe,0xc2,0x85,0xc1,0xec,0xc9,0x84,0x5c,0x21,0xcb,0x36,0xca,0xf3,0xc0,0x35,0xcb,0x29,0xa7,0x28,0x6d,0xe9,0x02,0x4e,0xf8,0x14,0x87,0x8b,0x3e,0x88,0x1d,0x2d};
    static std::uint8_t product30[64]      = {0x33,0xef,0x30,0x48,0x2c,0x35,0x87,0x76,0x97,0x0c,0x71,0x71,0xed,0x6c,0xac,0xfe,0x24,0x19,0x92,0xb2,0x84,0xb2,0xc6,0xdb,0x5a,0x93,0x6a,0x5e,0x47,0x1e,0xd2,0xe3,0xef,0x10,0x8f,0xe8,0xaf,0x13,0x4c,0x07,0xc2,0xce,0xda,0x72,0x12,0x06,0x0c,0xe3,0x89,0xfa,0xd3,0x70,0x22,0xb9,0xa8,0xfd,0xcc,0x79,0xb3,0x32,0xfc,0xc1,0x45,0x7a};
    uint256_from_bytes(multiplier, multiplier30);
    uint256_from_bytes(multiplicand, multiplicand30);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product30, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier31[32]   = {0xa3,0x28,0xc6,0x0a,0xd6,0xda,0x53,0x29,0xaa,0x82,0xcd,0x24,0x7e,0xb9,0x97,0xe0,0x86,0x80,0x39,0x8d,0x33,0x41,0x54,0x1c,0xe4,0xde,0xcc,0xfc,0xa5,0xff,0xb8,0x18};
    static std::uint8_t multiplicand31[32] = {0x69,0x4c,0x33,0x93,0x62,0x7f,0xa0,0x5d,0xe4,0x56,0xd6,0xb0,0xac,0xb0,0x34,0x70,0xb2,0x82,0x80,0xf3,0x1e,0xc3,0xc2,0x51,0x32,0xd8,0xc3,0xeb,0x9c,0x91,0x6e,0x31};
    static std::uint8_t product31[64]      = {0x43,0x1c,0x4a,0x34,0x4b,0xfc,0x29,0x33,0x5d,0xfb,0xde,0x24,0x6b,0xa9,0x42,0xb3,0x2a,0x1e,0x42,0xd8,0x0c,0xa2,0xb9,0x3b,0xef,0x32,0xfd,0xee,0x95,0x9d,0x4f,0x42,0x07,0xf9,0xeb,0x67,0xc8,0xc0,0xfc,0x66,0x60,0x91,0xb2,0x03,0xf9,0x52,0xa1,0x2b,0x84,0x4e,0xda,0x11,0x97,0x70,0xfa,0xa9,0xca,0x33,0xeb,0xbd,0x8c,0xa4,0x8c,0x98};
    uint256_from_bytes(multiplier, multiplier31);
    uint256_from_bytes(multiplicand, multiplicand31);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product31, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier32[32]   = {0x32,0xf4,0x14,0xd0,0x6c,0xe8,0xf3,0xb2,0xd0,0x1c,0xc8,0xa1,0xbc,0xad,0xec,0x70,0xc8,0x7f,0x58,0xd0,0x5f,0x40,0xe5,0x36,0x67,0x55,0xd7,0x65,0xa3,0x1b,0x6f,0x35};
    static std::uint8_t multiplicand32[32] = {0xd4,0x18,0x7f,0x68,0x99,0x74,0xb7,0x0e,0xff,0x51,0xbb,0x4f,0xb5,0x46,0x19,0xdb,0xc4,0x67,0x86,0xf6,0x18,0x79,0x93,0x99,0x9f,0x31,0x55,0x35,0x87,0xf4,0xc6,0x75};
    static std::uint8_t product32[64]      = {0x2a,0x37,0x01,0x7a,0x75,0xc2,0x15,0xd4,0x33,0x38,0x28,0x6e,0xb4,0x06,0xd0,0xd8,0xa8,0x4f,0xc1,0xb5,0x35,0xe7,0x2f,0xad,0x59,0x1b,0xaa,0xd2,0xc9,0x0a,0x6d,0x19,0xc6,0xb7,0xb8,0x26,0x1f,0x9a,0xc1,0x32,0xbf,0x89,0x4d,0x56,0x3b,0x1e,0xe6,0x90,0x66,0x14,0xbe,0x24,0xe6,0xa4,0x17,0x63,0x99,0x76,0x9a,0x5e,0xb5,0x10,0xd1,0x39};
    uint256_from_bytes(multiplier, multiplier32);
    uint256_from_bytes(multiplicand, multiplicand32);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product32, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier33[32]   = {0x7c,0x73,0x5e,0x6b,0x5f,0xd0,0x31,0x02,0xcc,0xa2,0xf7,0xc8,0x89,0x42,0xe3,0x8b,0x4c,0x2a,0xf1,0xd2,0xf6,0xc3,0xe3,0xc8,0x42,0xbf,0xf5,0x99,0xba,0xf8,0x6e,0x04};
    static std::uint8_t multiplicand33[32] = {0x21,0xb9,0xda,0x3f,0x05,0x66,0x3f,0xcb,0x97,0xe0,0xdf,0xa8,0xcc,0x63,0x15,0xbc,0xa2,0x09,0x08,0x3d,0x06,0xc0,0x46,0xb1,0x22,0xce,0xe4,0xe9,0x84,0x64,0xb2,0x80};
    static std::uint8_t product33[64]      = {0x10,0x65,0x38,0xa3,0xf4,0x5d,0xb5,0x9b,0xba,0x94,0x3d,0xa9,0x59,0xc5,0x11,0xaf,0x29,0x16,0x50,0x2d,0x77,0x33,0xdc,0x43,0x1a,0xd1,0x35,0xb2,0x6e,0xb6,0x0c,0x40,0x5e,0xe4,0x8c,0x6a,0x25,0x08,0x35,0xa1,0x47,0x72,0x6c,0x9e,0xfa,0xf9,0x22,0xf2,0x4a,0xc4,0x1d,0x1a,0x65,0xce,0x3e,0xe3,0x8a,0x84,0x84,0x47,0x42,0x45,0xca,0x00};
    uint256_from_bytes(multiplier, multiplier33);
    uint256_from_bytes(multiplicand, multiplicand33);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product33, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier34[32]   = {0x48,0x02,0xb4,0xe6,0x37,0x6c,0x30,0x9c,0x5d,0x4a,0x4d,0x6a,0xba,0x99,0xd4,0xfd,0x0c,0xb7,0x4d,0xa7,0xc8,0x85,0x95,0x2a,0x8c,0xd5,0x35,0xd9,0x28,0xb7,0x36,0xbb};
    static std::uint8_t multiplicand34[32] = {0x81,0x72,0xa1,0x9b,0xd1,0x55,0xc7,0xad,0x33,0x7d,0xa5,0x45,0xaf,0x36,0x17,0x80,0x7a,0x11,0x1a,0x2c,0xd9,0x10,0xa0,0x3c,0xc4,0x7a,0x65,0x6c,0x65,0x86,0x36,0x6a};
    static std::uint8_t product34[64]      = {0x24,0x69,0x9b,0xd2,0x18,0xbc,0xd9,0xab,0xe0,0x56,0x92,0x8f,0x5c,0x46,0x76,0xfe,0x33,0x2c,0x14,0xfa,0x63,0x88,0x95,0x5f,0x17,0xfa,0x9d,0x6b,0x21,0x6a,0x24,0x28,0xd0,0xfa,0x8b,0x4e,0x51,0x64,0x69,0xcd,0xd7,0xe5,0x52,0x44,0x2f,0x07,0xe9,0xfa,0xcc,0xb3,0xdf,0x38,0x83,0x4d,0x58,0xe4,0xdd,0x60,0x90,0xe3,0xee,0x4a,0x1b,0x6e};
    uint256_from_bytes(multiplier, multiplier34);
    uint256_from_bytes(multiplicand, multiplicand34);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product34, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier35[32]   = {0xdf,0x66,0x32,0xa7,0x92,0x6a,0xbd,0xc2,0xf4,0xdc,0x11,0x3f,0x44,0xf7,0x87,0xce,0x26,0xce,0xb8,0xf6,0xff,0xfa,0x46,0x89,0x75,0x83,0x72,0x6e,0x4f,0x92,0x0b,0x0d};
    static std::uint8_t multiplicand35[32] = {0x71,0x6c,0x38,0x2b,0x55,0x9b,0xe3,0x36,0x0d,0x84,0xf7,0xe1,0xe8,0xba,0xa0,0x4b,0x24,0x6f,0x78,0xba,0x9f,0x6e,0x96,0x64,0x63,0x26,0xdb,0x75,0x46,0x18,0xbb,0x44};
    static std::uint8_t product35[64]      = {0x62,0xfa,0x8c,0x7d,0x82,0x47,0x04,0xf1,0x27,0x1d,0x8d,0x29,0x01,0x9e,0xe9,0x90,0xcb,0x01,0xdd,0x4d,0x9b,0xb3,0x17,0x00,0x31,0x9b,0x6d,0x7c,0x80,0xc3,0xe4,0xea,0x3f,0x65,0xaf,0xb7,0xcd,0xa5,0x92,0x4a,0x26,0x0c,0x7f,0x9e,0xa2,0xb3,0xec,0x98,0x68,0xe3,0x73,0x3c,0x4a,0x3e,0xfe,0x7b,0x17,0xbb,0x8a,0x14,0x68,0x15,0x6e,0x74};
    uint256_from_bytes(multiplier, multiplier35);
    uint256_from_bytes(multiplicand, multiplicand35);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product35, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier36[32]   = {0x1e,0x05,0x1e,0xec,0xbb,0xf8,0x09,0x09,0xde,0x90,0xa7,0x25,0x14,0x4c,0x80,0x31,0xd6,0xe8,0x47,0x13,0x3e,0x28,0x53,0x59,0x1d,0x7a,0xfa,0x43,0x05,0x1a,0x3f,0x2e};
    static std::uint8_t multiplicand36[32] = {0xa0,0x94,0x9e,0xeb,0x5a,0x2b,0x2b,0xd8,0x6e,0x22,0xdb,0x7c,0x59,0x17,0x72,0x20,0x26,0xc7,0x57,0x7d,0x2f,0x47,0x33,0x4f,0x1c,0x3d,0xef,0x45,0x51,0x48,0x5e,0x85};
    static std::uint8_t product36[64]      = {0x12,0xd4,0xa0,0xec,0x98,0xb4,0x0d,0x3e,0xb0,0x5a,0x62,0x61,0x6e,0x5c,0xf5,0x93,0x1d,0x5c,0x7e,0x79,0x42,0x8a,0x63,0x57,0xa4,0x1b,0x96,0x14,0x37,0x05,0x71,0xab,0xca,0x75,0xdc,0xbb,0xb7,0x4b,0xe4,0x1c,0x99,0xcb,0x4a,0x52,0xa3,0xda,0xa0,0xfa,0xb0,0x5e,0xaa,0xca,0x3a,0xb4,0xff,0x15,0x07,0x44,0x57,0x76,0x9c,0xc5,0xb6,0xe6};
    uint256_from_bytes(multiplier, multiplier36);
    uint256_from_bytes(multiplicand, multiplicand36);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product36, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier37[32]   = {0xa1,0x70,0x1b,0x0b,0xc6,0xb8,0x46,0x38,0x98,0x06,0x25,0x97,0xcf,0x4a,0x41,0x37,0x79,0xf6,0xaf,0x5b,0x69,0xfb,0x9b,0x12,0x87,0x15,0xa8,0xca,0xf3,0xdc,0xd9,0xc9};
    static std::uint8_t multiplicand37[32] = {0xa1,0x35,0xdc,0xb6,0x74,0xa3,0x2c,0x36,0x5a,0x74,0xce,0xd1,0xd5,0xd9,0xb6,0xbc,0x8d,0x82,0xa6,0xdf,0xe6,0x5e,0x3c,0x06,0x2f,0x19,0x29,0x6e,0x4c,0x84,0x5c,0x18};
    static std::uint8_t product37[64]      = {0x65,0xa9,0x78,0x67,0x67,0xe9,0x13,0xf9,0xde,0x8f,0xba,0x50,0x7e,0xac,0xe0,0xf1,0xfc,0x87,0x24,0x3c,0xc6,0xa7,0x8c,0x01,0xdd,0xe6,0xac,0x23,0x01,0xad,0xc7,0xcc,0x56,0x14,0xb5,0x80,0xa0,0x0d,0x2c,0xdf,0xbe,0xbd,0x7f,0x58,0x3c,0x2e,0xb0,0xe9,0x85,0xa8,0xef,0xe4,0x1a,0xed,0xe3,0x16,0x0f,0x23,0xd6,0x90,0x32,0x9c,0xa6,0xd8};
    uint256_from_bytes(multiplier, multiplier37);
    uint256_from_bytes(multiplicand, multiplicand37);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product37, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier38[32]   = {0x6c,0x45,0xae,0xef,0xb7,0x5f,0x37,0x2e,0xdf,0xf8,0x1b,0xa3,0xba,0x40,0x8c,0xa7,0xa8,0xb3,0xbd,0x89,0x68,0xb7,0xe4,0x13,0x09,0x5c,0xab,0x70,0xc3,0x44,0x6e,0x5b};
    static std::uint8_t multiplicand38[32] = {0xdd,0xfb,0x09,0x14,0x89,0xea,0x4f,0x02,0xf5,0xf1,0xe5,0x92,0xc5,0x6d,0x70,0xf3,0x82,0x09,0x4b,0x71,0xb4,0xb7,0x68,0x17,0x83,0x5d,0x08,0x8d,0xd0,0x17,0xaa,0x5b};
    static std::uint8_t product38[64]      = {0x5d,0xe2,0x54,0x2e,0x99,0x42,0x78,0xe6,0x30,0x7b,0xa5,0xcc,0x84,0x0a,0x83,0x5d,0xa7,0xcd,0x46,0xfb,0xad,0xb3,0x9e,0x33,0x70,0xfc,0xa5,0x5f,0x20,0xf6,0x24,0xda,0xc3,0x1a,0x1f,0x55,0xb7,0xec,0x37,0xd0,0x32,0xd8,0x8e,0x75,0x0c,0x83,0x53,0x59,0xad,0xea,0xc3,0x86,0x8c,0x74,0xa3,0x52,0x3b,0xc5,0x97,0xaf,0xb4,0xc8,0xa8,0x59};
    uint256_from_bytes(multiplier, multiplier38);
    uint256_from_bytes(multiplicand, multiplicand38);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product38, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier39[32]   = {0x3f,0x35,0x77,0xeb,0xa8,0x88,0x1e,0x6d,0x18,0x24,0x60,0xa1,0x56,0xbe,0xf9,0x3c,0x97,0xb0,0x4e,0xc8,0xbe,0x25,0xe4,0x64,0x75,0xcc,0xff,0x31,0xcb,0x4d,0x10,0x0e};
    static std::uint8_t multiplicand39[32] = {0xcf,0xa3,0x91,0x7f,0x9c,0x48,0xb9,0x84,0x64,0x2d,0x97,0xf8,0x8f,0xfd,0x32,0xa4,0xc5,0x96,0x75,0x50,0x0a,0x9d,0xf1,0x86,0x59,0x28,0x8b,0xf1,0x83,0x3d,0x52,0x69};
    static std::uint8_t product39[64]      = {0x33,0x44,0x9e,0xef,0xb3,0x5b,0xe1,0x8e,0xf3,0xb0,0x4b,0xfb,0xe9,0x8e,0xcf,0xf5,0xea,0xe3,0x50,0x74,0x94,0x8e,0x42,0x6b,0xd2,0x80,0x2d,0x75,0xfa,0x41,0x69,0x86,0x90,0x4a,0xb3,0x2e,0x74,0x43,0x5b,0x15,0x20,0x47,0x98,0x9d,0x4c,0x29,0x5f,0x70,0x68,0xaa,0x1b,0x25,0xb3,0xf6,0x3e,0x95,0xe0,0x2c,0x36,0x4d,0x0f,0x16,0x11,0xbe};
    uint256_from_bytes(multiplier, multiplier39);
    uint256_from_bytes(multiplicand, multiplicand39);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product39, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier40[32]   = {0x5e,0x6d,0xf6,0x68,0x3e,0x97,0xc9,0x54,0xfe,0x37,0x2d,0x3a,0x54,0xd3,0x16,0x1e,0x6e,0x84,0xbe,0x7b,0x16,0x44,0xfc,0x26,0xd4,0xa4,0xb1,0xe2,0x8c,0x9c,0xd5,0xd8};
    static std::uint8_t multiplicand40[32] = {0x42,0xde,0x9a,0x58,0x7f,0xe8,0x3d,0x4a,0x8f,0xa9,0x6e,0x34,0x56,0x29,0x7f,0xc9,0xce,0x9d,0x42,0x97,0xf1,0x9e,0xd4,0x42,0x3a,0xbe,0xff,0x5f,0xaf,0x62,0x06,0x50};
    static std::uint8_t product40[64]      = {0x18,0xaa,0x75,0xd1,0x59,0xbf,0x0a,0x86,0x0e,0x8d,0x07,0x05,0x2c,0x65,0x05,0xad,0x85,0x63,0x49,0xd3,0x25,0xcd,0xc7,0x33,0x0f,0x84,0x08,0xbb,0xd8,0xa0,0x1b,0xb1,0x44,0x56,0xf7,0x82,0xab,0xd2,0xc4,0x85,0xad,0x8b,0xcf,0xaa,0x92,0xbd,0x67,0x44,0x3c,0x21,0x33,0xe4,0x6a,0xd6,0x45,0x70,0x54,0x01,0x73,0x78,0x22,0xb5,0xe3,0x80};
    uint256_from_bytes(multiplier, multiplier40);
    uint256_from_bytes(multiplicand, multiplicand40);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product40, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier41[32]   = {0xfc,0x7d,0x60,0x51,0x97,0xeb,0x36,0xde,0x96,0x49,0x02,0xec,0x92,0x46,0xbb,0x52,0x9a,0x1c,0x6d,0xcd,0x9c,0xad,0x05,0x3d,0xe9,0x67,0xb5,0x5b,0xd1,0xdb,0x64,0xbe};
    static std::uint8_t multiplicand41[32] = {0x0b,0xb3,0x84,0xea,0xc6,0x97,0x46,0x69,0x02,0x6b,0x60,0x1d,0x17,0xf7,0x3c,0x3c,0x62,0xa6,0x4e,0x82,0x35,0x02,0x7d,0xf9,0xfd,0xc0,0x14,0x4c,0x70,0xa9,0x06,0x73};
    static std::uint8_t product41[64]      = {0x0b,0x8a,0x71,0xe6,0x0e,0xb6,0x9d,0xa1,0xd9,0x29,0x60,0x42,0xfb,0x33,0x68,0xdf,0x4d,0x1a,0x2b,0x83,0x50,0x41,0xbe,0xd8,0x00,0xdd,0x29,0x7d,0xf9,0x8a,0xe6,0x09,0x22,0xac,0x01,0xdd,0x11,0x68,0xc5,0xcf,0x31,0x7e,0xce,0xde,0x2d,0xfd,0x53,0x39,0x0c,0x67,0x8e,0x03,0x82,0x1f,0x40,0xa7,0xf2,0xc4,0xe5,0x7b,0x0b,0x58,0xb5,0x5a};
    uint256_from_bytes(multiplier, multiplier41);
    uint256_from_bytes(multiplicand, multiplicand41);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product41, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier42[32]   = {0x88,0xc9,0xa3,0xaf,0xe0,0x01,0x8d,0xbb,0xd8,0xd9,0x7a,0x97,0x1c,0x97,0x00,0x99,0x16,0x46,0x7a,0xfc,0x01,0xe1,0xd0,0xa0,0xa9,0xc6,0x39,0x37,0x20,0xcf,0xa8,0xda};
    static std::uint8_t multiplicand42[32] = {0x63,0xdb,0xa0,0x7a,0x3d,0x7b,0x10,0xc0,0xed,0xbb,0x04,0x52,0xba,0xfa,0xad,0x37,0x2c,0x2f,0xc8,0xd4,0xf5,0x37,0xaf,0x5f,0xc3,0xdc,0x61,0x84,0xf8,0x7c,0x94,0xa2};
    static std::uint8_t product42[64]      = {0x35,0x5b,0x54,0x8b,0x62,0x54,0xf6,0xcb,0xdc,0x3e,0xeb,0x12,0x48,0x71,0x77,0x03,0x71,0xd6,0x8c,0x94,0xf3,0x23,0x1f,0x8b,0x27,0x3b,0xe0,0x88,0xf3,0x65,0xdc,0x7d,0x58,0xb5,0x19,0xbd,0x45,0xb9,0xf0,0xbf,0x05,0x2a,0x1f,0xb6,0x92,0x36,0xaa,0xf4,0x2e,0x4a,0x5f,0xc7,0x49,0x61,0x9e,0x17,0xea,0x66,0xce,0x6b,0xca,0x9e,0xe1,0xf4};
    uint256_from_bytes(multiplier, multiplier42);
    uint256_from_bytes(multiplicand, multiplicand42);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product42, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier43[32]   = {0x7e,0x3a,0x00,0x97,0x53,0x03,0x54,0x13,0x57,0xf6,0x3b,0xac,0x78,0xf8,0x0a,0x92,0x58,0x44,0xe9,0x05,0x8b,0x2b,0xae,0xde,0x9b,0xd3,0x48,0x9e,0x53,0x06,0x4e,0x51};
    static std::uint8_t multiplicand43[32] = {0x03,0x01,0xb9,0xa3,0x8a,0x46,0xa7,0x50,0xf6,0xa2,0x15,0x07,0xa8,0xfb,0x53,0xce,0xc9,0x06,0x56,0x1b,0xbc,0xc2,0xaa,0xc4,0x28,0xf7,0xf0,0x1b,0x85,0xaa,0x35,0x1d};
    static std::uint8_t product43[64]      = {0x01,0x7b,0x87,0xc4,0x54,0x1a,0x33,0x04,0x4f,0x3a,0xc9,0xdc,0x0e,0x12,0xd6,0xad,0x6c,0x02,0x87,0x9c,0x76,0xaf,0xf7,0x0c,0xd7,0xc5,0x64,0x92,0x86,0x19,0x22,0xbb,0x28,0x4f,0xae,0x13,0x39,0x6f,0x4f,0x52,0xf2,0xa5,0x67,0xf7,0x7e,0x4e,0xc5,0xf7,0x3d,0x85,0xe9,0x40,0x7d,0x3f,0x12,0x61,0xc2,0x7a,0x9c,0x8a,0xcc,0xb7,0xa4,0x2d};
    uint256_from_bytes(multiplier, multiplier43);
    uint256_from_bytes(multiplicand, multiplicand43);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product43, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier44[32]   = {0xd5,0xd6,0xca,0xcd,0xcb,0xbf,0xe0,0x30,0x2b,0xb3,0x6e,0x5d,0x83,0xb1,0x4c,0x35,0xac,0x7e,0x86,0x00,0xec,0x24,0x03,0x86,0xf8,0x0e,0xbc,0x58,0xa1,0x35,0xa9,0xf4};
    static std::uint8_t multiplicand44[32] = {0x33,0x50,0xca,0x07,0xc9,0xe5,0xd2,0x6b,0x16,0x56,0x74,0xcb,0x63,0xe7,0xff,0x9b,0x9b,0x1b,0xa6,0xb5,0x88,0xce,0x6d,0xfd,0xa0,0xf5,0x1d,0x42,0x8c,0x61,0x00,0x1d};
    static std::uint8_t product44[64]      = {0x2a,0xdd,0x46,0x48,0x5d,0x72,0x72,0x28,0x45,0xc4,0xb6,0xd1,0xdb,0x45,0x55,0x32,0x17,0x7e,0x15,0x36,0xcd,0x30,0xd5,0xea,0x63,0xc2,0x31,0x29,0x8f,0x52,0x91,0x84,0xa2,0xcf,0x6d,0x37,0xb5,0x2c,0xcc,0x39,0xce,0x25,0x31,0xb8,0x43,0xf6,0xcf,0x61,0x04,0x4f,0xa5,0x9c,0xb8,0x54,0xb8,0xb4,0xba,0x04,0x39,0x39,0x18,0x88,0x40,0xa4};
    uint256_from_bytes(multiplier, multiplier44);
    uint256_from_bytes(multiplicand, multiplicand44);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product44, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier45[32]   = {0xec,0xda,0x61,0x6f,0x25,0x7c,0xe2,0x0c,0x70,0x70,0x09,0x71,0x0d,0xe5,0xb0,0x15,0xae,0x3d,0xca,0x1b,0xe0,0xfa,0xe3,0x30,0xf8,0xf2,0xbf,0x20,0xca,0xe0,0x3f,0xc4};
    static std::uint8_t multiplicand45[32] = {0x77,0xf0,0x6c,0x93,0x95,0xb4,0x4e,0x2b,0x31,0x32,0x0b,0x65,0x15,0x50,0xb0,0x59,0x62,0x75,0xa5,0x1b,0x31,0xcb,0x6c,0x99,0xab,0x2b,0x68,0x44,0xd4,0xd5,0x57,0x51};
    static std::uint8_t product45[64]      = {0x6e,0xf7,0xf4,0x7a,0xaf,0xa2,0xf5,0x5f,0x9c,0xda,0xea,0x4f,0xf8,0xc0,0xf3,0x19,0x96,0x84,0xa2,0x51,0x80,0xaf,0x9b,0x83,0xce,0xa0,0x5f,0xae,0x69,0xce,0x0b,0x57,0x24,0xa1,0xe4,0xa9,0xae,0xaf,0xf6,0x15,0x82,0xeb,0xdf,0x99,0x08,0x18,0xb4,0x2f,0x12,0x12,0x7f,0xa3,0xb7,0xfe,0x70,0xe1,0x11,0x71,0xaf,0xc5,0xc4,0xb3,0xc9,0x04};
    uint256_from_bytes(multiplier, multiplier45);
    uint256_from_bytes(multiplicand, multiplicand45);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product45, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier46[32]   = {0x93,0xe0,0x20,0x95,0x9e,0x7e,0xeb,0x94,0x7c,0x89,0x90,0x76,0x09,0xfa,0xd1,0x6f,0x25,0x40,0x5c,0x2e,0xc2,0xab,0xb1,0x4a,0xc4,0xa5,0xf2,0xa1,0x94,0x0e,0x6a,0x06};
    static std::uint8_t multiplicand46[32] = {0xbf,0xff,0xc2,0x5d,0x8a,0x65,0x9d,0x30,0x61,0x1d,0xc7,0x04,0x3c,0x48,0x1c,0xde,0xb8,0x5f,0x31,0xcf,0x00,0xf7,0xcc,0x02,0x5b,0x81,0x69,0xa3,0xa8,0x46,0x61,0x16};
    static std::uint8_t product46[64]      = {0x6e,0xe7,0xf4,0xd5,0xf7,0x58,0x4e,0x71,0x1d,0x07,0xbc,0x25,0x0d,0x1e,0x93,0x70,0x10,0x71,0x6b,0x67,0xb6,0x4d,0xe6,0xb7,0x8d,0x3b,0xf6,0x39,0x83,0xf8,0xbb,0xe7,0x45,0x3f,0x20,0x17,0xbf,0x83,0x02,0xbf,0xfb,0x13,0x33,0xb9,0xd3,0xd8,0x41,0x10,0xc7,0x54,0x8f,0x36,0x3e,0x0b,0x57,0x24,0xe6,0x39,0xfc,0x53,0x1d,0x0d,0x62,0x84};
    uint256_from_bytes(multiplier, multiplier46);
    uint256_from_bytes(multiplicand, multiplicand46);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product46, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier47[32]   = {0xca,0xd3,0x6c,0xa1,0xd3,0x37,0x82,0xeb,0xf8,0x19,0x0a,0xc4,0x3a,0x64,0x11,0xd9,0xf6,0x14,0xd1,0x1e,0xcd,0xe6,0xe8,0xea,0x0a,0xd5,0x00,0xf4,0x72,0xe6,0x48,0x2a};
    static std::uint8_t multiplicand47[32] = {0xba,0x94,0x35,0xd7,0xc4,0x32,0x76,0x94,0x21,0x82,0xd3,0xaa,0x7a,0x08,0x8e,0xa9,0x70,0xfd,0x11,0x68,0xdb,0xbe,0x69,0x3f,0x50,0xad,0xd1,0xe1,0xe7,0xb0,0x0e,0x43};
    static std::uint8_t product47[64]      = {0x93,0xd3,0x09,0xd1,0x19,0x84,0x08,0x43,0xf2,0x93,0x7c,0xe6,0xa0,0xa1,0xaf,0xa5,0xb4,0xa8,0x61,0x37,0xb5,0x56,0xac,0xd4,0xb8,0xbc,0xf4,0x00,0x05,0xb3,0x27,0x1f,0xfc,0x2a,0x51,0x59,0x5d,0x6d,0x21,0xfc,0x2a,0xf1,0x08,0x50,0xae,0x63,0x3c,0x47,0xa6,0xe2,0xe1,0x05,0x80,0x61,0x69,0x4e,0x99,0x3b,0x1e,0x9c,0x2d,0x17,0x2e,0xfe};
    uint256_from_bytes(multiplier, multiplier47);
    uint256_from_bytes(multiplicand, multiplicand47);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product47, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier48[32]   = {0x38,0x5b,0x6e,0x25,0x11,0x47,0x72,0x3d,0x32,0x10,0x37,0x01,0x8b,0x63,0x4c,0xee,0xa7,0xa7,0x63,0xb3,0x27,0xf7,0xa9,0xa8,0x08,0x63,0x00,0x25,0x76,0x3f,0x7c,0x2d};
    static std::uint8_t multiplicand48[32] = {0x2f,0xc0,0x27,0x08,0xea,0xa1,0x83,0xe4,0x10,0x4a,0x90,0xb3,0x67,0xdd,0xd5,0xaf,0x4f,0x70,0xe7,0x93,0x83,0x8e,0x99,0x9a,0xa8,0x46,0x98,0x95,0x4c,0x40,0x1f,0x90};
    static std::uint8_t product48[64]      = {0x0a,0x83,0x16,0x63,0x4e,0x43,0x4b,0x90,0x7c,0x35,0xc9,0x2d,0x62,0x85,0x0a,0x32,0xac,0x2f,0x18,0xb9,0x1d,0xf8,0x00,0x39,0xcf,0x80,0x4f,0x1f,0xfc,0xc3,0x9e,0xb4,0x4c,0xee,0x5b,0xee,0x8c,0xa9,0x66,0xb6,0xdb,0xc6,0xdf,0x8d,0x32,0xbf,0xfa,0x34,0x86,0x56,0x88,0xa6,0x0a,0x45,0x2f,0x42,0xde,0x29,0x05,0x51,0x9a,0xff,0x4c,0x50};
    uint256_from_bytes(multiplier, multiplier48);
    uint256_from_bytes(multiplicand, multiplicand48);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product48, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier49[32]   = {0x92,0x29,0x90,0x23,0xe8,0xe3,0x76,0x75,0xf4,0xb0,0x14,0xa8,0x04,0xb8,0x86,0xda,0x85,0xa8,0xaf,0x75,0xf3,0x8f,0x67,0x54,0xd9,0xc1,0xa4,0x96,0x2f,0x1b,0x5a,0xb4};
    static std::uint8_t multiplicand49[32] = {0x64,0xec,0xbe,0xad,0xed,0x11,0xa3,0xd0,0x90,0x08,0xd0,0x7d,0x0d,0x1d,0x75,0x8f,0x36,0x55,0x48,0xa8,0x0b,0xba,0x1a,0x44,0xa3,0x00,0x1b,0x14,0x8d,0x6a,0xcd,0xf0};
    static std::uint8_t product49[64]      = {0x39,0x9f,0x67,0x7d,0x0e,0x7f,0x27,0xcf,0xd7,0xba,0x63,0x5b,0xb4,0xad,0x6b,0xef,0x28,0xd7,0x07,0x08,0x28,0x59,0xbc,0x83,0x5f,0xf0,0x38,0xb9,0xdc,0x8f,0x0d,0x77,0x4f,0x3b,0xd8,0xe2,0x11,0xdf,0x01,0x47,0xbe,0x11,0xdc,0x85,0xa0,0xbb,0x50,0x11,0x6a,0xe8,0x9e,0xdf,0xad,0xff,0x21,0x05,0x41,0x2c,0x34,0xdd,0xc3,0xcf,0x2c,0xc0};
    uint256_from_bytes(multiplier, multiplier49);
    uint256_from_bytes(multiplicand, multiplicand49);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product49, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier50[32]   = {0x45,0x00,0xc4,0x4e,0x82,0x5d,0x50,0x95,0x78,0x92,0x2a,0x38,0x0c,0x97,0xdd,0xca,0x82,0x1d,0x1e,0xcd,0x0c,0x05,0x0d,0x66,0xf3,0x85,0xd7,0x9b,0x11,0xfd,0x60,0x67};
    static std::uint8_t multiplicand50[32] = {0x52,0xc0,0x65,0x5d,0xdb,0x60,0xe7,0x8d,0xb1,0x48,0x00,0xcf,0x45,0x58,0x9d,0xab,0x7e,0x6b,0xc0,0x18,0x57,0xce,0xed,0x6e,0x37,0x61,0x88,0x93,0x71,0x49,0xf5,0x12};
    static std::uint8_t product50[64]      = {0x16,0x4e,0x1a,0xc6,0xfa,0x7f,0xba,0x63,0x26,0xb9,0x1b,0xfb,0x89,0xa9,0x0f,0x70,0x89,0x95,0xa3,0x98,0x29,0xa1,0x12,0x72,0x2f,0xb9,0xd0,0xee,0x8b,0x31,0xce,0x5f,0x64,0xf1,0xc2,0x36,0x8a,0x1a,0x16,0xdf,0xa8,0x18,0xdc,0x72,0x57,0x5b,0x6f,0x6c,0x8a,0xc4,0x8d,0x64,0xc6,0x0d,0x35,0x35,0xbc,0xa5,0x9d,0x11,0xb5,0x72,0x5a,0x3e};
    uint256_from_bytes(multiplier, multiplier50);
    uint256_from_bytes(multiplicand, multiplicand50);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product50, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier51[32]   = {0xc7,0xc8,0x90,0xa4,0xfd,0x25,0x60,0x95,0x3c,0x6a,0x92,0x9a,0x4b,0x91,0x94,0x49,0x92,0x6f,0xe7,0x7f,0xae,0x62,0x13,0x56,0x27,0xb2,0x5b,0xe2,0xa3,0xb8,0x37,0x75};
    static std::uint8_t multiplicand51[32] = {0x1e,0xd9,0x05,0x8d,0x60,0xa7,0x05,0x62,0xfa,0x10,0x4d,0xe4,0xfc,0x55,0x39,0x3f,0xb3,0xa3,0xa7,0x10,0xb6,0x25,0xb9,0x14,0x88,0x15,0xa7,0xec,0x6d,0xd9,0x95,0xc7};
    static std::uint8_t product51[64]      = {0x18,0x12,0xde,0x4b,0x31,0x3d,0x68,0x19,0xe7,0x5e,0x26,0x2d,0x80,0xfd,0xda,0x70,0xc5,0xa6,0x44,0x11,0xc4,0xa1,0xd9,0xf1,0x2b,0x4b,0x82,0xc7,0x87,0xf2,0x96,0x88,0xc7,0x63,0x00,0x27,0x36,0x48,0x0e,0x7b,0xd8,0x8e,0x01,0x2c,0x8f,0x30,0xa0,0xfa,0x94,0x10,0x43,0x43,0xb5,0xbc,0x7f,0xd5,0xdc,0x8c,0x00,0x17,0x4f,0xa7,0x34,0xf3};
    uint256_from_bytes(multiplier, multiplier51);
    uint256_from_bytes(multiplicand, multiplicand51);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product51, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier52[32]   = {0x6b,0x09,0x77,0xdb,0x6c,0x7c,0x49,0xf2,0x72,0x9c,0x39,0xc0,0x7e,0xe5,0xff,0x16,0x0f,0xbb,0xc4,0x5c,0x5d,0x98,0xf8,0xa7,0x47,0xb5,0xa1,0x72,0x68,0x47,0x74,0x1a};
    static std::uint8_t multiplicand52[32] = {0x4f,0xf3,0x58,0x9a,0xde,0xd1,0x14,0x02,0x8b,0xdb,0xdc,0x6a,0x5d,0xd7,0x5e,0x85,0x42,0x49,0x7c,0x17,0x8a,0x7c,0x79,0x5e,0xcc,0xe0,0x47,0xd7,0x4e,0x98,0x61,0x7f};
    static std::uint8_t product52[64]      = {0x21,0x6d,0xab,0x05,0x7d,0xd1,0x7d,0x1e,0xee,0xd2,0x52,0x7b,0x54,0x8e,0xe1,0x80,0xb7,0xc1,0x90,0x5a,0x3d,0x9c,0xb8,0x9b,0x77,0x03,0x73,0xdf,0x0b,0x90,0xe0,0x67,0xba,0x6b,0x02,0x8a,0x43,0x94,0xc4,0xec,0x39,0xa1,0xca,0xac,0x98,0x33,0xbd,0xad,0x6e,0x8f,0xb5,0xa9,0x59,0x81,0x14,0xc8,0xd0,0xf0,0xd8,0xe7,0xa9,0xe0,0x72,0xe6};
    uint256_from_bytes(multiplier, multiplier52);
    uint256_from_bytes(multiplicand, multiplicand52);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product52, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier53[32]   = {0x21,0x32,0xf5,0xcc,0xe4,0x6f,0x88,0xf5,0x4c,0x9d,0xed,0x90,0xb3,0x1f,0xd3,0x82,0xa8,0x1f,0x8c,0x67,0xe7,0xdd,0x69,0x1b,0xa8,0xb3,0x4c,0xd1,0xca,0xfd,0xd2,0x58};
    static std::uint8_t multiplicand53[32] = {0xec,0xaf,0x97,0x5c,0x99,0x2a,0x9d,0x9c,0x5c,0x04,0x35,0x04,0x06,0x7c,0xa4,0x7b,0x74,0x31,0xdd,0x7d,0xdb,0x78,0x0b,0x56,0x02,0xb0,0x13,0x27,0x62,0x53,0x2f,0x24};
    static std::uint8_t product53[64]      = {0x1e,0xb1,0xc0,0x0f,0xfa,0xd0,0x26,0x94,0xf4,0x0e,0x4f,0x6b,0xb4,0xbe,0xa2,0xfd,0xa7,0x4f,0x10,0x33,0x5d,0x73,0xcf,0x52,0x55,0xe8,0xfd,0x43,0xa7,0xea,0x69,0xee,0x68,0xeb,0x9e,0xd8,0x1f,0xc9,0xa8,0x00,0x7d,0xe5,0x88,0x9f,0x44,0x03,0x71,0x74,0x32,0x6b,0xfc,0xe5,0x5c,0x5f,0x73,0x22,0xeb,0xd2,0xdf,0xfe,0x07,0xd7,0xbc,0x60};
    uint256_from_bytes(multiplier, multiplier53);
    uint256_from_bytes(multiplicand, multiplicand53);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product53, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier54[32]   = {0x41,0xdf,0x69,0x8f,0xc3,0x90,0x3c,0x4c,0xfb,0x02,0xd1,0xad,0xfe,0x4b,0x98,0xe8,0x56,0xbd,0x4d,0xa3,0xf8,0x63,0xb9,0xcb,0xa7,0xe2,0x5f,0xc6,0x61,0x27,0x7c,0xc7};
    static std::uint8_t multiplicand54[32] = {0x6d,0x6a,0x9a,0xcb,0xcd,0x1c,0xf8,0x72,0x79,0x1e,0xf5,0xb5,0xd9,0xea,0xe8,0x61,0x2d,0xae,0x78,0xbc,0x6b,0xba,0xe1,0x77,0x52,0x31,0x3f,0x9b,0xf1,0x9d,0xda,0x42};
    static std::uint8_t product54[64]      = {0x1c,0x27,0x8e,0x48,0xc2,0x3b,0xef,0xf0,0x24,0xa4,0xfe,0x52,0xa0,0x19,0xb1,0xb6,0xb8,0xb7,0x56,0x9f,0x45,0x2e,0x28,0x09,0xb1,0x50,0x74,0x36,0x82,0x69,0x14,0xa0,0xa7,0xa5,0x35,0x8e,0xed,0xf8,0x4a,0x7e,0x47,0x66,0x87,0x36,0xdb,0x4d,0x68,0x16,0x6d,0x12,0x01,0x14,0x90,0x34,0x5a,0x83,0xb6,0xbf,0xe7,0x0c,0x89,0x7a,0xa1,0x4e};
    uint256_from_bytes(multiplier, multiplier54);
    uint256_from_bytes(multiplicand, multiplicand54);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product54, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier55[32]   = {0x74,0x02,0x3b,0x56,0x96,0x8f,0x5a,0xf7,0x59,0xdb,0x15,0xda,0x62,0x2d,0xb0,0x4d,0x1c,0xb3,0x7e,0xbe,0xd5,0x85,0x76,0x00,0xa9,0x53,0x5a,0x35,0x39,0x36,0x66,0xb1};
    static std::uint8_t multiplicand55[32] = {0x10,0x11,0x42,0xa7,0xca,0xdf,0xed,0xe4,0x14,0xa3,0x40,0x6d,0x0f,0xe3,0x30,0x6c,0x7c,0x40,0x71,0x30,0xe1,0x73,0x12,0x22,0xcf,0xb8,0x84,0x0a,0x53,0x48,0xfb,0xe0};
    static std::uint8_t product55[64]      = {0x07,0x47,0xf6,0x0f,0xf6,0xd9,0x3a,0x13,0x1c,0x83,0x33,0xd8,0xf3,0x54,0x25,0xb0,0x04,0x7e,0x94,0xa0,0xf8,0x75,0x39,0x7f,0xb6,0x09,0xd8,0x18,0x77,0x87,0x0e,0x79,0x51,0x00,0x56,0xe3,0x8a,0x9b,0x8d,0x1e,0x0c,0x4b,0x99,0xe3,0x56,0xc4,0x7c,0x0c,0xed,0x10,0x01,0x48,0xac,0xcd,0xb5,0x82,0xba,0x31,0x1f,0x2c,0xab,0x11,0x65,0xe0};
    uint256_from_bytes(multiplier, multiplier55);
    uint256_from_bytes(multiplicand, multiplicand55);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product55, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier56[32]   = {0x41,0x9c,0xfa,0xcf,0x22,0x8a,0x77,0xb2,0x29,0xce,0x50,0xd0,0xeb,0x16,0x68,0x07,0x6b,0xe6,0x23,0xbb,0x42,0xa9,0xc6,0x01,0x77,0x38,0xbf,0x3e,0xaa,0x1e,0x19,0x9b};
    static std::uint8_t multiplicand56[32] = {0xc7,0x22,0x12,0x9e,0xf0,0x6f,0x18,0xe0,0x92,0xca,0xe8,0x06,0xcd,0xc0,0xa8,0x9f,0xbb,0xec,0x12,0x19,0x18,0xd5,0xfb,0x52,0x44,0xd8,0x3f,0xfa,0xf6,0x63,0x67,0xf9};
    static std::uint8_t product56[64]      = {0x33,0x09,0xc2,0x96,0x19,0x81,0x3a,0x47,0xa8,0xb9,0x88,0x3b,0x9e,0x2f,0x18,0xd3,0x5d,0x7f,0xc8,0x1f,0x94,0x23,0x3f,0x66,0xa7,0x70,0xfc,0x97,0x56,0x66,0x5b,0xde,0x1a,0x57,0x89,0x82,0x7f,0xca,0xa7,0x90,0xd6,0x3a,0x96,0xde,0x13,0x23,0x43,0x65,0x06,0x87,0xdf,0xc9,0x5e,0x2e,0xb5,0x05,0x48,0x53,0x17,0x02,0x6c,0x85,0x44,0xc3};
    uint256_from_bytes(multiplier, multiplier56);
    uint256_from_bytes(multiplicand, multiplicand56);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product56, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier57[32]   = {0x8d,0xe5,0xc1,0xf9,0x1c,0x46,0x2c,0x2c,0xb4,0x3f,0x5b,0x56,0xd9,0x58,0xa7,0x34,0xb4,0x60,0x1c,0xbb,0xee,0x5d,0x83,0xb0,0xbb,0xa8,0x12,0x30,0xab,0xaf,0x32,0xf2};
    static std::uint8_t multiplicand57[32] = {0x6a,0xa5,0x89,0xd9,0xb2,0x33,0x56,0x4c,0xdb,0xb6,0x2f,0x1a,0xee,0x9b,0x47,0xf1,0x01,0xf7,0x85,0x27,0x17,0xd0,0x5f,0xf5,0x14,0xdc,0xe0,0x06,0xeb,0x9e,0x2b,0xd0};
    static std::uint8_t product57[64]      = {0x3b,0x1c,0xe3,0xcf,0xca,0x9a,0x39,0x4a,0x24,0x03,0x01,0x8c,0x7e,0xf5,0x07,0xc0,0x66,0xb7,0x69,0xbc,0xa6,0x5a,0xa8,0xfc,0xa6,0xab,0xfa,0x4d,0xab,0x28,0xd4,0x81,0x42,0xd5,0xb0,0xe2,0x77,0x80,0xc8,0xcf,0x37,0xeb,0xd8,0x69,0x28,0xd6,0x2e,0x14,0xba,0xe6,0x30,0x9e,0x3e,0xbc,0x97,0x0d,0x9d,0xe7,0xaf,0xf3,0x83,0x44,0x0a,0xa0};
    uint256_from_bytes(multiplier, multiplier57);
    uint256_from_bytes(multiplicand, multiplicand57);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product57, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier58[32]   = {0xed,0x1b,0x72,0xa5,0x88,0xe4,0x01,0xd0,0xff,0x91,0x49,0xb8,0x30,0x99,0xa7,0x8e,0x76,0x02,0x72,0x1d,0x71,0x5c,0x69,0x54,0xe1,0x2d,0xb9,0xe2,0x7e,0xdc,0x6a,0x6a};
    static std::uint8_t multiplicand58[32] = {0x64,0x68,0x34,0xe9,0xa5,0x89,0xe5,0x73,0x98,0x1b,0xbe,0x1b,0xea,0x10,0x3c,0x17,0x4a,0xa4,0xb7,0xf7,0x4f,0x04,0xc2,0x95,0xad,0x07,0xe6,0xa3,0x0d,0xf4,0x17,0x14};
    static std::uint8_t product58[64]      = {0x5c,0xff,0x3c,0xf1,0x37,0x50,0x0e,0xe7,0xf2,0x36,0x78,0x00,0xc0,0x26,0x59,0x80,0x87,0x16,0x59,0x70,0x51,0xfe,0x9e,0x74,0x7e,0xdf,0x46,0x41,0x51,0x07,0x72,0x2d,0xb8,0x32,0x9e,0x69,0x03,0x70,0xd8,0xd6,0x11,0x7a,0xde,0xd1,0xd7,0xe3,0x0e,0xfd,0x6f,0x09,0xf6,0xa7,0xb5,0xa6,0x55,0xb5,0xb8,0x70,0xf8,0x12,0x85,0xcf,0xd6,0x48};
    uint256_from_bytes(multiplier, multiplier58);
    uint256_from_bytes(multiplicand, multiplicand58);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product58, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier59[32]   = {0xa6,0xad,0x9c,0x24,0x49,0x01,0xa4,0x73,0xe1,0x55,0xbc,0x6f,0xa3,0xb2,0x89,0xa8,0x1e,0xa9,0xf2,0xf9,0x3d,0x57,0xb5,0xde,0xed,0xf5,0x92,0x92,0xe7,0x57,0x2e,0x04};
    static std::uint8_t multiplicand59[32] = {0x67,0xcd,0x53,0x27,0x11,0x66,0xf6,0xb2,0x59,0x03,0x5e,0xfa,0x4e,0xb5,0xa6,0xc3,0x8a,0xfc,0x47,0x6d,0xd7,0x73,0x41,0xe1,0x6d,0xa3,0x55,0x98,0x10,0x5c,0xe1,0x13};
    static std::uint8_t product59[64]      = {0x43,0x95,0x88,0xfc,0x5b,0xd5,0x3d,0xd7,0x8a,0x0a,0xbf,0x4c,0xa9,0xa6,0x65,0x8c,0xb6,0x66,0xcf,0xd9,0xc1,0x8f,0xff,0xf5,0x6d,0x87,0xcd,0x1c,0x1b,0x18,0x75,0x89,0x72,0xaa,0x2a,0xd8,0xa0,0x07,0x1c,0x3c,0x72,0xba,0xe9,0x82,0x04,0xd4,0x26,0x79,0xa7,0x72,0xa9,0xcf,0x20,0xf5,0xfa,0xc1,0xa8,0xe4,0x3a,0xcf,0x94,0x59,0xee,0x4c};
    uint256_from_bytes(multiplier, multiplier59);
    uint256_from_bytes(multiplicand, multiplicand59);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product59, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier60[32]   = {0x0d,0xe8,0x34,0xe2,0x3f,0x0d,0xcb,0x84,0x38,0x6f,0xa3,0x5c,0x2b,0x10,0xbe,0xc9,0x8b,0xbe,0xa9,0x38,0x6c,0xef,0x11,0xf8,0xdb,0x4b,0x54,0x86,0xd6,0x95,0x52,0x03};
    static std::uint8_t multiplicand60[32] = {0x32,0xaa,0xf6,0xa0,0xb9,0xa7,0x8c,0x9a,0x3e,0x0f,0x61,0x65,0x47,0xac,0xdd,0x50,0x6b,0x2d,0x3d,0xff,0x60,0x97,0x2a,0x15,0x01,0x16,0x93,0xf9,0x42,0xad,0x3f,0x12};
    static std::uint8_t product60[64]      = {0x02,0xc0,0xa3,0xed,0x2c,0x96,0xef,0x3d,0x00,0x26,0x40,0x45,0x33,0x13,0x2e,0x9b,0x66,0x2f,0x1a,0x7f,0xa9,0xee,0x40,0xb8,0xea,0xd2,0x26,0xa3,0x1f,0xe4,0x29,0x41,0xd1,0x1d,0x6e,0x43,0xcd,0x93,0xe7,0x70,0x2b,0x48,0xd1,0x81,0xc9,0xe0,0x78,0x83,0x2a,0x37,0x94,0xd4,0xbd,0xa6,0x01,0xee,0x5c,0x21,0x20,0x42,0x07,0xb5,0x81,0x36};
    uint256_from_bytes(multiplier, multiplier60);
    uint256_from_bytes(multiplicand, multiplicand60);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product60, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier61[32]   = {0x5c,0xc2,0x98,0xb5,0xbd,0xe9,0x56,0x8c,0x44,0x6f,0x06,0x3a,0x32,0x33,0xe6,0x11,0x77,0x02,0xa4,0xd6,0x88,0x32,0x79,0x87,0xad,0xf8,0x65,0x28,0x89,0x90,0x07,0x84};
    static std::uint8_t multiplicand61[32] = {0xf3,0xe8,0xf7,0x3d,0xce,0x05,0x1a,0x4d,0xed,0x43,0xda,0xc3,0x34,0xb6,0x44,0x92,0x58,0x4a,0x84,0x6d,0xf6,0x96,0x04,0x3c,0x62,0xc5,0xb6,0xd6,0x65,0x3a,0x05,0x79};
    static std::uint8_t product61[64]      = {0x58,0x61,0x20,0xe5,0x0e,0x54,0xc6,0x5f,0x31,0x8f,0xf7,0xb4,0x5b,0x63,0xba,0x9a,0xfe,0x86,0x4c,0xd6,0x23,0x7c,0x88,0x7f,0x08,0x42,0x4c,0xb4,0x10,0x37,0x3a,0x83,0x5c,0x94,0xef,0x39,0x87,0x24,0x18,0x8a,0xe3,0x70,0x94,0x4d,0x96,0xdf,0x5c,0xb2,0xc0,0x81,0x7f,0xe2,0x8c,0x3d,0xb5,0x0c,0xb2,0x28,0xb8,0xc9,0x9d,0x21,0x21,0x64};
    uint256_from_bytes(multiplier, multiplier61);
    uint256_from_bytes(multiplicand, multiplicand61);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product61, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier62[32]   = {0x8d,0xc6,0xd8,0x2c,0xf2,0x92,0x78,0x55,0x29,0x1f,0x82,0x61,0xf6,0x95,0xdf,0x15,0xc5,0xdc,0x26,0x37,0x77,0xd6,0x7e,0x5b,0xe9,0x6f,0xd5,0x84,0xb9,0x1d,0xef,0x4c};
    static std::uint8_t multiplicand62[32] = {0x0f,0xc9,0x97,0x00,0x16,0xee,0xdd,0x10,0xb0,0x32,0xe0,0x4c,0xc5,0x77,0x4b,0x9e,0x62,0x90,0xde,0xaa,0xd2,0xd4,0xcd,0x59,0x06,0x3c,0xbd,0xcf,0xfb,0xe3,0xbe,0xce};
    static std::uint8_t product62[64]      = {0x08,0xbe,0x4b,0x6a,0xb3,0xb6,0xed,0x00,0x9a,0x83,0xaa,0x0b,0x1f,0x1a,0xd1,0x1b,0x82,0xf3,0x48,0xc4,0xb4,0xb6,0x34,0x15,0x21,0x11,0x00,0xa0,0x40,0x62,0x5d,0x3d,0x87,0x43,0x85,0xd2,0xa3,0x11,0x31,0xcc,0x68,0xae,0x23,0x0d,0xb5,0xb9,0xf3,0x46,0xe5,0xb5,0x08,0x7a,0x1a,0x3d,0x50,0xc2,0xf5,0x56,0x6b,0xcf,0xe2,0x14,0xf7,0x28};
    uint256_from_bytes(multiplier, multiplier62);
    uint256_from_bytes(multiplicand, multiplicand62);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product62, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier63[32]   = {0x3e,0xa1,0x66,0xf8,0x0d,0x49,0x65,0x7e,0xb7,0x17,0xe8,0x75,0xaa,0xbd,0xe4,0x57,0x09,0x1e,0x90,0x4d,0xbf,0x38,0xad,0x37,0x3d,0x5a,0x9e,0x57,0xf7,0xdf,0x3c,0x9f};
    static std::uint8_t multiplicand63[32] = {0x74,0x98,0x3c,0xda,0x49,0xad,0x54,0x31,0x44,0xa9,0x69,0x6c,0x9f,0x3b,0x95,0xb3,0xfe,0xc4,0x1c,0x48,0x85,0x47,0xbe,0xbb,0x8e,0x66,0xfb,0x1c,0x34,0x86,0x4d,0x41};
    static std::uint8_t product63[64]      = {0x1c,0x86,0x61,0x60,0xc4,0xe7,0x65,0xf2,0x87,0x63,0x00,0x6b,0xd8,0xd4,0xc7,0x7e,0x98,0x80,0xe5,0xa5,0x2a,0x7c,0x36,0x65,0x21,0xd6,0x1b,0x1c,0x05,0x74,0xb6,0x2b,0x98,0x63,0x51,0x40,0x46,0xf0,0x89,0xa6,0xb2,0xca,0xf9,0xce,0x64,0x71,0xc1,0x2d,0xf7,0xd0,0x90,0x98,0x18,0xba,0x90,0x71,0xec,0x3c,0x47,0x72,0x1c,0x24,0x37,0x5f};
    uint256_from_bytes(multiplier, multiplier63);
    uint256_from_bytes(multiplicand, multiplicand63);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product63, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier64[32]   = {0x1b,0x0c,0x0a,0x4a,0xc2,0xc3,0x1e,0x4a,0x1e,0x97,0xee,0x13,0x3a,0x27,0xb5,0x8e,0xa6,0x95,0x34,0x20,0x5d,0x26,0xe0,0x8a,0xc6,0xbd,0x40,0x9e,0x2e,0x58,0xd1,0xd5};
    static std::uint8_t multiplicand64[32] = {0x2a,0x19,0xd2,0x7e,0xd0,0xe0,0x6e,0x10,0xbb,0xc2,0xbd,0x1a,0x6f,0xcf,0xad,0x05,0x46,0x58,0xd8,0xb7,0x8b,0x27,0xa6,0xa3,0x74,0x5d,0x7c,0x8b,0xf5,0xaa,0x9b,0xf0};
    static std::uint8_t product64[64]      = {0x04,0x72,0xb4,0x1a,0x8b,0xb0,0xeb,0x1c,0xb9,0xcf,0xb5,0xca,0xeb,0xf8,0x9e,0xd5,0xd2,0xd2,0xdd,0x6b,0xcd,0xf9,0x85,0x55,0xc2,0x58,0x2b,0x6d,0xb4,0xef,0xc7,0xb2,0xf2,0xce,0xe1,0x03,0xc8,0xf7,0x50,0xa9,0xec,0x22,0x1d,0xa3,0x37,0x90,0x56,0x85,0x65,0xd7,0x56,0x98,0x3e,0x58,0x23,0x41,0x21,0x30,0x3c,0xce,0x6a,0xc2,0xae,0xb0};
    uint256_from_bytes(multiplier, multiplier64);
    uint256_from_bytes(multiplicand, multiplicand64);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product64, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier65[32]   = {0xb0,0x41,0x40,0x0c,0xc3,0x2c,0x90,0x44,0x6a,0xc8,0x83,0xe2,0x2d,0x21,0x8a,0x67,0x1d,0x4c,0x13,0x0c,0x3a,0xd1,0x44,0x9e,0x39,0x6b,0x56,0x87,0x83,0x85,0xf3,0xcb};
    static std::uint8_t multiplicand65[32] = {0xd1,0x9b,0xde,0xc2,0x89,0x41,0x9b,0x95,0x0c,0xd4,0x2a,0x94,0x8f,0xbd,0x44,0x95,0x63,0x86,0x2e,0x38,0x6e,0x11,0x3a,0xe0,0x92,0xd5,0x51,0x53,0x97,0x11,0x43,0x55};
    static std::uint8_t product65[64]      = {0x90,0x50,0x96,0x2a,0xb8,0x8f,0x3f,0xa5,0xf9,0xc2,0x8e,0xff,0xc2,0xd3,0x33,0x09,0xc6,0xfa,0xfd,0x85,0x3c,0xe3,0x84,0xf3,0x3d,0x24,0x17,0x30,0xe2,0xb0,0x7f,0x91,0xa5,0x3f,0x3b,0x74,0x6c,0xc4,0xec,0xfe,0x34,0x85,0xd3,0xdc,0xa6,0x26,0xa7,0x9b,0x38,0x1b,0xae,0x60,0xe3,0xae,0x63,0x65,0x7a,0x55,0x36,0xed,0xa7,0xc3,0x13,0x67};
    uint256_from_bytes(multiplier, multiplier65);
    uint256_from_bytes(multiplicand, multiplicand65);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product65, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier66[32]   = {0xfc,0x19,0xfb,0x46,0xed,0x68,0x6e,0x2d,0xe9,0x8d,0x18,0xd4,0x59,0x42,0xc8,0xd4,0x26,0x06,0x3a,0x34,0x73,0x36,0xd0,0xa9,0xc6,0x38,0xa2,0x4e,0x9f,0x01,0x2b,0x2e};
    static std::uint8_t multiplicand66[32] = {0x89,0x52,0xb4,0xb6,0x42,0xd7,0x0f,0x8b,0xb3,0x5a,0x0f,0x5b,0x02,0xe4,0x25,0xa6,0x7f,0x81,0xa4,0xf3,0xd2,0xe1,0x39,0x1f,0x2d,0x22,0x66,0xb2,0xe9,0x59,0xe3,0x1c};
    static std::uint8_t product66[64]      = {0x87,0x3b,0x59,0xc1,0x32,0xbd,0xed,0xad,0x7c,0xa1,0xaf,0xd3,0x51,0x3a,0x2a,0x2a,0x5e,0x2f,0x30,0x6e,0x71,0xab,0x8c,0x16,0xd2,0x9c,0x1d,0x4b,0x7a,0xe8,0x44,0x83,0x75,0x9c,0x62,0x03,0xae,0x7f,0x03,0x8d,0x0b,0x4f,0x2d,0x55,0xe5,0x9a,0xcd,0x56,0x2d,0x84,0x27,0xfc,0x3d,0x14,0xcc,0x15,0xba,0x4b,0x29,0x48,0x4e,0x68,0x83,0x08};
    uint256_from_bytes(multiplier, multiplier66);
    uint256_from_bytes(multiplicand, multiplicand66);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product66, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier67[32]   = {0x6e,0x74,0x14,0xb4,0x55,0xee,0x77,0xdf,0xce,0x3d,0x15,0x50,0xc1,0x63,0xcb,0xcf,0x0f,0xef,0xb2,0x9a,0x8e,0x2c,0xa8,0x55,0x38,0x52,0x78,0xfd,0x76,0x97,0xc7,0x4d};
    static std::uint8_t multiplicand67[32] = {0x16,0xd3,0x7f,0x6f,0xba,0xd9,0x53,0xaa,0xf1,0x0a,0x26,0x62,0x04,0x55,0x64,0xf3,0x12,0x9a,0xe9,0x46,0x72,0x46,0x44,0xf8,0xdb,0x44,0xa3,0xa4,0x7f,0x34,0x4f,0xc6};
    static std::uint8_t product67[64]      = {0x09,0xd9,0x3a,0x70,0x5b,0x3d,0xde,0x36,0x90,0x26,0x37,0xf7,0xef,0x56,0xd8,0xda,0x38,0x59,0xa0,0x12,0x5e,0x7a,0xd5,0x90,0x1d,0x9c,0x6f,0x38,0x20,0xc9,0x47,0xe9,0x94,0x54,0x7b,0xff,0x6b,0x79,0x56,0x34,0x04,0x9e,0x54,0x05,0xdb,0x55,0x5b,0x5c,0xad,0x68,0x9c,0x35,0xc3,0x6a,0x9c,0x5b,0xc1,0x06,0xe2,0xaa,0x3e,0x88,0xe8,0x8e};
    uint256_from_bytes(multiplier, multiplier67);
    uint256_from_bytes(multiplicand, multiplicand67);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product67, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier68[32]   = {0xfa,0x55,0x28,0xbf,0x59,0xe9,0x47,0xfc,0x0c,0x8d,0xa4,0xdf,0x95,0xf2,0x69,0xcf,0x9b,0xaa,0x5e,0x9d,0x57,0x28,0xd1,0x56,0x69,0x5c,0xa9,0x22,0x95,0x90,0x1b,0xe3};
    static std::uint8_t multiplicand68[32] = {0xfc,0x07,0xf8,0xcd,0xe1,0x7f,0xa2,0x11,0xf5,0x9e,0x2d,0x3d,0xd6,0x2d,0x15,0xc9,0x59,0xf4,0xc8,0xb8,0xcf,0x1e,0x58,0x8b,0x78,0x00,0xf5,0xe0,0xa1,0xd9,0xd4,0xb4};
    static std::uint8_t product68[64]      = {0xf6,0x73,0x9f,0xbc,0x4b,0xe9,0xc0,0x1c,0xea,0x5d,0x32,0x90,0x6b,0x04,0xb8,0x8e,0x04,0xc3,0xef,0xb8,0xce,0x5d,0x2b,0x68,0x75,0x7d,0xcf,0xc0,0xaa,0x20,0xef,0xf8,0x06,0x57,0x12,0x9e,0x55,0xa3,0x7c,0x14,0xe8,0x30,0xff,0x89,0x77,0xe8,0x50,0xc1,0xf3,0xf0,0xd7,0x92,0x86,0x0e,0x26,0xa6,0x20,0x60,0x9e,0x7d,0xe6,0xd6,0x97,0x9c};
    uint256_from_bytes(multiplier, multiplier68);
    uint256_from_bytes(multiplicand, multiplicand68);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product68, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier69[32]   = {0x52,0xea,0xde,0x0d,0x82,0x6f,0xe3,0xd2,0xf3,0x01,0x19,0xc8,0x02,0x34,0xff,0xd4,0xb4,0xcc,0x4a,0xcc,0x57,0xa7,0x39,0xad,0x15,0xaa,0xc6,0x29,0xdc,0x3a,0x10,0x4a};
    static std::uint8_t multiplicand69[32] = {0x3b,0x25,0xdd,0xe6,0x61,0x54,0x33,0x55,0x4c,0x85,0xcf,0x2f,0x36,0xbf,0x2e,0x53,0x36,0xd4,0x4a,0xbe,0x0a,0x31,0xb5,0xef,0x10,0xd0,0xc8,0xb0,0xf2,0x83,0xa9,0xc3};
    static std::uint8_t product69[64]      = {0x13,0x28,0x64,0xfe,0x95,0x3f,0x11,0x3f,0xb9,0x8e,0xd9,0xf6,0xf5,0xa3,0x52,0x98,0xf7,0xbe,0x84,0x78,0xdc,0xb2,0x1e,0x0c,0x9a,0xbd,0x18,0xf4,0x00,0xe3,0x58,0x26,0x75,0x00,0xba,0x2d,0x35,0xbb,0x8e,0xf5,0x92,0x7f,0x35,0x5a,0xf2,0x65,0x14,0xa4,0x7a,0xab,0x76,0x21,0xe5,0x64,0xbf,0xf8,0xd8,0x46,0x2c,0x41,0x5e,0xd9,0x42,0x5e};
    uint256_from_bytes(multiplier, multiplier69);
    uint256_from_bytes(multiplicand, multiplicand69);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product69, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier70[32]   = {0xd4,0x27,0x6a,0x9d,0xf6,0x1f,0x01,0x18,0xaf,0x63,0xc3,0x11,0xac,0x80,0x25,0xbc,0x1f,0x82,0x71,0x5b,0xfa,0x36,0x42,0x17,0x00,0x37,0xf3,0x33,0x67,0x94,0x32,0x8b};
    static std::uint8_t multiplicand70[32] = {0xcd,0x07,0x97,0xd7,0x73,0x40,0x34,0x86,0x39,0x83,0xb6,0x19,0x56,0x4b,0xdb,0xcf,0xf5,0xb7,0x2a,0x11,0xe4,0xb2,0x27,0xf4,0xd9,0xf3,0x5d,0xb9,0xc7,0xd3,0xaa,0x14};
    static std::uint8_t product70[64]      = {0xa9,0xe9,0xdb,0x4a,0x34,0xe9,0x2f,0xd6,0xa4,0xd0,0x71,0xdb,0xde,0xab,0x81,0x78,0x69,0x2b,0x5b,0x97,0x10,0x5b,0xdc,0x4c,0xfc,0x8d,0x5c,0x41,0x50,0xfe,0x68,0x9b,0x55,0x0f,0x50,0x29,0x3b,0x8f,0x6b,0xaa,0x39,0xc2,0x98,0x04,0x19,0xb7,0xc9,0xb6,0xbc,0xe1,0xe4,0x76,0x14,0x3a,0xd2,0xe2,0x12,0x27,0xba,0xaf,0x36,0xb5,0x40,0xdc};
    uint256_from_bytes(multiplier, multiplier70);
    uint256_from_bytes(multiplicand, multiplicand70);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product70, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier71[32]   = {0x6e,0x64,0x79,0xa9,0x92,0xe7,0xaf,0x54,0xde,0x81,0xc9,0x88,0x91,0x0a,0xb1,0x1c,0xb7,0xcb,0xed,0x9e,0x8a,0xde,0x12,0xb3,0xef,0xdd,0x78,0x90,0x00,0x3d,0x46,0x14};
    static std::uint8_t multiplicand71[32] = {0x61,0xd6,0x1e,0x30,0x62,0x22,0x2c,0x38,0x79,0xd2,0x0c,0xb9,0x78,0x87,0x4c,0xb7,0x0a,0xd5,0x05,0xb6,0x97,0x1e,0xcc,0x74,0x1b,0xcb,0xba,0x32,0x5c,0x2d,0xd9,0x7a};
    static std::uint8_t product71[64]      = {0x2a,0x30,0x67,0x1b,0x97,0xd4,0x79,0x1b,0x1d,0x6c,0x07,0x7d,0x84,0x29,0x97,0x4b,0xc7,0x6f,0x1e,0xf2,0x7c,0x88,0xee,0x00,0x04,0x4d,0x65,0xfc,0xc1,0x79,0xc0,0xe2,0x1a,0x47,0x67,0x42,0xcf,0xaa,0x14,0xf2,0x35,0x72,0x86,0x3e,0x8c,0x0c,0x3c,0xcb,0x2c,0x56,0x8f,0xf4,0xde,0x88,0xb5,0xac,0x3a,0xe1,0xcc,0xb0,0x8f,0x1e,0x59,0x88};
    uint256_from_bytes(multiplier, multiplier71);
    uint256_from_bytes(multiplicand, multiplicand71);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product71, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier72[32]   = {0x82,0x7a,0x00,0xea,0x6e,0x2f,0x1c,0xd6,0xba,0xdd,0xa0,0xc6,0xea,0x5a,0x39,0xf7,0x57,0x00,0x94,0x92,0x70,0x4d,0xfd,0xe2,0x84,0x55,0x1d,0xc4,0xf6,0xf3,0x0b,0xe0};
    static std::uint8_t multiplicand72[32] = {0x65,0xe7,0x2d,0x77,0x62,0xd7,0x6e,0x8d,0x44,0xfb,0xf4,0x11,0x84,0xf4,0x93,0x52,0x5b,0x64,0xd7,0xf6,0x00,0xb4,0x67,0xa8,0xc8,0x37,0xff,0x44,0xa0,0x0c,0x8c,0xbb};
    static std::uint8_t product72[64]      = {0x33,0xef,0xf5,0x9f,0x9c,0x42,0x26,0x64,0x2d,0x44,0xd6,0x69,0x1c,0x4e,0x4e,0x78,0x54,0xcb,0x31,0x30,0xce,0x7a,0xd7,0x12,0x31,0x55,0x7e,0x99,0x82,0x98,0xec,0xec,0xcc,0xf6,0xae,0xbe,0x51,0x85,0x20,0xa5,0xab,0xbf,0xac,0xc9,0x36,0x35,0x8c,0x54,0x18,0xbd,0x93,0x01,0x91,0x6c,0xb0,0x39,0xf4,0x8b,0x38,0x3d,0xdc,0x88,0x2c,0xa0};
    uint256_from_bytes(multiplier, multiplier72);
    uint256_from_bytes(multiplicand, multiplicand72);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product72, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier73[32]   = {0xf2,0x5e,0x7b,0x9c,0xbc,0xb5,0x84,0x82,0x0e,0xf5,0x17,0x66,0xa0,0xac,0x33,0xb4,0x2c,0xbc,0xf0,0x89,0xc6,0x1f,0x5e,0x4a,0xd7,0xb9,0x26,0x97,0xeb,0x32,0x85,0x9d};
    static std::uint8_t multiplicand73[32] = {0x1c,0xc1,0x0c,0xf0,0x38,0x09,0x1e,0xe9,0xad,0xef,0xaf,0x47,0x52,0x4d,0x93,0xd5,0xc8,0xb5,0xd1,0xa8,0x3f,0xab,0xc0,0xc0,0x95,0x0f,0x5a,0x58,0xe2,0x32,0x1b,0x51};
    static std::uint8_t product73[64]      = {0x1b,0x39,0x1b,0x00,0x31,0x3a,0xa8,0xc1,0x7d,0x04,0x64,0xca,0xf2,0xe0,0xae,0x8b,0x0e,0xd1,0xe8,0xf7,0xc8,0xb1,0xf7,0xb9,0xff,0x32,0x3d,0x06,0x0a,0x1c,0xfd,0xf5,0x2c,0x53,0xa0,0x97,0x1e,0x64,0xcf,0xc2,0xb3,0xf2,0xef,0xcb,0xa5,0x00,0xd6,0x41,0x73,0x3f,0x6f,0xbb,0x96,0xe9,0x23,0x0d,0x41,0x7f,0xe5,0xaa,0x71,0xbd,0xd5,0xad};
    uint256_from_bytes(multiplier, multiplier73);
    uint256_from_bytes(multiplicand, multiplicand73);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product73, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier74[32]   = {0xbd,0xbb,0xe3,0x28,0x61,0x50,0xe0,0x84,0x37,0xfb,0x6d,0x2e,0x49,0x10,0x03,0xaa,0x29,0xe3,0x57,0x4a,0x42,0xd8,0x05,0x86,0x20,0xf2,0x32,0xde,0x93,0x1d,0x2f,0xc1};
    static std::uint8_t multiplicand74[32] = {0x52,0xd4,0xd3,0x6f,0xc3,0xc7,0x12,0xaf,0xb1,0x73,0x30,0x77,0xdf,0x50,0x5d,0x32,0x85,0x69,0x60,0xe9,0xd2,0x13,0xab,0x06,0xa7,0xa3,0x05,0x68,0x83,0xb8,0xa0,0x60};
    static std::uint8_t product74[64]      = {0x3d,0x63,0xeb,0x0f,0xbe,0x67,0xee,0x8a,0xe5,0xfc,0xe0,0x5f,0x3b,0x18,0xf5,0xe6,0x07,0xc2,0xfc,0xef,0xfd,0xec,0x0d,0x51,0xae,0xc6,0x82,0x1d,0x64,0x75,0x4e,0xd2,0xf2,0xfd,0x8a,0x35,0xc8,0x5c,0x2e,0xd1,0x9b,0xee,0x6d,0x8d,0x96,0x51,0x1d,0xc2,0x88,0xa3,0x22,0xbb,0x31,0xb4,0x47,0x8d,0xd4,0x8d,0x07,0x3b,0x7e,0x82,0x88,0x60};
    uint256_from_bytes(multiplier, multiplier74);
    uint256_from_bytes(multiplicand, multiplicand74);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product74, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier75[32]   = {0x9a,0x6b,0xd2,0xe9,0xb4,0xee,0x05,0xe4,0x72,0xc6,0xcc,0xdc,0x01,0xad,0x83,0x07,0xa8,0x09,0x4e,0xdd,0x40,0x92,0x15,0xb9,0xf6,0xda,0xd3,0x34,0x05,0x79,0x1b,0xe9};
    static std::uint8_t multiplicand75[32] = {0x4f,0xae,0xf1,0xc4,0x7a,0xbb,0xcd,0xcf,0x9c,0x4e,0xc7,0x62,0xff,0xef,0xe6,0xf3,0x2e,0xd9,0xab,0xb9,0xfb,0x4b,0xef,0x5b,0xb2,0x50,0xe9,0x98,0x54,0x64,0xcd,0x59};
    static std::uint8_t product75[64]      = {0x30,0x10,0xcd,0x35,0x7f,0xd2,0x97,0x48,0x1e,0xc8,0x72,0x7b,0x72,0xf1,0xa0,0x28,0x1a,0x51,0x29,0x96,0x8c,0xd1,0xca,0x82,0x41,0xa7,0x6e,0x7b,0xbe,0x97,0xd0,0xe1,0x9d,0x0e,0x40,0xbf,0x21,0xa2,0xfb,0x8d,0xac,0xd5,0xbb,0xf1,0x12,0x4d,0x25,0x79,0xf8,0x81,0xfe,0xf9,0x7b,0x69,0xd1,0x0d,0xd4,0x71,0x99,0x47,0x3d,0x78,0x49,0x01};
    uint256_from_bytes(multiplier, multiplier75);
    uint256_from_bytes(multiplicand, multiplicand75);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product75, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier76[32]   = {0x5f,0x8f,0xca,0xac,0xa7,0xcc,0x04,0x2c,0xdd,0xf7,0x74,0x26,0xd7,0x61,0xea,0xc5,0xa4,0xfc,0xcf,0x2e,0xa4,0xb0,0xbf,0x61,0x71,0x2f,0x2e,0xe7,0xff,0x68,0x08,0xef};
    static std::uint8_t multiplicand76[32] = {0x85,0x96,0xb8,0x26,0xcd,0xf0,0xf0,0x10,0x33,0xe9,0x48,0xbc,0xc1,0xfa,0x0b,0x8a,0x56,0x2f,0x86,0xc6,0x46,0x07,0xc3,0x01,0xd5,0xd3,0x3a,0x97,0xf6,0x27,0x4a,0x09};
    static std::uint8_t product76[64]      = {0x31,0xdd,0xf7,0x4a,0x4a,0x3b,0x93,0xa8,0x6b,0x7f,0x6d,0xa5,0x66,0xed,0x4f,0xd8,0xb3,0x9b,0x53,0x09,0x1f,0x6f,0xa3,0x8a,0x49,0xdd,0x9d,0x64,0xe8,0x5d,0xd7,0x12,0xde,0x77,0x7e,0x3d,0x7c,0x69,0x5b,0x47,0x3f,0x30,0x84,0x8f,0xba,0xdf,0xa2,0xc1,0x4a,0x5a,0x8c,0xb4,0xa7,0x11,0xdd,0x3a,0x23,0x5e,0x02,0x64,0x13,0xa6,0x66,0x67};
    uint256_from_bytes(multiplier, multiplier76);
    uint256_from_bytes(multiplicand, multiplicand76);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product76, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier77[32]   = {0x43,0xce,0xd1,0xee,0x9f,0x02,0x7d,0x5c,0xba,0x1c,0x6b,0x49,0xbf,0x4d,0x04,0x7d,0xfb,0x0a,0x18,0x92,0xe9,0x9b,0xc2,0xfc,0x25,0xd9,0x2d,0xfc,0xb7,0x8b,0xdf,0x80};
    static std::uint8_t multiplicand77[32] = {0xff,0xcf,0x79,0xb5,0x70,0xbd,0x03,0xe1,0xfb,0x5d,0x9d,0x7f,0xe2,0x42,0x8f,0xaa,0x71,0x9c,0x4a,0x47,0xb3,0x87,0x90,0x8b,0xb2,0x23,0xec,0xf2,0x5f,0xa9,0xea,0x39};
    static std::uint8_t product77[64]      = {0x43,0xc1,0xf7,0x95,0x40,0xa6,0xd1,0x51,0xff,0xed,0xa0,0x55,0x12,0x66,0x20,0x54,0x7b,0xc0,0xf8,0xe0,0x2e,0x28,0x55,0x56,0x58,0x6f,0xe6,0xc9,0xcc,0x5a,0x65,0x9f,0xa2,0x95,0x4a,0xb4,0x5e,0xaf,0xb3,0xff,0x32,0xe4,0xc1,0x28,0xea,0x41,0x5d,0x52,0xf8,0xf7,0x6f,0x58,0x60,0x72,0x9f,0x4e,0x18,0x19,0x97,0x51,0xc3,0xef,0xc3,0x80};
    uint256_from_bytes(multiplier, multiplier77);
    uint256_from_bytes(multiplicand, multiplicand77);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product77, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier78[32]   = {0xbe,0x70,0x00,0xdf,0x03,0xc3,0x2e,0xe7,0x7b,0x82,0x00,0x2c,0xe5,0x01,0xbf,0x60,0xb5,0xe1,0x2f,0xd3,0xc6,0x23,0x89,0x9c,0x5f,0x3b,0xb4,0xba,0x6a,0x5f,0xd8,0x60};
    static std::uint8_t multiplicand78[32] = {0x0e,0xdb,0xb2,0x25,0x5d,0xc0,0x27,0xf0,0x53,0xf0,0x49,0xe9,0x6c,0xfc,0xa2,0x15,0x80,0xff,0xcb,0x97,0x92,0x91,0x17,0x03,0x1a,0xac,0x17,0x9f,0x7b,0x7d,0x56,0xd7};
    static std::uint8_t product78[64]      = {0x0b,0x0d,0x8e,0x62,0x9d,0x85,0xb7,0x6a,0x8d,0xcf,0x14,0xe6,0x16,0x02,0xb8,0x83,0x46,0xaa,0x5f,0x64,0xc8,0x62,0x74,0x6f,0xf6,0xbb,0xf9,0xef,0x41,0x1c,0x2c,0xd6,0x5a,0x72,0x5c,0x88,0xea,0xc4,0xdc,0x2e,0xa8,0xd8,0xb9,0x18,0xed,0x4a,0x24,0x8f,0x88,0xe4,0x3b,0x17,0xb4,0x7e,0xa7,0x24,0xa8,0x75,0x69,0xae,0x50,0x0e,0xf8,0xa0};
    uint256_from_bytes(multiplier, multiplier78);
    uint256_from_bytes(multiplicand, multiplicand78);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product78, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier79[32]   = {0xfb,0x89,0xa3,0xbc,0xc5,0x0a,0x35,0xb3,0xf5,0x39,0xa5,0x09,0x5e,0x57,0xad,0x6c,0x3b,0x64,0xa1,0xb1,0x52,0x80,0x7a,0x1f,0x30,0x31,0x3b,0x18,0x2f,0x27,0xb8,0xbe};
    static std::uint8_t multiplicand79[32] = {0x3e,0x61,0x66,0xd0,0xee,0xbc,0xb1,0x48,0xa9,0x6f,0x3b,0x0f,0x8b,0x2b,0xe6,0x60,0xc6,0x72,0x6d,0x5f,0x78,0x6c,0xa9,0xb3,0x05,0x35,0x13,0xec,0x92,0x58,0xd9,0xa0};
    static std::uint8_t product79[64]      = {0x3d,0x4b,0x09,0xd4,0xe3,0xe4,0xbf,0x41,0x65,0x7c,0x21,0x49,0xd7,0x9b,0x28,0x16,0xf9,0xef,0x20,0x78,0x37,0x69,0x2c,0x69,0xc2,0x65,0x30,0x34,0xae,0x0f,0xa8,0x58,0x6a,0x3e,0xdf,0x55,0xfb,0xe7,0x95,0x70,0xa1,0x24,0xf7,0x36,0xdb,0xa2,0x11,0x57,0xb6,0x9d,0x16,0x26,0x37,0x9b,0xd2,0x72,0x55,0xbb,0xb5,0x42,0x01,0xbc,0x84,0xc0};
    uint256_from_bytes(multiplier, multiplier79);
    uint256_from_bytes(multiplicand, multiplicand79);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product79, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier80[32]   = {0x43,0xc2,0x41,0x55,0x3f,0x22,0xf8,0xdd,0x51,0x7a,0x90,0xf5,0x89,0xab,0xed,0xef,0xe2,0xf1,0xd7,0x90,0x0a,0x8b,0xab,0x20,0xf8,0x4a,0x92,0xc3,0x94,0x0b,0x8d,0x05};
    static std::uint8_t multiplicand80[32] = {0x04,0xa8,0xd6,0xf5,0xd1,0x2c,0x43,0x1e,0x93,0xfa,0xb4,0x10,0xbb,0xb5,0x83,0x35,0xdf,0xec,0x2b,0x1f,0x20,0xab,0x41,0x1e,0xd8,0x5c,0x2a,0x4e,0x10,0xe7,0xc9,0x05};
    static std::uint8_t product80[64]      = {0x01,0x3b,0xb9,0x65,0xa7,0xd1,0x12,0xb1,0x31,0x3e,0xd6,0x32,0x2d,0xd0,0xdf,0xdd,0x26,0xb5,0x67,0xe7,0xb6,0x01,0x38,0xe7,0xc0,0x33,0x32,0x3b,0xee,0x72,0x11,0x36,0x13,0x55,0x5a,0xfd,0x4c,0x2f,0x28,0x22,0x68,0x27,0x69,0x49,0x81,0x71,0x5a,0xe9,0x03,0x6d,0x5b,0xb0,0x18,0xdb,0x7b,0xa7,0xf4,0xdf,0x85,0xd1,0x85,0x75,0xae,0x19};
    uint256_from_bytes(multiplier, multiplier80);
    uint256_from_bytes(multiplicand, multiplicand80);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product80, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier81[32]   = {0x16,0x07,0x63,0x0b,0x11,0x06,0xd5,0x65,0x4f,0xd4,0xc4,0x71,0x59,0xe1,0xc5,0x3c,0x4a,0x6e,0x09,0x2d,0x2b,0xfe,0xd5,0x24,0x08,0x31,0x56,0x56,0x7f,0x21,0x3c,0x16};
    static std::uint8_t multiplicand81[32] = {0x8e,0x75,0x84,0x39,0x43,0x0d,0x37,0x59,0x4d,0xcf,0x4b,0x0a,0x04,0xad,0x19,0x06,0xb5,0xfb,0x6e,0x42,0x40,0x7c,0xf1,0x16,0x05,0x8e,0xaf,0x72,0x7a,0x8d,0xf2,0x00};
    static std::uint8_t product81[64]      = {0x0c,0x42,0x35,0xb1,0x23,0xfc,0x66,0xcb,0x3c,0xb2,0xc7,0xd9,0x51,0x5d,0x22,0x96,0x36,0x3a,0xcb,0x17,0x29,0xd9,0xf1,0xdf,0x9d,0xce,0x1f,0x3d,0xee,0x96,0x89,0x06,0xc9,0x49,0x14,0x48,0xff,0x14,0xaa,0xc5,0xeb,0x53,0x1b,0x33,0x59,0x64,0x70,0xd8,0x71,0x01,0x1c,0x20,0x3b,0xc3,0xb3,0xfc,0x80,0xeb,0x6b,0xe9,0xfe,0xea,0xcc,0x00};
    uint256_from_bytes(multiplier, multiplier81);
    uint256_from_bytes(multiplicand, multiplicand81);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product81, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier82[32]   = {0x79,0x35,0x11,0x93,0x6a,0x13,0x4b,0xff,0x5f,0x3d,0xfc,0xcc,0x9a,0xf0,0x97,0xf5,0x51,0x4f,0x4b,0x89,0x1d,0xe5,0x6d,0x36,0x21,0x59,0xb4,0x31,0xce,0x83,0xeb,0x0c};
    static std::uint8_t multiplicand82[32] = {0x8f,0xb0,0xeb,0x5f,0x44,0x53,0x41,0x4f,0x16,0xbc,0x67,0x27,0x9b,0xcf,0xa1,0x32,0xc0,0xc0,0x8e,0x1a,0x1f,0xc9,0x53,0xaa,0x28,0xca,0xc0,0xc5,0xda,0x8d,0x85,0x40};
    static std::uint8_t product82[64]      = {0x44,0x08,0x68,0xbe,0x3f,0xc7,0x10,0x97,0xc0,0x44,0xdd,0x37,0x1f,0xed,0x2b,0x65,0xda,0x01,0x0c,0x16,0xf9,0x73,0xd5,0x16,0x8b,0x7b,0x11,0x79,0xff,0x30,0xc6,0x1f,0x20,0x44,0xd2,0xed,0x58,0xf4,0x96,0xc8,0xc9,0x68,0x7b,0xa4,0x34,0xe2,0x7a,0xca,0xc6,0x4f,0x63,0x11,0xbc,0x48,0xbe,0xb6,0xcd,0x9a,0xe1,0xca,0xd7,0xb3,0xff,0x00};
    uint256_from_bytes(multiplier, multiplier82);
    uint256_from_bytes(multiplicand, multiplicand82);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product82, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier83[32]   = {0x27,0x21,0x7b,0x96,0xb2,0xbe,0xa1,0xab,0xac,0xdb,0x00,0x91,0x67,0x52,0xb1,0xeb,0x5b,0xff,0xe0,0xc9,0x28,0x97,0xff,0x7a,0xc0,0xcb,0xd0,0x70,0x7f,0xc8,0x73,0x38};
    static std::uint8_t multiplicand83[32] = {0x88,0xd1,0x8d,0xa4,0x28,0x78,0x9e,0x2f,0xd4,0xd5,0xa6,0x41,0x8e,0xd8,0xb8,0x8e,0xbf,0xd0,0x25,0x9f,0x10,0xda,0x95,0xda,0x44,0x5e,0x7c,0xca,0xbc,0xca,0xb2,0x78};
    static std::uint8_t product83[64]      = {0x14,0xe9,0xd1,0xa4,0x7d,0xb2,0x0b,0xb2,0x26,0xae,0x3f,0x81,0x81,0x5b,0x00,0xb7,0x59,0x18,0xa0,0xe8,0x05,0x71,0x7e,0xce,0xde,0xf3,0xbe,0xed,0x5c,0x25,0x9d,0x08,0x80,0xae,0xa1,0xdd,0x84,0x53,0xa2,0x44,0xf0,0x4c,0x82,0xe7,0xa8,0x99,0xd0,0xe7,0x46,0x0f,0xd8,0x5f,0xd1,0xcf,0xc0,0x0c,0x47,0x9e,0x00,0x8d,0x50,0x42,0xf2,0x40};
    uint256_from_bytes(multiplier, multiplier83);
    uint256_from_bytes(multiplicand, multiplicand83);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product83, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier84[32]   = {0x3d,0x04,0xf2,0xae,0x05,0x98,0x02,0xe8,0x2f,0x0e,0x82,0xce,0xfd,0xf4,0xfa,0x73,0xe9,0xbc,0x3f,0xfe,0xe6,0x58,0x81,0x72,0x14,0x63,0x33,0xc4,0xdf,0x70,0x23,0xec};
    static std::uint8_t multiplicand84[32] = {0xd8,0x56,0x51,0xce,0x3b,0x81,0x8e,0x7d,0xbf,0xdd,0x87,0x1a,0x49,0x6e,0x57,0xc4,0xbd,0x50,0xac,0x6b,0x54,0x53,0x3a,0x24,0x7a,0x24,0x25,0x2b,0x84,0xf2,0xd3,0xac};
    static std::uint8_t product84[64]      = {0x33,0x90,0xbf,0xec,0x14,0x21,0x80,0xb5,0x97,0xaf,0x39,0xd9,0x49,0xf1,0x67,0xbc,0x66,0x48,0x72,0x2e,0x70,0x71,0xb1,0xa0,0xe6,0xd2,0x09,0xa1,0xcb,0x98,0xe4,0x4b,0xf5,0x1b,0x94,0x77,0xb6,0xd9,0x02,0x5f,0x6f,0x00,0xbf,0x32,0x77,0x41,0x6f,0x32,0x19,0xdf,0x8c,0x59,0xad,0x3e,0xf4,0x5c,0x2b,0xda,0x3b,0x9b,0x32,0x0b,0xa6,0x90};
    uint256_from_bytes(multiplier, multiplier84);
    uint256_from_bytes(multiplicand, multiplicand84);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product84, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier85[32]   = {0x2f,0xc2,0xf7,0xa5,0x27,0x41,0xf0,0x02,0xf5,0x85,0x66,0xed,0xc7,0x6c,0x8a,0x3a,0x6c,0x0f,0x13,0x9b,0xdf,0xf2,0xea,0x84,0x0e,0x7f,0x59,0xe8,0xde,0xd3,0xad,0xa8};
    static std::uint8_t multiplicand85[32] = {0x76,0xe4,0x1b,0x54,0xc2,0xc2,0xf9,0x04,0x95,0x9a,0x77,0x23,0x1b,0xfe,0x78,0xea,0x7a,0xf4,0x07,0x13,0xb5,0xc2,0xd8,0xd6,0x54,0x8f,0x65,0x5d,0x38,0x77,0x60,0x9b};
    static std::uint8_t product85[64]      = {0x16,0x2e,0x6c,0xe4,0x0f,0x9d,0x28,0x90,0x46,0x7d,0xbe,0x63,0x0e,0x4b,0xef,0xb2,0x18,0x0d,0xa0,0xad,0xf4,0x72,0xb8,0x55,0x06,0x0d,0xd6,0xa4,0x80,0x0c,0x89,0x3b,0x51,0x39,0x60,0x93,0x12,0x5c,0x44,0x83,0xdb,0x3c,0xfd,0x5a,0x31,0x01,0xd3,0xf8,0x13,0x24,0x65,0x3e,0xfc,0x4b,0x7d,0x6d,0xdc,0x12,0x03,0xf8,0xc4,0x61,0x24,0xb8};
    uint256_from_bytes(multiplier, multiplier85);
    uint256_from_bytes(multiplicand, multiplicand85);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product85, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier86[32]   = {0xb6,0x83,0x3f,0x8c,0x63,0xde,0x37,0x08,0x7c,0xb2,0x9e,0x11,0xaa,0xd7,0x72,0x75,0x7b,0x3d,0x89,0x73,0xd3,0x07,0xb9,0x51,0x0c,0x97,0xa3,0x03,0x16,0xa3,0x92,0x56};
    static std::uint8_t multiplicand86[32] = {0x34,0x0b,0x0e,0xa5,0x7d,0xb2,0x79,0xa0,0x0d,0x93,0x82,0x25,0x11,0x61,0x4a,0x4d,0x75,0x77,0x4f,0x57,0x45,0xca,0x3f,0x70,0x3d,0x32,0xe7,0x69,0x6b,0xf0,0x52,0x4e};
    static std::uint8_t product86[64]      = {0x25,0x1a,0x8a,0xfd,0x69,0x00,0x64,0xac,0x7d,0x0d,0x6b,0xc7,0x13,0x3b,0x76,0x2e,0x71,0xf1,0x66,0x37,0x4a,0xa8,0xcf,0x40,0x5f,0x6a,0xb0,0xed,0x4f,0xfe,0xee,0x66,0xdd,0x13,0x11,0x6d,0xb0,0xac,0xfa,0x41,0xf4,0xfc,0x4a,0xc1,0xcd,0x2b,0x0b,0xf8,0x59,0x81,0x15,0x4e,0xc1,0xad,0xd7,0x28,0x7a,0xb4,0xde,0xfa,0x6d,0x56,0x22,0x34};
    uint256_from_bytes(multiplier, multiplier86);
    uint256_from_bytes(multiplicand, multiplicand86);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product86, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier87[32]   = {0xcd,0xdb,0xc8,0x7d,0x63,0x9b,0xab,0x80,0x2d,0xdf,0xb3,0x7a,0xb3,0x42,0x96,0x8e,0xdb,0xe2,0x26,0x7d,0x05,0x10,0xd6,0x49,0xaf,0x83,0x89,0xd5,0x69,0xf5,0x7d,0x62};
    static std::uint8_t multiplicand87[32] = {0x88,0x8d,0x18,0x56,0xf0,0x34,0x20,0x5c,0x35,0x1f,0xe3,0xd3,0x80,0x22,0x9b,0x4b,0xb7,0x98,0x30,0x44,0x53,0xc7,0x58,0xaa,0x26,0xb3,0xdd,0xd9,0x80,0x95,0xe5,0x0c};
    static std::uint8_t product87[64]      = {0x6d,0xce,0x38,0x22,0x8d,0xc3,0xa1,0xef,0x81,0xf5,0xc8,0x28,0xe0,0xfc,0x0a,0x86,0xf0,0x0e,0xfd,0x75,0x60,0xef,0xcb,0xaf,0x6b,0x4d,0x0c,0x2a,0x0e,0xbd,0x11,0x47,0x46,0xc6,0xac,0x77,0x1e,0x1b,0xdc,0xb8,0x29,0xd3,0xa1,0x15,0xbe,0x1a,0x4e,0x0b,0xe6,0x0d,0x09,0x67,0x3c,0xdc,0x6e,0xa5,0xc8,0x82,0xaa,0x6e,0x8a,0xb4,0x8a,0x98};
    uint256_from_bytes(multiplier, multiplier87);
    uint256_from_bytes(multiplicand, multiplicand87);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product87, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier88[32]   = {0x9b,0xaf,0x3b,0x67,0x35,0xf3,0x96,0x63,0xa7,0x39,0xc4,0x79,0x75,0x4b,0xc6,0x57,0x8f,0x7e,0xd7,0x42,0x5d,0x16,0x14,0xd6,0x66,0x89,0xf3,0x4c,0x97,0x85,0xf2,0x18};
    static std::uint8_t multiplicand88[32] = {0xc0,0x40,0x7c,0xc3,0xcb,0xea,0x81,0x49,0x41,0xbd,0x02,0x8e,0x46,0x95,0xbc,0xfc,0x15,0x88,0xc7,0xdc,0x4f,0xac,0x9b,0x20,0x5f,0x7e,0x2e,0xea,0xa9,0xb5,0x30,0xf7};
    static std::uint8_t product88[64]      = {0x74,0xea,0xa4,0x3c,0x35,0x86,0xfc,0x57,0x69,0xb9,0xd0,0x3d,0x24,0xed,0xd2,0x2b,0xf3,0x2c,0x30,0x61,0xc9,0x1f,0x74,0x52,0x14,0xf1,0x0f,0x67,0x7d,0x5f,0xa0,0xde,0x13,0x4b,0xb5,0x4e,0x0a,0xd1,0x8b,0x65,0x98,0x81,0xdd,0x16,0xff,0x3d,0x99,0x0f,0x79,0x71,0x64,0x15,0x03,0xae,0x1a,0x3e,0x03,0xa6,0x43,0xc5,0x52,0x99,0x15,0x28};
    uint256_from_bytes(multiplier, multiplier88);
    uint256_from_bytes(multiplicand, multiplicand88);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product88, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier89[32]   = {0xbc,0x46,0x3c,0x8c,0x5d,0x03,0x92,0x2b,0x49,0xe6,0x45,0x16,0xfa,0x57,0xec,0x73,0x3d,0xd1,0x81,0xd0,0xaa,0xa2,0xed,0xe3,0x5b,0x19,0x68,0x6f,0x44,0xa2,0x39,0x6c};
    static std::uint8_t multiplicand89[32] = {0x9a,0x9c,0x40,0x62,0xb4,0x04,0xf0,0x06,0x67,0xd0,0x2d,0x29,0x19,0x0a,0x2d,0x35,0xee,0x78,0xa5,0xbd,0x8c,0x6d,0xac,0xfd,0x9e,0x56,0xdb,0x26,0xf3,0x1c,0xf9,0x3c};
    static std::uint8_t product89[64]      = {0x71,0xb5,0x2a,0x93,0x7b,0xe8,0x1d,0x49,0xcf,0x18,0xaa,0xe4,0x45,0x8d,0x6f,0x1e,0xdc,0x09,0xd9,0xf0,0xc1,0xa5,0x00,0x79,0x22,0x5f,0x6a,0x6c,0xb6,0x74,0x4d,0xb2,0x98,0x46,0x42,0xb4,0x11,0xed,0x43,0xa0,0x99,0x50,0xc2,0xae,0x84,0xd9,0x03,0xc7,0x74,0x0b,0xb5,0x76,0xa5,0xa6,0x27,0xb5,0x04,0x56,0x1c,0x1d,0xab,0xaf,0x81,0x50};
    uint256_from_bytes(multiplier, multiplier89);
    uint256_from_bytes(multiplicand, multiplicand89);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product89, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier90[32]   = {0x12,0x58,0x37,0x1c,0xda,0xc9,0x26,0x82,0xf8,0x9f,0x6f,0xf6,0xd7,0x42,0x22,0x21,0x5b,0xaa,0x10,0xef,0xa3,0x28,0xe3,0x02,0xbd,0x94,0xf0,0x4a,0xa0,0xcb,0x53,0x7c};
    static std::uint8_t multiplicand90[32] = {0x59,0x62,0xb8,0x86,0xea,0x6f,0x60,0x50,0xc2,0x1f,0x7a,0xb7,0xb1,0xa2,0x32,0xb8,0x45,0x63,0xe7,0x33,0x9b,0x35,0x28,0x37,0x37,0xd0,0xc1,0x04,0x13,0x58,0x79,0xe9};
    static std::uint8_t product90[64]      = {0x06,0x67,0xbe,0x27,0x33,0xb1,0xe3,0x46,0x83,0x2e,0xc6,0xef,0x5e,0xf3,0xcb,0xbc,0xf6,0x77,0xfb,0x41,0x8c,0x25,0xe5,0x0f,0x86,0x18,0xa5,0x61,0xb3,0x6d,0xfe,0x23,0xbf,0x90,0x54,0xd7,0xf3,0x3d,0x8b,0xf5,0x4a,0xae,0x57,0x0f,0x6c,0xff,0x49,0xe5,0xf9,0x28,0xa7,0x3d,0x42,0x96,0xca,0x4d,0x5b,0x96,0x20,0xf3,0x5a,0x24,0x97,0xdc};
    uint256_from_bytes(multiplier, multiplier90);
    uint256_from_bytes(multiplicand, multiplicand90);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product90, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier91[32]   = {0xaa,0xec,0x27,0xc5,0x96,0xea,0xc3,0x93,0x0f,0xaf,0x0b,0x3b,0x36,0x0d,0x53,0x30,0x5a,0x41,0xc2,0x16,0x57,0xe5,0x44,0xaf,0xfc,0xaf,0x6f,0x15,0x1b,0x21,0x52,0xea};
    static std::uint8_t multiplicand91[32] = {0x0d,0x21,0xd8,0x39,0xcb,0x32,0xae,0xe9,0x33,0x0f,0xb6,0xac,0x8e,0x88,0xa3,0xd3,0xf4,0x47,0xb0,0xf3,0x6c,0xe0,0x5d,0x26,0xed,0xf9,0x50,0xf0,0x46,0xbd,0xce,0xaa};
    static std::uint8_t product91[64]      = {0x08,0xc4,0x96,0xd4,0x00,0xf1,0x0c,0xf8,0x06,0x5e,0x36,0x30,0x2c,0x56,0xf6,0x00,0x84,0x9c,0x90,0x99,0x97,0xf3,0xc0,0xb3,0xc4,0x1b,0x97,0xd9,0x34,0xa3,0xc4,0xb0,0xc7,0xf7,0xcc,0xd0,0xc5,0x05,0x50,0xb4,0xbb,0xe1,0x6b,0x4c,0x61,0x53,0x42,0x78,0x10,0xba,0x8f,0x48,0x64,0x30,0x0a,0x43,0xe0,0xa3,0xbf,0x7f,0x07,0x9b,0x5b,0x64};
    uint256_from_bytes(multiplier, multiplier91);
    uint256_from_bytes(multiplicand, multiplicand91);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product91, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier92[32]   = {0x3e,0x4d,0xe9,0x61,0xf7,0x2a,0x08,0xf2,0xc5,0xbd,0x36,0xf6,0x76,0xdf,0x76,0xc5,0xe5,0x56,0xf9,0xa6,0x2a,0xe3,0x51,0xb2,0xe0,0x2b,0xd6,0x3b,0x35,0x4e,0x6e,0x39};
    static std::uint8_t multiplicand92[32] = {0xf6,0x5b,0xd8,0x71,0x17,0x9c,0x04,0xa2,0xca,0xe2,0xf1,0x57,0x81,0xb9,0x48,0x7d,0xb6,0x55,0x2b,0xde,0x82,0x35,0xd2,0x6a,0x94,0xf4,0x84,0x0f,0xd0,0x09,0x41,0x8a};
    static std::uint8_t product92[64]      = {0x3b,0xf5,0x38,0xa3,0x5c,0x62,0xe5,0xe6,0xe4,0xa6,0x39,0x06,0x9d,0x73,0x6b,0x4f,0xb0,0x81,0x88,0x1b,0xec,0x07,0x39,0xfc,0x8c,0x81,0x22,0xce,0x18,0xbd,0x7e,0x3a,0x15,0xcc,0xed,0xa0,0x39,0xcc,0xc9,0x19,0x57,0x63,0xba,0x23,0x82,0xf6,0xdf,0xe8,0x3a,0x2a,0x4b,0x6c,0x60,0xaf,0x95,0xfb,0x2f,0x2c,0xf7,0x1a,0xd6,0x44,0xe3,0xba};
    uint256_from_bytes(multiplier, multiplier92);
    uint256_from_bytes(multiplicand, multiplicand92);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product92, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier93[32]   = {0xbb,0xa2,0xc3,0x5f,0x21,0xe5,0x88,0x0c,0x91,0x6d,0x1e,0x05,0xba,0xf4,0xb4,0x04,0xbd,0xbb,0xe2,0x73,0x67,0x7b,0xdc,0x0a,0x16,0xf4,0x18,0x82,0xcb,0x85,0xae,0xee};
    static std::uint8_t multiplicand93[32] = {0x11,0xa5,0x83,0x41,0x2a,0xf6,0x2b,0x2f,0xa5,0xae,0x67,0x8d,0x12,0x3c,0x5e,0x06,0xc8,0x3e,0x27,0x6e,0xff,0xd6,0x27,0xa9,0xbe,0x7f,0x2c,0xb5,0xf5,0x7c,0xc7,0x85};
    static std::uint8_t product93[64]      = {0x0c,0xef,0x1f,0x15,0x4b,0x5b,0x82,0x96,0x31,0xc4,0xc4,0x6d,0x0f,0x3b,0x97,0xd8,0xa7,0x98,0xa5,0x81,0xdd,0x80,0xb9,0xe6,0x6c,0x67,0xff,0xaa,0x98,0xfb,0x76,0xc5,0xa5,0x81,0x8f,0x70,0xb4,0xd1,0x0b,0x18,0x64,0x83,0x91,0xa3,0x72,0xca,0xf0,0x43,0x17,0xae,0xb3,0xf4,0xb8,0xd6,0x9e,0x80,0x03,0xa7,0x83,0x99,0x28,0xb6,0xe3,0xa6};
    uint256_from_bytes(multiplier, multiplier93);
    uint256_from_bytes(multiplicand, multiplicand93);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product93, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier94[32]   = {0xc2,0xbd,0x7e,0x3b,0xde,0x31,0x02,0xee,0x2b,0x94,0xf9,0xaa,0xe4,0x78,0x01,0xf2,0x56,0xe8,0x32,0xba,0x9e,0xbc,0xd1,0xf3,0x14,0x70,0xcb,0xed,0xee,0xcb,0xd4,0x73};
    static std::uint8_t multiplicand94[32] = {0xbe,0xa9,0x64,0x22,0x5e,0xb6,0x3f,0xf9,0x93,0x68,0x6f,0xd8,0x73,0xe6,0x2a,0x27,0x51,0x63,0xbe,0x1e,0x9f,0x3a,0x6a,0xdd,0x66,0xe7,0x17,0xaf,0x31,0xd7,0x7d,0x5e};
    static std::uint8_t product94[64]      = {0x91,0x09,0x7e,0xf4,0xee,0xf4,0x6d,0x02,0x91,0xe3,0x7e,0xae,0xd4,0x1b,0x0b,0x0c,0xa6,0x68,0x89,0x0e,0x7e,0x9f,0x04,0x0f,0x98,0xd1,0x0b,0x99,0x4e,0xdd,0xda,0xd4,0xf9,0x9e,0x78,0xcd,0x7c,0x4d,0x1f,0xc5,0xc1,0x9f,0x3f,0x81,0x48,0x2e,0x89,0x35,0x87,0xa4,0x77,0xb9,0x5d,0x2a,0x07,0xf4,0x77,0xb8,0x2f,0x6d,0xa5,0x29,0x29,0x3a};
    uint256_from_bytes(multiplier, multiplier94);
    uint256_from_bytes(multiplicand, multiplicand94);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product94, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier95[32]   = {0x5a,0x07,0x0e,0xbc,0x2c,0x2c,0x2d,0x38,0x7e,0x30,0x2d,0xd9,0x5b,0xd8,0x68,0x28,0xd4,0x6e,0xe3,0xf2,0xd3,0x71,0xe7,0xb9,0x07,0xac,0xec,0x42,0x22,0x1a,0x50,0x19};
    static std::uint8_t multiplicand95[32] = {0x4c,0xdd,0x21,0x31,0xff,0x9a,0x4b,0xc6,0xf7,0x40,0xf4,0xcc,0x05,0x11,0x97,0x68,0xd5,0x4c,0x59,0xb8,0xd6,0x7f,0xd9,0x54,0x40,0x74,0x9d,0x81,0x82,0xbd,0xad,0x96};
    static std::uint8_t product95[64]      = {0x1b,0x07,0xdc,0x24,0x13,0xb2,0x9d,0xd8,0x4c,0x70,0xee,0x73,0xc5,0x3f,0xd7,0x3b,0x1f,0x34,0xdf,0x5a,0xc1,0x32,0x46,0xdb,0x89,0xa8,0x18,0x92,0xfd,0x00,0x6f,0xd3,0xf1,0x33,0xe7,0x29,0x73,0xd9,0xc1,0x10,0xb7,0xa9,0x29,0x16,0x48,0xcf,0x2f,0x30,0x7f,0x70,0x50,0xe3,0x8a,0x4a,0x68,0xa2,0x3a,0xd5,0x5b,0x7e,0x98,0x00,0xd3,0xa6};
    uint256_from_bytes(multiplier, multiplier95);
    uint256_from_bytes(multiplicand, multiplicand95);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product95, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier96[32]   = {0x57,0xb2,0x57,0x3f,0x8f,0x60,0x22,0x94,0xb9,0xa0,0xe6,0xa2,0x49,0x1b,0x2f,0x68,0x64,0x62,0x54,0xf8,0xb7,0x0b,0x63,0xe6,0x39,0x8e,0xbc,0xf2,0xfd,0x75,0xa5,0x38};
    static std::uint8_t multiplicand96[32] = {0x4d,0x79,0x6b,0x0a,0x14,0x76,0x5d,0xe3,0xe4,0x3c,0x41,0xfd,0x74,0xb5,0xac,0x16,0x2e,0xcc,0x42,0x94,0x7d,0x2b,0x30,0x78,0x73,0x9d,0xcb,0x09,0x31,0x9c,0x2f,0x6f};
    static std::uint8_t product96[64]      = {0x1a,0x8a,0x3c,0x34,0x59,0x9c,0x23,0x6e,0xe5,0xdb,0x2d,0x63,0x1b,0x37,0x07,0xa0,0xa4,0x3d,0xb1,0x08,0x24,0xa0,0xe4,0xa6,0xf3,0x5e,0xba,0xea,0xca,0x24,0x52,0xc2,0x0f,0x04,0x1a,0x90,0x14,0xf5,0xfc,0x0b,0x2d,0x30,0xa2,0xf8,0x5a,0xe1,0x7a,0xa6,0xd4,0xa4,0xd2,0xe5,0x9b,0xd9,0x8a,0xaf,0x7e,0xa8,0xb9,0x2c,0xe5,0x77,0xeb,0x48};
    uint256_from_bytes(multiplier, multiplier96);
    uint256_from_bytes(multiplicand, multiplicand96);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product96, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier97[32]   = {0xe2,0xe9,0x6b,0x62,0x9a,0x1f,0xdb,0x8c,0x19,0xde,0x45,0x81,0x91,0x7d,0xf8,0x04,0x04,0x0a,0x13,0xdc,0x0c,0x30,0x8b,0xdd,0x57,0xb3,0x94,0xa1,0x0f,0x98,0xba,0x58};
    static std::uint8_t multiplicand97[32] = {0x89,0x3f,0xe4,0x41,0xb2,0x30,0x79,0xad,0x32,0x09,0x1e,0xc5,0x54,0x21,0x94,0x90,0x1b,0xbd,0xc4,0x9b,0x5d,0x61,0x2a,0xcc,0x83,0xf0,0x55,0x5b,0x48,0x1d,0x37,0x9b};
    static std::uint8_t product97[64]      = {0x79,0xa7,0x8c,0x3b,0x50,0x98,0x53,0xeb,0x0c,0x71,0xbc,0x12,0x0e,0xfd,0x6f,0x0f,0x46,0x03,0x41,0xfc,0xfe,0xc1,0xff,0x75,0xd4,0x47,0x41,0x75,0xb2,0x2c,0x8f,0x0f,0xe1,0xf6,0xfb,0x33,0x9e,0x4e,0x2e,0xab,0x21,0x94,0xd7,0x3f,0xbd,0x46,0x91,0x8d,0xff,0x19,0x1d,0xa6,0x86,0xf6,0xb2,0x18,0xcc,0xf4,0xc5,0xdc,0x1d,0x79,0xbb,0x48};
    uint256_from_bytes(multiplier, multiplier97);
    uint256_from_bytes(multiplicand, multiplicand97);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product97, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier98[32]   = {0xd3,0x9d,0x75,0x25,0x62,0xa4,0x6b,0xd4,0xb0,0x9d,0x9b,0x6c,0xd8,0x48,0xb1,0x5e,0x8b,0xf5,0x5f,0x9e,0x15,0x97,0x83,0x99,0xe1,0x46,0x6f,0xd2,0x8e,0x14,0xa7,0x08};
    static std::uint8_t multiplicand98[32] = {0x53,0x78,0x5a,0x4d,0x06,0x36,0x2f,0xdf,0x6c,0x5b,0xd2,0x0f,0x6c,0x3b,0x87,0x5a,0xe2,0xea,0x02,0xb9,0x65,0x84,0xa5,0xd6,0xd7,0x4c,0x73,0xbe,0xd1,0xe9,0xfe,0xc8};
    static std::uint8_t product98[64]      = {0x44,0xff,0x89,0x6f,0x0f,0x2f,0x68,0x7d,0x28,0xc2,0xfe,0x40,0xd8,0xe9,0x7d,0x96,0x2c,0xe8,0xf3,0xc1,0x26,0x5e,0xf6,0xeb,0x7e,0x8e,0xa9,0x99,0x1b,0xf8,0x79,0xde,0x54,0x22,0xed,0xd9,0x1f,0xcd,0xb7,0xc2,0x9f,0x52,0xa5,0x9b,0x65,0xc6,0x5c,0x56,0x4c,0xa5,0x18,0x69,0xd6,0x4d,0xeb,0x54,0x97,0x59,0x02,0x91,0x0c,0x24,0x6e,0x40};
    uint256_from_bytes(multiplier, multiplier98);
    uint256_from_bytes(multiplicand, multiplicand98);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product98, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }

    static std::uint8_t multiplier99[32]   = {0xd8,0xdb,0x12,0x3a,0xcb,0x2d,0x49,0x25,0xd8,0x78,0x13,0xc4,0xeb,0x84,0x00,0xab,0xc8,0x9b,0x31,0xa6,0x40,0xc2,0xcd,0x89,0x13,0x06,0x11,0x18,0x98,0xa5,0xf3,0x61};
    static std::uint8_t multiplicand99[32] = {0x61,0xad,0x3d,0x9d,0xcb,0x1f,0xfb,0x23,0xc9,0xf7,0xb5,0x72,0x41,0x10,0x39,0xdd,0x16,0x47,0x14,0x0f,0xbb,0xac,0x3f,0xf7,0x61,0x62,0xcc,0xad,0x1d,0xea,0xed,0x28};
    static std::uint8_t product99[64]      = {0x52,0xbd,0xc2,0x25,0x76,0x7a,0x75,0x83,0x1a,0xf1,0x26,0x8b,0xd0,0x9f,0x67,0x46,0x38,0x4a,0x37,0x31,0xac,0x8d,0xdb,0x98,0xa0,0x14,0x3a,0xc0,0x33,0x6d,0x08,0x55,0x69,0x0e,0x90,0x5b,0x08,0x52,0xb4,0xa1,0xc8,0x3e,0x9d,0x53,0xf9,0x4a,0x33,0xfe,0xe6,0x5b,0xd0,0x20,0xea,0x54,0x41,0x1c,0x52,0xc5,0x89,0xf8,0xef,0xe8,0xd4,0x28};
    uint256_from_bytes(multiplier, multiplier99);
    uint256_from_bytes(multiplicand, multiplicand99);
    uint256_mul(product[0], multiplier, multiplicand);
    uint256_to_bytes(product_data + 32, product[0]);
    uint256_to_bytes(product_data, product[1]);
    if (std::memcmp(product99, product_data, 64) != 0)
    {
        throw std::runtime_error("err in common::uint256_mul");
    }
}